ARM GAS  /tmp/cc1igYCm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usb_host.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBH_UserProcess,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	USBH_UserProcess:
  23              	.LFB68:
  24              		.file 1 "Src/usb_host.c"
   1:Src/usb_host.c **** /* USER CODE BEGIN Header */
   2:Src/usb_host.c **** /**
   3:Src/usb_host.c ****   ******************************************************************************
   4:Src/usb_host.c ****   * @file            : usb_host.c
   5:Src/usb_host.c ****   * @version         : v1.0_Cube
   6:Src/usb_host.c ****   * @brief           : This file implements the USB Host
   7:Src/usb_host.c ****   ******************************************************************************
   8:Src/usb_host.c ****   * @attention
   9:Src/usb_host.c ****   *
  10:Src/usb_host.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usb_host.c ****   * All rights reserved.</center></h2>
  12:Src/usb_host.c ****   *
  13:Src/usb_host.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usb_host.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usb_host.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usb_host.c ****   *                             www.st.com/SLA0044
  17:Src/usb_host.c ****   *
  18:Src/usb_host.c ****   ******************************************************************************
  19:Src/usb_host.c ****   */
  20:Src/usb_host.c **** /* USER CODE END Header */
  21:Src/usb_host.c **** 
  22:Src/usb_host.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usb_host.c **** 
  24:Src/usb_host.c **** #include "usb_host.h"
  25:Src/usb_host.c **** #include "usbh_core.h"
  26:Src/usb_host.c **** #include "usbh_msc.h"
  27:Src/usb_host.c **** 
  28:Src/usb_host.c **** /* USER CODE BEGIN Includes */
  29:Src/usb_host.c **** #include "State_USBdrive.h"
  30:Src/usb_host.c **** #include "Driver_USBdrive.h"
  31:Src/usb_host.c **** /* USER CODE END Includes */
  32:Src/usb_host.c **** 
  33:Src/usb_host.c **** /* USER CODE BEGIN PV */
  34:Src/usb_host.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/cc1igYCm.s 			page 2


  35:Src/usb_host.c **** 
  36:Src/usb_host.c **** /* USER CODE END PV */
  37:Src/usb_host.c **** 
  38:Src/usb_host.c **** /* USER CODE BEGIN PFP */
  39:Src/usb_host.c **** /* Private function prototypes -----------------------------------------------*/
  40:Src/usb_host.c **** 
  41:Src/usb_host.c **** /* USER CODE END PFP */
  42:Src/usb_host.c **** 
  43:Src/usb_host.c **** /* USB Host core handle declaration */
  44:Src/usb_host.c **** USBH_HandleTypeDef hUsbHostFS;
  45:Src/usb_host.c **** ApplicationTypeDef Appli_state = APPLICATION_IDLE;
  46:Src/usb_host.c **** 
  47:Src/usb_host.c **** /*
  48:Src/usb_host.c ****  * -- Insert your variables declaration here --
  49:Src/usb_host.c ****  */
  50:Src/usb_host.c **** /* USER CODE BEGIN 0 */
  51:Src/usb_host.c **** 
  52:Src/usb_host.c **** /* USER CODE END 0 */
  53:Src/usb_host.c **** 
  54:Src/usb_host.c **** /*
  55:Src/usb_host.c ****  * user callback declaration
  56:Src/usb_host.c ****  */
  57:Src/usb_host.c **** static void USBH_UserProcess(USBH_HandleTypeDef *phost, uint8_t id);
  58:Src/usb_host.c **** 
  59:Src/usb_host.c **** /*
  60:Src/usb_host.c ****  * -- Insert your external function declaration here --
  61:Src/usb_host.c ****  */
  62:Src/usb_host.c **** /* USER CODE BEGIN 1 */
  63:Src/usb_host.c **** 
  64:Src/usb_host.c **** /* USER CODE END 1 */
  65:Src/usb_host.c **** 
  66:Src/usb_host.c **** /**
  67:Src/usb_host.c ****   * Init USB host library, add supported class and start the library
  68:Src/usb_host.c ****   * @retval None
  69:Src/usb_host.c ****   */
  70:Src/usb_host.c **** void MX_USB_HOST_Init(void)
  71:Src/usb_host.c **** {
  72:Src/usb_host.c ****   /* USER CODE BEGIN USB_HOST_Init_PreTreatment */
  73:Src/usb_host.c **** 
  74:Src/usb_host.c ****   /* USER CODE END USB_HOST_Init_PreTreatment */
  75:Src/usb_host.c ****   
  76:Src/usb_host.c ****   /* Init host Library, add supported class and start the library. */
  77:Src/usb_host.c ****   if (USBH_Init(&hUsbHostFS, USBH_UserProcess, HOST_FS) != USBH_OK)
  78:Src/usb_host.c ****   {
  79:Src/usb_host.c ****     Error_Handler();
  80:Src/usb_host.c ****   }
  81:Src/usb_host.c ****   if (USBH_RegisterClass(&hUsbHostFS, USBH_MSC_CLASS) != USBH_OK)
  82:Src/usb_host.c ****   {
  83:Src/usb_host.c ****     Error_Handler();
  84:Src/usb_host.c ****   }
  85:Src/usb_host.c ****   if (USBH_Start(&hUsbHostFS) != USBH_OK)
  86:Src/usb_host.c ****   {
  87:Src/usb_host.c ****     Error_Handler();
  88:Src/usb_host.c ****   }
  89:Src/usb_host.c ****   /* USER CODE BEGIN USB_HOST_Init_PostTreatment */
  90:Src/usb_host.c **** 
  91:Src/usb_host.c ****   /* USER CODE END USB_HOST_Init_PostTreatment */
ARM GAS  /tmp/cc1igYCm.s 			page 3


  92:Src/usb_host.c **** }
  93:Src/usb_host.c **** 
  94:Src/usb_host.c **** /*
  95:Src/usb_host.c ****  * Background task
  96:Src/usb_host.c ****  */
  97:Src/usb_host.c **** void MX_USB_HOST_Process(void)
  98:Src/usb_host.c **** {
  99:Src/usb_host.c ****   /* USB Host Background task */
 100:Src/usb_host.c ****   USBH_Process(&hUsbHostFS);
 101:Src/usb_host.c **** }
 102:Src/usb_host.c **** /*
 103:Src/usb_host.c ****  * user callback definition
 104:Src/usb_host.c ****  */
 105:Src/usb_host.c **** static void USBH_UserProcess  (USBH_HandleTypeDef *phost, uint8_t id)
 106:Src/usb_host.c **** {
  25              		.loc 1 106 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 107:Src/usb_host.c ****   /* USER CODE BEGIN CALL_BACK_1 */
 108:Src/usb_host.c ****   switch(id)
  35              		.loc 1 108 0
  36 0002 0429     		cmp	r1, #4
  37 0004 18D0     		beq	.L3
  38 0006 0529     		cmp	r1, #5
  39 0008 02D0     		beq	.L4
  40 000a 0229     		cmp	r1, #2
  41 000c 0DD0     		beq	.L7
  42              	.LVL1:
  43              	.L1:
 109:Src/usb_host.c ****   {
 110:Src/usb_host.c ****   case HOST_USER_SELECT_CONFIGURATION:
 111:Src/usb_host.c ****   break;
 112:Src/usb_host.c **** 
 113:Src/usb_host.c ****   case HOST_USER_DISCONNECTION:
 114:Src/usb_host.c ****   Appli_state = APPLICATION_DISCONNECT;
 115:Src/usb_host.c ****   setState_USBdrive(NOT_READY_USBDRIVE);
 116:Src/usb_host.c ****   if (getMountedStatus() == MOUNTED_USBDRIVE)
 117:Src/usb_host.c ****     unmount_USBdrive();
 118:Src/usb_host.c ****   break;
 119:Src/usb_host.c **** 
 120:Src/usb_host.c ****   case HOST_USER_CLASS_ACTIVE:
 121:Src/usb_host.c ****   Appli_state = APPLICATION_READY;
 122:Src/usb_host.c ****   setState_USBdrive(READY_USBDRIVE);
 123:Src/usb_host.c ****   break;
 124:Src/usb_host.c **** 
 125:Src/usb_host.c ****   case HOST_USER_CONNECTION:
 126:Src/usb_host.c ****   Appli_state = APPLICATION_START;
 127:Src/usb_host.c ****   break;
 128:Src/usb_host.c **** 
 129:Src/usb_host.c ****   default:
ARM GAS  /tmp/cc1igYCm.s 			page 4


 130:Src/usb_host.c ****   break;
 131:Src/usb_host.c ****   }
 132:Src/usb_host.c ****   /* USER CODE END CALL_BACK_1 */
 133:Src/usb_host.c **** }
  44              		.loc 1 133 0
  45 000e 08BD     		pop	{r3, pc}
  46              	.LVL2:
  47              	.L4:
 114:Src/usb_host.c ****   setState_USBdrive(NOT_READY_USBDRIVE);
  48              		.loc 1 114 0
  49 0010 0B4B     		ldr	r3, .L8
  50 0012 0322     		movs	r2, #3
  51 0014 1A70     		strb	r2, [r3]
 115:Src/usb_host.c ****   if (getMountedStatus() == MOUNTED_USBDRIVE)
  52              		.loc 1 115 0
  53 0016 0020     		movs	r0, #0
  54              	.LVL3:
  55 0018 FFF7FEFF 		bl	setState_USBdrive
  56              	.LVL4:
 116:Src/usb_host.c ****     unmount_USBdrive();
  57              		.loc 1 116 0
  58 001c FFF7FEFF 		bl	getMountedStatus
  59              	.LVL5:
  60 0020 0128     		cmp	r0, #1
  61 0022 F4D1     		bne	.L1
 117:Src/usb_host.c ****   break;
  62              		.loc 1 117 0
  63 0024 FFF7FEFF 		bl	unmount_USBdrive
  64              	.LVL6:
  65 0028 F1E7     		b	.L1
  66              	.LVL7:
  67              	.L7:
 121:Src/usb_host.c ****   setState_USBdrive(READY_USBDRIVE);
  68              		.loc 1 121 0
  69 002a 054B     		ldr	r3, .L8
  70 002c 0222     		movs	r2, #2
  71 002e 1A70     		strb	r2, [r3]
 122:Src/usb_host.c ****   break;
  72              		.loc 1 122 0
  73 0030 0120     		movs	r0, #1
  74              	.LVL8:
  75 0032 FFF7FEFF 		bl	setState_USBdrive
  76              	.LVL9:
 123:Src/usb_host.c **** 
  77              		.loc 1 123 0
  78 0036 EAE7     		b	.L1
  79              	.LVL10:
  80              	.L3:
 126:Src/usb_host.c ****   break;
  81              		.loc 1 126 0
  82 0038 014B     		ldr	r3, .L8
  83 003a 0122     		movs	r2, #1
  84 003c 1A70     		strb	r2, [r3]
  85              		.loc 1 133 0
  86 003e E6E7     		b	.L1
  87              	.L9:
  88              		.align	2
ARM GAS  /tmp/cc1igYCm.s 			page 5


  89              	.L8:
  90 0040 00000000 		.word	.LANCHOR0
  91              		.cfi_endproc
  92              	.LFE68:
  94              		.section	.text.MX_USB_HOST_Init,"ax",%progbits
  95              		.align	1
  96              		.global	MX_USB_HOST_Init
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu softvfp
 102              	MX_USB_HOST_Init:
 103              	.LFB66:
  71:Src/usb_host.c ****   /* USER CODE BEGIN USB_HOST_Init_PreTreatment */
 104              		.loc 1 71 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 08B5     		push	{r3, lr}
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 3, -8
 112              		.cfi_offset 14, -4
  77:Src/usb_host.c ****   {
 113              		.loc 1 77 0
 114 0002 0122     		movs	r2, #1
 115 0004 0B49     		ldr	r1, .L18
 116 0006 0C48     		ldr	r0, .L18+4
 117 0008 FFF7FEFF 		bl	USBH_Init
 118              	.LVL11:
 119 000c 48B9     		cbnz	r0, .L15
 120              	.L11:
  81:Src/usb_host.c ****   {
 121              		.loc 1 81 0
 122 000e 0B49     		ldr	r1, .L18+8
 123 0010 0948     		ldr	r0, .L18+4
 124 0012 FFF7FEFF 		bl	USBH_RegisterClass
 125              	.LVL12:
 126 0016 38B9     		cbnz	r0, .L16
 127              	.L12:
  85:Src/usb_host.c ****   {
 128              		.loc 1 85 0
 129 0018 0748     		ldr	r0, .L18+4
 130 001a FFF7FEFF 		bl	USBH_Start
 131              	.LVL13:
 132 001e 30B9     		cbnz	r0, .L17
 133              	.L10:
  92:Src/usb_host.c **** 
 134              		.loc 1 92 0
 135 0020 08BD     		pop	{r3, pc}
 136              	.L15:
  79:Src/usb_host.c ****   }
 137              		.loc 1 79 0
 138 0022 FFF7FEFF 		bl	Error_Handler
 139              	.LVL14:
 140 0026 F2E7     		b	.L11
 141              	.L16:
ARM GAS  /tmp/cc1igYCm.s 			page 6


  83:Src/usb_host.c ****   }
 142              		.loc 1 83 0
 143 0028 FFF7FEFF 		bl	Error_Handler
 144              	.LVL15:
 145 002c F4E7     		b	.L12
 146              	.L17:
  87:Src/usb_host.c ****   }
 147              		.loc 1 87 0
 148 002e FFF7FEFF 		bl	Error_Handler
 149              	.LVL16:
  92:Src/usb_host.c **** 
 150              		.loc 1 92 0
 151 0032 F5E7     		b	.L10
 152              	.L19:
 153              		.align	2
 154              	.L18:
 155 0034 00000000 		.word	USBH_UserProcess
 156 0038 00000000 		.word	hUsbHostFS
 157 003c 00000000 		.word	USBH_msc
 158              		.cfi_endproc
 159              	.LFE66:
 161              		.section	.text.MX_USB_HOST_Process,"ax",%progbits
 162              		.align	1
 163              		.global	MX_USB_HOST_Process
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	MX_USB_HOST_Process:
 170              	.LFB67:
  98:Src/usb_host.c ****   /* USB Host Background task */
 171              		.loc 1 98 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 100:Src/usb_host.c **** }
 180              		.loc 1 100 0
 181 0002 0248     		ldr	r0, .L22
 182 0004 FFF7FEFF 		bl	USBH_Process
 183              	.LVL17:
 101:Src/usb_host.c **** /*
 184              		.loc 1 101 0
 185 0008 08BD     		pop	{r3, pc}
 186              	.L23:
 187 000a 00BF     		.align	2
 188              	.L22:
 189 000c 00000000 		.word	hUsbHostFS
 190              		.cfi_endproc
 191              	.LFE67:
 193              		.global	Appli_state
 194              		.comm	hUsbHostFS,968,4
 195              		.section	.bss.Appli_state,"aw",%nobits
ARM GAS  /tmp/cc1igYCm.s 			page 7


 196              		.set	.LANCHOR0,. + 0
 199              	Appli_state:
 200 0000 00       		.space	1
 201              		.text
 202              	.Letext0:
 203              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 204              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 205              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 206              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 207              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 208              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 209              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 210              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 211              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 212              		.file 11 "Inc/usb_host.h"
 213              		.file 12 "/usr/arm-none-eabi/include/stdlib.h"
 214              		.file 13 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 215              		.file 14 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 216              		.file 15 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 217              		.file 16 "Inc/USB/State_USBdrive.h"
 218              		.file 17 "Inc/USB/Driver_USBdrive.h"
 219              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 220              		.file 19 "Inc/main.h"
ARM GAS  /tmp/cc1igYCm.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_host.c
     /tmp/cc1igYCm.s:16     .text.USBH_UserProcess:0000000000000000 $t
     /tmp/cc1igYCm.s:22     .text.USBH_UserProcess:0000000000000000 USBH_UserProcess
     /tmp/cc1igYCm.s:90     .text.USBH_UserProcess:0000000000000040 $d
     /tmp/cc1igYCm.s:95     .text.MX_USB_HOST_Init:0000000000000000 $t
     /tmp/cc1igYCm.s:102    .text.MX_USB_HOST_Init:0000000000000000 MX_USB_HOST_Init
     /tmp/cc1igYCm.s:155    .text.MX_USB_HOST_Init:0000000000000034 $d
                            *COM*:00000000000003c8 hUsbHostFS
     /tmp/cc1igYCm.s:162    .text.MX_USB_HOST_Process:0000000000000000 $t
     /tmp/cc1igYCm.s:169    .text.MX_USB_HOST_Process:0000000000000000 MX_USB_HOST_Process
     /tmp/cc1igYCm.s:189    .text.MX_USB_HOST_Process:000000000000000c $d
     /tmp/cc1igYCm.s:199    .bss.Appli_state:0000000000000000 Appli_state
     /tmp/cc1igYCm.s:200    .bss.Appli_state:0000000000000000 $d

UNDEFINED SYMBOLS
setState_USBdrive
getMountedStatus
unmount_USBdrive
USBH_Init
USBH_RegisterClass
USBH_Start
Error_Handler
USBH_msc
USBH_Process
