ARM GAS  /tmp/cc32VFvO.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Driver_Motors.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.create_Motors,"ax",%progbits
  16              		.align	1
  17              		.global	create_Motors
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	create_Motors:
  25              	.LFB0:
  26              		.file 1 "Src/Motors/Driver_Motors.c"
   1:Src/Motors/Driver_Motors.c **** #include "Driver_Motors.h"
   2:Src/Motors/Driver_Motors.c **** 
   3:Src/Motors/Driver_Motors.c **** #include "GPIO_Motors.h"
   4:Src/Motors/Driver_Motors.c **** 
   5:Src/Motors/Driver_Motors.c **** static int motorXstate, motorYstate, motorZstate, motorEstate;
   6:Src/Motors/Driver_Motors.c **** 
   7:Src/Motors/Driver_Motors.c **** 
   8:Src/Motors/Driver_Motors.c **** void create_Motors(void)
   9:Src/Motors/Driver_Motors.c **** {
  27              		.loc 1 9 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  10:Src/Motors/Driver_Motors.c ****     motorXstate = IDLE_MOTORS;
  32              		.loc 1 10 5 view .LVU1
  33              		.loc 1 10 17 is_stmt 0 view .LVU2
  34 0000 0023     		movs	r3, #0
  35 0002 044A     		ldr	r2, .L2
  36 0004 1360     		str	r3, [r2]
  11:Src/Motors/Driver_Motors.c ****     motorYstate = IDLE_MOTORS;
  37              		.loc 1 11 5 is_stmt 1 view .LVU3
  38              		.loc 1 11 17 is_stmt 0 view .LVU4
  39 0006 044A     		ldr	r2, .L2+4
  40 0008 1360     		str	r3, [r2]
  12:Src/Motors/Driver_Motors.c ****     motorZstate = IDLE_MOTORS;
  41              		.loc 1 12 5 is_stmt 1 view .LVU5
  42              		.loc 1 12 17 is_stmt 0 view .LVU6
  43 000a 044A     		ldr	r2, .L2+8
  44 000c 1360     		str	r3, [r2]
  13:Src/Motors/Driver_Motors.c ****     motorEstate = IDLE_MOTORS;
  45              		.loc 1 13 5 is_stmt 1 view .LVU7
ARM GAS  /tmp/cc32VFvO.s 			page 2


  46              		.loc 1 13 17 is_stmt 0 view .LVU8
  47 000e 044A     		ldr	r2, .L2+12
  48 0010 1360     		str	r3, [r2]
  14:Src/Motors/Driver_Motors.c **** }
  49              		.loc 1 14 1 view .LVU9
  50 0012 7047     		bx	lr
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 0014 00000000 		.word	.LANCHOR0
  55 0018 00000000 		.word	.LANCHOR1
  56 001c 00000000 		.word	.LANCHOR2
  57 0020 00000000 		.word	.LANCHOR3
  58              		.cfi_endproc
  59              	.LFE0:
  61              		.section	.text.enable_Motors,"ax",%progbits
  62              		.align	1
  63              		.global	enable_Motors
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	enable_Motors:
  70              	.LFB1:
  15:Src/Motors/Driver_Motors.c **** 
  16:Src/Motors/Driver_Motors.c **** void enable_Motors(void)
  17:Src/Motors/Driver_Motors.c **** {
  71              		.loc 1 17 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  18:Src/Motors/Driver_Motors.c ****     EnableX_Motors();
  80              		.loc 1 18 5 view .LVU11
  81 0002 FFF7FEFF 		bl	EnableX_Motors
  82              	.LVL0:
  19:Src/Motors/Driver_Motors.c ****     EnableY_Motors();
  83              		.loc 1 19 5 view .LVU12
  84 0006 FFF7FEFF 		bl	EnableY_Motors
  85              	.LVL1:
  20:Src/Motors/Driver_Motors.c ****     EnableZ_Motors();
  86              		.loc 1 20 5 view .LVU13
  87 000a FFF7FEFF 		bl	EnableZ_Motors
  88              	.LVL2:
  21:Src/Motors/Driver_Motors.c ****     EnableE_Motors();
  89              		.loc 1 21 5 view .LVU14
  90 000e FFF7FEFF 		bl	EnableE_Motors
  91              	.LVL3:
  22:Src/Motors/Driver_Motors.c **** }
  92              		.loc 1 22 1 is_stmt 0 view .LVU15
  93 0012 08BD     		pop	{r3, pc}
  94              		.cfi_endproc
  95              	.LFE1:
ARM GAS  /tmp/cc32VFvO.s 			page 3


  97              		.section	.text.disable_Motors,"ax",%progbits
  98              		.align	1
  99              		.global	disable_Motors
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	disable_Motors:
 106              	.LFB2:
  23:Src/Motors/Driver_Motors.c **** 
  24:Src/Motors/Driver_Motors.c **** void disable_Motors(void)
  25:Src/Motors/Driver_Motors.c **** {
 107              		.loc 1 25 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 08B5     		push	{r3, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
  26:Src/Motors/Driver_Motors.c ****     DisableX_Motors();
 116              		.loc 1 26 5 view .LVU17
 117 0002 FFF7FEFF 		bl	DisableX_Motors
 118              	.LVL4:
  27:Src/Motors/Driver_Motors.c ****     DisableY_Motors();
 119              		.loc 1 27 5 view .LVU18
 120 0006 FFF7FEFF 		bl	DisableY_Motors
 121              	.LVL5:
  28:Src/Motors/Driver_Motors.c ****     DisableZ_Motors();
 122              		.loc 1 28 5 view .LVU19
 123 000a FFF7FEFF 		bl	DisableZ_Motors
 124              	.LVL6:
  29:Src/Motors/Driver_Motors.c ****     DisableE_Motors();
 125              		.loc 1 29 5 view .LVU20
 126 000e FFF7FEFF 		bl	DisableE_Motors
 127              	.LVL7:
  30:Src/Motors/Driver_Motors.c **** }
 128              		.loc 1 30 1 is_stmt 0 view .LVU21
 129 0012 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE2:
 133              		.section	.text.doStepX_Motors,"ax",%progbits
 134              		.align	1
 135              		.global	doStepX_Motors
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	doStepX_Motors:
 142              	.LVL8:
 143              	.LFB3:
  31:Src/Motors/Driver_Motors.c **** 
  32:Src/Motors/Driver_Motors.c **** void doStepX_Motors(long direction)
  33:Src/Motors/Driver_Motors.c **** {
 144              		.loc 1 33 1 is_stmt 1 view -0
 145              		.cfi_startproc
ARM GAS  /tmp/cc32VFvO.s 			page 4


 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
  34:Src/Motors/Driver_Motors.c ****     if (motorXstate != IDLE_MOTORS)   return;
 149              		.loc 1 34 5 view .LVU23
 150              		.loc 1 34 21 is_stmt 0 view .LVU24
 151 0000 084B     		ldr	r3, .L13
 152 0002 1B68     		ldr	r3, [r3]
 153              		.loc 1 34 8 view .LVU25
 154 0004 23B9     		cbnz	r3, .L8
  35:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorXstate = FOREWARD_MOTORS; return; }
 155              		.loc 1 35 5 is_stmt 1 view .LVU26
 156              		.loc 1 35 8 is_stmt 0 view .LVU27
 157 0006 0128     		cmp	r0, #1
 158 0008 03D0     		beq	.L11
  36:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorXstate = BACKWARD_MOTORS; return; }
 159              		.loc 1 36 5 is_stmt 1 view .LVU28
 160              		.loc 1 36 8 is_stmt 0 view .LVU29
 161 000a B0F1FF3F 		cmp	r0, #-1
 162 000e 04D0     		beq	.L12
 163              	.L8:
  37:Src/Motors/Driver_Motors.c **** }
 164              		.loc 1 37 1 view .LVU30
 165 0010 7047     		bx	lr
 166              	.L11:
  35:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorXstate = FOREWARD_MOTORS; return; }
 167              		.loc 1 35 28 is_stmt 1 discriminator 1 view .LVU31
  35:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorXstate = FOREWARD_MOTORS; return; }
 168              		.loc 1 35 40 is_stmt 0 discriminator 1 view .LVU32
 169 0012 044B     		ldr	r3, .L13
 170 0014 0122     		movs	r2, #1
 171 0016 1A60     		str	r2, [r3]
  35:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorXstate = FOREWARD_MOTORS; return; }
 172              		.loc 1 35 59 is_stmt 1 discriminator 1 view .LVU33
 173 0018 7047     		bx	lr
 174              	.L12:
  36:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorXstate = BACKWARD_MOTORS; return; }
 175              		.loc 1 36 28 discriminator 1 view .LVU34
  36:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorXstate = BACKWARD_MOTORS; return; }
 176              		.loc 1 36 40 is_stmt 0 discriminator 1 view .LVU35
 177 001a 024B     		ldr	r3, .L13
 178 001c 0222     		movs	r2, #2
 179 001e 1A60     		str	r2, [r3]
  36:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorXstate = BACKWARD_MOTORS; return; }
 180              		.loc 1 36 59 is_stmt 1 discriminator 1 view .LVU36
 181 0020 F6E7     		b	.L8
 182              	.L14:
 183 0022 00BF     		.align	2
 184              	.L13:
 185 0024 00000000 		.word	.LANCHOR0
 186              		.cfi_endproc
 187              	.LFE3:
 189              		.section	.text.doStepY_Motors,"ax",%progbits
 190              		.align	1
 191              		.global	doStepY_Motors
 192              		.syntax unified
 193              		.thumb
ARM GAS  /tmp/cc32VFvO.s 			page 5


 194              		.thumb_func
 195              		.fpu softvfp
 197              	doStepY_Motors:
 198              	.LVL9:
 199              	.LFB4:
  38:Src/Motors/Driver_Motors.c **** 
  39:Src/Motors/Driver_Motors.c **** void doStepY_Motors(long direction)
  40:Src/Motors/Driver_Motors.c **** {
 200              		.loc 1 40 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
  41:Src/Motors/Driver_Motors.c ****     if (motorYstate != IDLE_MOTORS)   return;
 205              		.loc 1 41 5 view .LVU38
 206              		.loc 1 41 21 is_stmt 0 view .LVU39
 207 0000 084B     		ldr	r3, .L20
 208 0002 1B68     		ldr	r3, [r3]
 209              		.loc 1 41 8 view .LVU40
 210 0004 23B9     		cbnz	r3, .L15
  42:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorYstate = FOREWARD_MOTORS; return; }
 211              		.loc 1 42 5 is_stmt 1 view .LVU41
 212              		.loc 1 42 8 is_stmt 0 view .LVU42
 213 0006 0128     		cmp	r0, #1
 214 0008 03D0     		beq	.L18
  43:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorYstate = BACKWARD_MOTORS; return; }
 215              		.loc 1 43 5 is_stmt 1 view .LVU43
 216              		.loc 1 43 8 is_stmt 0 view .LVU44
 217 000a B0F1FF3F 		cmp	r0, #-1
 218 000e 04D0     		beq	.L19
 219              	.L15:
  44:Src/Motors/Driver_Motors.c **** }
 220              		.loc 1 44 1 view .LVU45
 221 0010 7047     		bx	lr
 222              	.L18:
  42:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorYstate = FOREWARD_MOTORS; return; }
 223              		.loc 1 42 28 is_stmt 1 discriminator 1 view .LVU46
  42:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorYstate = FOREWARD_MOTORS; return; }
 224              		.loc 1 42 40 is_stmt 0 discriminator 1 view .LVU47
 225 0012 044B     		ldr	r3, .L20
 226 0014 0122     		movs	r2, #1
 227 0016 1A60     		str	r2, [r3]
  42:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorYstate = FOREWARD_MOTORS; return; }
 228              		.loc 1 42 59 is_stmt 1 discriminator 1 view .LVU48
 229 0018 7047     		bx	lr
 230              	.L19:
  43:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorYstate = BACKWARD_MOTORS; return; }
 231              		.loc 1 43 28 discriminator 1 view .LVU49
  43:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorYstate = BACKWARD_MOTORS; return; }
 232              		.loc 1 43 40 is_stmt 0 discriminator 1 view .LVU50
 233 001a 024B     		ldr	r3, .L20
 234 001c 0222     		movs	r2, #2
 235 001e 1A60     		str	r2, [r3]
  43:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorYstate = BACKWARD_MOTORS; return; }
 236              		.loc 1 43 59 is_stmt 1 discriminator 1 view .LVU51
 237 0020 F6E7     		b	.L15
 238              	.L21:
ARM GAS  /tmp/cc32VFvO.s 			page 6


 239 0022 00BF     		.align	2
 240              	.L20:
 241 0024 00000000 		.word	.LANCHOR1
 242              		.cfi_endproc
 243              	.LFE4:
 245              		.section	.text.doStepZ_Motors,"ax",%progbits
 246              		.align	1
 247              		.global	doStepZ_Motors
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	doStepZ_Motors:
 254              	.LVL10:
 255              	.LFB5:
  45:Src/Motors/Driver_Motors.c **** 
  46:Src/Motors/Driver_Motors.c **** void doStepZ_Motors(long direction)
  47:Src/Motors/Driver_Motors.c **** {
 256              		.loc 1 47 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
  48:Src/Motors/Driver_Motors.c ****     if (motorZstate != IDLE_MOTORS)   return;
 261              		.loc 1 48 5 view .LVU53
 262              		.loc 1 48 21 is_stmt 0 view .LVU54
 263 0000 084B     		ldr	r3, .L27
 264 0002 1B68     		ldr	r3, [r3]
 265              		.loc 1 48 8 view .LVU55
 266 0004 23B9     		cbnz	r3, .L22
  49:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorZstate = FOREWARD_MOTORS; return; }
 267              		.loc 1 49 5 is_stmt 1 view .LVU56
 268              		.loc 1 49 8 is_stmt 0 view .LVU57
 269 0006 0128     		cmp	r0, #1
 270 0008 03D0     		beq	.L25
  50:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorZstate = BACKWARD_MOTORS; return; }
 271              		.loc 1 50 5 is_stmt 1 view .LVU58
 272              		.loc 1 50 8 is_stmt 0 view .LVU59
 273 000a B0F1FF3F 		cmp	r0, #-1
 274 000e 04D0     		beq	.L26
 275              	.L22:
  51:Src/Motors/Driver_Motors.c **** }
 276              		.loc 1 51 1 view .LVU60
 277 0010 7047     		bx	lr
 278              	.L25:
  49:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorZstate = FOREWARD_MOTORS; return; }
 279              		.loc 1 49 28 is_stmt 1 discriminator 1 view .LVU61
  49:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorZstate = FOREWARD_MOTORS; return; }
 280              		.loc 1 49 40 is_stmt 0 discriminator 1 view .LVU62
 281 0012 044B     		ldr	r3, .L27
 282 0014 0122     		movs	r2, #1
 283 0016 1A60     		str	r2, [r3]
  49:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorZstate = FOREWARD_MOTORS; return; }
 284              		.loc 1 49 59 is_stmt 1 discriminator 1 view .LVU63
 285 0018 7047     		bx	lr
 286              	.L26:
  50:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorZstate = BACKWARD_MOTORS; return; }
ARM GAS  /tmp/cc32VFvO.s 			page 7


 287              		.loc 1 50 28 discriminator 1 view .LVU64
  50:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorZstate = BACKWARD_MOTORS; return; }
 288              		.loc 1 50 40 is_stmt 0 discriminator 1 view .LVU65
 289 001a 024B     		ldr	r3, .L27
 290 001c 0222     		movs	r2, #2
 291 001e 1A60     		str	r2, [r3]
  50:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorZstate = BACKWARD_MOTORS; return; }
 292              		.loc 1 50 59 is_stmt 1 discriminator 1 view .LVU66
 293 0020 F6E7     		b	.L22
 294              	.L28:
 295 0022 00BF     		.align	2
 296              	.L27:
 297 0024 00000000 		.word	.LANCHOR2
 298              		.cfi_endproc
 299              	.LFE5:
 301              		.section	.text.doStepE_Motors,"ax",%progbits
 302              		.align	1
 303              		.global	doStepE_Motors
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu softvfp
 309              	doStepE_Motors:
 310              	.LVL11:
 311              	.LFB6:
  52:Src/Motors/Driver_Motors.c **** 
  53:Src/Motors/Driver_Motors.c **** void doStepE_Motors(long direction)
  54:Src/Motors/Driver_Motors.c **** {
 312              		.loc 1 54 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
  55:Src/Motors/Driver_Motors.c ****     if (motorEstate != IDLE_MOTORS)   return;
 317              		.loc 1 55 5 view .LVU68
 318              		.loc 1 55 21 is_stmt 0 view .LVU69
 319 0000 084B     		ldr	r3, .L34
 320 0002 1B68     		ldr	r3, [r3]
 321              		.loc 1 55 8 view .LVU70
 322 0004 23B9     		cbnz	r3, .L29
  56:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorEstate = FOREWARD_MOTORS; return; }
 323              		.loc 1 56 5 is_stmt 1 view .LVU71
 324              		.loc 1 56 8 is_stmt 0 view .LVU72
 325 0006 0128     		cmp	r0, #1
 326 0008 03D0     		beq	.L32
  57:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorEstate = BACKWARD_MOTORS; return; }
 327              		.loc 1 57 5 is_stmt 1 view .LVU73
 328              		.loc 1 57 8 is_stmt 0 view .LVU74
 329 000a B0F1FF3F 		cmp	r0, #-1
 330 000e 04D0     		beq	.L33
 331              	.L29:
  58:Src/Motors/Driver_Motors.c **** }
 332              		.loc 1 58 1 view .LVU75
 333 0010 7047     		bx	lr
 334              	.L32:
  56:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorEstate = FOREWARD_MOTORS; return; }
 335              		.loc 1 56 28 is_stmt 1 discriminator 1 view .LVU76
ARM GAS  /tmp/cc32VFvO.s 			page 8


  56:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorEstate = FOREWARD_MOTORS; return; }
 336              		.loc 1 56 40 is_stmt 0 discriminator 1 view .LVU77
 337 0012 044B     		ldr	r3, .L34
 338 0014 0122     		movs	r2, #1
 339 0016 1A60     		str	r2, [r3]
  56:Src/Motors/Driver_Motors.c ****     if (direction == 1)  { motorEstate = FOREWARD_MOTORS; return; }
 340              		.loc 1 56 59 is_stmt 1 discriminator 1 view .LVU78
 341 0018 7047     		bx	lr
 342              	.L33:
  57:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorEstate = BACKWARD_MOTORS; return; }
 343              		.loc 1 57 28 discriminator 1 view .LVU79
  57:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorEstate = BACKWARD_MOTORS; return; }
 344              		.loc 1 57 40 is_stmt 0 discriminator 1 view .LVU80
 345 001a 024B     		ldr	r3, .L34
 346 001c 0222     		movs	r2, #2
 347 001e 1A60     		str	r2, [r3]
  57:Src/Motors/Driver_Motors.c ****     if (direction == -1) { motorEstate = BACKWARD_MOTORS; return; }
 348              		.loc 1 57 59 is_stmt 1 discriminator 1 view .LVU81
 349 0020 F6E7     		b	.L29
 350              	.L35:
 351 0022 00BF     		.align	2
 352              	.L34:
 353 0024 00000000 		.word	.LANCHOR3
 354              		.cfi_endproc
 355              	.LFE6:
 357              		.section	.text.evaluate_Motors,"ax",%progbits
 358              		.align	1
 359              		.global	evaluate_Motors
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu softvfp
 365              	evaluate_Motors:
 366              	.LFB7:
  59:Src/Motors/Driver_Motors.c **** 
  60:Src/Motors/Driver_Motors.c **** void evaluate_Motors(void)
  61:Src/Motors/Driver_Motors.c **** {
 367              		.loc 1 61 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              	.LCFI2:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
  62:Src/Motors/Driver_Motors.c ****     switch(motorXstate)
 376              		.loc 1 62 5 view .LVU83
 377 0002 364B     		ldr	r3, .L59
 378 0004 1B68     		ldr	r3, [r3]
 379 0006 013B     		subs	r3, r3, #1
 380 0008 032B     		cmp	r3, #3
 381 000a 23D8     		bhi	.L37
 382 000c DFE803F0 		tbb	[pc, r3]
 383              	.L39:
 384 0010 02       		.byte	(.L42-.L39)/2
 385 0011 10       		.byte	(.L41-.L39)/2
ARM GAS  /tmp/cc32VFvO.s 			page 9


 386 0012 16       		.byte	(.L40-.L39)/2
 387 0013 1C       		.byte	(.L38-.L39)/2
 388              		.p2align 1
 389              	.L42:
  63:Src/Motors/Driver_Motors.c ****     {
  64:Src/Motors/Driver_Motors.c ****         case FOREWARD_MOTORS:   ForwardX_Motors();  motorXstate = STEPON_MOTORS;    break;
 390              		.loc 1 64 33 view .LVU84
 391 0014 FFF7FEFF 		bl	ForwardX_Motors
 392              	.LVL12:
 393              		.loc 1 64 53 view .LVU85
 394              		.loc 1 64 65 is_stmt 0 view .LVU86
 395 0018 304B     		ldr	r3, .L59
 396 001a 0322     		movs	r2, #3
 397 001c 1A60     		str	r2, [r3]
 398              		.loc 1 64 85 is_stmt 1 view .LVU87
 399              	.L43:
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
  66:Src/Motors/Driver_Motors.c ****         case STEPON_MOTORS:     StepOnX_Motors();   motorXstate = STEPOFF_MOTORS;   break;
  67:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
  68:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
  69:Src/Motors/Driver_Motors.c ****     }
  70:Src/Motors/Driver_Motors.c **** 
  71:Src/Motors/Driver_Motors.c ****     switch(motorYstate)
 400              		.loc 1 71 5 view .LVU88
 401 001e 304B     		ldr	r3, .L59+4
 402 0020 1B68     		ldr	r3, [r3]
 403 0022 013B     		subs	r3, r3, #1
 404 0024 032B     		cmp	r3, #3
 405 0026 39D8     		bhi	.L44
 406 0028 DFE803F0 		tbb	[pc, r3]
 407              	.L46:
 408 002c 18       		.byte	(.L49-.L46)/2
 409 002d 26       		.byte	(.L48-.L46)/2
 410 002e 2C       		.byte	(.L47-.L46)/2
 411 002f 32       		.byte	(.L45-.L46)/2
 412              		.p2align 1
 413              	.L41:
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
 414              		.loc 1 65 33 view .LVU89
 415 0030 FFF7FEFF 		bl	BackwardX_Motors
 416              	.LVL13:
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
 417              		.loc 1 65 53 view .LVU90
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
 418              		.loc 1 65 65 is_stmt 0 view .LVU91
 419 0034 294B     		ldr	r3, .L59
 420 0036 0322     		movs	r2, #3
 421 0038 1A60     		str	r2, [r3]
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
 422              		.loc 1 65 85 is_stmt 1 view .LVU92
  65:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardX_Motors(); motorXstate = STEPON_MOTORS;    break;
 423              		.loc 1 65 9 is_stmt 0 view .LVU93
 424 003a F0E7     		b	.L43
 425              	.L40:
  66:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
 426              		.loc 1 66 33 is_stmt 1 view .LVU94
 427 003c FFF7FEFF 		bl	StepOnX_Motors
ARM GAS  /tmp/cc32VFvO.s 			page 10


 428              	.LVL14:
  66:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
 429              		.loc 1 66 53 view .LVU95
  66:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
 430              		.loc 1 66 65 is_stmt 0 view .LVU96
 431 0040 264B     		ldr	r3, .L59
 432 0042 0422     		movs	r2, #4
 433 0044 1A60     		str	r2, [r3]
  66:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
 434              		.loc 1 66 85 is_stmt 1 view .LVU97
  66:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffX_Motors();  motorXstate = IDLE_MOTORS;      break;
 435              		.loc 1 66 9 is_stmt 0 view .LVU98
 436 0046 EAE7     		b	.L43
 437              	.L38:
  67:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
 438              		.loc 1 67 33 is_stmt 1 view .LVU99
 439 0048 FFF7FEFF 		bl	StepOffX_Motors
 440              	.LVL15:
  67:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
 441              		.loc 1 67 53 view .LVU100
  67:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
 442              		.loc 1 67 65 is_stmt 0 view .LVU101
 443 004c 234B     		ldr	r3, .L59
 444 004e 0022     		movs	r2, #0
 445 0050 1A60     		str	r2, [r3]
  67:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
 446              		.loc 1 67 85 is_stmt 1 view .LVU102
  67:Src/Motors/Driver_Motors.c ****         default:                                    motorXstate = IDLE_MOTORS;      break;
 447              		.loc 1 67 9 is_stmt 0 view .LVU103
 448 0052 E4E7     		b	.L43
 449              	.L37:
  68:Src/Motors/Driver_Motors.c ****     }
 450              		.loc 1 68 53 is_stmt 1 view .LVU104
  68:Src/Motors/Driver_Motors.c ****     }
 451              		.loc 1 68 65 is_stmt 0 view .LVU105
 452 0054 214B     		ldr	r3, .L59
 453 0056 0022     		movs	r2, #0
 454 0058 1A60     		str	r2, [r3]
  68:Src/Motors/Driver_Motors.c ****     }
 455              		.loc 1 68 85 is_stmt 1 view .LVU106
  68:Src/Motors/Driver_Motors.c ****     }
 456              		.loc 1 68 9 is_stmt 0 view .LVU107
 457 005a E0E7     		b	.L43
 458              	.L49:
  72:Src/Motors/Driver_Motors.c ****     {
  73:Src/Motors/Driver_Motors.c ****         case FOREWARD_MOTORS:   ForwardY_Motors();  motorYstate = STEPON_MOTORS;    break;
 459              		.loc 1 73 33 is_stmt 1 view .LVU108
 460 005c FFF7FEFF 		bl	ForwardY_Motors
 461              	.LVL16:
 462              		.loc 1 73 53 view .LVU109
 463              		.loc 1 73 65 is_stmt 0 view .LVU110
 464 0060 1F4B     		ldr	r3, .L59+4
 465 0062 0322     		movs	r2, #3
 466 0064 1A60     		str	r2, [r3]
 467              		.loc 1 73 85 is_stmt 1 view .LVU111
 468              	.L50:
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
ARM GAS  /tmp/cc32VFvO.s 			page 11


  75:Src/Motors/Driver_Motors.c ****         case STEPON_MOTORS:     StepOnY_Motors();   motorYstate = STEPOFF_MOTORS;   break;
  76:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
  77:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
  78:Src/Motors/Driver_Motors.c ****     }
  79:Src/Motors/Driver_Motors.c **** 
  80:Src/Motors/Driver_Motors.c ****     switch(motorZstate)
 469              		.loc 1 80 5 view .LVU112
 470 0066 1F4B     		ldr	r3, .L59+8
 471 0068 1B68     		ldr	r3, [r3]
 472 006a 013B     		subs	r3, r3, #1
 473 006c 032B     		cmp	r3, #3
 474 006e 31D8     		bhi	.L51
 475 0070 DFE803F0 		tbb	[pc, r3]
 476              	.L53:
 477 0074 18       		.byte	(.L56-.L53)/2
 478 0075 1E       		.byte	(.L55-.L53)/2
 479 0076 24       		.byte	(.L54-.L53)/2
 480 0077 2A       		.byte	(.L52-.L53)/2
 481              		.p2align 1
 482              	.L48:
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
 483              		.loc 1 74 33 view .LVU113
 484 0078 FFF7FEFF 		bl	BackwardY_Motors
 485              	.LVL17:
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
 486              		.loc 1 74 53 view .LVU114
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
 487              		.loc 1 74 65 is_stmt 0 view .LVU115
 488 007c 184B     		ldr	r3, .L59+4
 489 007e 0322     		movs	r2, #3
 490 0080 1A60     		str	r2, [r3]
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
 491              		.loc 1 74 85 is_stmt 1 view .LVU116
  74:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardY_Motors(); motorYstate = STEPON_MOTORS;    break;
 492              		.loc 1 74 9 is_stmt 0 view .LVU117
 493 0082 F0E7     		b	.L50
 494              	.L47:
  75:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
 495              		.loc 1 75 33 is_stmt 1 view .LVU118
 496 0084 FFF7FEFF 		bl	StepOnY_Motors
 497              	.LVL18:
  75:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
 498              		.loc 1 75 53 view .LVU119
  75:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
 499              		.loc 1 75 65 is_stmt 0 view .LVU120
 500 0088 154B     		ldr	r3, .L59+4
 501 008a 0422     		movs	r2, #4
 502 008c 1A60     		str	r2, [r3]
  75:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
 503              		.loc 1 75 85 is_stmt 1 view .LVU121
  75:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffY_Motors();  motorYstate = IDLE_MOTORS;      break;
 504              		.loc 1 75 9 is_stmt 0 view .LVU122
 505 008e EAE7     		b	.L50
 506              	.L45:
  76:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
 507              		.loc 1 76 33 is_stmt 1 view .LVU123
 508 0090 FFF7FEFF 		bl	StepOffY_Motors
ARM GAS  /tmp/cc32VFvO.s 			page 12


 509              	.LVL19:
  76:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
 510              		.loc 1 76 53 view .LVU124
  76:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
 511              		.loc 1 76 65 is_stmt 0 view .LVU125
 512 0094 124B     		ldr	r3, .L59+4
 513 0096 0022     		movs	r2, #0
 514 0098 1A60     		str	r2, [r3]
  76:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
 515              		.loc 1 76 85 is_stmt 1 view .LVU126
  76:Src/Motors/Driver_Motors.c ****         default:                                    motorYstate = IDLE_MOTORS;      break;
 516              		.loc 1 76 9 is_stmt 0 view .LVU127
 517 009a E4E7     		b	.L50
 518              	.L44:
  77:Src/Motors/Driver_Motors.c ****     }
 519              		.loc 1 77 53 is_stmt 1 view .LVU128
  77:Src/Motors/Driver_Motors.c ****     }
 520              		.loc 1 77 65 is_stmt 0 view .LVU129
 521 009c 104B     		ldr	r3, .L59+4
 522 009e 0022     		movs	r2, #0
 523 00a0 1A60     		str	r2, [r3]
  77:Src/Motors/Driver_Motors.c ****     }
 524              		.loc 1 77 85 is_stmt 1 view .LVU130
  77:Src/Motors/Driver_Motors.c ****     }
 525              		.loc 1 77 9 is_stmt 0 view .LVU131
 526 00a2 E0E7     		b	.L50
 527              	.L56:
  81:Src/Motors/Driver_Motors.c ****     {
  82:Src/Motors/Driver_Motors.c ****         case FOREWARD_MOTORS:   ForwardZ_Motors();  motorZstate = STEPON_MOTORS;    break;
 528              		.loc 1 82 33 is_stmt 1 view .LVU132
 529 00a4 FFF7FEFF 		bl	ForwardZ_Motors
 530              	.LVL20:
 531              		.loc 1 82 53 view .LVU133
 532              		.loc 1 82 65 is_stmt 0 view .LVU134
 533 00a8 0E4B     		ldr	r3, .L59+8
 534 00aa 0322     		movs	r2, #3
 535 00ac 1A60     		str	r2, [r3]
 536              		.loc 1 82 85 is_stmt 1 view .LVU135
 537              	.L36:
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
  84:Src/Motors/Driver_Motors.c ****         case STEPON_MOTORS:     StepOnZ_Motors();   motorZstate = STEPOFF_MOTORS;   break;
  85:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
  86:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
  87:Src/Motors/Driver_Motors.c ****     }
  88:Src/Motors/Driver_Motors.c **** 
  89:Src/Motors/Driver_Motors.c **** }
 538              		.loc 1 89 1 is_stmt 0 view .LVU136
 539 00ae 08BD     		pop	{r3, pc}
 540              	.L55:
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
 541              		.loc 1 83 33 is_stmt 1 view .LVU137
 542 00b0 FFF7FEFF 		bl	BackwardZ_Motors
 543              	.LVL21:
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
 544              		.loc 1 83 53 view .LVU138
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
 545              		.loc 1 83 65 is_stmt 0 view .LVU139
ARM GAS  /tmp/cc32VFvO.s 			page 13


 546 00b4 0B4B     		ldr	r3, .L59+8
 547 00b6 0322     		movs	r2, #3
 548 00b8 1A60     		str	r2, [r3]
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
 549              		.loc 1 83 85 is_stmt 1 view .LVU140
  83:Src/Motors/Driver_Motors.c ****         case BACKWARD_MOTORS:   BackwardZ_Motors(); motorZstate = STEPON_MOTORS;    break;
 550              		.loc 1 83 9 is_stmt 0 view .LVU141
 551 00ba F8E7     		b	.L36
 552              	.L54:
  84:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
 553              		.loc 1 84 33 is_stmt 1 view .LVU142
 554 00bc FFF7FEFF 		bl	StepOnZ_Motors
 555              	.LVL22:
  84:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
 556              		.loc 1 84 53 view .LVU143
  84:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
 557              		.loc 1 84 65 is_stmt 0 view .LVU144
 558 00c0 084B     		ldr	r3, .L59+8
 559 00c2 0422     		movs	r2, #4
 560 00c4 1A60     		str	r2, [r3]
  84:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
 561              		.loc 1 84 85 is_stmt 1 view .LVU145
  84:Src/Motors/Driver_Motors.c ****         case STEPOFF_MOTORS:    StepOffZ_Motors();  motorZstate = IDLE_MOTORS;      break;
 562              		.loc 1 84 9 is_stmt 0 view .LVU146
 563 00c6 F2E7     		b	.L36
 564              	.L52:
  85:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
 565              		.loc 1 85 33 is_stmt 1 view .LVU147
 566 00c8 FFF7FEFF 		bl	StepOffZ_Motors
 567              	.LVL23:
  85:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
 568              		.loc 1 85 53 view .LVU148
  85:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
 569              		.loc 1 85 65 is_stmt 0 view .LVU149
 570 00cc 054B     		ldr	r3, .L59+8
 571 00ce 0022     		movs	r2, #0
 572 00d0 1A60     		str	r2, [r3]
  85:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
 573              		.loc 1 85 85 is_stmt 1 view .LVU150
  85:Src/Motors/Driver_Motors.c ****         default:                                    motorZstate = IDLE_MOTORS;      break;
 574              		.loc 1 85 9 is_stmt 0 view .LVU151
 575 00d2 ECE7     		b	.L36
 576              	.L51:
  86:Src/Motors/Driver_Motors.c ****     }
 577              		.loc 1 86 53 is_stmt 1 view .LVU152
  86:Src/Motors/Driver_Motors.c ****     }
 578              		.loc 1 86 65 is_stmt 0 view .LVU153
 579 00d4 034B     		ldr	r3, .L59+8
 580 00d6 0022     		movs	r2, #0
 581 00d8 1A60     		str	r2, [r3]
  86:Src/Motors/Driver_Motors.c ****     }
 582              		.loc 1 86 85 is_stmt 1 view .LVU154
 583              		.loc 1 89 1 is_stmt 0 view .LVU155
 584 00da E8E7     		b	.L36
 585              	.L60:
 586              		.align	2
 587              	.L59:
ARM GAS  /tmp/cc32VFvO.s 			page 14


 588 00dc 00000000 		.word	.LANCHOR0
 589 00e0 00000000 		.word	.LANCHOR1
 590 00e4 00000000 		.word	.LANCHOR2
 591              		.cfi_endproc
 592              	.LFE7:
 594              		.section	.bss.motorEstate,"aw",%nobits
 595              		.align	2
 596              		.set	.LANCHOR3,. + 0
 599              	motorEstate:
 600 0000 00000000 		.space	4
 601              		.section	.bss.motorXstate,"aw",%nobits
 602              		.align	2
 603              		.set	.LANCHOR0,. + 0
 606              	motorXstate:
 607 0000 00000000 		.space	4
 608              		.section	.bss.motorYstate,"aw",%nobits
 609              		.align	2
 610              		.set	.LANCHOR1,. + 0
 613              	motorYstate:
 614 0000 00000000 		.space	4
 615              		.section	.bss.motorZstate,"aw",%nobits
 616              		.align	2
 617              		.set	.LANCHOR2,. + 0
 620              	motorZstate:
 621 0000 00000000 		.space	4
 622              		.text
 623              	.Letext0:
 624              		.file 2 "Inc/Motors/GPIO_Motors.h"
 625              		.file 3 "Inc/Motors/Driver_Motors.h"
ARM GAS  /tmp/cc32VFvO.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Driver_Motors.c
     /tmp/cc32VFvO.s:16     .text.create_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:24     .text.create_Motors:0000000000000000 create_Motors
     /tmp/cc32VFvO.s:54     .text.create_Motors:0000000000000014 $d
     /tmp/cc32VFvO.s:62     .text.enable_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:69     .text.enable_Motors:0000000000000000 enable_Motors
     /tmp/cc32VFvO.s:98     .text.disable_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:105    .text.disable_Motors:0000000000000000 disable_Motors
     /tmp/cc32VFvO.s:134    .text.doStepX_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:141    .text.doStepX_Motors:0000000000000000 doStepX_Motors
     /tmp/cc32VFvO.s:185    .text.doStepX_Motors:0000000000000024 $d
     /tmp/cc32VFvO.s:190    .text.doStepY_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:197    .text.doStepY_Motors:0000000000000000 doStepY_Motors
     /tmp/cc32VFvO.s:241    .text.doStepY_Motors:0000000000000024 $d
     /tmp/cc32VFvO.s:246    .text.doStepZ_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:253    .text.doStepZ_Motors:0000000000000000 doStepZ_Motors
     /tmp/cc32VFvO.s:297    .text.doStepZ_Motors:0000000000000024 $d
     /tmp/cc32VFvO.s:302    .text.doStepE_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:309    .text.doStepE_Motors:0000000000000000 doStepE_Motors
     /tmp/cc32VFvO.s:353    .text.doStepE_Motors:0000000000000024 $d
     /tmp/cc32VFvO.s:358    .text.evaluate_Motors:0000000000000000 $t
     /tmp/cc32VFvO.s:365    .text.evaluate_Motors:0000000000000000 evaluate_Motors
     /tmp/cc32VFvO.s:384    .text.evaluate_Motors:0000000000000010 $d
     /tmp/cc32VFvO.s:388    .text.evaluate_Motors:0000000000000014 $t
     /tmp/cc32VFvO.s:408    .text.evaluate_Motors:000000000000002c $d
     /tmp/cc32VFvO.s:412    .text.evaluate_Motors:0000000000000030 $t
     /tmp/cc32VFvO.s:477    .text.evaluate_Motors:0000000000000074 $d
     /tmp/cc32VFvO.s:481    .text.evaluate_Motors:0000000000000078 $t
     /tmp/cc32VFvO.s:588    .text.evaluate_Motors:00000000000000dc $d
     /tmp/cc32VFvO.s:595    .bss.motorEstate:0000000000000000 $d
     /tmp/cc32VFvO.s:599    .bss.motorEstate:0000000000000000 motorEstate
     /tmp/cc32VFvO.s:602    .bss.motorXstate:0000000000000000 $d
     /tmp/cc32VFvO.s:606    .bss.motorXstate:0000000000000000 motorXstate
     /tmp/cc32VFvO.s:609    .bss.motorYstate:0000000000000000 $d
     /tmp/cc32VFvO.s:613    .bss.motorYstate:0000000000000000 motorYstate
     /tmp/cc32VFvO.s:616    .bss.motorZstate:0000000000000000 $d
     /tmp/cc32VFvO.s:620    .bss.motorZstate:0000000000000000 motorZstate

UNDEFINED SYMBOLS
EnableX_Motors
EnableY_Motors
EnableZ_Motors
EnableE_Motors
DisableX_Motors
DisableY_Motors
DisableZ_Motors
DisableE_Motors
ForwardX_Motors
BackwardX_Motors
StepOnX_Motors
StepOffX_Motors
ForwardY_Motors
BackwardY_Motors
StepOnY_Motors
StepOffY_Motors
ForwardZ_Motors
ARM GAS  /tmp/cc32VFvO.s 			page 16


BackwardZ_Motors
StepOnZ_Motors
StepOffZ_Motors
