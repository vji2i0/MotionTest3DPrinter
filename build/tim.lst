ARM GAS  /tmp/cchT1Azd.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_TIM2_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_TIM2_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_TIM2_Init:
  24              	.LFB66:
  25              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/tim.c     ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/tim.c     ****   * the License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                             www.st.com/SLA0044
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim2;
  28:Src/tim.c     **** TIM_HandleTypeDef htim3;
  29:Src/tim.c     **** TIM_HandleTypeDef htim4;
  30:Src/tim.c     **** TIM_HandleTypeDef htim5;
  31:Src/tim.c     **** 
  32:Src/tim.c     **** /* TIM2 init function */
  33:Src/tim.c     **** void MX_TIM2_Init(void)
ARM GAS  /tmp/cchT1Azd.s 			page 2


  34:Src/tim.c     **** {
  26              		.loc 1 34 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 32
  35:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  37              		.loc 1 35 0
  38 0004 0023     		movs	r3, #0
  39 0006 0293     		str	r3, [sp, #8]
  40 0008 0393     		str	r3, [sp, #12]
  41 000a 0493     		str	r3, [sp, #16]
  42 000c 0593     		str	r3, [sp, #20]
  36:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  43              		.loc 1 36 0
  44 000e 0093     		str	r3, [sp]
  45 0010 0193     		str	r3, [sp, #4]
  37:Src/tim.c     **** 
  38:Src/tim.c     ****   htim2.Instance = TIM2;
  46              		.loc 1 38 0
  47 0012 1548     		ldr	r0, .L9
  48 0014 4FF08042 		mov	r2, #1073741824
  49 0018 0260     		str	r2, [r0]
  39:Src/tim.c     ****   htim2.Init.Prescaler = 1;
  50              		.loc 1 39 0
  51 001a 0122     		movs	r2, #1
  52 001c 4260     		str	r2, [r0, #4]
  40:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  53              		.loc 1 40 0
  54 001e 8360     		str	r3, [r0, #8]
  41:Src/tim.c     ****   htim2.Init.Period = 150;
  55              		.loc 1 41 0
  56 0020 9622     		movs	r2, #150
  57 0022 C260     		str	r2, [r0, #12]
  42:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  58              		.loc 1 42 0
  59 0024 0361     		str	r3, [r0, #16]
  43:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  60              		.loc 1 43 0
  61 0026 8361     		str	r3, [r0, #24]
  44:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  62              		.loc 1 44 0
  63 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
  64              	.LVL0:
  65 002c 98B9     		cbnz	r0, .L6
  66              	.L2:
  45:Src/tim.c     ****   {
  46:Src/tim.c     ****     Error_Handler();
  47:Src/tim.c     ****   }
  48:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  67              		.loc 1 48 0
ARM GAS  /tmp/cchT1Azd.s 			page 3


  68 002e 06A9     		add	r1, sp, #24
  69 0030 4FF48053 		mov	r3, #4096
  70 0034 41F8103D 		str	r3, [r1, #-16]!
  49:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  71              		.loc 1 49 0
  72 0038 0B48     		ldr	r0, .L9
  73 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  74              	.LVL1:
  75 003e 68B9     		cbnz	r0, .L7
  76              	.L3:
  50:Src/tim.c     ****   {
  51:Src/tim.c     ****     Error_Handler();
  52:Src/tim.c     ****   }
  53:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  77              		.loc 1 53 0
  78 0040 0023     		movs	r3, #0
  79 0042 0093     		str	r3, [sp]
  54:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  80              		.loc 1 54 0
  81 0044 0193     		str	r3, [sp, #4]
  55:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  82              		.loc 1 55 0
  83 0046 6946     		mov	r1, sp
  84 0048 0748     		ldr	r0, .L9
  85 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  86              	.LVL2:
  87 004e 40B9     		cbnz	r0, .L8
  88              	.L1:
  56:Src/tim.c     ****   {
  57:Src/tim.c     ****     Error_Handler();
  58:Src/tim.c     ****   }
  59:Src/tim.c     **** 
  60:Src/tim.c     **** }
  89              		.loc 1 60 0
  90 0050 07B0     		add	sp, sp, #28
  91              	.LCFI2:
  92              		.cfi_remember_state
  93              		.cfi_def_cfa_offset 4
  94              		@ sp needed
  95 0052 5DF804FB 		ldr	pc, [sp], #4
  96              	.L6:
  97              	.LCFI3:
  98              		.cfi_restore_state
  46:Src/tim.c     ****   }
  99              		.loc 1 46 0
 100 0056 FFF7FEFF 		bl	Error_Handler
 101              	.LVL3:
 102 005a E8E7     		b	.L2
 103              	.L7:
  51:Src/tim.c     ****   }
 104              		.loc 1 51 0
 105 005c FFF7FEFF 		bl	Error_Handler
 106              	.LVL4:
 107 0060 EEE7     		b	.L3
 108              	.L8:
  57:Src/tim.c     ****   }
 109              		.loc 1 57 0
ARM GAS  /tmp/cchT1Azd.s 			page 4


 110 0062 FFF7FEFF 		bl	Error_Handler
 111              	.LVL5:
 112              		.loc 1 60 0
 113 0066 F3E7     		b	.L1
 114              	.L10:
 115              		.align	2
 116              	.L9:
 117 0068 00000000 		.word	htim2
 118              		.cfi_endproc
 119              	.LFE66:
 121              		.section	.text.MX_TIM3_Init,"ax",%progbits
 122              		.align	1
 123              		.global	MX_TIM3_Init
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	MX_TIM3_Init:
 130              	.LFB67:
  61:Src/tim.c     **** /* TIM3 init function */
  62:Src/tim.c     **** void MX_TIM3_Init(void)
  63:Src/tim.c     **** {
 131              		.loc 1 63 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 24
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 00B5     		push	{lr}
 136              	.LCFI4:
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 14, -4
 139 0002 87B0     		sub	sp, sp, #28
 140              	.LCFI5:
 141              		.cfi_def_cfa_offset 32
  64:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 142              		.loc 1 64 0
 143 0004 0023     		movs	r3, #0
 144 0006 0293     		str	r3, [sp, #8]
 145 0008 0393     		str	r3, [sp, #12]
 146 000a 0493     		str	r3, [sp, #16]
 147 000c 0593     		str	r3, [sp, #20]
  65:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 148              		.loc 1 65 0
 149 000e 0093     		str	r3, [sp]
 150 0010 0193     		str	r3, [sp, #4]
  66:Src/tim.c     **** 
  67:Src/tim.c     ****   htim3.Instance = TIM3;
 151              		.loc 1 67 0
 152 0012 1548     		ldr	r0, .L19
 153 0014 154A     		ldr	r2, .L19+4
 154 0016 0260     		str	r2, [r0]
  68:Src/tim.c     ****   htim3.Init.Prescaler = 72;
 155              		.loc 1 68 0
 156 0018 4822     		movs	r2, #72
 157 001a 4260     		str	r2, [r0, #4]
  69:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 158              		.loc 1 69 0
 159 001c 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/cchT1Azd.s 			page 5


  70:Src/tim.c     ****   htim3.Init.Period = 1000;
 160              		.loc 1 70 0
 161 001e 4FF47A72 		mov	r2, #1000
 162 0022 C260     		str	r2, [r0, #12]
  71:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 163              		.loc 1 71 0
 164 0024 0361     		str	r3, [r0, #16]
  72:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 165              		.loc 1 72 0
 166 0026 8361     		str	r3, [r0, #24]
  73:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 167              		.loc 1 73 0
 168 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 169              	.LVL6:
 170 002c 98B9     		cbnz	r0, .L16
 171              	.L12:
  74:Src/tim.c     ****   {
  75:Src/tim.c     ****     Error_Handler();
  76:Src/tim.c     ****   }
  77:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 172              		.loc 1 77 0
 173 002e 06A9     		add	r1, sp, #24
 174 0030 4FF48053 		mov	r3, #4096
 175 0034 41F8103D 		str	r3, [r1, #-16]!
  78:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 176              		.loc 1 78 0
 177 0038 0B48     		ldr	r0, .L19
 178 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 179              	.LVL7:
 180 003e 68B9     		cbnz	r0, .L17
 181              	.L13:
  79:Src/tim.c     ****   {
  80:Src/tim.c     ****     Error_Handler();
  81:Src/tim.c     ****   }
  82:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 182              		.loc 1 82 0
 183 0040 0023     		movs	r3, #0
 184 0042 0093     		str	r3, [sp]
  83:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 185              		.loc 1 83 0
 186 0044 0193     		str	r3, [sp, #4]
  84:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 187              		.loc 1 84 0
 188 0046 6946     		mov	r1, sp
 189 0048 0748     		ldr	r0, .L19
 190 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 191              	.LVL8:
 192 004e 40B9     		cbnz	r0, .L18
 193              	.L11:
  85:Src/tim.c     ****   {
  86:Src/tim.c     ****     Error_Handler();
  87:Src/tim.c     ****   }
  88:Src/tim.c     **** 
  89:Src/tim.c     **** }
 194              		.loc 1 89 0
 195 0050 07B0     		add	sp, sp, #28
 196              	.LCFI6:
ARM GAS  /tmp/cchT1Azd.s 			page 6


 197              		.cfi_remember_state
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0052 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              	.LCFI7:
 203              		.cfi_restore_state
  75:Src/tim.c     ****   }
 204              		.loc 1 75 0
 205 0056 FFF7FEFF 		bl	Error_Handler
 206              	.LVL9:
 207 005a E8E7     		b	.L12
 208              	.L17:
  80:Src/tim.c     ****   }
 209              		.loc 1 80 0
 210 005c FFF7FEFF 		bl	Error_Handler
 211              	.LVL10:
 212 0060 EEE7     		b	.L13
 213              	.L18:
  86:Src/tim.c     ****   }
 214              		.loc 1 86 0
 215 0062 FFF7FEFF 		bl	Error_Handler
 216              	.LVL11:
 217              		.loc 1 89 0
 218 0066 F3E7     		b	.L11
 219              	.L20:
 220              		.align	2
 221              	.L19:
 222 0068 00000000 		.word	htim3
 223 006c 00040040 		.word	1073742848
 224              		.cfi_endproc
 225              	.LFE67:
 227              		.section	.text.MX_TIM4_Init,"ax",%progbits
 228              		.align	1
 229              		.global	MX_TIM4_Init
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	MX_TIM4_Init:
 236              	.LFB68:
  90:Src/tim.c     **** /* TIM4 init function */
  91:Src/tim.c     **** void MX_TIM4_Init(void)
  92:Src/tim.c     **** {
 237              		.loc 1 92 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 24
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 00B5     		push	{lr}
 242              	.LCFI8:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 14, -4
 245 0002 87B0     		sub	sp, sp, #28
 246              	.LCFI9:
 247              		.cfi_def_cfa_offset 32
  93:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 248              		.loc 1 93 0
ARM GAS  /tmp/cchT1Azd.s 			page 7


 249 0004 0023     		movs	r3, #0
 250 0006 0293     		str	r3, [sp, #8]
 251 0008 0393     		str	r3, [sp, #12]
 252 000a 0493     		str	r3, [sp, #16]
 253 000c 0593     		str	r3, [sp, #20]
  94:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 254              		.loc 1 94 0
 255 000e 0093     		str	r3, [sp]
 256 0010 0193     		str	r3, [sp, #4]
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   htim4.Instance = TIM4;
 257              		.loc 1 96 0
 258 0012 1548     		ldr	r0, .L29
 259 0014 154A     		ldr	r2, .L29+4
 260 0016 0260     		str	r2, [r0]
  97:Src/tim.c     ****   htim4.Init.Prescaler = 36;
 261              		.loc 1 97 0
 262 0018 2422     		movs	r2, #36
 263 001a 4260     		str	r2, [r0, #4]
  98:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 264              		.loc 1 98 0
 265 001c 8360     		str	r3, [r0, #8]
  99:Src/tim.c     ****   htim4.Init.Period = 100;
 266              		.loc 1 99 0
 267 001e 6422     		movs	r2, #100
 268 0020 C260     		str	r2, [r0, #12]
 100:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 269              		.loc 1 100 0
 270 0022 0361     		str	r3, [r0, #16]
 101:Src/tim.c     ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 271              		.loc 1 101 0
 272 0024 8361     		str	r3, [r0, #24]
 102:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 273              		.loc 1 102 0
 274 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 275              	.LVL12:
 276 002a 98B9     		cbnz	r0, .L26
 277              	.L22:
 103:Src/tim.c     ****   {
 104:Src/tim.c     ****     Error_Handler();
 105:Src/tim.c     ****   }
 106:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 278              		.loc 1 106 0
 279 002c 06A9     		add	r1, sp, #24
 280 002e 4FF48053 		mov	r3, #4096
 281 0032 41F8103D 		str	r3, [r1, #-16]!
 107:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 282              		.loc 1 107 0
 283 0036 0C48     		ldr	r0, .L29
 284 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 285              	.LVL13:
 286 003c 68B9     		cbnz	r0, .L27
 287              	.L23:
 108:Src/tim.c     ****   {
 109:Src/tim.c     ****     Error_Handler();
 110:Src/tim.c     ****   }
 111:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  /tmp/cchT1Azd.s 			page 8


 288              		.loc 1 111 0
 289 003e 0023     		movs	r3, #0
 290 0040 0093     		str	r3, [sp]
 112:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 291              		.loc 1 112 0
 292 0042 0193     		str	r3, [sp, #4]
 113:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 293              		.loc 1 113 0
 294 0044 6946     		mov	r1, sp
 295 0046 0848     		ldr	r0, .L29
 296 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 297              	.LVL14:
 298 004c 40B9     		cbnz	r0, .L28
 299              	.L21:
 114:Src/tim.c     ****   {
 115:Src/tim.c     ****     Error_Handler();
 116:Src/tim.c     ****   }
 117:Src/tim.c     **** 
 118:Src/tim.c     **** }
 300              		.loc 1 118 0
 301 004e 07B0     		add	sp, sp, #28
 302              	.LCFI10:
 303              		.cfi_remember_state
 304              		.cfi_def_cfa_offset 4
 305              		@ sp needed
 306 0050 5DF804FB 		ldr	pc, [sp], #4
 307              	.L26:
 308              	.LCFI11:
 309              		.cfi_restore_state
 104:Src/tim.c     ****   }
 310              		.loc 1 104 0
 311 0054 FFF7FEFF 		bl	Error_Handler
 312              	.LVL15:
 313 0058 E8E7     		b	.L22
 314              	.L27:
 109:Src/tim.c     ****   }
 315              		.loc 1 109 0
 316 005a FFF7FEFF 		bl	Error_Handler
 317              	.LVL16:
 318 005e EEE7     		b	.L23
 319              	.L28:
 115:Src/tim.c     ****   }
 320              		.loc 1 115 0
 321 0060 FFF7FEFF 		bl	Error_Handler
 322              	.LVL17:
 323              		.loc 1 118 0
 324 0064 F3E7     		b	.L21
 325              	.L30:
 326 0066 00BF     		.align	2
 327              	.L29:
 328 0068 00000000 		.word	htim4
 329 006c 00080040 		.word	1073743872
 330              		.cfi_endproc
 331              	.LFE68:
 333              		.section	.text.MX_TIM5_Init,"ax",%progbits
 334              		.align	1
 335              		.global	MX_TIM5_Init
ARM GAS  /tmp/cchT1Azd.s 			page 9


 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu softvfp
 341              	MX_TIM5_Init:
 342              	.LFB69:
 119:Src/tim.c     **** /* TIM5 init function */
 120:Src/tim.c     **** void MX_TIM5_Init(void)
 121:Src/tim.c     **** {
 343              		.loc 1 121 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 24
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 00B5     		push	{lr}
 348              	.LCFI12:
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 14, -4
 351 0002 87B0     		sub	sp, sp, #28
 352              	.LCFI13:
 353              		.cfi_def_cfa_offset 32
 122:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 354              		.loc 1 122 0
 355 0004 0023     		movs	r3, #0
 356 0006 0293     		str	r3, [sp, #8]
 357 0008 0393     		str	r3, [sp, #12]
 358 000a 0493     		str	r3, [sp, #16]
 359 000c 0593     		str	r3, [sp, #20]
 123:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 360              		.loc 1 123 0
 361 000e 0093     		str	r3, [sp]
 362 0010 0193     		str	r3, [sp, #4]
 124:Src/tim.c     **** 
 125:Src/tim.c     ****   htim5.Instance = TIM5;
 363              		.loc 1 125 0
 364 0012 1648     		ldr	r0, .L39
 365 0014 164A     		ldr	r2, .L39+4
 366 0016 0260     		str	r2, [r0]
 126:Src/tim.c     ****   htim5.Init.Prescaler = 8000;
 367              		.loc 1 126 0
 368 0018 4FF4FA52 		mov	r2, #8000
 369 001c 4260     		str	r2, [r0, #4]
 127:Src/tim.c     ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 370              		.loc 1 127 0
 371 001e 8360     		str	r3, [r0, #8]
 128:Src/tim.c     ****   htim5.Init.Period = 9000;
 372              		.loc 1 128 0
 373 0020 42F22832 		movw	r2, #9000
 374 0024 C260     		str	r2, [r0, #12]
 129:Src/tim.c     ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 375              		.loc 1 129 0
 376 0026 0361     		str	r3, [r0, #16]
 130:Src/tim.c     ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 377              		.loc 1 130 0
 378 0028 8361     		str	r3, [r0, #24]
 131:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 379              		.loc 1 131 0
 380 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/cchT1Azd.s 			page 10


 381              	.LVL18:
 382 002e 98B9     		cbnz	r0, .L36
 383              	.L32:
 132:Src/tim.c     ****   {
 133:Src/tim.c     ****     Error_Handler();
 134:Src/tim.c     ****   }
 135:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 384              		.loc 1 135 0
 385 0030 06A9     		add	r1, sp, #24
 386 0032 4FF48053 		mov	r3, #4096
 387 0036 41F8103D 		str	r3, [r1, #-16]!
 136:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 388              		.loc 1 136 0
 389 003a 0C48     		ldr	r0, .L39
 390 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 391              	.LVL19:
 392 0040 68B9     		cbnz	r0, .L37
 393              	.L33:
 137:Src/tim.c     ****   {
 138:Src/tim.c     ****     Error_Handler();
 139:Src/tim.c     ****   }
 140:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 394              		.loc 1 140 0
 395 0042 0023     		movs	r3, #0
 396 0044 0093     		str	r3, [sp]
 141:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 397              		.loc 1 141 0
 398 0046 0193     		str	r3, [sp, #4]
 142:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 399              		.loc 1 142 0
 400 0048 6946     		mov	r1, sp
 401 004a 0848     		ldr	r0, .L39
 402 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 403              	.LVL20:
 404 0050 40B9     		cbnz	r0, .L38
 405              	.L31:
 143:Src/tim.c     ****   {
 144:Src/tim.c     ****     Error_Handler();
 145:Src/tim.c     ****   }
 146:Src/tim.c     **** 
 147:Src/tim.c     **** }
 406              		.loc 1 147 0
 407 0052 07B0     		add	sp, sp, #28
 408              	.LCFI14:
 409              		.cfi_remember_state
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0054 5DF804FB 		ldr	pc, [sp], #4
 413              	.L36:
 414              	.LCFI15:
 415              		.cfi_restore_state
 133:Src/tim.c     ****   }
 416              		.loc 1 133 0
 417 0058 FFF7FEFF 		bl	Error_Handler
 418              	.LVL21:
 419 005c E8E7     		b	.L32
 420              	.L37:
ARM GAS  /tmp/cchT1Azd.s 			page 11


 138:Src/tim.c     ****   }
 421              		.loc 1 138 0
 422 005e FFF7FEFF 		bl	Error_Handler
 423              	.LVL22:
 424 0062 EEE7     		b	.L33
 425              	.L38:
 144:Src/tim.c     ****   }
 426              		.loc 1 144 0
 427 0064 FFF7FEFF 		bl	Error_Handler
 428              	.LVL23:
 429              		.loc 1 147 0
 430 0068 F3E7     		b	.L31
 431              	.L40:
 432 006a 00BF     		.align	2
 433              	.L39:
 434 006c 00000000 		.word	htim5
 435 0070 000C0040 		.word	1073744896
 436              		.cfi_endproc
 437              	.LFE69:
 439              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 440              		.align	1
 441              		.global	HAL_TIM_Base_MspInit
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu softvfp
 447              	HAL_TIM_Base_MspInit:
 448              	.LFB70:
 148:Src/tim.c     **** 
 149:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 150:Src/tim.c     **** {
 449              		.loc 1 150 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL24:
 454 0000 00B5     		push	{lr}
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 14, -4
 458 0002 85B0     		sub	sp, sp, #20
 459              	.LCFI17:
 460              		.cfi_def_cfa_offset 24
 151:Src/tim.c     **** 
 152:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 461              		.loc 1 152 0
 462 0004 0368     		ldr	r3, [r0]
 463 0006 B3F1804F 		cmp	r3, #1073741824
 464 000a 0BD0     		beq	.L47
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 155:Src/tim.c     **** 
 156:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 157:Src/tim.c     ****     /* TIM2 clock enable */
 158:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 159:Src/tim.c     **** 
 160:Src/tim.c     ****     /* TIM2 interrupt Init */
ARM GAS  /tmp/cchT1Azd.s 			page 12


 161:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 162:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 163:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 166:Src/tim.c     ****   }
 167:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 465              		.loc 1 167 0
 466 000c 2C4A     		ldr	r2, .L51
 467 000e 9342     		cmp	r3, r2
 468 0010 1CD0     		beq	.L48
 168:Src/tim.c     ****   {
 169:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 170:Src/tim.c     **** 
 171:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 172:Src/tim.c     ****     /* TIM3 clock enable */
 173:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 174:Src/tim.c     **** 
 175:Src/tim.c     ****     /* TIM3 interrupt Init */
 176:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 177:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 178:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 179:Src/tim.c     **** 
 180:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 181:Src/tim.c     ****   }
 182:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM4)
 469              		.loc 1 182 0
 470 0012 2C4A     		ldr	r2, .L51+4
 471 0014 9342     		cmp	r3, r2
 472 0016 2CD0     		beq	.L49
 183:Src/tim.c     ****   {
 184:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 185:Src/tim.c     **** 
 186:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 187:Src/tim.c     ****     /* TIM4 clock enable */
 188:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 189:Src/tim.c     **** 
 190:Src/tim.c     ****     /* TIM4 interrupt Init */
 191:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 192:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM4_IRQn);
 193:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 194:Src/tim.c     **** 
 195:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 196:Src/tim.c     ****   }
 197:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM5)
 473              		.loc 1 197 0
 474 0018 2B4A     		ldr	r2, .L51+8
 475 001a 9342     		cmp	r3, r2
 476 001c 3CD0     		beq	.L50
 477              	.LVL25:
 478              	.L41:
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 0 */
 202:Src/tim.c     ****     /* TIM5 clock enable */
 203:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_ENABLE();
ARM GAS  /tmp/cchT1Azd.s 			page 13


 204:Src/tim.c     **** 
 205:Src/tim.c     ****     /* TIM5 interrupt Init */
 206:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 207:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM5_IRQn);
 208:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 209:Src/tim.c     **** 
 210:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 1 */
 211:Src/tim.c     ****   }
 212:Src/tim.c     **** }
 479              		.loc 1 212 0
 480 001e 05B0     		add	sp, sp, #20
 481              	.LCFI18:
 482              		.cfi_remember_state
 483              		.cfi_def_cfa_offset 4
 484              		@ sp needed
 485 0020 5DF804FB 		ldr	pc, [sp], #4
 486              	.LVL26:
 487              	.L47:
 488              	.LCFI19:
 489              		.cfi_restore_state
 490              	.LBB2:
 158:Src/tim.c     **** 
 491              		.loc 1 158 0
 492 0024 03F50433 		add	r3, r3, #135168
 493 0028 DA69     		ldr	r2, [r3, #28]
 494 002a 42F00102 		orr	r2, r2, #1
 495 002e DA61     		str	r2, [r3, #28]
 496 0030 DB69     		ldr	r3, [r3, #28]
 497 0032 03F00103 		and	r3, r3, #1
 498 0036 0093     		str	r3, [sp]
 499 0038 009B     		ldr	r3, [sp]
 500              	.LBE2:
 161:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 501              		.loc 1 161 0
 502 003a 0022     		movs	r2, #0
 503 003c 1146     		mov	r1, r2
 504 003e 1C20     		movs	r0, #28
 505              	.LVL27:
 506 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 507              	.LVL28:
 162:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 508              		.loc 1 162 0
 509 0044 1C20     		movs	r0, #28
 510 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 511              	.LVL29:
 512 004a E8E7     		b	.L41
 513              	.LVL30:
 514              	.L48:
 515              	.LBB3:
 173:Src/tim.c     **** 
 516              		.loc 1 173 0
 517 004c 1F4B     		ldr	r3, .L51+12
 518 004e DA69     		ldr	r2, [r3, #28]
 519 0050 42F00202 		orr	r2, r2, #2
 520 0054 DA61     		str	r2, [r3, #28]
 521 0056 DB69     		ldr	r3, [r3, #28]
 522 0058 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/cchT1Azd.s 			page 14


 523 005c 0193     		str	r3, [sp, #4]
 524 005e 019B     		ldr	r3, [sp, #4]
 525              	.LBE3:
 176:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 526              		.loc 1 176 0
 527 0060 0022     		movs	r2, #0
 528 0062 1146     		mov	r1, r2
 529 0064 1D20     		movs	r0, #29
 530              	.LVL31:
 531 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 532              	.LVL32:
 177:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 533              		.loc 1 177 0
 534 006a 1D20     		movs	r0, #29
 535 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 536              	.LVL33:
 537 0070 D5E7     		b	.L41
 538              	.LVL34:
 539              	.L49:
 540              	.LBB4:
 188:Src/tim.c     **** 
 541              		.loc 1 188 0
 542 0072 164B     		ldr	r3, .L51+12
 543 0074 DA69     		ldr	r2, [r3, #28]
 544 0076 42F00402 		orr	r2, r2, #4
 545 007a DA61     		str	r2, [r3, #28]
 546 007c DB69     		ldr	r3, [r3, #28]
 547 007e 03F00403 		and	r3, r3, #4
 548 0082 0293     		str	r3, [sp, #8]
 549 0084 029B     		ldr	r3, [sp, #8]
 550              	.LBE4:
 191:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM4_IRQn);
 551              		.loc 1 191 0
 552 0086 0022     		movs	r2, #0
 553 0088 1146     		mov	r1, r2
 554 008a 1E20     		movs	r0, #30
 555              	.LVL35:
 556 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 557              	.LVL36:
 192:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 558              		.loc 1 192 0
 559 0090 1E20     		movs	r0, #30
 560 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 561              	.LVL37:
 562 0096 C2E7     		b	.L41
 563              	.LVL38:
 564              	.L50:
 565              	.LBB5:
 203:Src/tim.c     **** 
 566              		.loc 1 203 0
 567 0098 0C4B     		ldr	r3, .L51+12
 568 009a DA69     		ldr	r2, [r3, #28]
 569 009c 42F00802 		orr	r2, r2, #8
 570 00a0 DA61     		str	r2, [r3, #28]
 571 00a2 DB69     		ldr	r3, [r3, #28]
 572 00a4 03F00803 		and	r3, r3, #8
 573 00a8 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cchT1Azd.s 			page 15


 574 00aa 039B     		ldr	r3, [sp, #12]
 575              	.LBE5:
 206:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM5_IRQn);
 576              		.loc 1 206 0
 577 00ac 0022     		movs	r2, #0
 578 00ae 1146     		mov	r1, r2
 579 00b0 3220     		movs	r0, #50
 580              	.LVL39:
 581 00b2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 582              	.LVL40:
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 583              		.loc 1 207 0
 584 00b6 3220     		movs	r0, #50
 585 00b8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 586              	.LVL41:
 587              		.loc 1 212 0
 588 00bc AFE7     		b	.L41
 589              	.L52:
 590 00be 00BF     		.align	2
 591              	.L51:
 592 00c0 00040040 		.word	1073742848
 593 00c4 00080040 		.word	1073743872
 594 00c8 000C0040 		.word	1073744896
 595 00cc 00100240 		.word	1073876992
 596              		.cfi_endproc
 597              	.LFE70:
 599              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_TIM_Base_MspDeInit
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu softvfp
 607              	HAL_TIM_Base_MspDeInit:
 608              	.LFB71:
 213:Src/tim.c     **** 
 214:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 215:Src/tim.c     **** {
 609              		.loc 1 215 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL42:
 614 0000 08B5     		push	{r3, lr}
 615              	.LCFI20:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 3, -8
 618              		.cfi_offset 14, -4
 216:Src/tim.c     **** 
 217:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 619              		.loc 1 217 0
 620 0002 0368     		ldr	r3, [r0]
 621 0004 B3F1804F 		cmp	r3, #1073741824
 622 0008 09D0     		beq	.L59
 218:Src/tim.c     ****   {
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 220:Src/tim.c     **** 
ARM GAS  /tmp/cchT1Azd.s 			page 16


 221:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 222:Src/tim.c     ****     /* Peripheral clock disable */
 223:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 224:Src/tim.c     **** 
 225:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 226:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 227:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 228:Src/tim.c     **** 
 229:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 230:Src/tim.c     ****   }
 231:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 623              		.loc 1 231 0
 624 000a 184A     		ldr	r2, .L63
 625 000c 9342     		cmp	r3, r2
 626 000e 0FD0     		beq	.L60
 232:Src/tim.c     ****   {
 233:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 234:Src/tim.c     **** 
 235:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 236:Src/tim.c     ****     /* Peripheral clock disable */
 237:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 238:Src/tim.c     **** 
 239:Src/tim.c     ****     /* TIM3 interrupt Deinit */
 240:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 241:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 242:Src/tim.c     **** 
 243:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 244:Src/tim.c     ****   }
 245:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM4)
 627              		.loc 1 245 0
 628 0010 174A     		ldr	r2, .L63+4
 629 0012 9342     		cmp	r3, r2
 630 0014 16D0     		beq	.L61
 246:Src/tim.c     ****   {
 247:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 248:Src/tim.c     **** 
 249:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 250:Src/tim.c     ****     /* Peripheral clock disable */
 251:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 252:Src/tim.c     **** 
 253:Src/tim.c     ****     /* TIM4 interrupt Deinit */
 254:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM4_IRQn);
 255:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 256:Src/tim.c     **** 
 257:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 258:Src/tim.c     ****   }
 259:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM5)
 631              		.loc 1 259 0
 632 0016 174A     		ldr	r2, .L63+8
 633 0018 9342     		cmp	r3, r2
 634 001a 1DD0     		beq	.L62
 635              	.LVL43:
 636              	.L53:
 260:Src/tim.c     ****   {
 261:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 0 */
 262:Src/tim.c     **** 
 263:Src/tim.c     ****   /* USER CODE END TIM5_MspDeInit 0 */
ARM GAS  /tmp/cchT1Azd.s 			page 17


 264:Src/tim.c     ****     /* Peripheral clock disable */
 265:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_DISABLE();
 266:Src/tim.c     **** 
 267:Src/tim.c     ****     /* TIM5 interrupt Deinit */
 268:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM5_IRQn);
 269:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 1 */
 270:Src/tim.c     **** 
 271:Src/tim.c     ****   /* USER CODE END TIM5_MspDeInit 1 */
 272:Src/tim.c     ****   }
 273:Src/tim.c     **** } 
 637              		.loc 1 273 0
 638 001c 08BD     		pop	{r3, pc}
 639              	.LVL44:
 640              	.L59:
 223:Src/tim.c     **** 
 641              		.loc 1 223 0
 642 001e 164A     		ldr	r2, .L63+12
 643 0020 D369     		ldr	r3, [r2, #28]
 644 0022 23F00103 		bic	r3, r3, #1
 645 0026 D361     		str	r3, [r2, #28]
 226:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 646              		.loc 1 226 0
 647 0028 1C20     		movs	r0, #28
 648              	.LVL45:
 649 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 650              	.LVL46:
 651 002e F5E7     		b	.L53
 652              	.LVL47:
 653              	.L60:
 237:Src/tim.c     **** 
 654              		.loc 1 237 0
 655 0030 02F50332 		add	r2, r2, #134144
 656 0034 D369     		ldr	r3, [r2, #28]
 657 0036 23F00203 		bic	r3, r3, #2
 658 003a D361     		str	r3, [r2, #28]
 240:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 659              		.loc 1 240 0
 660 003c 1D20     		movs	r0, #29
 661              	.LVL48:
 662 003e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 663              	.LVL49:
 664 0042 EBE7     		b	.L53
 665              	.LVL50:
 666              	.L61:
 251:Src/tim.c     **** 
 667              		.loc 1 251 0
 668 0044 02F50232 		add	r2, r2, #133120
 669 0048 D369     		ldr	r3, [r2, #28]
 670 004a 23F00403 		bic	r3, r3, #4
 671 004e D361     		str	r3, [r2, #28]
 254:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 672              		.loc 1 254 0
 673 0050 1E20     		movs	r0, #30
 674              	.LVL51:
 675 0052 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 676              	.LVL52:
 677 0056 E1E7     		b	.L53
ARM GAS  /tmp/cchT1Azd.s 			page 18


 678              	.LVL53:
 679              	.L62:
 265:Src/tim.c     **** 
 680              		.loc 1 265 0
 681 0058 02F50132 		add	r2, r2, #132096
 682 005c D369     		ldr	r3, [r2, #28]
 683 005e 23F00803 		bic	r3, r3, #8
 684 0062 D361     		str	r3, [r2, #28]
 268:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 1 */
 685              		.loc 1 268 0
 686 0064 3220     		movs	r0, #50
 687              	.LVL54:
 688 0066 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 689              	.LVL55:
 690              		.loc 1 273 0
 691 006a D7E7     		b	.L53
 692              	.L64:
 693              		.align	2
 694              	.L63:
 695 006c 00040040 		.word	1073742848
 696 0070 00080040 		.word	1073743872
 697 0074 000C0040 		.word	1073744896
 698 0078 00100240 		.word	1073876992
 699              		.cfi_endproc
 700              	.LFE71:
 702              		.comm	htim5,64,4
 703              		.comm	htim4,64,4
 704              		.comm	htim3,64,4
 705              		.comm	htim2,64,4
 706              		.text
 707              	.Letext0:
 708              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 709              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 710              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 711              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 712              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 713              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 714              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 715              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 716              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 717              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 718              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 719              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 720              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 721              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 722              		.file 16 "Inc/tim.h"
 723              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 724              		.file 18 "Inc/main.h"
ARM GAS  /tmp/cchT1Azd.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/cchT1Azd.s:16     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cchT1Azd.s:23     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cchT1Azd.s:117    .text.MX_TIM2_Init:0000000000000068 $d
                            *COM*:0000000000000040 htim2
     /tmp/cchT1Azd.s:122    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/cchT1Azd.s:129    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/cchT1Azd.s:222    .text.MX_TIM3_Init:0000000000000068 $d
                            *COM*:0000000000000040 htim3
     /tmp/cchT1Azd.s:228    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/cchT1Azd.s:235    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/cchT1Azd.s:328    .text.MX_TIM4_Init:0000000000000068 $d
                            *COM*:0000000000000040 htim4
     /tmp/cchT1Azd.s:334    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/cchT1Azd.s:341    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/cchT1Azd.s:434    .text.MX_TIM5_Init:000000000000006c $d
                            *COM*:0000000000000040 htim5
     /tmp/cchT1Azd.s:440    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cchT1Azd.s:447    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cchT1Azd.s:592    .text.HAL_TIM_Base_MspInit:00000000000000c0 $d
     /tmp/cchT1Azd.s:600    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cchT1Azd.s:607    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cchT1Azd.s:695    .text.HAL_TIM_Base_MspDeInit:000000000000006c $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
