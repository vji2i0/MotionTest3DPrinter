ARM GAS  /tmp/ccfJ8QVN.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Interface_LCD.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.wrongInterfaceLine_LCD,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	wrongInterfaceLine_LCD:
  23              	.LFB1:
  24              		.file 1 "Src/LCD/Interface_LCD.c"
   1:Src/LCD/Interface_LCD.c **** #include "Interface_LCD.h"
   2:Src/LCD/Interface_LCD.c **** #include "Driver_LCD.h"
   3:Src/LCD/Interface_LCD.c **** #include "CharacterConverter_LCD.h"
   4:Src/LCD/Interface_LCD.c **** #include "stdint.h"
   5:Src/LCD/Interface_LCD.c **** #include <wchar.h>
   6:Src/LCD/Interface_LCD.c **** #include "stdbool.h"
   7:Src/LCD/Interface_LCD.c **** 
   8:Src/LCD/Interface_LCD.c **** void create_LCD(void)
   9:Src/LCD/Interface_LCD.c **** {
  10:Src/LCD/Interface_LCD.c ****     return_home_LCD();
  11:Src/LCD/Interface_LCD.c ****     clear_display_LCD();
  12:Src/LCD/Interface_LCD.c ****     set_dataLenght_numberOfLines_fontType_LCD();
  13:Src/LCD/Interface_LCD.c ****     set_do_not_display_cursor_LCD();
  14:Src/LCD/Interface_LCD.c ****     set_cursor_moving_to_the_right_LCD();
  15:Src/LCD/Interface_LCD.c **** }
  16:Src/LCD/Interface_LCD.c **** 
  17:Src/LCD/Interface_LCD.c **** static _Bool wrongInterfaceLine_LCD(int line)
  18:Src/LCD/Interface_LCD.c **** {
  25              		.loc 1 18 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  19:Src/LCD/Interface_LCD.c ****     if(line > NUMBEROFLINES_INTERFACE_LCD)
  31              		.loc 1 19 0
  32 0000 0428     		cmp	r0, #4
  33 0002 05DC     		bgt	.L3
  20:Src/LCD/Interface_LCD.c ****         return true;
  21:Src/LCD/Interface_LCD.c ****     if(line < 1)
  34              		.loc 1 21 0
  35 0004 0028     		cmp	r0, #0
  36 0006 01DD     		ble	.L5
  22:Src/LCD/Interface_LCD.c ****         return true;
ARM GAS  /tmp/ccfJ8QVN.s 			page 2


  23:Src/LCD/Interface_LCD.c ****     return false;
  37              		.loc 1 23 0
  38 0008 0020     		movs	r0, #0
  39              	.LVL1:
  24:Src/LCD/Interface_LCD.c **** }
  40              		.loc 1 24 0
  41 000a 7047     		bx	lr
  42              	.LVL2:
  43              	.L5:
  22:Src/LCD/Interface_LCD.c ****         return true;
  44              		.loc 1 22 0
  45 000c 0120     		movs	r0, #1
  46              	.LVL3:
  47 000e 7047     		bx	lr
  48              	.LVL4:
  49              	.L3:
  20:Src/LCD/Interface_LCD.c ****         return true;
  50              		.loc 1 20 0
  51 0010 0120     		movs	r0, #1
  52              	.LVL5:
  53 0012 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE1:
  57              		.section	.text.create_LCD,"ax",%progbits
  58              		.align	1
  59              		.global	create_LCD
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	create_LCD:
  66              	.LFB0:
   9:Src/LCD/Interface_LCD.c ****     return_home_LCD();
  67              		.loc 1 9 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 08B5     		push	{r3, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
  10:Src/LCD/Interface_LCD.c ****     clear_display_LCD();
  76              		.loc 1 10 0
  77 0002 FFF7FEFF 		bl	return_home_LCD
  78              	.LVL6:
  11:Src/LCD/Interface_LCD.c ****     set_dataLenght_numberOfLines_fontType_LCD();
  79              		.loc 1 11 0
  80 0006 FFF7FEFF 		bl	clear_display_LCD
  81              	.LVL7:
  12:Src/LCD/Interface_LCD.c ****     set_do_not_display_cursor_LCD();
  82              		.loc 1 12 0
  83 000a FFF7FEFF 		bl	set_dataLenght_numberOfLines_fontType_LCD
  84              	.LVL8:
  13:Src/LCD/Interface_LCD.c ****     set_cursor_moving_to_the_right_LCD();
  85              		.loc 1 13 0
  86 000e FFF7FEFF 		bl	set_do_not_display_cursor_LCD
ARM GAS  /tmp/ccfJ8QVN.s 			page 3


  87              	.LVL9:
  14:Src/LCD/Interface_LCD.c **** }
  88              		.loc 1 14 0
  89 0012 FFF7FEFF 		bl	set_cursor_moving_to_the_right_LCD
  90              	.LVL10:
  15:Src/LCD/Interface_LCD.c **** 
  91              		.loc 1 15 0
  92 0016 08BD     		pop	{r3, pc}
  93              		.cfi_endproc
  94              	.LFE0:
  96              		.section	.text.printLine_LCD,"ax",%progbits
  97              		.align	1
  98              		.global	printLine_LCD
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	printLine_LCD:
 105              	.LFB2:
  25:Src/LCD/Interface_LCD.c **** 
  26:Src/LCD/Interface_LCD.c **** void printLine_LCD(int line, const wchar_t* textToPrint)
  27:Src/LCD/Interface_LCD.c **** {
 106              		.loc 1 27 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              	.LVL11:
 111 0000 38B5     		push	{r3, r4, r5, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 3, -16
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 118 0002 0446     		mov	r4, r0
 119 0004 0D46     		mov	r5, r1
  28:Src/LCD/Interface_LCD.c ****     if(wrongInterfaceLine_LCD(line))
 120              		.loc 1 28 0
 121 0006 FFF7FEFF 		bl	wrongInterfaceLine_LCD
 122              	.LVL12:
 123 000a 00B1     		cbz	r0, .L13
 124              	.LVL13:
 125              	.L8:
  29:Src/LCD/Interface_LCD.c ****         return;
  30:Src/LCD/Interface_LCD.c **** 
  31:Src/LCD/Interface_LCD.c ****     move_to_line_LCD(line);
  32:Src/LCD/Interface_LCD.c **** 
  33:Src/LCD/Interface_LCD.c ****     int colomn;
  34:Src/LCD/Interface_LCD.c ****     for(colomn = 1; colomn <= LINELENGTH_INTERFACE_LCD; colomn++)
  35:Src/LCD/Interface_LCD.c ****     {
  36:Src/LCD/Interface_LCD.c ****         write_character(convertCharacter_LCD(textToPrint[colomn-1]));
  37:Src/LCD/Interface_LCD.c ****     }
  38:Src/LCD/Interface_LCD.c **** }
 126              		.loc 1 38 0
 127 000c 38BD     		pop	{r3, r4, r5, pc}
 128              	.LVL14:
 129              	.L13:
ARM GAS  /tmp/ccfJ8QVN.s 			page 4


  31:Src/LCD/Interface_LCD.c **** 
 130              		.loc 1 31 0
 131 000e 2046     		mov	r0, r4
 132 0010 FFF7FEFF 		bl	move_to_line_LCD
 133              	.LVL15:
  34:Src/LCD/Interface_LCD.c ****     {
 134              		.loc 1 34 0
 135 0014 0124     		movs	r4, #1
 136              	.LVL16:
 137 0016 09E0     		b	.L10
 138              	.LVL17:
 139              	.L11:
  36:Src/LCD/Interface_LCD.c ****     }
 140              		.loc 1 36 0 discriminator 3
 141 0018 04F18043 		add	r3, r4, #1073741824
 142 001c 013B     		subs	r3, r3, #1
 143 001e 55F82300 		ldr	r0, [r5, r3, lsl #2]
 144 0022 FFF7FEFF 		bl	convertCharacter_LCD
 145              	.LVL18:
 146 0026 FFF7FEFF 		bl	write_character
 147              	.LVL19:
  34:Src/LCD/Interface_LCD.c ****     {
 148              		.loc 1 34 0 discriminator 3
 149 002a 0134     		adds	r4, r4, #1
 150              	.LVL20:
 151              	.L10:
  34:Src/LCD/Interface_LCD.c ****     {
 152              		.loc 1 34 0 is_stmt 0 discriminator 1
 153 002c 142C     		cmp	r4, #20
 154 002e F3DD     		ble	.L11
 155 0030 ECE7     		b	.L8
 156              		.cfi_endproc
 157              	.LFE2:
 159              		.text
 160              	.Letext0:
 161              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 162              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 163              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 164              		.file 5 "/usr/arm-none-eabi/include/sys/reent.h"
 165              		.file 6 "Inc/LCD/Driver_LCD.h"
 166              		.file 7 "Inc/LCD/CharacterConverter_LCD.h"
 167              		.file 8 "Inc/LCD/Interface_LCD.h"
ARM GAS  /tmp/ccfJ8QVN.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Interface_LCD.c
     /tmp/ccfJ8QVN.s:16     .text.wrongInterfaceLine_LCD:0000000000000000 $t
     /tmp/ccfJ8QVN.s:22     .text.wrongInterfaceLine_LCD:0000000000000000 wrongInterfaceLine_LCD
     /tmp/ccfJ8QVN.s:58     .text.create_LCD:0000000000000000 $t
     /tmp/ccfJ8QVN.s:65     .text.create_LCD:0000000000000000 create_LCD
     /tmp/ccfJ8QVN.s:97     .text.printLine_LCD:0000000000000000 $t
     /tmp/ccfJ8QVN.s:104    .text.printLine_LCD:0000000000000000 printLine_LCD

UNDEFINED SYMBOLS
return_home_LCD
clear_display_LCD
set_dataLenght_numberOfLines_fontType_LCD
set_do_not_display_cursor_LCD
set_cursor_moving_to_the_right_LCD
move_to_line_LCD
convertCharacter_LCD
write_character
