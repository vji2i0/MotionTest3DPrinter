ARM GAS  /tmp/ccTBpncU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ff.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mem_cpy,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	mem_cpy:
  23              	.LFB66:
  24              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - FAT file system module  R0.11                 (C)ChaN, 2015
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is a free software that opened under license policy of
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / following conditions.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2015, ChaN, all right reserved.
   8:Middlewares/Third_Party/FatFs/src/ff.c **** /
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  11:Middlewares/Third_Party/FatFs/src/ff.c **** /
  12:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  13:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 26,'06 R0.00  Prototype.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /
  19:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 29,'06 R0.01  First stable version.
  20:Middlewares/Third_Party/FatFs/src/ff.c **** /
  21:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 01,'06 R0.02  Added FAT12 support.
  22:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Removed unbuffered mode.
  23:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a problem on small (<32M) partition.
  24:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /
  26:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 22,'06 R0.03  Added f_rename().
  27:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  28:Middlewares/Third_Party/FatFs/src/ff.c **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  29:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  30:Middlewares/Third_Party/FatFs/src/ff.c **** /
  31:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 04,'07 R0.04  Supported multiple drive system.
  32:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some interfaces for multiple drive system.
  33:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_mountdrv() to f_mount().
  34:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_mkfs().
ARM GAS  /tmp/ccTBpncU.s 			page 2


  35:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a capability of extending file size to f_lseek().
  37:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added minimization level 3.
  38:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed an endian sensitive code in f_mkfs().
  39:Middlewares/Third_Party/FatFs/src/ff.c **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  40:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added FSINFO support.
  41:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  42:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed short seek (<= csize) collapses the file object.
  43:Middlewares/Third_Party/FatFs/src/ff.c **** /
  44:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  45:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSINFO.
  46:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  47:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  48:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed off by one error at FAT sub-type determination.
  49:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed btr in f_read() can be mistruncated.
  50:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed cached sector is not flushed when create and close without write.
  51:Middlewares/Third_Party/FatFs/src/ff.c **** /
  52:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  53:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  54:Middlewares/Third_Party/FatFs/src/ff.c **** /
  55:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  56:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added long file name feature.
  57:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple code page feature.
  58:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added re-entrancy for multitask operation.
  59:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added auto cluster size selection to f_mkfs().
  60:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added rewind option to f_readdir().
  61:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed result code of critical errors.
  62:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Renamed string functions to avoid name collision.
  63:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  64:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple sector size feature.
  65:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  66:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed wrong cache control in f_lseek().
  67:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added relative path feature.
  68:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_chdir() and f_chdrive().
  69:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added proper case conversion to extended character.
  70:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  71:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() fails to remove a sub-directory on _FS_RPATH.
  72:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed name matching error on the 13 character boundary.
  73:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option, _LFN_UNICODE.
  74:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  75:Middlewares/Third_Party/FatFs/src/ff.c **** /
  76:Middlewares/Third_Party/FatFs/src/ff.c **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  77:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added file lock feature. (_FS_SHARE)
  78:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added fast seek feature. (_USE_FASTSEEK)
  79:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some types on the API, XCHAR->TCHAR.
  80:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed .fname in the FILINFO structure on Unicode cfg.
  81:Middlewares/Third_Party/FatFs/src/ff.c **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  82:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 16,'10 R0.08a Added f_getcwd().
  83:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added sector erase feature. (_USE_ERASE)
  84:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Moved file lock semaphore table from fs object to the bss.
  85:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  86:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  87:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  88:Middlewares/Third_Party/FatFs/src/ff.c **** /                   f_lseek() reports required table size on creating CLMP.
  89:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Extended format syntax of f_printf().
  90:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Ignores duplicated directory separators in given path name.
  91:Middlewares/Third_Party/FatFs/src/ff.c **** /
ARM GAS  /tmp/ccTBpncU.s 			page 3


  92:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to complete the multiple partition feature
  93:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_fdisk().
  94:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 27,'12 R0.09a Changed f_open() and f_opendir() reject null object pointer to avoid crash.
  95:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option name _FS_SHARE to _FS_LOCK.
  96:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed assertion failure due to OS/2 EA on FAT12/16 volume.
  97:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 24,'13 R0.09b Added f_setlabel() and f_getlabel().
  98:Middlewares/Third_Party/FatFs/src/ff.c **** /
  99:Middlewares/Third_Party/FatFs/src/ff.c **** / Oct 02,'13 R0.10  Added selection of character encoding on the file. (_STRF_ENCODE)
 100:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_closedir().
 101:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced full FAT scan for f_getfree(). (_FS_NOFSINFO)
 102:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced mount feature with changes of f_mount().
 103:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved behavior of volume auto detection.
 104:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved write throughput of f_puts() and f_printf().
 105:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed argument of f_chdrive(), f_mkfs(), disk_read() and disk_write().
 106:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_write() can be truncated when the file size is close to 4GB.
 107:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_open(), f_mkdir() and f_setlabel() can return incorrect error code.
 108:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'14 R0.10a Added arbitrary strings as drive number in the path name. (_STR_VOLUME_ID)
 109:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option of minimum sector size. (_MIN_SS)
 110:Middlewares/Third_Party/FatFs/src/ff.c **** /                   2nd argument of f_rename() can have a drive number and it will be ignored.
 111:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mount() with forced mount fails when drive number is >= 1.
 112:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_close() invalidates the file object without volume lock.
 113:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_closedir() returns but the volume lock is left acquired.
 114:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed creation of an entry with LFN fails on too many SFN collisions.
 115:Middlewares/Third_Party/FatFs/src/ff.c **** / May 19,'14 R0.10b Fixed a hard error in the disk I/O layer can collapse the directory entry.
 116:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed LFN entry is not deleted on delete/rename an object with lossy converted 
 117:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov  9,'14 R0.10c Added a configuration option for the platforms without RTC. (_FS_NORTC)
 118:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed volume label created by Mac OS X cannot be retrieved with f_getlabel(). (
 119:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a potential problem of FAT access that can appear on disk error.
 120:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed null pointer dereference on attempting to delete the root direcotry. (app
 121:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 02,'15 R0.11  Added f_findfirst() and f_findnext(). (_USE_FIND)
 122:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() does not remove cluster chain of the file. (appeared at R0.10c
 123:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed _FS_NORTC option does not work properly. (appeared at R0.10c)
 124:Middlewares/Third_Party/FatFs/src/ff.c **** /---------------------------------------------------------------------------*/
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 
 126:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
 127:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of disk I/O functions */
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 130:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 131:Middlewares/Third_Party/FatFs/src/ff.c **** 
 132:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 134:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 
 136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 32020	/* Revision ID */
 137:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
 138:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** 
 141:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 144:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 146:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 147:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 148:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  /tmp/ccTBpncU.s 			page 4


 149:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 150:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 152:Middlewares/Third_Party/FatFs/src/ff.c **** 
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 
 156:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 157:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 158:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 159:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 160:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 161:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 
 167:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp feature */
 168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 169:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 170:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 171:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 172:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 178:Middlewares/Third_Party/FatFs/src/ff.c **** /* File access control feature */
 179:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 180:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 181:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 182:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 183:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 184:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, directory (0:root) */
 186:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD idx;		/* Object ID 3, directory index */
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 188:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 189:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 
 193:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS extend character conversion table */
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 198:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 199:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 200:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 201:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 202:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 203:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 204:Middlewares/Third_Party/FatFs/src/ff.c **** 
 205:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
ARM GAS  /tmp/ccTBpncU.s 			page 5


 206:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 209:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 210:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
 211:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 213:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
 214:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 215:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 216:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
 220:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
 221:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 
 223:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 224:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 225:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 226:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 227:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 230:Middlewares/Third_Party/FatFs/src/ff.c **** 
 231:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 232:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 233:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 
 238:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 241:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 
 245:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 246:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 247:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 250:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 253:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 254:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 259:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 260:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 261:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 262:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
ARM GAS  /tmp/ccTBpncU.s 			page 6


 263:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 264:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 265:Middlewares/Third_Party/FatFs/src/ff.c **** 
 266:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 270:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 276:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 278:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 283:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 284:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 286:Middlewares/Third_Party/FatFs/src/ff.c **** 
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 290:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 292:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 297:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 300:Middlewares/Third_Party/FatFs/src/ff.c **** 
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 306:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 310:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 312:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 313:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 314:Middlewares/Third_Party/FatFs/src/ff.c **** 
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 318:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 319:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
ARM GAS  /tmp/ccTBpncU.s 			page 7


 320:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 321:Middlewares/Third_Party/FatFs/src/ff.c **** 
 322:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 323:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 324:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 325:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 326:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 327:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 331:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 333:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 334:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 339:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 340:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 341:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 346:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 347:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 348:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 349:Middlewares/Third_Party/FatFs/src/ff.c **** 
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 353:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 354:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 355:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 360:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 361:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 362:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 363:Middlewares/Third_Party/FatFs/src/ff.c **** 
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 367:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 368:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 369:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 374:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 375:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 376:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
ARM GAS  /tmp/ccTBpncU.s 			page 8


 377:Middlewares/Third_Party/FatFs/src/ff.c **** 
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot use LFN feature without valid code page.
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 383:Middlewares/Third_Party/FatFs/src/ff.c **** 
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 386:Middlewares/Third_Party/FatFs/src/ff.c **** 
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 388:Middlewares/Third_Party/FatFs/src/ff.c **** 
 389:Middlewares/Third_Party/FatFs/src/ff.c **** 
 390:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 392:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 394:Middlewares/Third_Party/FatFs/src/ff.c **** 
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S		/* Code page is DBCS */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** 
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 402:Middlewares/Third_Party/FatFs/src/ff.c **** 
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 408:Middlewares/Third_Party/FatFs/src/ff.c **** 
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** 
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 413:Middlewares/Third_Party/FatFs/src/ff.c **** 
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** 
 416:Middlewares/Third_Party/FatFs/src/ff.c **** 
 417:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of name status byte in fn[] */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** 
 426:Middlewares/Third_Party/FatFs/src/ff.c **** 
 427:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT sub-type boundaries (Differ from specs but correct for real DOS/Windows) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define MIN_FAT16	4086U	/* Minimum number of clusters as FAT16 */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MIN_FAT32	65526U	/* Minimum number of clusters as FAT32 */
 430:Middlewares/Third_Party/FatFs/src/ff.c **** 
 431:Middlewares/Third_Party/FatFs/src/ff.c **** 
 432:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the members in the FAT structures as byte array instead of
 433:Middlewares/Third_Party/FatFs/src/ff.c **** / structure member because the structure is not binary compatible between
ARM GAS  /tmp/ccTBpncU.s 			page 9


 434:Middlewares/Third_Party/FatFs/src/ff.c **** / different platforms */
 435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_jmpBoot			0		/* x86 jump instruction (3) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (2) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (1) */
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (2) */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FAT copies (1) */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Number of root directory entries for FAT12/16 (2) */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size [sector] (2) */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor (1) */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size [sector] (2) */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size [sector] (2) */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads (2) */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Number of special hidden sectors (4) */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size [sector] (4) */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number (2) */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (1) */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (4) */
 453:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label (8) */
 454:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type (1) */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT size [sector] (4) */
 456:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags		40		/* Extended flags (2) */
 457:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer			42		/* File system version (2) */
 458:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus		44		/* Root directory first cluster (4) */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo			48		/* Offset of FSINFO sector (2) */
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec		50		/* Offset of backup boot sector (2) */
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* Physical drive number (2) */
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* Extended boot signature (1) */
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* Volume serial number (4) */
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* Volume label (8) */
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* File system type (1) */
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FSI: Leading signature (4) */
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FSI: Structure signature (4) */
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FSI: Number of free clusters (4) */
 469:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FSI: Last allocated cluster (4) */
 470:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Partition table offset (2) */
 471:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (2) */
 473:Middlewares/Third_Party/FatFs/src/ff.c **** 
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11) */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (1) */
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (1) */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTimeTenth	13		/* Created time sub-second (1) */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (2) */
 479:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtDate			16		/* Created date (2) */
 480:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (2) */
 481:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (2) */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtTime			22		/* Modified time (2) */
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtDate			24		/* Modified date (2) */
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (2) */
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (4) */
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN entry order and LLE flag (1) */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN attribute (1) */
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN type (1) */
 489:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* Sum of corresponding SFN entry */
 490:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* Must be zero (0) */
ARM GAS  /tmp/ccTBpncU.s 			page 10


 491:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_DIRE				32		/* Size of a directory entry */
 492:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark at DIR_Name[0] */
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 495:Middlewares/Third_Party/FatFs/src/ff.c **** 
 496:Middlewares/Third_Party/FatFs/src/ff.c **** 
 497:Middlewares/Third_Party/FatFs/src/ff.c **** 
 498:Middlewares/Third_Party/FatFs/src/ff.c **** 
 499:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 500:Middlewares/Third_Party/FatFs/src/ff.c **** /* Module private work area                                   */
 501:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 502:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Uninitialized variables with static duration are
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /  guaranteed zero/null at start-up. If not, either the linker
 504:Middlewares/Third_Party/FatFs/src/ff.c **** /  or start-up routine being used is out of ANSI-C standard.
 505:Middlewares/Third_Party/FatFs/src/ff.c **** */
 506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 9
 508:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 509:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 510:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 
 513:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
 514:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 515:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 518:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 519:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 521:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0			/* Non LFN feature */
 522:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 523:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 524:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 525:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 526:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 527:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN setting
 528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 529:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1			/* LFN feature with static working buffer */
 530:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 533:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 534:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR lbuf[_MAX_LFN + 1]
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 537:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 539:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR *lfn
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); if (!lfn) LEAVE_FF((dobj).fs, FR_N
 541:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()			ff_memfree(lfn)
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 543:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 546:Middlewares/Third_Party/FatFs/src/ff.c **** 
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
ARM GAS  /tmp/ccTBpncU.s 			page 11


 548:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for extended characters */
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 550:Middlewares/Third_Party/FatFs/src/ff.c **** 
 551:Middlewares/Third_Party/FatFs/src/ff.c **** 
 552:Middlewares/Third_Party/FatFs/src/ff.c **** 
 553:Middlewares/Third_Party/FatFs/src/ff.c **** 
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** 
 556:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 557:Middlewares/Third_Party/FatFs/src/ff.c **** 
 558:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 559:Middlewares/Third_Party/FatFs/src/ff.c **** 
 560:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 561:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (FATFS* fs, DWORD clst);
 562:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (FATFS* fs,	DWORD clst);
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 565:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (FATFS* fs,	DWORD clst,	DWORD val);
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 567:Middlewares/Third_Party/FatFs/src/ff.c **** 
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 569:Middlewares/Third_Party/FatFs/src/ff.c **** static void gen_numname (BYTE* dst, const BYTE* src, const WCHAR* lfn, UINT seq);
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_USE_LFN */
 571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 572:Middlewares/Third_Party/FatFs/src/ff.c **** 
 573:Middlewares/Third_Party/FatFs/src/ff.c **** 
 574:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 575:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 577:Middlewares/Third_Party/FatFs/src/ff.c **** 
 578:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 579:Middlewares/Third_Party/FatFs/src/ff.c **** static
 580:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  25              		.loc 1 580 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 581:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 583:Middlewares/Third_Party/FatFs/src/ff.c **** 
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #if _WORD_ACCESS == 1
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt >= sizeof (int)) {
 586:Middlewares/Third_Party/FatFs/src/ff.c **** 		*(int*)d = *(int*)s;
 587:Middlewares/Third_Party/FatFs/src/ff.c **** 		d += sizeof (int); s += sizeof (int);
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 		cnt -= sizeof (int);
 589:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  31              		.loc 1 591 0
  32 0000 04E0     		b	.L2
  33              	.LVL1:
  34              	.L3:
 592:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  35              		.loc 1 592 0
  36 0002 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccTBpncU.s 			page 12


  37 0004 0270     		strb	r2, [r0]
  38 0006 0131     		adds	r1, r1, #1
  39              	.LVL2:
  40 0008 0130     		adds	r0, r0, #1
  41              	.LVL3:
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  42              		.loc 1 591 0
  43 000a 1A46     		mov	r2, r3
  44              	.LVL4:
  45              	.L2:
  46 000c 531E     		subs	r3, r2, #1
  47              	.LVL5:
  48 000e 002A     		cmp	r2, #0
  49 0010 F7D1     		bne	.L3
 593:Middlewares/Third_Party/FatFs/src/ff.c **** }
  50              		.loc 1 593 0
  51 0012 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE66:
  55              		.section	.text.mem_set,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	mem_set:
  63              	.LFB67:
 594:Middlewares/Third_Party/FatFs/src/ff.c **** 
 595:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory */
 596:Middlewares/Third_Party/FatFs/src/ff.c **** static
 597:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
  64              		.loc 1 597 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL6:
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  70              		.loc 1 600 0
  71 0000 02E0     		b	.L5
  72              	.LVL7:
  73              	.L6:
 601:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  74              		.loc 1 601 0
  75 0002 0170     		strb	r1, [r0]
  76 0004 0130     		adds	r0, r0, #1
  77              	.LVL8:
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  78              		.loc 1 600 0
  79 0006 1A46     		mov	r2, r3
  80              	.LVL9:
  81              	.L5:
  82 0008 531E     		subs	r3, r2, #1
  83              	.LVL10:
  84 000a 002A     		cmp	r2, #0
ARM GAS  /tmp/ccTBpncU.s 			page 13


  85 000c F9D1     		bne	.L6
 602:Middlewares/Third_Party/FatFs/src/ff.c **** }
  86              		.loc 1 602 0
  87 000e 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE67:
  91              		.section	.text.mem_cmp,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu softvfp
  98              	mem_cmp:
  99              	.LFB68:
 603:Middlewares/Third_Party/FatFs/src/ff.c **** 
 604:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory to memory */
 605:Middlewares/Third_Party/FatFs/src/ff.c **** static
 606:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 100              		.loc 1 606 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.LVL11:
 106 0000 70B4     		push	{r4, r5, r6}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 6, -4
 112 0002 0346     		mov	r3, r0
 113              	.LVL12:
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 608:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 114              		.loc 1 608 0
 115 0004 0020     		movs	r0, #0
 116              	.LVL13:
 609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 610:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 117              		.loc 1 610 0
 118 0006 01E0     		b	.L9
 119              	.LVL14:
 120              	.L10:
 121 0008 2946     		mov	r1, r5
 122 000a 3346     		mov	r3, r6
 123              	.LVL15:
 124              	.L9:
 125              		.loc 1 610 0 is_stmt 0 discriminator 2
 126 000c 541E     		subs	r4, r2, #1
 127              	.LVL16:
 128 000e 32B1     		cbz	r2, .L7
 129              		.loc 1 610 0 discriminator 1
 130 0010 5E1C     		adds	r6, r3, #1
 131              	.LVL17:
 132 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 133              	.LVL18:
 134 0014 4D1C     		adds	r5, r1, #1
ARM GAS  /tmp/ccTBpncU.s 			page 14


 135              	.LVL19:
 136 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 137              	.LVL20:
 138 0018 2246     		mov	r2, r4
 139 001a C01A     		subs	r0, r0, r3
 140              	.LVL21:
 141 001c F4D0     		beq	.L10
 142              	.LVL22:
 143              	.L7:
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 612:Middlewares/Third_Party/FatFs/src/ff.c **** }
 144              		.loc 1 612 0 is_stmt 1
 145 001e 70BC     		pop	{r4, r5, r6}
 146              	.LCFI1:
 147              		.cfi_restore 6
 148              		.cfi_restore 5
 149              		.cfi_restore 4
 150              		.cfi_def_cfa_offset 0
 151              	.LVL23:
 152 0020 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE68:
 156              		.section	.text.chk_chr,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	chk_chr:
 164              	.LFB69:
 613:Middlewares/Third_Party/FatFs/src/ff.c **** 
 614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 615:Middlewares/Third_Party/FatFs/src/ff.c **** static
 616:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {
 165              		.loc 1 616 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL24:
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 171              		.loc 1 617 0
 172 0000 00E0     		b	.L13
 173              	.L15:
 174              		.loc 1 617 0 is_stmt 0 discriminator 3
 175 0002 0130     		adds	r0, r0, #1
 176              	.LVL25:
 177              	.L13:
 178              		.loc 1 617 0 discriminator 1
 179 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 180 0006 0BB1     		cbz	r3, .L14
 181              		.loc 1 617 0 discriminator 2
 182 0008 8B42     		cmp	r3, r1
 183 000a FAD1     		bne	.L15
 184              	.L14:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 619:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTBpncU.s 			page 15


 185              		.loc 1 619 0 is_stmt 1
 186 000c 1846     		mov	r0, r3
 187              	.LVL26:
 188 000e 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE69:
 192              		.section	.text.chk_lock,"ax",%progbits
 193              		.align	1
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	chk_lock:
 200              	.LFB70:
 620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** 
 623:Middlewares/Third_Party/FatFs/src/ff.c **** 
 624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 625:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 626:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 627:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 628:Middlewares/Third_Party/FatFs/src/ff.c **** static
 629:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 631:Middlewares/Third_Party/FatFs/src/ff.c **** )
 632:Middlewares/Third_Party/FatFs/src/ff.c **** {
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_req_grant(fs->sobj);
 634:Middlewares/Third_Party/FatFs/src/ff.c **** }
 635:Middlewares/Third_Party/FatFs/src/ff.c **** 
 636:Middlewares/Third_Party/FatFs/src/ff.c **** 
 637:Middlewares/Third_Party/FatFs/src/ff.c **** static
 638:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 641:Middlewares/Third_Party/FatFs/src/ff.c **** )
 642:Middlewares/Third_Party/FatFs/src/ff.c **** {
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_DRIVE &&
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_OBJECT &&
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_TIMEOUT) {
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 649:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 650:Middlewares/Third_Party/FatFs/src/ff.c **** }
 651:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 652:Middlewares/Third_Party/FatFs/src/ff.c **** 
 653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 654:Middlewares/Third_Party/FatFs/src/ff.c **** 
 655:Middlewares/Third_Party/FatFs/src/ff.c **** 
 656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 657:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 658:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 659:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 661:Middlewares/Third_Party/FatFs/src/ff.c **** static
 662:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
ARM GAS  /tmp/ccTBpncU.s 			page 16


 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 665:Middlewares/Third_Party/FatFs/src/ff.c **** )
 666:Middlewares/Third_Party/FatFs/src/ff.c **** {
 201              		.loc 1 666 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL27:
 207 0000 30B4     		push	{r4, r5}
 208              	.LCFI2:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 5, -4
 212              	.LVL28:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 213              		.loc 1 670 0
 214 0002 0025     		movs	r5, #0
 215 0004 2B46     		mov	r3, r5
 216 0006 01E0     		b	.L17
 217              	.LVL29:
 218              	.L23:
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->fs &&	 	/* Check if the object matched with an open object */
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 219              		.loc 1 676 0
 220 0008 0125     		movs	r5, #1
 221              	.LVL30:
 222              	.L18:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 223              		.loc 1 670 0 discriminator 2
 224 000a 0133     		adds	r3, r3, #1
 225              	.LVL31:
 226              	.L17:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 227              		.loc 1 670 0 is_stmt 0 discriminator 1
 228 000c 012B     		cmp	r3, #1
 229 000e 21D8     		bhi	.L19
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 230              		.loc 1 671 0 is_stmt 1
 231 0010 03EB4304 		add	r4, r3, r3, lsl #1
 232 0014 A200     		lsls	r2, r4, #2
 233 0016 1D4C     		ldr	r4, .L31
 234 0018 A258     		ldr	r2, [r4, r2]
 235 001a 002A     		cmp	r2, #0
 236 001c F4D0     		beq	.L23
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 237              		.loc 1 672 0
 238 001e 00F58054 		add	r4, r0, #4096
 239 0022 2468     		ldr	r4, [r4]
ARM GAS  /tmp/ccTBpncU.s 			page 17


 240 0024 A242     		cmp	r2, r4
 241 0026 F0D1     		bne	.L18
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 242              		.loc 1 673 0 discriminator 1
 243 0028 03EB4302 		add	r2, r3, r3, lsl #1
 244 002c 9400     		lsls	r4, r2, #2
 245 002e 174A     		ldr	r2, .L31
 246 0030 2244     		add	r2, r2, r4
 247 0032 5468     		ldr	r4, [r2, #4]
 248 0034 41F20802 		movw	r2, #4104
 249 0038 8258     		ldr	r2, [r0, r2]
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 250              		.loc 1 672 0 discriminator 1
 251 003a 9442     		cmp	r4, r2
 252 003c E5D1     		bne	.L18
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 253              		.loc 1 674 0
 254 003e 03EB4302 		add	r2, r3, r3, lsl #1
 255 0042 9400     		lsls	r4, r2, #2
 256 0044 114A     		ldr	r2, .L31
 257 0046 2244     		add	r2, r2, r4
 258 0048 1489     		ldrh	r4, [r2, #8]
 259 004a 41F20602 		movw	r2, #4102
 260 004e 825A     		ldrh	r2, [r0, r2]
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 261              		.loc 1 673 0
 262 0050 9442     		cmp	r4, r2
 263 0052 DAD1     		bne	.L18
 264              	.L19:
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK)	/* The object is not opened */
 265              		.loc 1 679 0
 266 0054 022B     		cmp	r3, #2
 267 0056 0CD0     		beq	.L29
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 681:Middlewares/Third_Party/FatFs/src/ff.c **** 
 682:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 683:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 268              		.loc 1 683 0
 269 0058 B1B9     		cbnz	r1, .L26
 270              		.loc 1 683 0 is_stmt 0 discriminator 2
 271 005a 03EB4303 		add	r3, r3, r3, lsl #1
 272              	.LVL32:
 273 005e 9A00     		lsls	r2, r3, #2
 274 0060 0A4B     		ldr	r3, .L31
 275 0062 1344     		add	r3, r3, r2
 276 0064 5B89     		ldrh	r3, [r3, #10]
 277 0066 B3F5807F 		cmp	r3, #256
 278 006a 07D0     		beq	.L30
 279              		.loc 1 683 0
 280 006c 0020     		movs	r0, #0
 281              	.LVL33:
 282              	.L22:
 684:Middlewares/Third_Party/FatFs/src/ff.c **** }
 283              		.loc 1 684 0 is_stmt 1
 284 006e 30BC     		pop	{r4, r5}
ARM GAS  /tmp/ccTBpncU.s 			page 18


 285              	.LCFI3:
 286              		.cfi_remember_state
 287              		.cfi_restore 5
 288              		.cfi_restore 4
 289              		.cfi_def_cfa_offset 0
 290              	.LVL34:
 291 0070 7047     		bx	lr
 292              	.LVL35:
 293              	.L29:
 294              	.LCFI4:
 295              		.cfi_restore_state
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 296              		.loc 1 680 0
 297 0072 2DB9     		cbnz	r5, .L24
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 298              		.loc 1 680 0 is_stmt 0 discriminator 2
 299 0074 0229     		cmp	r1, #2
 300 0076 05D1     		bne	.L25
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 301              		.loc 1 680 0
 302 0078 0020     		movs	r0, #0
 303              	.LVL36:
 304 007a F8E7     		b	.L22
 305              	.LVL37:
 306              	.L30:
 683:Middlewares/Third_Party/FatFs/src/ff.c **** }
 307              		.loc 1 683 0 is_stmt 1
 308 007c 1020     		movs	r0, #16
 309              	.LVL38:
 310 007e F6E7     		b	.L22
 311              	.LVL39:
 312              	.L24:
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 313              		.loc 1 680 0
 314 0080 0020     		movs	r0, #0
 315              	.LVL40:
 316 0082 F4E7     		b	.L22
 317              	.LVL41:
 318              	.L25:
 319 0084 1220     		movs	r0, #18
 320              	.LVL42:
 321 0086 F2E7     		b	.L22
 322              	.LVL43:
 323              	.L26:
 683:Middlewares/Third_Party/FatFs/src/ff.c **** }
 324              		.loc 1 683 0
 325 0088 1020     		movs	r0, #16
 326              	.LVL44:
 327 008a F0E7     		b	.L22
 328              	.L32:
 329              		.align	2
 330              	.L31:
 331 008c 00000000 		.word	.LANCHOR0
 332              		.cfi_endproc
 333              	.LFE70:
 335              		.section	.text.enq_lock,"ax",%progbits
 336              		.align	1
ARM GAS  /tmp/ccTBpncU.s 			page 19


 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
 342              	enq_lock:
 343              	.LFB71:
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** static
 688:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** {
 344              		.loc 1 689 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL45:
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 691:Middlewares/Third_Party/FatFs/src/ff.c **** 
 692:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 350              		.loc 1 692 0
 351 0000 0020     		movs	r0, #0
 352 0002 00E0     		b	.L34
 353              	.LVL46:
 354              	.L36:
 355              		.loc 1 692 0 is_stmt 0 discriminator 4
 356 0004 0130     		adds	r0, r0, #1
 357              	.LVL47:
 358              	.L34:
 359              		.loc 1 692 0 discriminator 1
 360 0006 0128     		cmp	r0, #1
 361 0008 06D8     		bhi	.L35
 362              		.loc 1 692 0 discriminator 3
 363 000a 00EB4002 		add	r2, r0, r0, lsl #1
 364 000e 9300     		lsls	r3, r2, #2
 365 0010 034A     		ldr	r2, .L37
 366 0012 D358     		ldr	r3, [r2, r3]
 367 0014 002B     		cmp	r3, #0
 368 0016 F5D1     		bne	.L36
 369              	.L35:
 693:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 694:Middlewares/Third_Party/FatFs/src/ff.c **** }
 370              		.loc 1 694 0 is_stmt 1
 371 0018 0238     		subs	r0, r0, #2
 372              	.LVL48:
 373 001a 18BF     		it	ne
 374 001c 0120     		movne	r0, #1
 375              	.LVL49:
 376 001e 7047     		bx	lr
 377              	.L38:
 378              		.align	2
 379              	.L37:
 380 0020 00000000 		.word	.LANCHOR0
 381              		.cfi_endproc
 382              	.LFE71:
 384              		.section	.text.inc_lock,"ax",%progbits
 385              		.align	1
ARM GAS  /tmp/ccTBpncU.s 			page 20


 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu softvfp
 391              	inc_lock:
 392              	.LFB72:
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** static
 698:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 701:Middlewares/Third_Party/FatFs/src/ff.c **** )
 702:Middlewares/Third_Party/FatFs/src/ff.c **** {
 393              		.loc 1 702 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398              	.LVL50:
 399 0000 70B4     		push	{r4, r5, r6}
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 12
 402              		.cfi_offset 4, -12
 403              		.cfi_offset 5, -8
 404              		.cfi_offset 6, -4
 405              	.LVL51:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 704:Middlewares/Third_Party/FatFs/src/ff.c **** 
 705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 406              		.loc 1 706 0
 407 0002 0023     		movs	r3, #0
 408 0004 00E0     		b	.L40
 409              	.LVL52:
 410              	.L41:
 411              		.loc 1 706 0 is_stmt 0 discriminator 2
 412 0006 0133     		adds	r3, r3, #1
 413              	.LVL53:
 414              	.L40:
 415              		.loc 1 706 0 discriminator 1
 416 0008 012B     		cmp	r3, #1
 417 000a 1FD8     		bhi	.L42
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 418              		.loc 1 707 0 is_stmt 1
 419 000c 03EB4304 		add	r4, r3, r3, lsl #1
 420 0010 A200     		lsls	r2, r4, #2
 421 0012 324C     		ldr	r4, .L57
 422 0014 A458     		ldr	r4, [r4, r2]
 423 0016 00F58052 		add	r2, r0, #4096
 424 001a 1268     		ldr	r2, [r2]
 425 001c 9442     		cmp	r4, r2
 426 001e F2D1     		bne	.L41
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 427              		.loc 1 708 0 discriminator 1
 428 0020 03EB4302 		add	r2, r3, r3, lsl #1
 429 0024 9400     		lsls	r4, r2, #2
ARM GAS  /tmp/ccTBpncU.s 			page 21


 430 0026 2D4A     		ldr	r2, .L57
 431 0028 2244     		add	r2, r2, r4
 432 002a 5468     		ldr	r4, [r2, #4]
 433 002c 41F20802 		movw	r2, #4104
 434 0030 8258     		ldr	r2, [r0, r2]
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 435              		.loc 1 707 0 discriminator 1
 436 0032 9442     		cmp	r4, r2
 437 0034 E7D1     		bne	.L41
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].idx == dp->index) break;
 438              		.loc 1 709 0
 439 0036 03EB4302 		add	r2, r3, r3, lsl #1
 440 003a 9400     		lsls	r4, r2, #2
 441 003c 274A     		ldr	r2, .L57
 442 003e 2244     		add	r2, r2, r4
 443 0040 1489     		ldrh	r4, [r2, #8]
 444 0042 41F20602 		movw	r2, #4102
 445 0046 825A     		ldrh	r2, [r0, r2]
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 446              		.loc 1 708 0
 447 0048 9442     		cmp	r4, r2
 448 004a DCD1     		bne	.L41
 449              	.L42:
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 
 712:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 450              		.loc 1 712 0
 451 004c 022B     		cmp	r3, #2
 452 004e 3BD0     		beq	.L56
 453              	.LVL54:
 454              	.L45:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 455              		.loc 1 721 0
 456 0050 39B1     		cbz	r1, .L49
 457              		.loc 1 721 0 is_stmt 0 discriminator 1
 458 0052 03EB4302 		add	r2, r3, r3, lsl #1
 459 0056 9000     		lsls	r0, r2, #2
 460 0058 204A     		ldr	r2, .L57
 461 005a 0244     		add	r2, r2, r0
 462 005c 5289     		ldrh	r2, [r2, #10]
 463 005e 002A     		cmp	r2, #0
 464 0060 39D1     		bne	.L53
 465              	.L49:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 466              		.loc 1 723 0 is_stmt 1
 467 0062 0029     		cmp	r1, #0
 468 0064 32D1     		bne	.L54
 469              		.loc 1 723 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 22


 470 0066 03EB4302 		add	r2, r3, r3, lsl #1
 471 006a 9100     		lsls	r1, r2, #2
 472              	.LVL55:
 473 006c 1B4A     		ldr	r2, .L57
 474 006e 0A44     		add	r2, r2, r1
 475 0070 5189     		ldrh	r1, [r2, #10]
 476 0072 0131     		adds	r1, r1, #1
 477 0074 89B2     		uxth	r1, r1
 478              	.L50:
 479              		.loc 1 723 0 discriminator 4
 480 0076 03EB4302 		add	r2, r3, r3, lsl #1
 481 007a 9000     		lsls	r0, r2, #2
 482 007c 174A     		ldr	r2, .L57
 483 007e 0244     		add	r2, r2, r0
 484 0080 5181     		strh	r1, [r2, #10]	@ movhi
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 
 725:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 485              		.loc 1 725 0 is_stmt 1 discriminator 4
 486 0082 581C     		adds	r0, r3, #1
 487              	.L39:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** }
 488              		.loc 1 726 0
 489 0084 70BC     		pop	{r4, r5, r6}
 490              	.LCFI6:
 491              		.cfi_remember_state
 492              		.cfi_restore 6
 493              		.cfi_restore 5
 494              		.cfi_restore 4
 495              		.cfi_def_cfa_offset 0
 496 0086 7047     		bx	lr
 497              	.LVL56:
 498              	.L47:
 499              	.LCFI7:
 500              		.cfi_restore_state
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 501              		.loc 1 713 0 discriminator 4
 502 0088 0133     		adds	r3, r3, #1
 503              	.LVL57:
 504              	.L44:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 505              		.loc 1 713 0 is_stmt 0 discriminator 1
 506 008a 012B     		cmp	r3, #1
 507 008c 06D8     		bhi	.L46
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 508              		.loc 1 713 0 discriminator 3
 509 008e 03EB4304 		add	r4, r3, r3, lsl #1
 510 0092 A200     		lsls	r2, r4, #2
 511 0094 114C     		ldr	r4, .L57
 512 0096 A258     		ldr	r2, [r4, r2]
 513 0098 002A     		cmp	r2, #0
 514 009a F5D1     		bne	.L47
 515              	.L46:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 516              		.loc 1 714 0 is_stmt 1
 517 009c 022B     		cmp	r3, #2
 518 009e 18D0     		beq	.L52
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
ARM GAS  /tmp/ccTBpncU.s 			page 23


 519              		.loc 1 715 0
 520 00a0 00F58052 		add	r2, r0, #4096
 521 00a4 1668     		ldr	r6, [r2]
 522 00a6 0D4D     		ldr	r5, .L57
 523 00a8 5A00     		lsls	r2, r3, #1
 524 00aa 1A44     		add	r2, r2, r3
 525 00ac 9400     		lsls	r4, r2, #2
 526 00ae 2A19     		adds	r2, r5, r4
 527 00b0 2E51     		str	r6, [r5, r4]
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 528              		.loc 1 716 0
 529 00b2 41F20804 		movw	r4, #4104
 530 00b6 0459     		ldr	r4, [r0, r4]
 531 00b8 5460     		str	r4, [r2, #4]
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 532              		.loc 1 717 0
 533 00ba 41F20604 		movw	r4, #4102
 534 00be 005B     		ldrh	r0, [r0, r4]
 535              	.LVL58:
 536 00c0 1081     		strh	r0, [r2, #8]	@ movhi
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 537              		.loc 1 718 0
 538 00c2 0020     		movs	r0, #0
 539 00c4 5081     		strh	r0, [r2, #10]	@ movhi
 540 00c6 C3E7     		b	.L45
 541              	.LVL59:
 542              	.L56:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 543              		.loc 1 713 0
 544 00c8 0023     		movs	r3, #0
 545              	.LVL60:
 546 00ca DEE7     		b	.L44
 547              	.LVL61:
 548              	.L54:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549              		.loc 1 723 0
 550 00cc 4FF48071 		mov	r1, #256
 551              	.LVL62:
 552 00d0 D1E7     		b	.L50
 553              	.LVL63:
 554              	.L52:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 555              		.loc 1 714 0
 556 00d2 0020     		movs	r0, #0
 557              	.LVL64:
 558 00d4 D6E7     		b	.L39
 559              	.L53:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 
 560              		.loc 1 721 0
 561 00d6 0020     		movs	r0, #0
 562 00d8 D4E7     		b	.L39
 563              	.L58:
 564 00da 00BF     		.align	2
 565              	.L57:
 566 00dc 00000000 		.word	.LANCHOR0
 567              		.cfi_endproc
 568              	.LFE72:
ARM GAS  /tmp/ccTBpncU.s 			page 24


 570              		.section	.text.dec_lock,"ax",%progbits
 571              		.align	1
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu softvfp
 577              	dec_lock:
 578              	.LFB73:
 727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 728:Middlewares/Third_Party/FatFs/src/ff.c **** 
 729:Middlewares/Third_Party/FatFs/src/ff.c **** static
 730:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 732:Middlewares/Third_Party/FatFs/src/ff.c **** )
 733:Middlewares/Third_Party/FatFs/src/ff.c **** {
 579              		.loc 1 733 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL65:
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** 
 738:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 585              		.loc 1 738 0
 586 0000 0138     		subs	r0, r0, #1
 587              	.LVL66:
 588 0002 0128     		cmp	r0, #1
 589 0004 18D8     		bhi	.L62
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 590              		.loc 1 739 0
 591 0006 00EB4003 		add	r3, r0, r0, lsl #1
 592 000a 9A00     		lsls	r2, r3, #2
 593 000c 0C4B     		ldr	r3, .L65
 594 000e 1344     		add	r3, r3, r2
 595 0010 5B89     		ldrh	r3, [r3, #10]
 596              	.LVL67:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 597              		.loc 1 740 0
 598 0012 B3F5807F 		cmp	r3, #256
 599 0016 03D0     		beq	.L63
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 600              		.loc 1 741 0
 601 0018 1BB1     		cbz	r3, .L61
 602              		.loc 1 741 0 is_stmt 0 discriminator 1
 603 001a 013B     		subs	r3, r3, #1
 604              	.LVL68:
 605 001c 9BB2     		uxth	r3, r3
 606              	.LVL69:
 607 001e 00E0     		b	.L61
 608              	.L63:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 609              		.loc 1 740 0 is_stmt 1
 610 0020 0023     		movs	r3, #0
 611              	.LVL70:
ARM GAS  /tmp/ccTBpncU.s 			page 25


 612              	.L61:
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 613              		.loc 1 742 0
 614 0022 00EB4002 		add	r2, r0, r0, lsl #1
 615 0026 9100     		lsls	r1, r2, #2
 616 0028 054A     		ldr	r2, .L65
 617 002a 0A44     		add	r2, r2, r1
 618 002c 5381     		strh	r3, [r2, #10]	@ movhi
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 619              		.loc 1 743 0
 620 002e 2BB9     		cbnz	r3, .L64
 621              		.loc 1 743 0 is_stmt 0 discriminator 1
 622 0030 0020     		movs	r0, #0
 623              	.LVL71:
 624 0032 034A     		ldr	r2, .L65
 625 0034 5050     		str	r0, [r2, r1]
 626 0036 7047     		bx	lr
 627              	.LVL72:
 628              	.L62:
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 629              		.loc 1 746 0 is_stmt 1
 630 0038 0220     		movs	r0, #2
 631              	.LVL73:
 632 003a 7047     		bx	lr
 633              	.LVL74:
 634              	.L64:
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 635              		.loc 1 744 0
 636 003c 0020     		movs	r0, #0
 637              	.LVL75:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 638              		.loc 1 749 0
 639 003e 7047     		bx	lr
 640              	.L66:
 641              		.align	2
 642              	.L65:
 643 0040 00000000 		.word	.LANCHOR0
 644              		.cfi_endproc
 645              	.LFE73:
 647              		.section	.text.clear_lock,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu softvfp
 654              	clear_lock:
 655              	.LFB74:
 750:Middlewares/Third_Party/FatFs/src/ff.c **** 
 751:Middlewares/Third_Party/FatFs/src/ff.c **** 
 752:Middlewares/Third_Party/FatFs/src/ff.c **** static
 753:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 755:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccTBpncU.s 			page 26


 756:Middlewares/Third_Party/FatFs/src/ff.c **** {
 656              		.loc 1 756 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL76:
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 662              		.loc 1 759 0
 663 0000 0023     		movs	r3, #0
 664              	.LVL77:
 665 0002 012B     		cmp	r3, #1
 666 0004 13D8     		bhi	.L74
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 667              		.loc 1 756 0
 668 0006 10B4     		push	{r4}
 669              	.LCFI8:
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 4, -4
 672              	.L70:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 673              		.loc 1 760 0
 674 0008 03EB4301 		add	r1, r3, r3, lsl #1
 675 000c 8A00     		lsls	r2, r1, #2
 676 000e 0849     		ldr	r1, .L76
 677 0010 8A58     		ldr	r2, [r1, r2]
 678 0012 8242     		cmp	r2, r0
 679 0014 04D0     		beq	.L75
 680              	.L69:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 681              		.loc 1 759 0 discriminator 2
 682 0016 0133     		adds	r3, r3, #1
 683              	.LVL78:
 684 0018 012B     		cmp	r3, #1
 685 001a F5D9     		bls	.L70
 761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 762:Middlewares/Third_Party/FatFs/src/ff.c **** }
 686              		.loc 1 762 0
 687 001c 10BC     		pop	{r4}
 688              	.LCFI9:
 689              		.cfi_remember_state
 690              		.cfi_restore 4
 691              		.cfi_def_cfa_offset 0
 692 001e 7047     		bx	lr
 693              	.L75:
 694              	.LCFI10:
 695              		.cfi_restore_state
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 696              		.loc 1 760 0 discriminator 1
 697 0020 03EB4301 		add	r1, r3, r3, lsl #1
 698 0024 8A00     		lsls	r2, r1, #2
 699 0026 0249     		ldr	r1, .L76
 700 0028 0024     		movs	r4, #0
 701 002a 8C50     		str	r4, [r1, r2]
 702 002c F3E7     		b	.L69
ARM GAS  /tmp/ccTBpncU.s 			page 27


 703              	.L74:
 704              	.LCFI11:
 705              		.cfi_def_cfa_offset 0
 706              		.cfi_restore 4
 707 002e 7047     		bx	lr
 708              	.L77:
 709              		.align	2
 710              	.L76:
 711 0030 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE74:
 715              		.section	.text.clmt_clust,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu softvfp
 722              	clmt_clust:
 723              	.LFB83:
 763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** 
 766:Middlewares/Third_Party/FatFs/src/ff.c **** 
 767:Middlewares/Third_Party/FatFs/src/ff.c **** 
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 771:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 772:Middlewares/Third_Party/FatFs/src/ff.c **** static
 773:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (
 774:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 775:Middlewares/Third_Party/FatFs/src/ff.c **** )
 776:Middlewares/Third_Party/FatFs/src/ff.c **** {
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 794:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 797:Middlewares/Third_Party/FatFs/src/ff.c **** }
 798:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTBpncU.s 			page 28


 801:Middlewares/Third_Party/FatFs/src/ff.c **** static
 802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 804:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector	/* Sector number to make appearance in the fs->win[].d8 */
 805:Middlewares/Third_Party/FatFs/src/ff.c **** )
 806:Middlewares/Third_Party/FatFs/src/ff.c **** {
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 808:Middlewares/Third_Party/FatFs/src/ff.c **** 
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 812:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 823:Middlewares/Third_Party/FatFs/src/ff.c **** }
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 
 828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 829:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 830:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 831:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 832:Middlewares/Third_Party/FatFs/src/ff.c **** static
 833:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK: successful, FR_DISK_ERR: failed */
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 835:Middlewares/Third_Party/FatFs/src/ff.c **** )
 836:Middlewares/Third_Party/FatFs/src/ff.c **** {
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** 
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 842:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
ARM GAS  /tmp/ccTBpncU.s 			page 29


 858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 862:Middlewares/Third_Party/FatFs/src/ff.c **** }
 863:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 
 865:Middlewares/Third_Party/FatFs/src/ff.c **** 
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 
 868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 871:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 872:Middlewares/Third_Party/FatFs/src/ff.c **** 
 873:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 874:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 876:Middlewares/Third_Party/FatFs/src/ff.c **** )
 877:Middlewares/Third_Party/FatFs/src/ff.c **** {
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 881:Middlewares/Third_Party/FatFs/src/ff.c **** }
 882:Middlewares/Third_Party/FatFs/src/ff.c **** 
 883:Middlewares/Third_Party/FatFs/src/ff.c **** 
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 
 885:Middlewares/Third_Party/FatFs/src/ff.c **** 
 886:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 887:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 888:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 889:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x0FFFFFFF:Cluster status */
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* FAT index number (cluster number) to get the value */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** )
 895:Middlewares/Third_Party/FatFs/src/ff.c **** {
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 908:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
ARM GAS  /tmp/ccTBpncU.s 			page 30


 915:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 
 923:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
 935:Middlewares/Third_Party/FatFs/src/ff.c **** }
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** 
 939:Middlewares/Third_Party/FatFs/src/ff.c **** 
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
 942:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 943:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 944:Middlewares/Third_Party/FatFs/src/ff.c **** 
 945:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 946:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* FAT index number (cluster number) to be changed */
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val	/* New value to be set to the entry */
 950:Middlewares/Third_Party/FatFs/src/ff.c **** )
 951:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
ARM GAS  /tmp/ccTBpncU.s 			page 31


 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 		default :
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INT_ERR;
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 996:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 997:Middlewares/Third_Party/FatFs/src/ff.c **** 
 998:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 999:Middlewares/Third_Party/FatFs/src/ff.c **** }
1000:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1001:Middlewares/Third_Party/FatFs/src/ff.c **** 
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 
1004:Middlewares/Third_Party/FatFs/src/ff.c **** 
1005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1006:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1007:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1009:Middlewares/Third_Party/FatFs/src/ff.c **** static
1010:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to remove a chain from */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** )
1014:Middlewares/Third_Party/FatFs/src/ff.c **** {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1017:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst, rt[2];
1019:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
ARM GAS  /tmp/ccTBpncU.s 			page 32


1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1037:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				ecl = nxt;
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* End of contiguous clusters */ 
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[0] = clust2sect(fs, scl);					/* Start sector */
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Erase the block */
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = ecl = nxt;
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = nxt;	/* Next cluster */
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1052:Middlewares/Third_Party/FatFs/src/ff.c **** }
1053:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 
1058:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1059:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch or Create a cluster chain                      */
1060:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1061:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1062:Middlewares/Third_Party/FatFs/src/ff.c **** static
1063:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** )
1067:Middlewares/Third_Party/FatFs/src/ff.c **** {
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {		/* Create a new chain */
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
1075:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1076:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {					/* Stretch the current chain */
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	ncl = scl;				/* Start cluster */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
ARM GAS  /tmp/ccTBpncU.s 			page 33


1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl++;							/* Next cluster */
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error code */
1113:Middlewares/Third_Party/FatFs/src/ff.c **** }
1114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** 
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 
1117:Middlewares/Third_Party/FatFs/src/ff.c **** 
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 
1119:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1120:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1121:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 
1123:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1124:Middlewares/Third_Party/FatFs/src/ff.c **** static
1125:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File offset to be converted to cluster# */
1128:Middlewares/Third_Party/FatFs/src/ff.c **** )
1129:Middlewares/Third_Party/FatFs/src/ff.c **** {
 724              		.loc 1 1129 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL79:
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1131:Middlewares/Third_Party/FatFs/src/ff.c **** 
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 730              		.loc 1 1133 0
 731 0000 41F22403 		movw	r3, #4132
 732 0004 C258     		ldr	r2, [r0, r3]
ARM GAS  /tmp/ccTBpncU.s 			page 34


 733 0006 0432     		adds	r2, r2, #4
 734              	.LVL80:
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
 735              		.loc 1 1134 0
 736 0008 00F58050 		add	r0, r0, #4096
 737              	.LVL81:
 738 000c 0068     		ldr	r0, [r0]
 739              	.LVL82:
 740 000e 41F20A03 		movw	r3, #4106
 741 0012 C35A     		ldrh	r3, [r0, r3]
 742 0014 B1FBF3F1 		udiv	r1, r1, r3
 743              	.LVL83:
 744 0018 41F20203 		movw	r3, #4098
 745 001c C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 746 001e B1FBF3F1 		udiv	r1, r1, r3
 747              	.LVL84:
 748              	.L81:
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 749              		.loc 1 1136 0
 750 0022 1068     		ldr	r0, [r2]
 751              	.LVL85:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 752              		.loc 1 1137 0
 753 0024 30B1     		cbz	r0, .L78
1138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 754              		.loc 1 1138 0
 755 0026 8142     		cmp	r1, r0
 756 0028 02D3     		bcc	.L80
1139:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 757              		.loc 1 1139 0
 758 002a 091A     		subs	r1, r1, r0
 759              	.LVL86:
 760 002c 0832     		adds	r2, r2, #8
 761              	.LVL87:
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 762              		.loc 1 1136 0
 763 002e F8E7     		b	.L81
 764              	.LVL88:
 765              	.L80:
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1141:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 766              		.loc 1 1141 0
 767 0030 5068     		ldr	r0, [r2, #4]
 768              	.LVL89:
 769 0032 0844     		add	r0, r0, r1
 770              	.L78:
1142:Middlewares/Third_Party/FatFs/src/ff.c **** }
 771              		.loc 1 1142 0
 772 0034 7047     		bx	lr
 773              		.cfi_endproc
 774              	.LFE83:
 776              		.section	.text.ld_clust,"ax",%progbits
 777              		.align	1
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
ARM GAS  /tmp/ccTBpncU.s 			page 35


 781              		.fpu softvfp
 783              	ld_clust:
 784              	.LFB87:
1143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** 
1146:Middlewares/Third_Party/FatFs/src/ff.c **** 
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 
1148:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1149:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1151:Middlewares/Third_Party/FatFs/src/ff.c **** 
1152:Middlewares/Third_Party/FatFs/src/ff.c **** static
1153:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT idx		/* Index of directory table */
1156:Middlewares/Third_Party/FatFs/src/ff.c **** )
1157:Middlewares/Third_Party/FatFs/src/ff.c **** {
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ic;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)idx;	/* Current index */
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Dynamic table (root-directory in FAT32 or sub-directory) */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		ic = SS(dp->fs) / SZ_DIRE * dp->fs->csize;	/* Entries per cluster */
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
1182:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(dp->fs, clst);
1184:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;	/* Current cluster# */
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1191:Middlewares/Third_Party/FatFs/src/ff.c **** }
1192:Middlewares/Third_Party/FatFs/src/ff.c **** 
1193:Middlewares/Third_Party/FatFs/src/ff.c **** 
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 
1196:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccTBpncU.s 			page 36


1197:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1198:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** static
1201:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1204:Middlewares/Third_Party/FatFs/src/ff.c **** )
1205:Middlewares/Third_Party/FatFs/src/ff.c **** {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1208:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT c;
1210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index + 1;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i % (SS(dp->fs) / SZ_DIRE))) {	/* Sector changed? */
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
1219:Middlewares/Third_Party/FatFs/src/ff.c **** 
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
1223:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (((i / (SS(dp->fs) / SZ_DIRE)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
1230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1245:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect -= c;						/* Rewind window offset */
1246:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warni
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_NO_FILE;							/* Report EOT */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1250:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;				/* Initialize data for new cluster */
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccTBpncU.s 			page 37


1254:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)i;	/* Current index */
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 
1260:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1261:Middlewares/Third_Party/FatFs/src/ff.c **** }
1262:Middlewares/Third_Party/FatFs/src/ff.c **** 
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve directory entry                          */
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1269:Middlewares/Third_Party/FatFs/src/ff.c **** 
1270:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1271:Middlewares/Third_Party/FatFs/src/ff.c **** static
1272:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Pointer to the directory object */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent	/* Number of contiguous entries to allocate (1-21) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 
1280:Middlewares/Third_Party/FatFs/src/ff.c **** 
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1283:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1297:Middlewares/Third_Party/FatFs/src/ff.c **** }
1298:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 
1303:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1304:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Load/Store start cluster number                  */
1305:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 
1307:Middlewares/Third_Party/FatFs/src/ff.c **** static
1308:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (
1309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir	/* Pointer to the directory entry */
ARM GAS  /tmp/ccTBpncU.s 			page 38


1311:Middlewares/Third_Party/FatFs/src/ff.c **** )
1312:Middlewares/Third_Party/FatFs/src/ff.c **** {
 785              		.loc 1 1312 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790              	.LVL90:
1313:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = LD_WORD(dir + DIR_FstClusLO);
 791              		.loc 1 1315 0
 792 0000 CA7E     		ldrb	r2, [r1, #27]	@ zero_extendqisi2
 793 0002 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 794 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 795              	.LVL91:
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32)
 796              		.loc 1 1316 0
 797 0008 00F58050 		add	r0, r0, #4096
 798              	.LVL92:
 799 000c 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 800 000e 032A     		cmp	r2, #3
 801 0010 01D0     		beq	.L84
 802              	.LVL93:
 803              	.L82:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
1318:Middlewares/Third_Party/FatFs/src/ff.c **** 
1319:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1320:Middlewares/Third_Party/FatFs/src/ff.c **** }
 804              		.loc 1 1320 0
 805 0012 1846     		mov	r0, r3
 806 0014 7047     		bx	lr
 807              	.L84:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
 808              		.loc 1 1317 0
 809 0016 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 810 0018 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 811 001a 42EA0022 		orr	r2, r2, r0, lsl #8
 812 001e 43EA0243 		orr	r3, r3, r2, lsl #16
 813              	.LVL94:
1319:Middlewares/Third_Party/FatFs/src/ff.c **** }
 814              		.loc 1 1319 0
 815 0022 F6E7     		b	.L82
 816              		.cfi_endproc
 817              	.LFE87:
 819              		.section	.text.st_clust,"ax",%progbits
 820              		.align	1
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu softvfp
 826              	st_clust:
 827              	.LFB88:
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1324:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/ccTBpncU.s 			page 39


1325:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1326:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the directory entry */
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** )
1329:Middlewares/Third_Party/FatFs/src/ff.c **** {
 828              		.loc 1 1329 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833              	.LVL95:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusLO, cl);
 834              		.loc 1 1330 0
 835 0000 8176     		strb	r1, [r0, #26]
 836 0002 C1F30723 		ubfx	r3, r1, #8, #8
 837 0006 C376     		strb	r3, [r0, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 838              		.loc 1 1331 0
 839 0008 090C     		lsrs	r1, r1, #16
 840              	.LVL96:
 841 000a 0175     		strb	r1, [r0, #20]
 842 000c 090A     		lsrs	r1, r1, #8
 843 000e 4175     		strb	r1, [r0, #21]
1332:Middlewares/Third_Party/FatFs/src/ff.c **** }
 844              		.loc 1 1332 0
 845 0010 7047     		bx	lr
 846              		.cfi_endproc
 847              	.LFE88:
 849              		.section	.text.pick_lfn,"ax",%progbits
 850              		.align	1
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu softvfp
 856              	pick_lfn:
 857              	.LFB90:
1333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 
1338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1339:Middlewares/Third_Party/FatFs/src/ff.c **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1341:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1342:Middlewares/Third_Party/FatFs/src/ff.c **** static
1343:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** static
1347:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1348:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN to be compared */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry containing a part of LFN */
1350:Middlewares/Third_Party/FatFs/src/ff.c **** )
1351:Middlewares/Third_Party/FatFs/src/ff.c **** {
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
ARM GAS  /tmp/ccTBpncU.s 			page 40


1354:Middlewares/Third_Party/FatFs/src/ff.c **** 
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Get offset in the LFN buffer */
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);	/* Pick an LFN character from the entry */
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i])	/* Last segment matched but different length */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;						/* The part of LFN matched */
1373:Middlewares/Third_Party/FatFs/src/ff.c **** }
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 
1377:Middlewares/Third_Party/FatFs/src/ff.c **** static
1378:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** )
1382:Middlewares/Third_Party/FatFs/src/ff.c **** {
 858              		.loc 1 1382 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 863              	.LVL97:
 864 0000 F0B4     		push	{r4, r5, r6, r7}
 865              	.LCFI12:
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 4, -16
 868              		.cfi_offset 5, -12
 869              		.cfi_offset 6, -8
 870              		.cfi_offset 7, -4
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
 871              		.loc 1 1387 0
 872 0002 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 873 0004 04F03F04 		and	r4, r4, #63
 874 0008 013C     		subs	r4, r4, #1
 875 000a 04EB4403 		add	r3, r4, r4, lsl #1
 876 000e 04EB8304 		add	r4, r4, r3, lsl #2
 877              	.LVL98:
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
 878              		.loc 1 1389 0
ARM GAS  /tmp/ccTBpncU.s 			page 41


 879 0012 0127     		movs	r7, #1
 880 0014 0022     		movs	r2, #0
 881 0016 06E0     		b	.L90
 882              	.LVL99:
 883              	.L87:
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);		/* Pick an LFN character from the entry */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
 884              		.loc 1 1396 0
 885 0018 4FF6FF75 		movw	r5, #65535
 886 001c AB42     		cmp	r3, r5
 887 001e 1FD1     		bne	.L92
 888              	.LVL100:
 889              	.L89:
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1398:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);						/* Read all character in the entry */
 890              		.loc 1 1398 0
 891 0020 0132     		adds	r2, r2, #1
 892              	.LVL101:
 893 0022 0C2A     		cmp	r2, #12
 894 0024 0FD8     		bhi	.L96
 895              	.LVL102:
 896              	.L90:
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
 897              		.loc 1 1391 0
 898 0026 124B     		ldr	r3, .L97
 899 0028 9D5C     		ldrb	r5, [r3, r2]	@ zero_extendqisi2
 900 002a 6B1C     		adds	r3, r5, #1
 901 002c CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 902 002e 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 903 0030 43EA0623 		orr	r3, r3, r6, lsl #8
 904              	.LVL103:
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
 905              		.loc 1 1392 0
 906 0034 002F     		cmp	r7, #0
 907 0036 EFD0     		beq	.L87
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 908              		.loc 1 1393 0
 909 0038 FE2C     		cmp	r4, #254
 910 003a 0FD8     		bhi	.L91
 911              	.LVL104:
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 912              		.loc 1 1394 0
 913 003c 20F81430 		strh	r3, [r0, r4, lsl #1]	@ movhi
 914 0040 1F46     		mov	r7, r3
 915 0042 0134     		adds	r4, r4, #1
 916              	.LVL105:
 917 0044 ECE7     		b	.L89
 918              	.LVL106:
 919              	.L96:
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
 920              		.loc 1 1400 0
ARM GAS  /tmp/ccTBpncU.s 			page 42


 921 0046 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 922              	.LVL107:
 923 0048 13F0400F 		tst	r3, #64
 924 004c 0AD0     		beq	.L93
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
 925              		.loc 1 1401 0
 926 004e FE2C     		cmp	r4, #254
 927 0050 0BD8     		bhi	.L94
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 928              		.loc 1 1402 0
 929 0052 0023     		movs	r3, #0
 930 0054 20F81430 		strh	r3, [r0, r4, lsl #1]	@ movhi
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
 931              		.loc 1 1405 0
 932 0058 0120     		movs	r0, #1
 933              	.LVL108:
 934 005a 04E0     		b	.L86
 935              	.LVL109:
 936              	.L91:
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 937              		.loc 1 1393 0
 938 005c 0020     		movs	r0, #0
 939              	.LVL110:
 940 005e 02E0     		b	.L86
 941              	.LVL111:
 942              	.L92:
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 943              		.loc 1 1396 0
 944 0060 0020     		movs	r0, #0
 945              	.LVL112:
 946 0062 00E0     		b	.L86
 947              	.LVL113:
 948              	.L93:
 949              		.loc 1 1405 0
 950 0064 0120     		movs	r0, #1
 951              	.LVL114:
 952              	.L86:
1406:Middlewares/Third_Party/FatFs/src/ff.c **** }
 953              		.loc 1 1406 0
 954 0066 F0BC     		pop	{r4, r5, r6, r7}
 955              	.LCFI13:
 956              		.cfi_remember_state
 957              		.cfi_restore 7
 958              		.cfi_restore 6
 959              		.cfi_restore 5
 960              		.cfi_restore 4
 961              		.cfi_def_cfa_offset 0
 962              	.LVL115:
 963 0068 7047     		bx	lr
 964              	.LVL116:
 965              	.L94:
 966              	.LCFI14:
 967              		.cfi_restore_state
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 968              		.loc 1 1401 0
ARM GAS  /tmp/ccTBpncU.s 			page 43


 969 006a 0020     		movs	r0, #0
 970              	.LVL117:
 971 006c FBE7     		b	.L86
 972              	.L98:
 973 006e 00BF     		.align	2
 974              	.L97:
 975 0070 00000000 		.word	.LANCHOR1
 976              		.cfi_endproc
 977              	.LFE90:
 979              		.section	.text.fit_lfn,"ax",%progbits
 980              		.align	1
 981              		.syntax unified
 982              		.thumb
 983              		.thumb_func
 984              		.fpu softvfp
 986              	fit_lfn:
 987              	.LFB91:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 
1409:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1410:Middlewares/Third_Party/FatFs/src/ff.c **** static
1411:Middlewares/Third_Party/FatFs/src/ff.c **** void fit_lfn (
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN buffer */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,				/* Pointer to the directory entry */
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,				/* LFN order (1-20) */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum				/* SFN sum */
1416:Middlewares/Third_Party/FatFs/src/ff.c **** )
1417:Middlewares/Third_Party/FatFs/src/ff.c **** {
 988              		.loc 1 1417 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL118:
 994 0000 F0B4     		push	{r4, r5, r6, r7}
 995              	.LCFI15:
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
 1000              		.cfi_offset 7, -4
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
 1001              		.loc 1 1422 0
 1002 0002 4B73     		strb	r3, [r1, #13]
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
 1003              		.loc 1 1423 0
 1004 0004 0F23     		movs	r3, #15
 1005              	.LVL119:
 1006 0006 CB72     		strb	r3, [r1, #11]
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
 1007              		.loc 1 1424 0
 1008 0008 0025     		movs	r5, #0
 1009 000a 0D73     		strb	r5, [r1, #12]
ARM GAS  /tmp/ccTBpncU.s 			page 44


1425:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + LDIR_FstClusLO, 0);
 1010              		.loc 1 1425 0
 1011 000c 8D76     		strb	r5, [r1, #26]
 1012 000e CD76     		strb	r5, [r1, #27]
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
 1013              		.loc 1 1427 0
 1014 0010 561E     		subs	r6, r2, #1
 1015 0012 06EB4603 		add	r3, r6, r6, lsl #1
 1016 0016 06EB8306 		add	r6, r6, r3, lsl #2
 1017              	.LVL120:
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
 1018              		.loc 1 1428 0
 1019 001a 2B46     		mov	r3, r5
 1020 001c 02E0     		b	.L102
 1021              	.LVL121:
 1022              	.L101:
1429:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1023              		.loc 1 1433 0
 1024 001e 0135     		adds	r5, r5, #1
 1025              	.LVL122:
 1026 0020 0C2D     		cmp	r5, #12
 1027 0022 11D8     		bhi	.L107
 1028              	.LVL123:
 1029              	.L102:
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
 1030              		.loc 1 1430 0
 1031 0024 4FF6FF74 		movw	r4, #65535
 1032 0028 A342     		cmp	r3, r4
 1033 002a 02D0     		beq	.L100
 1034              	.LVL124:
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
 1035              		.loc 1 1430 0 is_stmt 0 discriminator 1
 1036 002c 30F81630 		ldrh	r3, [r0, r6, lsl #1]
 1037              	.LVL125:
 1038 0030 0136     		adds	r6, r6, #1
 1039              	.LVL126:
 1040              	.L100:
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
 1041              		.loc 1 1431 0 is_stmt 1
 1042 0032 0B4C     		ldr	r4, .L108
 1043 0034 645D     		ldrb	r4, [r4, r5]	@ zero_extendqisi2
 1044 0036 0B55     		strb	r3, [r1, r4]
 1045 0038 0134     		adds	r4, r4, #1
 1046 003a 1F0A     		lsrs	r7, r3, #8
 1047 003c 0F55     		strb	r7, [r1, r4]
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1048              		.loc 1 1432 0
 1049 003e 002B     		cmp	r3, #0
 1050 0040 EDD1     		bne	.L101
 1051 0042 4FF6FF73 		movw	r3, #65535
 1052              	.LVL127:
 1053 0046 EAE7     		b	.L101
ARM GAS  /tmp/ccTBpncU.s 			page 45


 1054              	.LVL128:
 1055              	.L107:
1434:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLEF;	/* Bottom LFN part is the start of LFN sequence */
 1056              		.loc 1 1434 0
 1057 0048 4FF6FF74 		movw	r4, #65535
 1058 004c A342     		cmp	r3, r4
 1059 004e 02D0     		beq	.L103
 1060              		.loc 1 1434 0 is_stmt 0 discriminator 2
 1061 0050 30F81630 		ldrh	r3, [r0, r6, lsl #1]
 1062              	.LVL129:
 1063 0054 0BB9     		cbnz	r3, .L104
 1064              	.L103:
 1065              		.loc 1 1434 0 discriminator 3
 1066 0056 42F04002 		orr	r2, r2, #64
 1067              	.LVL130:
 1068              	.L104:
1435:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
 1069              		.loc 1 1435 0 is_stmt 1
 1070 005a 0A70     		strb	r2, [r1]
1436:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1071              		.loc 1 1436 0
 1072 005c F0BC     		pop	{r4, r5, r6, r7}
 1073              	.LCFI16:
 1074              		.cfi_restore 7
 1075              		.cfi_restore 6
 1076              		.cfi_restore 5
 1077              		.cfi_restore 4
 1078              		.cfi_def_cfa_offset 0
 1079              	.LVL131:
 1080 005e 7047     		bx	lr
 1081              	.L109:
 1082              		.align	2
 1083              	.L108:
 1084 0060 00000000 		.word	.LANCHOR1
 1085              		.cfi_endproc
 1086              	.LFE91:
 1088              		.section	.text.gen_numname,"ax",%progbits
 1089              		.align	1
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu softvfp
 1095              	gen_numname:
 1096              	.LFB92:
1437:Middlewares/Third_Party/FatFs/src/ff.c **** 
1438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1439:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1440:Middlewares/Third_Party/FatFs/src/ff.c **** 
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 
1443:Middlewares/Third_Party/FatFs/src/ff.c **** 
1444:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1445:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create numbered name                                                  */
1446:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1447:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1448:Middlewares/Third_Party/FatFs/src/ff.c **** static
1449:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
ARM GAS  /tmp/ccTBpncU.s 			page 46


1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1454:Middlewares/Third_Party/FatFs/src/ff.c **** )
1455:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1097              		.loc 1 1455 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 8
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              	.LVL132:
 1102 0000 70B5     		push	{r4, r5, r6, lr}
 1103              	.LCFI17:
 1104              		.cfi_def_cfa_offset 16
 1105              		.cfi_offset 4, -16
 1106              		.cfi_offset 5, -12
 1107              		.cfi_offset 6, -8
 1108              		.cfi_offset 14, -4
 1109 0002 82B0     		sub	sp, sp, #8
 1110              	.LCFI18:
 1111              		.cfi_def_cfa_offset 24
 1112 0004 0546     		mov	r5, r0
 1113 0006 1646     		mov	r6, r2
 1114 0008 1C46     		mov	r4, r3
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1458:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1460:Middlewares/Third_Party/FatFs/src/ff.c **** 
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
 1115              		.loc 1 1462 0
 1116 000a 0B22     		movs	r2, #11
 1117              	.LVL133:
 1118 000c FFF7FEFF 		bl	mem_cpy
 1119              	.LVL134:
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
 1120              		.loc 1 1464 0
 1121 0010 052C     		cmp	r4, #5
 1122 0012 11D8     		bhi	.L111
 1123              	.LVL135:
 1124              	.L112:
1465:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1466:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
 1125              		.loc 1 1468 0
 1126 0014 0722     		movs	r2, #7
 1127 0016 1DE0     		b	.L118
 1128              	.LVL136:
 1129              	.L114:
 1130              		.loc 1 1468 0 is_stmt 0 discriminator 2
 1131 0018 0132     		adds	r2, r2, #1
 1132              	.LVL137:
 1133              	.L113:
 1134              		.loc 1 1468 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 47


 1135 001a 0F2A     		cmp	r2, #15
 1136 001c 0CD8     		bhi	.L111
1469:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1137              		.loc 1 1469 0 is_stmt 1
 1138 001e 03F00101 		and	r1, r3, #1
 1139 0022 01EB4404 		add	r4, r1, r4, lsl #1
 1140              	.LVL138:
1470:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
 1141              		.loc 1 1470 0
 1142 0026 5B08     		lsrs	r3, r3, #1
 1143              	.LVL139:
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
 1144              		.loc 1 1471 0
 1145 0028 14F4803F 		tst	r4, #65536
 1146 002c F4D0     		beq	.L114
 1147              		.loc 1 1471 0 is_stmt 0 discriminator 1
 1148 002e 84F48834 		eor	r4, r4, #69632
 1149              	.LVL140:
 1150 0032 84F02104 		eor	r4, r4, #33
 1151              	.LVL141:
 1152 0036 EFE7     		b	.L114
 1153              	.LVL142:
 1154              	.L111:
1466:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
 1155              		.loc 1 1466 0 is_stmt 1
 1156 0038 3388     		ldrh	r3, [r6]
 1157 003a 002B     		cmp	r3, #0
 1158 003c EAD0     		beq	.L112
1467:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
 1159              		.loc 1 1467 0
 1160 003e 0236     		adds	r6, r6, #2
 1161              	.LVL143:
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1162              		.loc 1 1468 0
 1163 0040 0022     		movs	r2, #0
 1164 0042 EAE7     		b	.L113
 1165              	.LVL144:
 1166              	.L117:
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1473:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (seq % 16) + '0';
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1167              		.loc 1 1482 0
 1168 0044 531E     		subs	r3, r2, #1
 1169              	.LVL145:
 1170 0046 02A8     		add	r0, sp, #8
 1171 0048 0244     		add	r2, r2, r0
 1172 004a 02F8081C 		strb	r1, [r2, #-8]
 1173              	.LVL146:
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
ARM GAS  /tmp/ccTBpncU.s 			page 48


1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
 1174              		.loc 1 1484 0
 1175 004e 2409     		lsrs	r4, r4, #4
 1176              	.LVL147:
 1177 0050 09D0     		beq	.L128
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
 1178              		.loc 1 1482 0
 1179 0052 1A46     		mov	r2, r3
 1180              	.LVL148:
 1181              	.L118:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
 1182              		.loc 1 1480 0
 1183 0054 04F00F03 		and	r3, r4, #15
 1184 0058 03F13001 		add	r1, r3, #48
 1185              	.LVL149:
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1186              		.loc 1 1481 0
 1187 005c 3929     		cmp	r1, #57
 1188 005e F1D9     		bls	.L117
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1189              		.loc 1 1481 0 is_stmt 0 discriminator 1
 1190 0060 03F13701 		add	r1, r3, #55
 1191              	.LVL150:
 1192 0064 EEE7     		b	.L117
 1193              	.LVL151:
 1194              	.L128:
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
 1195              		.loc 1 1485 0 is_stmt 1
 1196 0066 7E21     		movs	r1, #126
 1197              	.LVL152:
 1198 0068 0246     		mov	r2, r0
 1199              	.LVL153:
 1200 006a 1A44     		add	r2, r2, r3
 1201 006c 02F8081C 		strb	r1, [r2, #-8]
 1202              	.LVL154:
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
 1203              		.loc 1 1488 0
 1204 0070 00E0     		b	.L119
 1205              	.LVL155:
 1206              	.L121:
 1207              		.loc 1 1488 0 is_stmt 0 discriminator 2
 1208 0072 0134     		adds	r4, r4, #1
 1209              	.LVL156:
 1210              	.L119:
 1211              		.loc 1 1488 0 discriminator 1
 1212 0074 9C42     		cmp	r4, r3
 1213 0076 09D2     		bcs	.L123
 1214              		.loc 1 1488 0 discriminator 3
 1215 0078 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 1216 007a 202A     		cmp	r2, #32
 1217 007c F9D1     		bne	.L121
 1218 007e 05E0     		b	.L123
 1219              	.L125:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
ARM GAS  /tmp/ccTBpncU.s 			page 49


1491:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
 1220              		.loc 1 1495 0 is_stmt 1
 1221 0080 2021     		movs	r1, #32
 1222              	.L122:
 1223              		.loc 1 1495 0 is_stmt 0 discriminator 4
 1224 0082 621C     		adds	r2, r4, #1
 1225              	.LVL157:
 1226 0084 2955     		strb	r1, [r5, r4]
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1227              		.loc 1 1496 0 is_stmt 1 discriminator 4
 1228 0086 072A     		cmp	r2, #7
 1229 0088 08D8     		bhi	.L129
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1230              		.loc 1 1495 0
 1231 008a 1446     		mov	r4, r2
 1232              	.LVL158:
 1233              	.L123:
 1234 008c 072B     		cmp	r3, #7
 1235 008e F7D8     		bhi	.L125
 1236              	.LVL159:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1237              		.loc 1 1495 0 is_stmt 0 discriminator 1
 1238 0090 02AA     		add	r2, sp, #8
 1239 0092 1A44     		add	r2, r2, r3
 1240 0094 12F8081C 		ldrb	r1, [r2, #-8]	@ zero_extendqisi2
 1241 0098 0133     		adds	r3, r3, #1
 1242              	.LVL160:
 1243 009a F2E7     		b	.L122
 1244              	.LVL161:
 1245              	.L129:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1246              		.loc 1 1497 0 is_stmt 1
 1247 009c 02B0     		add	sp, sp, #8
 1248              	.LCFI19:
 1249              		.cfi_def_cfa_offset 16
 1250              		@ sp needed
 1251 009e 70BD     		pop	{r4, r5, r6, pc}
 1252              		.cfi_endproc
 1253              	.LFE92:
 1255              		.section	.text.sum_sfn,"ax",%progbits
 1256              		.align	1
 1257              		.syntax unified
 1258              		.thumb
 1259              		.thumb_func
 1260              		.fpu softvfp
 1262              	sum_sfn:
 1263              	.LFB93:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 
1503:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccTBpncU.s 			page 50


1504:Middlewares/Third_Party/FatFs/src/ff.c **** /* Calculate sum of an SFN                                               */
1505:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1506:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1507:Middlewares/Third_Party/FatFs/src/ff.c **** static
1508:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1510:Middlewares/Third_Party/FatFs/src/ff.c **** )
1511:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1264              		.loc 1 1511 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269              	.LVL162:
 1270 0000 0146     		mov	r1, r0
 1271              	.LVL163:
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
 1272              		.loc 1 1513 0
 1273 0002 0B22     		movs	r2, #11
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
 1274              		.loc 1 1512 0
 1275 0004 0020     		movs	r0, #0
 1276              	.LVL164:
 1277              	.L131:
1514:Middlewares/Third_Party/FatFs/src/ff.c **** 
1515:Middlewares/Third_Party/FatFs/src/ff.c **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
 1278              		.loc 1 1515 0 discriminator 1
 1279 0006 C301     		lsls	r3, r0, #7
 1280 0008 43EA5003 		orr	r3, r3, r0, lsr #1
 1281 000c DBB2     		uxtb	r3, r3
 1282              	.LVL165:
 1283 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1284              	.LVL166:
 1285 0010 0344     		add	r3, r3, r0
 1286 0012 D8B2     		uxtb	r0, r3
 1287              	.LVL167:
 1288 0014 0131     		adds	r1, r1, #1
 1289              	.LVL168:
 1290 0016 013A     		subs	r2, r2, #1
 1291              	.LVL169:
 1292 0018 F5D1     		bne	.L131
1516:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1517:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1293              		.loc 1 1517 0
 1294 001a 7047     		bx	lr
 1295              		.cfi_endproc
 1296              	.LFE93:
 1298              		.section	.text.get_ldnumber,"ax",%progbits
 1299              		.align	1
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu softvfp
 1305              	get_ldnumber:
 1306              	.LFB101:
1518:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTBpncU.s 			page 51


1519:Middlewares/Third_Party/FatFs/src/ff.c **** 
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 
1522:Middlewares/Third_Party/FatFs/src/ff.c **** 
1523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1524:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
1525:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1526:Middlewares/Third_Party/FatFs/src/ff.c **** 
1527:Middlewares/Third_Party/FatFs/src/ff.c **** static
1528:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object linked to the file name */
1530:Middlewares/Third_Party/FatFs/src/ff.c **** )
1531:Middlewares/Third_Party/FatFs/src/ff.c **** {
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, *dir;
1534:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
1536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 
1541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->lfn) {
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dir[LDIR_Chksum];
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= ~LLEF; ord = c;	/* LFN start order */
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1571:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dp->fn, 11)) /* Is it a valid entry? */
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
ARM GAS  /tmp/ccTBpncU.s 			page 52


1576:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1579:Middlewares/Third_Party/FatFs/src/ff.c **** }
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** 
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c, *dir;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
1598:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = FR_NO_FILE;
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1607:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || (!_FS_RPATH && c == '.') || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c & LLEF) {			/* Is it start of LFN sequence? */
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 					sum = dir[LDIR_Chksum];
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					c &= ~LLEF; ord = c;
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* Check LFN validity and capture it */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1622:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1626:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != DDEM && (_FS_RPATH || c != '.') && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol)
1628:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1629:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);				/* Next entry */
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccTBpncU.s 			page 53


1633:Middlewares/Third_Party/FatFs/src/ff.c **** 
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;
1635:Middlewares/Third_Party/FatFs/src/ff.c **** 
1636:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1637:Middlewares/Third_Party/FatFs/src/ff.c **** }
1638:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 
1643:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1644:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
1645:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1646:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1647:Middlewares/Third_Party/FatFs/src/ff.c **** static
1648:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1649:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
1650:Middlewares/Third_Party/FatFs/src/ff.c **** )
1651:Middlewares/Third_Party/FatFs/src/ff.c **** {
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nent;
1655:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], *fn, sum;
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR *lfn;
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	fn = dp->fn; lfn = dp->lfn;
1660:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, fn, 12);
1661:Middlewares/Third_Party/FatFs/src/ff.c **** 
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_RPATH && (sn[NSFLAG] & NS_DOT))		/* Cannot create dot entry */
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_NAME;
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1666:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = 0; dp->lfn = 0;			/* Find only SFN */
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
1668:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1669:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
1670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1673:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1674:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = sn[NSFLAG]; dp->lfn = lfn;
1675:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1676:Middlewares/Third_Party/FatFs/src/ff.c **** 
1677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; lfn[n]; n++) ;
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
1680:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {						/* Otherwise allocate an entry for an SFN  */
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = 1;
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
ARM GAS  /tmp/ccTBpncU.s 			page 54


1690:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(dp->fs, dp->sect);
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->fs->wflag = 1;
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1698:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
1700:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {				/* Set SFN entry */
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
1707:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1708:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
1709:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1711:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1712:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1713:Middlewares/Third_Party/FatFs/src/ff.c **** 
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1715:Middlewares/Third_Party/FatFs/src/ff.c **** }
1716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1717:Middlewares/Third_Party/FatFs/src/ff.c **** 
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1722:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && !_FS_MINIMIZE
1725:Middlewares/Third_Party/FatFs/src/ff.c **** static
1726:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** )
1729:Middlewares/Third_Party/FatFs/src/ff.c **** {
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index;	/* SFN index */
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN en
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1742:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1743:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);		/* Next entry */
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
ARM GAS  /tmp/ccTBpncU.s 			page 55


1747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1748:Middlewares/Third_Party/FatFs/src/ff.c **** 
1749:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->index);
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1757:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1759:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1762:Middlewares/Third_Party/FatFs/src/ff.c **** }
1763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 
1768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
1770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1771:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1772:Middlewares/Third_Party/FatFs/src/ff.c **** static
1773:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** )
1777:Middlewares/Third_Party/FatFs/src/ff.c **** {
1778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1779:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *p, c;
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
1781:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1784:Middlewares/Third_Party/FatFs/src/ff.c **** 
1785:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = fno->fname;
1786:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->sect) {		/* Get SFN */
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;
1788:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
1797:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dir[i]))
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = c << 8 | dir[i++];
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ff_convert(c, 1);	/* OEM -> Unicode */
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!c) c = '?';
1802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTBpncU.s 			page 56


1804:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p++ = c;
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fsize = LD_DWORD(dir + DIR_FileSize);	/* Size */
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fdate = LD_WORD(dir + DIR_WrtDate);	/* Date */
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->ftime = LD_WORD(dir + DIR_WrtTime);	/* Time */
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;		/* Terminate SFN string by a \0 */
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 
1813:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fno->lfname) {
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0; p = fno->lfname;
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = *lfn++) != 0) {		/* Get an LFN character */
1819:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 					p[i++] = (TCHAR)(w >> 8);
1824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 				p[i++] = (TCHAR)w;
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[i] = 0;	/* Terminate LFN string by a \0 */
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1831:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1832:Middlewares/Third_Party/FatFs/src/ff.c **** }
1833:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 
1837:Middlewares/Third_Party/FatFs/src/ff.c **** 
1838:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1839:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
1840:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
1842:Middlewares/Third_Party/FatFs/src/ff.c **** static
1843:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
1844:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** )
1846:Middlewares/Third_Party/FatFs/src/ff.c **** {
1847:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1848:Middlewares/Third_Party/FatFs/src/ff.c **** 
1849:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1850:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
1851:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr))		/* Get DBC 2nd byte if needed */
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
1856:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1857:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
1859:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
ARM GAS  /tmp/ccTBpncU.s 			page 57


1861:Middlewares/Third_Party/FatFs/src/ff.c **** }
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** static
1865:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* Return value: 0:mismatched, 1:matched */
1866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
1867:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
1870:Middlewares/Third_Party/FatFs/src/ff.c **** )
1871:Middlewares/Third_Party/FatFs/src/ff.c **** {
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
1873:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
1874:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
1888:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
1892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1893:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
1896:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!pc) return 1;		/* Branch matched? (matched at end of both strings) */
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
1902:Middlewares/Third_Party/FatFs/src/ff.c **** }
1903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 
1907:Middlewares/Third_Party/FatFs/src/ff.c **** 
1908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a segment and create the object name in directory form           */
1910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1911:Middlewares/Third_Party/FatFs/src/ff.c **** 
1912:Middlewares/Third_Party/FatFs/src/ff.c **** static
1913:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
1916:Middlewares/Third_Party/FatFs/src/ff.c **** )
1917:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccTBpncU.s 			page 58


1918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1919:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
1920:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
1923:Middlewares/Third_Party/FatFs/src/ff.c **** 
1924:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = di = 0;
1928:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1929:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1933:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1938:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b))
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1942:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
1949:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') || /* Is this a dot entry? */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1959:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Strip trailing spaces and dots */
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** 
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
1970:Middlewares/Third_Party/FatFs/src/ff.c **** 
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
ARM GAS  /tmp/ccTBpncU.s 			page 59


1975:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** 	b = i = 0; ni = 8;
1978:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
1999:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* DBC (always false at SBCS cfg) */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2020:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2024:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2025:Middlewares/Third_Party/FatFs/src/ff.c **** 
2026:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with deleted mark, re
2027:Middlewares/Third_Party/FatFs/src/ff.c **** 
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
2031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
ARM GAS  /tmp/ccTBpncU.s 			page 60


2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 
2041:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, c, d, *sfn;
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2047:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
2048:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn = dp->fn;
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = b = 0; ni = 8;
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2052:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2054:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2056:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2059:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = &p[si];									/* Return pointer to the next segment */
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
2074:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2076:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2077:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII cfg) */
2079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2080:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2084:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
2085:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2086:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2088:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
ARM GAS  /tmp/ccTBpncU.s 			page 61


2089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** 				b |= 2;
2093:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = c;		/* Store NT flag, File name is created */
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2115:Middlewares/Third_Party/FatFs/src/ff.c **** }
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 
2118:Middlewares/Third_Party/FatFs/src/ff.c **** 
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2121:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** static
2125:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2126:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2127:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** )
2129:Middlewares/Third_Party/FatFs/src/ff.c **** {
2130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2131:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, ns;
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 
2134:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* No heading separator */
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
2139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
2144:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTBpncU.s 			page 62


2146:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2150:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;					/* Ended at the root directroy. Function completed. */
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2165:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->sclust = ld_clust(dp->fs, dir);
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** }
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 
2182:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2184:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 
2186:Middlewares/Third_Party/FatFs/src/ff.c **** static
2187:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2189:Middlewares/Third_Party/FatFs/src/ff.c **** )
2190:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1307              		.loc 1 2190 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312              	.LVL170:
2191:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const str[] = {_VOLUME_STRS};
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
ARM GAS  /tmp/ccTBpncU.s 			page 63


2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** 
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1313              		.loc 1 2202 0
 1314 0000 0168     		ldr	r1, [r0]
 1315 0002 09B1     		cbz	r1, .L146
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1316              		.loc 1 2203 0
 1317 0004 0A46     		mov	r2, r1
 1318 0006 03E0     		b	.L133
 1319              	.L146:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1320              		.loc 1 2193 0
 1321 0008 4FF0FF33 		mov	r3, #-1
 1322 000c 08E0     		b	.L143
 1323              	.LVL171:
 1324              	.L136:
 1325              		.loc 1 2203 0 discriminator 4
 1326 000e 0132     		adds	r2, r2, #1
 1327              	.LVL172:
 1328              	.L133:
 1329              		.loc 1 2203 0 is_stmt 0 discriminator 1
 1330 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1331 0012 1F2B     		cmp	r3, #31
 1332 0014 01D9     		bls	.L135
 1333              		.loc 1 2203 0 discriminator 3
 1334 0016 3A2B     		cmp	r3, #58
 1335 0018 F9D1     		bne	.L136
 1336              	.L135:
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1337              		.loc 1 2204 0 is_stmt 1
 1338 001a 3A2B     		cmp	r3, #58
 1339 001c 02D0     		beq	.L147
2205:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0'; 
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2209:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2212:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2213:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2217:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = str[i]; tp = *path;
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2219:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2223:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
ARM GAS  /tmp/ccTBpncU.s 			page 64


2226:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2228:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2230:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
2232:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2233:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1340              		.loc 1 2234 0
 1341 001e 0023     		movs	r3, #0
 1342              	.LVL173:
 1343              	.L143:
2235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2238:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1344              		.loc 1 2238 0
 1345 0020 1846     		mov	r0, r3
 1346              	.LVL174:
 1347 0022 7047     		bx	lr
 1348              	.LVL175:
 1349              	.L147:
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1350              		.loc 1 2190 0
 1351 0024 10B4     		push	{r4}
 1352              	.LCFI20:
 1353              		.cfi_def_cfa_offset 4
 1354              		.cfi_offset 4, -4
 1355              	.LVL176:
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1356              		.loc 1 2206 0
 1357 0026 4C1C     		adds	r4, r1, #1
 1358              	.LVL177:
 1359 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1360 002a 303B     		subs	r3, r3, #48
 1361              	.LVL178:
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1362              		.loc 1 2207 0
 1363 002c 092B     		cmp	r3, #9
 1364 002e 07D8     		bhi	.L139
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1365              		.loc 1 2207 0 is_stmt 0 discriminator 1
 1366 0030 A242     		cmp	r2, r4
 1367 0032 08D1     		bne	.L140
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1368              		.loc 1 2208 0 is_stmt 1
 1369 0034 53B9     		cbnz	r3, .L141
 1370              	.LVL179:
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1371              		.loc 1 2210 0
 1372 0036 0132     		adds	r2, r2, #1
 1373              	.LVL180:
 1374 0038 0260     		str	r2, [r0]
 1375              	.LVL181:
 1376              	.L132:
 1377              		.loc 1 2238 0
ARM GAS  /tmp/ccTBpncU.s 			page 65


 1378 003a 1846     		mov	r0, r3
 1379              	.LVL182:
 1380 003c 10BC     		pop	{r4}
 1381              	.LCFI21:
 1382              		.cfi_remember_state
 1383              		.cfi_restore 4
 1384              		.cfi_def_cfa_offset 0
 1385              	.LVL183:
 1386 003e 7047     		bx	lr
 1387              	.LVL184:
 1388              	.L139:
 1389              	.LCFI22:
 1390              		.cfi_restore_state
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1391              		.loc 1 2193 0
 1392 0040 4FF0FF33 		mov	r3, #-1
 1393              	.LVL185:
 1394 0044 F9E7     		b	.L132
 1395              	.LVL186:
 1396              	.L140:
 1397 0046 4FF0FF33 		mov	r3, #-1
 1398              	.LVL187:
 1399 004a F6E7     		b	.L132
 1400              	.LVL188:
 1401              	.L141:
 1402 004c 4FF0FF33 		mov	r3, #-1
 1403              	.LVL189:
 1404 0050 F3E7     		b	.L132
 1405              		.cfi_endproc
 1406              	.LFE101:
 1408              		.section	.text.sync_window,"ax",%progbits
 1409              		.align	1
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu softvfp
 1415              	sync_window:
 1416              	.LFB75:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1417              		.loc 1 776 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              	.LVL190:
 1422 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1423              	.LCFI23:
 1424              		.cfi_def_cfa_offset 24
 1425              		.cfi_offset 3, -24
 1426              		.cfi_offset 4, -20
 1427              		.cfi_offset 5, -16
 1428              		.cfi_offset 6, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431              	.LVL191:
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1432              		.loc 1 782 0
 1433 0002 41F20403 		movw	r3, #4100
ARM GAS  /tmp/ccTBpncU.s 			page 66


 1434 0006 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 1435 0008 0BB9     		cbnz	r3, .L156
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1436              		.loc 1 779 0
 1437 000a 0020     		movs	r0, #0
 1438              	.LVL192:
 1439              	.L149:
 797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1440              		.loc 1 797 0
 1441 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1442              	.LVL193:
 1443              	.L156:
 1444 000e 0446     		mov	r4, r0
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 1445              		.loc 1 783 0
 1446 0010 41F22C03 		movw	r3, #4140
 1447 0014 C558     		ldr	r5, [r0, r3]
 1448              	.LVL194:
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1449              		.loc 1 784 0
 1450 0016 0746     		mov	r7, r0
 1451 0018 0123     		movs	r3, #1
 1452 001a 2A46     		mov	r2, r5
 1453 001c 0146     		mov	r1, r0
 1454 001e 41F20100 		movw	r0, #4097
 1455              	.LVL195:
 1456 0022 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 1457 0024 FFF7FEFF 		bl	disk_write
 1458              	.LVL196:
 1459 0028 08BB     		cbnz	r0, .L153
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1460              		.loc 1 787 0
 1461 002a 41F20403 		movw	r3, #4100
 1462 002e 0022     		movs	r2, #0
 1463 0030 E254     		strb	r2, [r4, r3]
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1464              		.loc 1 788 0
 1465 0032 04F58153 		add	r3, r4, #4128
 1466 0036 1B68     		ldr	r3, [r3]
 1467 0038 EB1A     		subs	r3, r5, r3
 1468 003a 41F21802 		movw	r2, #4120
 1469 003e A258     		ldr	r2, [r4, r2]
 1470 0040 9342     		cmp	r3, r2
 1471 0042 16D2     		bcs	.L154
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1472              		.loc 1 789 0
 1473 0044 41F20303 		movw	r3, #4099
 1474 0048 E65C     		ldrb	r6, [r4, r3]	@ zero_extendqisi2
 1475              	.LVL197:
 1476              	.L150:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1477              		.loc 1 789 0 is_stmt 0 discriminator 1
 1478 004a 012E     		cmp	r6, #1
 1479 004c 0DD9     		bls	.L157
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 1480              		.loc 1 790 0 is_stmt 1 discriminator 3
 1481 004e 41F21803 		movw	r3, #4120
ARM GAS  /tmp/ccTBpncU.s 			page 67


 1482 0052 E358     		ldr	r3, [r4, r3]
 1483 0054 1D44     		add	r5, r5, r3
 1484              	.LVL198:
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1485              		.loc 1 791 0 discriminator 3
 1486 0056 0123     		movs	r3, #1
 1487 0058 2A46     		mov	r2, r5
 1488 005a 3946     		mov	r1, r7
 1489 005c 41F20100 		movw	r0, #4097
 1490 0060 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 1491 0062 FFF7FEFF 		bl	disk_write
 1492              	.LVL199:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1493              		.loc 1 789 0 discriminator 3
 1494 0066 013E     		subs	r6, r6, #1
 1495              	.LVL200:
 1496 0068 EFE7     		b	.L150
 1497              	.L157:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1498              		.loc 1 779 0
 1499 006a 0020     		movs	r0, #0
 1500 006c CEE7     		b	.L149
 1501              	.LVL201:
 1502              	.L153:
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1503              		.loc 1 785 0
 1504 006e 0120     		movs	r0, #1
 1505 0070 CCE7     		b	.L149
 1506              	.L154:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1507              		.loc 1 779 0
 1508 0072 0020     		movs	r0, #0
 1509 0074 CAE7     		b	.L149
 1510              		.cfi_endproc
 1511              	.LFE75:
 1513              		.section	.text.move_window,"ax",%progbits
 1514              		.align	1
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu softvfp
 1520              	move_window:
 1521              	.LFB76:
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1522              		.loc 1 806 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              	.LVL202:
 1527 0000 70B5     		push	{r4, r5, r6, lr}
 1528              	.LCFI24:
 1529              		.cfi_def_cfa_offset 16
 1530              		.cfi_offset 4, -16
 1531              		.cfi_offset 5, -12
 1532              		.cfi_offset 6, -8
 1533              		.cfi_offset 14, -4
 1534              	.LVL203:
ARM GAS  /tmp/ccTBpncU.s 			page 68


 810:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1535              		.loc 1 810 0
 1536 0002 41F22C03 		movw	r3, #4140
 1537 0006 C358     		ldr	r3, [r0, r3]
 1538 0008 8B42     		cmp	r3, r1
 1539 000a 15D0     		beq	.L161
 1540 000c 0446     		mov	r4, r0
 1541 000e 0D46     		mov	r5, r1
 812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1542              		.loc 1 812 0
 1543 0010 FFF7FEFF 		bl	sync_window
 1544              	.LVL204:
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 1545              		.loc 1 814 0
 1546 0014 0646     		mov	r6, r0
 1547 0016 80B9     		cbnz	r0, .L159
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1548              		.loc 1 815 0
 1549 0018 0123     		movs	r3, #1
 1550 001a 2A46     		mov	r2, r5
 1551 001c 2146     		mov	r1, r4
 1552 001e 41F20100 		movw	r0, #4097
 1553              	.LVL205:
 1554 0022 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 1555 0024 FFF7FEFF 		bl	disk_read
 1556              	.LVL206:
 1557 0028 10B1     		cbz	r0, .L160
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1558              		.loc 1 817 0
 1559 002a 0126     		movs	r6, #1
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1560              		.loc 1 816 0
 1561 002c 4FF0FF35 		mov	r5, #-1
 1562              	.LVL207:
 1563              	.L160:
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1564              		.loc 1 819 0
 1565 0030 41F22C03 		movw	r3, #4140
 1566 0034 E550     		str	r5, [r4, r3]
 1567 0036 00E0     		b	.L159
 1568              	.LVL208:
 1569              	.L161:
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1570              		.loc 1 807 0
 1571 0038 0026     		movs	r6, #0
 1572              	.LVL209:
 1573              	.L159:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1574              		.loc 1 823 0
 1575 003a 3046     		mov	r0, r6
 1576 003c 70BD     		pop	{r4, r5, r6, pc}
 1577              		.cfi_endproc
 1578              	.LFE76:
 1580              		.section	.text.check_fs,"ax",%progbits
 1581              		.align	1
 1582              		.syntax unified
 1583              		.thumb
ARM GAS  /tmp/ccTBpncU.s 			page 69


 1584              		.thumb_func
 1585              		.fpu softvfp
 1587              	check_fs:
 1588              	.LFB102:
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 
2242:Middlewares/Third_Party/FatFs/src/ff.c **** 
2243:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2244:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2246:Middlewares/Third_Party/FatFs/src/ff.c **** 
2247:Middlewares/Third_Party/FatFs/src/ff.c **** static
2248:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk 
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
2251:Middlewares/Third_Party/FatFs/src/ff.c **** )
2252:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1589              		.loc 1 2252 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              	.LVL210:
 1594 0000 10B5     		push	{r4, lr}
 1595              	.LCFI25:
 1596              		.cfi_def_cfa_offset 8
 1597              		.cfi_offset 4, -8
 1598              		.cfi_offset 14, -4
 1599 0002 0446     		mov	r4, r0
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
 1600              		.loc 1 2253 0
 1601 0004 41F20403 		movw	r3, #4100
 1602 0008 0022     		movs	r2, #0
 1603 000a C254     		strb	r2, [r0, r3]
 1604 000c 41F22C03 		movw	r3, #4140
 1605 0010 4FF0FF32 		mov	r2, #-1
 1606 0014 C250     		str	r2, [r0, r3]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
 1607              		.loc 1 2254 0
 1608 0016 FFF7FEFF 		bl	move_window
 1609              	.LVL211:
 1610 001a 88BB     		cbnz	r0, .L166
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 3;
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(&fs->win.d8[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offs
 1611              		.loc 1 2257 0
 1612 001c 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 1613 0020 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 1614 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 1615 0028 1BB2     		sxth	r3, r3
 1616 002a 184A     		ldr	r2, .L171
 1617 002c 9342     		cmp	r3, r2
 1618 002e 29D1     		bne	.L167
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 2;
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
 1619              		.loc 1 2260 0
ARM GAS  /tmp/ccTBpncU.s 			page 70


 1620 0030 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1621 0034 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 1622 0038 1B04     		lsls	r3, r3, #16
 1623 003a 43EA0263 		orr	r3, r3, r2, lsl #24
 1624 003e 94F83720 		ldrb	r2, [r4, #55]	@ zero_extendqisi2
 1625 0042 43EA0223 		orr	r3, r3, r2, lsl #8
 1626 0046 94F83620 		ldrb	r2, [r4, #54]	@ zero_extendqisi2
 1627 004a 1343     		orrs	r3, r3, r2
 1628 004c 23F07F43 		bic	r3, r3, #-16777216
 1629 0050 0F4A     		ldr	r2, .L171+4
 1630 0052 9342     		cmp	r3, r2
 1631 0054 18D0     		beq	.L168
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 1632              		.loc 1 2262 0
 1633 0056 94F85520 		ldrb	r2, [r4, #85]	@ zero_extendqisi2
 1634 005a 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1635 005e 1B04     		lsls	r3, r3, #16
 1636 0060 43EA0263 		orr	r3, r3, r2, lsl #24
 1637 0064 94F85320 		ldrb	r2, [r4, #83]	@ zero_extendqisi2
 1638 0068 43EA0223 		orr	r3, r3, r2, lsl #8
 1639 006c 94F85220 		ldrb	r2, [r4, #82]	@ zero_extendqisi2
 1640 0070 1343     		orrs	r3, r3, r2
 1641 0072 23F07F43 		bic	r3, r3, #-16777216
 1642 0076 064A     		ldr	r2, .L171+4
 1643 0078 9342     		cmp	r3, r2
 1644 007a 04D0     		beq	.L165
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
 1645              		.loc 1 2265 0
 1646 007c 0120     		movs	r0, #1
 1647 007e 02E0     		b	.L165
 1648              	.L166:
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1649              		.loc 1 2255 0
 1650 0080 0320     		movs	r0, #3
 1651 0082 00E0     		b	.L165
 1652              	.L167:
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1653              		.loc 1 2258 0
 1654 0084 0220     		movs	r0, #2
 1655              	.L165:
2266:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1656              		.loc 1 2266 0
 1657 0086 10BD     		pop	{r4, pc}
 1658              	.LVL212:
 1659              	.L168:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 1660              		.loc 1 2261 0
 1661 0088 0020     		movs	r0, #0
 1662 008a FCE7     		b	.L165
 1663              	.L172:
 1664              		.align	2
 1665              	.L171:
 1666 008c 55AAFFFF 		.word	-21931
 1667 0090 46415400 		.word	5521734
ARM GAS  /tmp/ccTBpncU.s 			page 71


 1668              		.cfi_endproc
 1669              	.LFE102:
 1671              		.section	.text.validate,"ax",%progbits
 1672              		.align	1
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1676              		.fpu softvfp
 1678              	validate:
 1679              	.LFB104:
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 
2271:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2272:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2273:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 
2275:Middlewares/Third_Party/FatFs/src/ff.c **** static
2276:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE wmode			/* !=0: Check write protection for write access */
2280:Middlewares/Third_Party/FatFs/src/ff.c **** )
2281:Middlewares/Third_Party/FatFs/src/ff.c **** {
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
2286:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
2287:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
2288:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2289:Middlewares/Third_Party/FatFs/src/ff.c **** 
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number from the path name */
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
ARM GAS  /tmp/ccTBpncU.s 			page 72


2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
2322:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
2325:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning, FDISK and SFD. */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
2333:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);						/* Partition number: 0:auto, 1-4:forced */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {								/* Find an FAT volume */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found. Following code initializes the file system object */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(fs->win.d8 + BPB_BytsPerSec) != SS(fs))	/* (BPB_BytsPerSec must be equal to the physic
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize = LD_WORD(fs->win.d8 + BPB_FATSz16);			/* Number of sectors per FAT */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fats = fs->win.d8[BPB_NumFATs];					/* Number of FAT copies */
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->csize = fs->win.d8[BPB_SecPerClus];				/* Number of sectors per cluster */
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_rootdir = LD_WORD(fs->win.d8 + BPB_RootEntCnt);	/* Number of root directory entries */
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2365:Middlewares/Third_Party/FatFs/src/ff.c **** 
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	tsect = LD_WORD(fs->win.d8 + BPB_TotSec16);			/* Number of sectors on the volume */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
2368:Middlewares/Third_Party/FatFs/src/ff.c **** 
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	nrsv = LD_WORD(fs->win.d8 + BPB_RsvdSecCnt);			/* Number of reserved sectors */
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
ARM GAS  /tmp/ccTBpncU.s 			page 73


2371:Middlewares/Third_Party/FatFs/src/ff.c **** 
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the FAT sub type */
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIRE);	/* RSV + FAT + DIR */
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Boundaries and Limits */
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
2390:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
2395:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than the size nee
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2398:Middlewares/Third_Party/FatFs/src/ff.c **** 
2399:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize cluster allocation information */
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** 
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get fsinfo if available */
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsi_flag = 0x80;
2405:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0;
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
2415:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = LD_DWORD(fs->win.d8 + FSI_Free_Count);
2417:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2418:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->last_clust = LD_DWORD(fs->win.d8 + FSI_Nxt_Free);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2423:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2424:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;	/* FAT sub-type */
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
2427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
ARM GAS  /tmp/ccTBpncU.s 			page 74


2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;		/* Set current directory to root */
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK			/* Clear file lock semaphores */
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
2432:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2435:Middlewares/Third_Party/FatFs/src/ff.c **** }
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** 
2439:Middlewares/Third_Party/FatFs/src/ff.c **** 
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
2442:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2443:Middlewares/Third_Party/FatFs/src/ff.c **** 
2444:Middlewares/Third_Party/FatFs/src/ff.c **** static
2445:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* obj		/* Pointer to the object FIL/DIR to check validity */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1680              		.loc 1 2448 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              	.LVL213:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (disk_status(fil->fs->drv) 
 1685              		.loc 1 2452 0
 1686 0000 E8B1     		cbz	r0, .L175
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
 1687              		.loc 1 2448 0 discriminator 1
 1688 0002 08B5     		push	{r3, lr}
 1689              	.LCFI26:
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 3, -8
 1692              		.cfi_offset 14, -4
 1693 0004 0246     		mov	r2, r0
 1694              		.loc 1 2452 0 discriminator 1
 1695 0006 00F58053 		add	r3, r0, #4096
 1696 000a 1B68     		ldr	r3, [r3]
 1697 000c CBB1     		cbz	r3, .L176
 1698              		.loc 1 2452 0 is_stmt 0 discriminator 2
 1699 000e 03F58051 		add	r1, r3, #4096
 1700 0012 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1701 0014 B9B1     		cbz	r1, .L177
 1702              		.loc 1 2452 0 discriminator 3
 1703 0016 41F20601 		movw	r1, #4102
 1704 001a 595A     		ldrh	r1, [r3, r1]
 1705 001c 41F20400 		movw	r0, #4100
 1706              	.LVL214:
 1707 0020 125A     		ldrh	r2, [r2, r0]
 1708              	.LVL215:
 1709 0022 9142     		cmp	r1, r2
 1710 0024 01D0     		beq	.L184
ARM GAS  /tmp/ccTBpncU.s 			page 75


2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1711              		.loc 1 2453 0 is_stmt 1
 1712 0026 0920     		movs	r0, #9
 1713              	.L174:
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 
2455:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fil->fs);		/* Lock file system */
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1714              		.loc 1 2458 0
 1715 0028 08BD     		pop	{r3, pc}
 1716              	.L184:
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1717              		.loc 1 2452 0 discriminator 4
 1718 002a 41F20102 		movw	r2, #4097
 1719 002e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1720 0030 FFF7FEFF 		bl	disk_status
 1721              	.LVL216:
 1722 0034 10F0010F 		tst	r0, #1
 1723 0038 07D1     		bne	.L179
2457:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1724              		.loc 1 2457 0
 1725 003a 0020     		movs	r0, #0
 1726 003c F4E7     		b	.L174
 1727              	.LVL217:
 1728              	.L175:
 1729              	.LCFI27:
 1730              		.cfi_def_cfa_offset 0
 1731              		.cfi_restore 3
 1732              		.cfi_restore 14
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1733              		.loc 1 2453 0
 1734 003e 0920     		movs	r0, #9
 1735              	.LVL218:
 1736              		.loc 1 2458 0
 1737 0040 7047     		bx	lr
 1738              	.LVL219:
 1739              	.L176:
 1740              	.LCFI28:
 1741              		.cfi_def_cfa_offset 8
 1742              		.cfi_offset 3, -8
 1743              		.cfi_offset 14, -4
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1744              		.loc 1 2453 0
 1745 0042 0920     		movs	r0, #9
 1746              	.LVL220:
 1747 0044 F0E7     		b	.L174
 1748              	.LVL221:
 1749              	.L177:
 1750 0046 0920     		movs	r0, #9
 1751              	.LVL222:
 1752 0048 EEE7     		b	.L174
 1753              	.LVL223:
 1754              	.L179:
 1755 004a 0920     		movs	r0, #9
 1756 004c ECE7     		b	.L174
 1757              		.cfi_endproc
ARM GAS  /tmp/ccTBpncU.s 			page 76


 1758              	.LFE104:
 1760              		.section	.text.find_volume,"ax",%progbits
 1761              		.align	1
 1762              		.syntax unified
 1763              		.thumb
 1764              		.thumb_func
 1765              		.fpu softvfp
 1767              	find_volume:
 1768              	.LFB103:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1769              		.loc 1 2281 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 16
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773              	.LVL224:
 1774 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1775              	.LCFI29:
 1776              		.cfi_def_cfa_offset 24
 1777              		.cfi_offset 4, -24
 1778              		.cfi_offset 5, -20
 1779              		.cfi_offset 6, -16
 1780              		.cfi_offset 7, -12
 1781              		.cfi_offset 8, -8
 1782              		.cfi_offset 14, -4
 1783 0004 84B0     		sub	sp, sp, #16
 1784              	.LCFI30:
 1785              		.cfi_def_cfa_offset 40
 1786 0006 0646     		mov	r6, r0
 1787 0008 1746     		mov	r7, r2
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1788              		.loc 1 2292 0
 1789 000a 0023     		movs	r3, #0
 1790 000c 0360     		str	r3, [r0]
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1791              		.loc 1 2293 0
 1792 000e 0846     		mov	r0, r1
 1793              	.LVL225:
 1794 0010 FFF7FEFF 		bl	get_ldnumber
 1795              	.LVL226:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1796              		.loc 1 2294 0
 1797 0014 051E     		subs	r5, r0, #0
 1798 0016 C0F2CC81 		blt	.L203
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1799              		.loc 1 2297 0
 1800 001a B94B     		ldr	r3, .L236
 1801 001c 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1802              	.LVL227:
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1803              		.loc 1 2298 0
 1804 0020 002C     		cmp	r4, #0
 1805 0022 00F0CA81 		beq	.L204
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1806              		.loc 1 2301 0
 1807 0026 3460     		str	r4, [r6]
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1808              		.loc 1 2303 0
ARM GAS  /tmp/ccTBpncU.s 			page 77


 1809 0028 04F58053 		add	r3, r4, #4096
 1810 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 002e 83B1     		cbz	r3, .L187
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1812              		.loc 1 2304 0
 1813 0030 41F20103 		movw	r3, #4097
 1814 0034 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1815              	.LVL228:
 1816 0036 FFF7FEFF 		bl	disk_status
 1817              	.LVL229:
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
 1818              		.loc 1 2305 0
 1819 003a 10F0010F 		tst	r0, #1
 1820 003e 08D1     		bne	.L187
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1821              		.loc 1 2306 0
 1822 0040 002F     		cmp	r7, #0
 1823 0042 00F0BC81 		beq	.L205
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1824              		.loc 1 2306 0 is_stmt 0 discriminator 1
 1825 0046 10F0040F 		tst	r0, #4
 1826 004a 40F0BA81 		bne	.L206
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1827              		.loc 1 2308 0 is_stmt 1
 1828 004e 0020     		movs	r0, #0
 1829              	.LVL230:
 1830 0050 B0E1     		b	.L186
 1831              	.L187:
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1832              		.loc 1 2315 0
 1833 0052 04F58053 		add	r3, r4, #4096
 1834 0056 0022     		movs	r2, #0
 1835 0058 1A70     		strb	r2, [r3]
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1836              		.loc 1 2316 0
 1837 005a E8B2     		uxtb	r0, r5
 1838 005c 41F20103 		movw	r3, #4097
 1839 0060 E054     		strb	r0, [r4, r3]
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 1840              		.loc 1 2317 0
 1841 0062 FFF7FEFF 		bl	disk_initialize
 1842              	.LVL231:
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1843              		.loc 1 2318 0
 1844 0066 10F0010F 		tst	r0, #1
 1845 006a 40F0AC81 		bne	.L207
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1846              		.loc 1 2320 0
 1847 006e 1FB1     		cbz	r7, .L188
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1848              		.loc 1 2320 0 is_stmt 0 discriminator 1
 1849 0070 10F0040F 		tst	r0, #4
 1850 0074 40F0A981 		bne	.L208
 1851              	.L188:
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
 1852              		.loc 1 2323 0 is_stmt 1
 1853 0078 04F58052 		add	r2, r4, #4096
ARM GAS  /tmp/ccTBpncU.s 			page 78


 1854 007c 0A32     		adds	r2, r2, #10
 1855 007e 0221     		movs	r1, #2
 1856 0080 41F20103 		movw	r3, #4097
 1857 0084 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1858              	.LVL232:
 1859 0086 FFF7FEFF 		bl	disk_ioctl
 1860              	.LVL233:
 1861 008a 0028     		cmp	r0, #0
 1862 008c 40F09F81 		bne	.L209
2324:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1863              		.loc 1 2324 0
 1864 0090 41F20A03 		movw	r3, #4106
 1865 0094 E35A     		ldrh	r3, [r4, r3]
 1866 0096 B3F5007F 		cmp	r3, #512
 1867 009a C0F09A81 		bcc	.L210
2324:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1868              		.loc 1 2324 0 is_stmt 0 discriminator 2
 1869 009e B3F5805F 		cmp	r3, #4096
 1870 00a2 01D9     		bls	.L231
2324:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1871              		.loc 1 2324 0
 1872 00a4 0120     		movs	r0, #1
 1873 00a6 85E1     		b	.L186
 1874              	.L231:
 1875              	.LVL234:
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
 1876              		.loc 1 2328 0 is_stmt 1
 1877 00a8 0021     		movs	r1, #0
 1878 00aa 2046     		mov	r0, r4
 1879 00ac FFF7FEFF 		bl	check_fs
 1880              	.LVL235:
 1881 00b0 0346     		mov	r3, r0
 1882              	.LVL236:
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
 1883              		.loc 1 2329 0
 1884 00b2 0128     		cmp	r0, #1
 1885 00b4 00F0BF80 		beq	.L212
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 1886              		.loc 1 2327 0
 1887 00b8 0026     		movs	r6, #0
 1888              	.LVL237:
 1889              	.L190:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1890              		.loc 1 2341 0
 1891 00ba 032B     		cmp	r3, #3
 1892 00bc 00F08B81 		beq	.L215
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1893              		.loc 1 2342 0
 1894 00c0 002B     		cmp	r3, #0
 1895 00c2 40F08A81 		bne	.L216
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1896              		.loc 1 2346 0
 1897 00c6 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 1898 00c8 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 1899              	.LVL238:
 1900 00ca 43EA0223 		orr	r3, r3, r2, lsl #8
 1901 00ce 41F20A02 		movw	r2, #4106
ARM GAS  /tmp/ccTBpncU.s 			page 79


 1902 00d2 A05A     		ldrh	r0, [r4, r2]
 1903 00d4 8342     		cmp	r3, r0
 1904 00d6 40F08281 		bne	.L217
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
 1905              		.loc 1 2349 0
 1906 00da E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 1907 00dc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1908              	.LVL239:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1909              		.loc 1 2350 0
 1910 00de 53EA0223 		orrs	r3, r3, r2, lsl #8
 1911              	.LVL240:
 1912 00e2 0DD1     		bne	.L195
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1913              		.loc 1 2350 0 is_stmt 0 discriminator 1
 1914 00e4 94F82720 		ldrb	r2, [r4, #39]	@ zero_extendqisi2
 1915 00e8 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 1916              	.LVL241:
 1917 00ec 1B04     		lsls	r3, r3, #16
 1918 00ee 43EA0263 		orr	r3, r3, r2, lsl #24
 1919 00f2 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 1920 00f6 43EA0223 		orr	r3, r3, r2, lsl #8
 1921 00fa 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 1922 00fe 1343     		orrs	r3, r3, r2
 1923              	.LVL242:
 1924              	.L195:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1925              		.loc 1 2351 0 is_stmt 1
 1926 0100 41F21802 		movw	r2, #4120
 1927 0104 A350     		str	r3, [r4, r2]
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
 1928              		.loc 1 2353 0
 1929 0106 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1930 0108 41F20302 		movw	r2, #4099
 1931 010c A154     		strb	r1, [r4, r2]
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1932              		.loc 1 2354 0
 1933 010e 4A1E     		subs	r2, r1, #1
 1934 0110 D2B2     		uxtb	r2, r2
 1935 0112 012A     		cmp	r2, #1
 1936 0114 00F26581 		bhi	.L218
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1937              		.loc 1 2356 0
 1938 0118 03FB01F1 		mul	r1, r3, r1
 1939              	.LVL243:
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 1940              		.loc 1 2358 0
 1941 011c 657B     		ldrb	r5, [r4, #13]	@ zero_extendqisi2
 1942 011e 41F20202 		movw	r2, #4098
 1943 0122 A554     		strb	r5, [r4, r2]
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1944              		.loc 1 2359 0
 1945 0124 002D     		cmp	r5, #0
 1946 0126 00F05E81 		beq	.L219
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1947              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1948 012a 6A1E     		subs	r2, r5, #1
ARM GAS  /tmp/ccTBpncU.s 			page 80


 1949 012c 1542     		tst	r5, r2
 1950 012e 40F05C81 		bne	.L220
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
 1951              		.loc 1 2362 0 is_stmt 1
 1952 0132 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1953 0134 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 1954 0136 47EA0227 		orr	r7, r7, r2, lsl #8
 1955 013a 41F20802 		movw	r2, #4104
 1956 013e A752     		strh	r7, [r4, r2]	@ movhi
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1957              		.loc 1 2363 0
 1958 0140 4FEA501E 		lsr	lr, r0, #5
 1959 0144 B7FBFEF2 		udiv	r2, r7, lr
 1960 0148 0EFB1272 		mls	r2, lr, r2, r7
 1961 014c 92B2     		uxth	r2, r2
 1962 014e 002A     		cmp	r2, #0
 1963 0150 40F04D81 		bne	.L221
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
 1964              		.loc 1 2366 0
 1965 0154 94F814C0 		ldrb	ip, [r4, #20]	@ zero_extendqisi2
 1966 0158 E27C     		ldrb	r2, [r4, #19]	@ zero_extendqisi2
 1967              	.LVL244:
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1968              		.loc 1 2367 0
 1969 015a 52EA0C22 		orrs	r2, r2, ip, lsl #8
 1970              	.LVL245:
 1971 015e 0ED1     		bne	.L196
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1972              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1973 0160 94F823C0 		ldrb	ip, [r4, #35]	@ zero_extendqisi2
 1974 0164 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 1975              	.LVL246:
 1976 0168 1204     		lsls	r2, r2, #16
 1977 016a 42EA0C62 		orr	r2, r2, ip, lsl #24
 1978 016e 94F821C0 		ldrb	ip, [r4, #33]	@ zero_extendqisi2
 1979 0172 42EA0C22 		orr	r2, r2, ip, lsl #8
 1980 0176 94F820C0 		ldrb	ip, [r4, #32]	@ zero_extendqisi2
 1981 017a 42EA0C02 		orr	r2, r2, ip
 1982              	.LVL247:
 1983              	.L196:
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
 1984              		.loc 1 2369 0 is_stmt 1
 1985 017e 94F80F80 		ldrb	r8, [r4, #15]	@ zero_extendqisi2
 1986 0182 94F80EC0 		ldrb	ip, [r4, #14]	@ zero_extendqisi2
 1987              	.LVL248:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1988              		.loc 1 2370 0
 1989 0186 5CEA082C 		orrs	ip, ip, r8, lsl #8
 1990              	.LVL249:
 1991 018a 00F03281 		beq	.L222
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1992              		.loc 1 2373 0
 1993 018e 0CEB0108 		add	r8, ip, r1
 1994 0192 B7FBFEFE 		udiv	lr, r7, lr
 1995 0196 C644     		add	lr, lr, r8
 1996              	.LVL250:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
ARM GAS  /tmp/ccTBpncU.s 			page 81


 1997              		.loc 1 2374 0
 1998 0198 7245     		cmp	r2, lr
 1999 019a C0F02C81 		bcc	.L223
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 2000              		.loc 1 2375 0
 2001 019e A2EB0E02 		sub	r2, r2, lr
 2002              	.LVL251:
 2003 01a2 B2FBF5F2 		udiv	r2, r2, r5
 2004              	.LVL252:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 2005              		.loc 1 2376 0
 2006 01a6 002A     		cmp	r2, #0
 2007 01a8 00F02781 		beq	.L224
 2008              	.LVL253:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 2009              		.loc 1 2378 0
 2010 01ac 40F6F575 		movw	r5, #4085
 2011 01b0 AA42     		cmp	r2, r5
 2012 01b2 59D8     		bhi	.L225
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 2013              		.loc 1 2377 0
 2014 01b4 0125     		movs	r5, #1
 2015              	.L197:
 2016              	.LVL254:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2017              		.loc 1 2379 0
 2018 01b6 4FF6F578 		movw	r8, #65525
 2019 01ba 4245     		cmp	r2, r8
 2020 01bc 00D9     		bls	.L198
 2021 01be 0325     		movs	r5, #3
 2022              	.LVL255:
 2023              	.L198:
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
 2024              		.loc 1 2382 0
 2025 01c0 0232     		adds	r2, r2, #2
 2026              	.LVL256:
 2027 01c2 41F21408 		movw	r8, #4116
 2028 01c6 44F80820 		str	r2, [r4, r8]
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 2029              		.loc 1 2383 0
 2030 01ca 41F21C08 		movw	r8, #4124
 2031 01ce 44F80860 		str	r6, [r4, r8]
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 2032              		.loc 1 2384 0
 2033 01d2 B444     		add	ip, ip, r6
 2034              	.LVL257:
 2035 01d4 04F58158 		add	r8, r4, #4128
 2036 01d8 C8F800C0 		str	ip, [r8]
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 2037              		.loc 1 2385 0
 2038 01dc B644     		add	lr, lr, r6
 2039              	.LVL258:
 2040 01de 41F22808 		movw	r8, #4136
 2041 01e2 44F808E0 		str	lr, [r4, r8]
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 2042              		.loc 1 2386 0
 2043 01e6 032D     		cmp	r5, #3
ARM GAS  /tmp/ccTBpncU.s 			page 82


 2044 01e8 40D0     		beq	.L232
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2045              		.loc 1 2391 0
 2046 01ea 002F     		cmp	r7, #0
 2047 01ec 00F00981 		beq	.L228
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
 2048              		.loc 1 2392 0
 2049 01f0 6144     		add	r1, r1, ip
 2050              	.LVL259:
 2051 01f2 41F22407 		movw	r7, #4132
 2052 01f6 E151     		str	r1, [r4, r7]
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2053              		.loc 1 2394 0
 2054 01f8 022D     		cmp	r5, #2
 2055 01fa 7AD1     		bne	.L201
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2056              		.loc 1 2394 0 is_stmt 0 discriminator 1
 2057 01fc 5200     		lsls	r2, r2, #1
 2058              	.LVL260:
 2059 01fe 4AE0     		b	.L200
 2060              	.LVL261:
 2061              	.L213:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2062              		.loc 1 2332 0 is_stmt 1
 2063 0200 0023     		movs	r3, #0
 2064              	.LVL262:
 2065              	.L191:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2066              		.loc 1 2332 0 is_stmt 0 discriminator 4
 2067 0202 04AA     		add	r2, sp, #16
 2068 0204 02EB8102 		add	r2, r2, r1, lsl #2
 2069 0208 42F8103C 		str	r3, [r2, #-16]
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 2070              		.loc 1 2330 0 is_stmt 1 discriminator 4
 2071 020c 0131     		adds	r1, r1, #1
 2072              	.LVL263:
 2073              	.L189:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 2074              		.loc 1 2330 0 is_stmt 0 discriminator 2
 2075 020e 0329     		cmp	r1, #3
 2076 0210 13D8     		bhi	.L233
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
 2077              		.loc 1 2331 0 is_stmt 1
 2078 0212 0B01     		lsls	r3, r1, #4
 2079 0214 03F5DF73 		add	r3, r3, #446
 2080 0218 2344     		add	r3, r3, r4
 2081              	.LVL264:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2082              		.loc 1 2332 0
 2083 021a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 2084 021c 002A     		cmp	r2, #0
 2085 021e EFD0     		beq	.L213
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2086              		.loc 1 2332 0 is_stmt 0 discriminator 1
 2087 0220 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 2088 0222 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 2089 0224 1204     		lsls	r2, r2, #16
ARM GAS  /tmp/ccTBpncU.s 			page 83


 2090 0226 42EA0062 		orr	r2, r2, r0, lsl #24
 2091 022a 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 2092 022c 42EA0022 		orr	r2, r2, r0, lsl #8
 2093 0230 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2094              	.LVL265:
 2095 0232 1343     		orrs	r3, r3, r2
 2096 0234 E5E7     		b	.L191
 2097              	.LVL266:
 2098              	.L212:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 2099              		.loc 1 2330 0 is_stmt 1
 2100 0236 0021     		movs	r1, #0
 2101 0238 E9E7     		b	.L189
 2102              	.LVL267:
 2103              	.L233:
 2104 023a 0025     		movs	r5, #0
 2105              	.LVL268:
 2106 023c 0BE0     		b	.L194
 2107              	.LVL269:
 2108              	.L234:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 2109              		.loc 1 2338 0 discriminator 1
 2110 023e 3146     		mov	r1, r6
 2111 0240 2046     		mov	r0, r4
 2112 0242 FFF7FEFF 		bl	check_fs
 2113              	.LVL270:
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2114              		.loc 1 2339 0 discriminator 1
 2115 0246 0346     		mov	r3, r0
 2116 0248 0028     		cmp	r0, #0
 2117 024a 3FF436AF 		beq	.L190
 2118              	.LVL271:
 2119              	.L193:
 2120 024e 0135     		adds	r5, r5, #1
 2121              	.LVL272:
 2122 0250 032D     		cmp	r5, #3
 2123 0252 3FF632AF 		bhi	.L190
 2124              	.LVL273:
 2125              	.L194:
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
 2126              		.loc 1 2337 0
 2127 0256 04AB     		add	r3, sp, #16
 2128 0258 03EB8503 		add	r3, r3, r5, lsl #2
 2129 025c 53F8106C 		ldr	r6, [r3, #-16]
 2130              	.LVL274:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 2131              		.loc 1 2338 0
 2132 0260 002E     		cmp	r6, #0
 2133 0262 ECD1     		bne	.L234
 2134 0264 0223     		movs	r3, #2
 2135 0266 F2E7     		b	.L193
 2136              	.LVL275:
 2137              	.L225:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 2138              		.loc 1 2378 0
 2139 0268 0225     		movs	r5, #2
 2140 026a A4E7     		b	.L197
ARM GAS  /tmp/ccTBpncU.s 			page 84


 2141              	.LVL276:
 2142              	.L232:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 2143              		.loc 1 2387 0
 2144 026c 002F     		cmp	r7, #0
 2145 026e 40F0C680 		bne	.L227
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
 2146              		.loc 1 2388 0
 2147 0272 94F82F70 		ldrb	r7, [r4, #47]	@ zero_extendqisi2
 2148 0276 94F82E10 		ldrb	r1, [r4, #46]	@ zero_extendqisi2
 2149              	.LVL277:
 2150 027a 0904     		lsls	r1, r1, #16
 2151 027c 41EA0761 		orr	r1, r1, r7, lsl #24
 2152 0280 94F82D70 		ldrb	r7, [r4, #45]	@ zero_extendqisi2
 2153 0284 41EA0721 		orr	r1, r1, r7, lsl #8
 2154 0288 94F82C70 		ldrb	r7, [r4, #44]	@ zero_extendqisi2
 2155 028c 3943     		orrs	r1, r1, r7
 2156 028e 41F22407 		movw	r7, #4132
 2157 0292 E151     		str	r1, [r4, r7]
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 2158              		.loc 1 2389 0
 2159 0294 9200     		lsls	r2, r2, #2
 2160              	.LVL278:
 2161              	.L200:
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 2162              		.loc 1 2396 0
 2163 0296 0244     		add	r2, r2, r0
 2164              	.LVL279:
 2165 0298 013A     		subs	r2, r2, #1
 2166 029a B2FBF0F0 		udiv	r0, r2, r0
 2167 029e 9842     		cmp	r0, r3
 2168 02a0 00F2B180 		bhi	.L229
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2169              		.loc 1 2401 0
 2170 02a4 4FF0FF33 		mov	r3, #-1
 2171 02a8 41F21002 		movw	r2, #4112
 2172 02ac A350     		str	r3, [r4, r2]
 2173 02ae 41F20C02 		movw	r2, #4108
 2174 02b2 A350     		str	r3, [r4, r2]
2404:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2175              		.loc 1 2404 0
 2176 02b4 41F20503 		movw	r3, #4101
 2177 02b8 8022     		movs	r2, #128
 2178 02ba E254     		strb	r2, [r4, r3]
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
 2179              		.loc 1 2406 0
 2180 02bc 032D     		cmp	r5, #3
 2181 02be 08D1     		bne	.L202
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
 2182              		.loc 1 2407 0
 2183 02c0 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 2184 02c4 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 2185 02c8 43EA0223 		orr	r3, r3, r2, lsl #8
 2186 02cc 1BB2     		sxth	r3, r3
 2187 02ce 012B     		cmp	r3, #1
 2188 02d0 1AD0     		beq	.L235
 2189              	.L202:
ARM GAS  /tmp/ccTBpncU.s 			page 85


2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
 2190              		.loc 1 2425 0
 2191 02d2 04F58053 		add	r3, r4, #4096
 2192 02d6 1D70     		strb	r5, [r3]
2426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 2193              		.loc 1 2426 0
 2194 02d8 0A4A     		ldr	r2, .L236+4
 2195 02da 1388     		ldrh	r3, [r2]
 2196 02dc 0133     		adds	r3, r3, #1
 2197 02de 9BB2     		uxth	r3, r3
 2198 02e0 1380     		strh	r3, [r2]	@ movhi
 2199 02e2 41F20602 		movw	r2, #4102
 2200 02e6 A352     		strh	r3, [r4, r2]	@ movhi
2431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2201              		.loc 1 2431 0
 2202 02e8 2046     		mov	r0, r4
 2203 02ea FFF7FEFF 		bl	clear_lock
 2204              	.LVL280:
2434:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2205              		.loc 1 2434 0
 2206 02ee 0020     		movs	r0, #0
 2207 02f0 60E0     		b	.L186
 2208              	.LVL281:
 2209              	.L201:
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2210              		.loc 1 2394 0 discriminator 2
 2211 02f2 02EB4201 		add	r1, r2, r2, lsl #1
 2212 02f6 02F00102 		and	r2, r2, #1
 2213              	.LVL282:
 2214 02fa 02EB5102 		add	r2, r2, r1, lsr #1
 2215 02fe CAE7     		b	.L200
 2216              	.L237:
 2217              		.align	2
 2218              	.L236:
 2219 0300 00000000 		.word	.LANCHOR2
 2220 0304 00000000 		.word	.LANCHOR3
 2221              	.L235:
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 2222              		.loc 1 2408 0
 2223 0308 711C     		adds	r1, r6, #1
 2224 030a 2046     		mov	r0, r4
 2225 030c FFF7FEFF 		bl	move_window
 2226              	.LVL283:
 2227 0310 0028     		cmp	r0, #0
 2228 0312 DED1     		bne	.L202
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2229              		.loc 1 2410 0
 2230 0314 41F20503 		movw	r3, #4101
 2231 0318 0022     		movs	r2, #0
 2232 031a E254     		strb	r2, [r4, r3]
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
 2233              		.loc 1 2411 0
 2234 031c 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 2235 0320 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 2236 0324 43EA0223 		orr	r3, r3, r2, lsl #8
 2237 0328 1BB2     		sxth	r3, r3
 2238 032a 384A     		ldr	r2, .L238
ARM GAS  /tmp/ccTBpncU.s 			page 86


 2239 032c 9342     		cmp	r3, r2
 2240 032e D0D1     		bne	.L202
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
 2241              		.loc 1 2412 0
 2242 0330 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 2243 0332 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2244 0334 1B04     		lsls	r3, r3, #16
 2245 0336 43EA0263 		orr	r3, r3, r2, lsl #24
 2246 033a 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2247 033c 43EA0223 		orr	r3, r3, r2, lsl #8
 2248 0340 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 2249 0342 1343     		orrs	r3, r3, r2
 2250 0344 324A     		ldr	r2, .L238+4
 2251 0346 9342     		cmp	r3, r2
 2252 0348 C3D1     		bne	.L202
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2253              		.loc 1 2413 0
 2254 034a 94F8E721 		ldrb	r2, [r4, #487]	@ zero_extendqisi2
 2255 034e 94F8E631 		ldrb	r3, [r4, #486]	@ zero_extendqisi2
 2256 0352 1B04     		lsls	r3, r3, #16
 2257 0354 43EA0263 		orr	r3, r3, r2, lsl #24
 2258 0358 94F8E521 		ldrb	r2, [r4, #485]	@ zero_extendqisi2
 2259 035c 43EA0223 		orr	r3, r3, r2, lsl #8
 2260 0360 94F8E421 		ldrb	r2, [r4, #484]	@ zero_extendqisi2
 2261 0364 1343     		orrs	r3, r3, r2
 2262 0366 2B4A     		ldr	r2, .L238+8
 2263 0368 9342     		cmp	r3, r2
 2264 036a B2D1     		bne	.L202
2416:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2265              		.loc 1 2416 0
 2266 036c 94F8EB21 		ldrb	r2, [r4, #491]	@ zero_extendqisi2
 2267 0370 94F8EA31 		ldrb	r3, [r4, #490]	@ zero_extendqisi2
 2268 0374 1B04     		lsls	r3, r3, #16
 2269 0376 43EA0263 		orr	r3, r3, r2, lsl #24
 2270 037a 94F8E921 		ldrb	r2, [r4, #489]	@ zero_extendqisi2
 2271 037e 43EA0223 		orr	r3, r3, r2, lsl #8
 2272 0382 94F8E821 		ldrb	r2, [r4, #488]	@ zero_extendqisi2
 2273 0386 1343     		orrs	r3, r3, r2
 2274 0388 41F21002 		movw	r2, #4112
 2275 038c A350     		str	r3, [r4, r2]
2419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2276              		.loc 1 2419 0
 2277 038e 94F8EF21 		ldrb	r2, [r4, #495]	@ zero_extendqisi2
 2278 0392 94F8EE31 		ldrb	r3, [r4, #494]	@ zero_extendqisi2
 2279 0396 1B04     		lsls	r3, r3, #16
 2280 0398 43EA0263 		orr	r3, r3, r2, lsl #24
 2281 039c 94F8ED21 		ldrb	r2, [r4, #493]	@ zero_extendqisi2
 2282 03a0 43EA0223 		orr	r3, r3, r2, lsl #8
 2283 03a4 94F8EC21 		ldrb	r2, [r4, #492]	@ zero_extendqisi2
 2284 03a8 1343     		orrs	r3, r3, r2
 2285 03aa 41F20C02 		movw	r2, #4108
 2286 03ae A350     		str	r3, [r4, r2]
 2287 03b0 8FE7     		b	.L202
 2288              	.LVL284:
 2289              	.L203:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2290              		.loc 1 2294 0
ARM GAS  /tmp/ccTBpncU.s 			page 87


 2291 03b2 0B20     		movs	r0, #11
 2292              	.LVL285:
 2293              	.L186:
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2294              		.loc 1 2435 0
 2295 03b4 04B0     		add	sp, sp, #16
 2296              	.LCFI31:
 2297              		.cfi_remember_state
 2298              		.cfi_def_cfa_offset 24
 2299              		@ sp needed
 2300 03b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2301              	.LVL286:
 2302              	.L204:
 2303              	.LCFI32:
 2304              		.cfi_restore_state
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2305              		.loc 1 2298 0
 2306 03ba 0C20     		movs	r0, #12
 2307              	.LVL287:
 2308 03bc FAE7     		b	.L186
 2309              	.LVL288:
 2310              	.L205:
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2311              		.loc 1 2308 0
 2312 03be 0020     		movs	r0, #0
 2313              	.LVL289:
 2314 03c0 F8E7     		b	.L186
 2315              	.LVL290:
 2316              	.L206:
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
 2317              		.loc 1 2307 0
 2318 03c2 0A20     		movs	r0, #10
 2319              	.LVL291:
 2320 03c4 F6E7     		b	.L186
 2321              	.LVL292:
 2322              	.L207:
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 2323              		.loc 1 2319 0
 2324 03c6 0320     		movs	r0, #3
 2325              	.LVL293:
 2326 03c8 F4E7     		b	.L186
 2327              	.LVL294:
 2328              	.L208:
2321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
 2329              		.loc 1 2321 0
 2330 03ca 0A20     		movs	r0, #10
 2331              	.LVL295:
 2332 03cc F2E7     		b	.L186
 2333              	.L209:
2324:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2334              		.loc 1 2324 0
 2335 03ce 0120     		movs	r0, #1
 2336 03d0 F0E7     		b	.L186
 2337              	.L210:
 2338 03d2 0120     		movs	r0, #1
 2339 03d4 EEE7     		b	.L186
 2340              	.LVL296:
ARM GAS  /tmp/ccTBpncU.s 			page 88


 2341              	.L215:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 2342              		.loc 1 2341 0
 2343 03d6 0120     		movs	r0, #1
 2344 03d8 ECE7     		b	.L186
 2345              	.L216:
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2346              		.loc 1 2342 0
 2347 03da 0D20     		movs	r0, #13
 2348 03dc EAE7     		b	.L186
 2349              	.LVL297:
 2350              	.L217:
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2351              		.loc 1 2347 0
 2352 03de 0D20     		movs	r0, #13
 2353 03e0 E8E7     		b	.L186
 2354              	.LVL298:
 2355              	.L218:
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
 2356              		.loc 1 2355 0
 2357 03e2 0D20     		movs	r0, #13
 2358 03e4 E6E7     		b	.L186
 2359              	.LVL299:
 2360              	.L219:
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2361              		.loc 1 2360 0
 2362 03e6 0D20     		movs	r0, #13
 2363 03e8 E4E7     		b	.L186
 2364              	.L220:
 2365 03ea 0D20     		movs	r0, #13
 2366 03ec E2E7     		b	.L186
 2367              	.L221:
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2368              		.loc 1 2364 0
 2369 03ee 0D20     		movs	r0, #13
 2370 03f0 E0E7     		b	.L186
 2371              	.LVL300:
 2372              	.L222:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2373              		.loc 1 2370 0
 2374 03f2 0D20     		movs	r0, #13
 2375 03f4 DEE7     		b	.L186
 2376              	.LVL301:
 2377              	.L223:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 2378              		.loc 1 2374 0
 2379 03f6 0D20     		movs	r0, #13
 2380 03f8 DCE7     		b	.L186
 2381              	.LVL302:
 2382              	.L224:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 2383              		.loc 1 2376 0
 2384 03fa 0D20     		movs	r0, #13
 2385 03fc DAE7     		b	.L186
 2386              	.LVL303:
 2387              	.L227:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
ARM GAS  /tmp/ccTBpncU.s 			page 89


 2388              		.loc 1 2387 0
 2389 03fe 0D20     		movs	r0, #13
 2390 0400 D8E7     		b	.L186
 2391              	.L228:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2392              		.loc 1 2391 0
 2393 0402 0D20     		movs	r0, #13
 2394 0404 D6E7     		b	.L186
 2395              	.LVL304:
 2396              	.L229:
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2397              		.loc 1 2397 0
 2398 0406 0D20     		movs	r0, #13
 2399 0408 D4E7     		b	.L186
 2400              	.L239:
 2401 040a 00BF     		.align	2
 2402              	.L238:
 2403 040c 55AAFFFF 		.word	-21931
 2404 0410 52526141 		.word	1096897106
 2405 0414 72724161 		.word	1631679090
 2406              		.cfi_endproc
 2407              	.LFE103:
 2409              		.section	.text.sync_fs,"ax",%progbits
 2410              		.align	1
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2414              		.fpu softvfp
 2416              	sync_fs:
 2417              	.LFB77:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2418              		.loc 1 836 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              	.LVL305:
 2423 0000 38B5     		push	{r3, r4, r5, lr}
 2424              	.LCFI33:
 2425              		.cfi_def_cfa_offset 16
 2426              		.cfi_offset 3, -16
 2427              		.cfi_offset 4, -12
 2428              		.cfi_offset 5, -8
 2429              		.cfi_offset 14, -4
 2430 0002 0446     		mov	r4, r0
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2431              		.loc 1 840 0
 2432 0004 FFF7FEFF 		bl	sync_window
 2433              	.LVL306:
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 2434              		.loc 1 841 0
 2435 0008 0546     		mov	r5, r0
 2436 000a 68B9     		cbnz	r0, .L241
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2437              		.loc 1 843 0
 2438 000c 04F58053 		add	r3, r4, #4096
 2439 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2440 0012 032B     		cmp	r3, #3
ARM GAS  /tmp/ccTBpncU.s 			page 90


 2441 0014 0AD0     		beq	.L245
 2442              	.LVL307:
 2443              	.L242:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 2444              		.loc 1 857 0
 2445 0016 0022     		movs	r2, #0
 2446 0018 1146     		mov	r1, r2
 2447 001a 41F20103 		movw	r3, #4097
 2448 001e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 2449 0020 FFF7FEFF 		bl	disk_ioctl
 2450              	.LVL308:
 2451 0024 00B1     		cbz	r0, .L241
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2452              		.loc 1 858 0
 2453 0026 0125     		movs	r5, #1
 2454              	.L241:
 2455              	.LVL309:
 862:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2456              		.loc 1 862 0
 2457 0028 2846     		mov	r0, r5
 2458 002a 38BD     		pop	{r3, r4, r5, pc}
 2459              	.LVL310:
 2460              	.L245:
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2461              		.loc 1 843 0 discriminator 1
 2462 002c 41F20503 		movw	r3, #4101
 2463 0030 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 2464 0032 012B     		cmp	r3, #1
 2465 0034 EFD1     		bne	.L242
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 2466              		.loc 1 845 0
 2467 0036 41F20A03 		movw	r3, #4106
 2468 003a E25A     		ldrh	r2, [r4, r3]
 2469 003c 0021     		movs	r1, #0
 2470 003e 2046     		mov	r0, r4
 2471              	.LVL311:
 2472 0040 FFF7FEFF 		bl	mem_set
 2473              	.LVL312:
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 2474              		.loc 1 846 0
 2475 0044 5523     		movs	r3, #85
 2476 0046 84F8FE31 		strb	r3, [r4, #510]
 2477 004a AA23     		movs	r3, #170
 2478 004c 84F8FF31 		strb	r3, [r4, #511]
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 2479              		.loc 1 847 0
 2480 0050 5223     		movs	r3, #82
 2481 0052 2370     		strb	r3, [r4]
 2482 0054 6370     		strb	r3, [r4, #1]
 2483 0056 6123     		movs	r3, #97
 2484 0058 A370     		strb	r3, [r4, #2]
 2485 005a 4122     		movs	r2, #65
 2486 005c E270     		strb	r2, [r4, #3]
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 2487              		.loc 1 848 0
 2488 005e 7221     		movs	r1, #114
 2489 0060 84F8E411 		strb	r1, [r4, #484]
ARM GAS  /tmp/ccTBpncU.s 			page 91


 2490 0064 84F8E511 		strb	r1, [r4, #485]
 2491 0068 84F8E621 		strb	r2, [r4, #486]
 2492 006c 84F8E731 		strb	r3, [r4, #487]
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 2493              		.loc 1 849 0
 2494 0070 41F21003 		movw	r3, #4112
 2495 0074 E358     		ldr	r3, [r4, r3]
 2496 0076 84F8E831 		strb	r3, [r4, #488]
 2497 007a C3F30722 		ubfx	r2, r3, #8, #8
 2498 007e 84F8E921 		strb	r2, [r4, #489]
 2499 0082 C3F30742 		ubfx	r2, r3, #16, #8
 2500 0086 84F8EA21 		strb	r2, [r4, #490]
 2501 008a 1B0E     		lsrs	r3, r3, #24
 2502 008c 84F8EB31 		strb	r3, [r4, #491]
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 2503              		.loc 1 850 0
 2504 0090 41F20C03 		movw	r3, #4108
 2505 0094 E358     		ldr	r3, [r4, r3]
 2506 0096 84F8EC31 		strb	r3, [r4, #492]
 2507 009a C3F30722 		ubfx	r2, r3, #8, #8
 2508 009e 84F8ED21 		strb	r2, [r4, #493]
 2509 00a2 C3F30742 		ubfx	r2, r3, #16, #8
 2510 00a6 84F8EE21 		strb	r2, [r4, #494]
 2511 00aa 1B0E     		lsrs	r3, r3, #24
 2512 00ac 84F8EF31 		strb	r3, [r4, #495]
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 2513              		.loc 1 852 0
 2514 00b0 41F21C03 		movw	r3, #4124
 2515 00b4 E258     		ldr	r2, [r4, r3]
 2516 00b6 0132     		adds	r2, r2, #1
 2517 00b8 41F22C03 		movw	r3, #4140
 2518 00bc E250     		str	r2, [r4, r3]
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 2519              		.loc 1 853 0
 2520 00be 0123     		movs	r3, #1
 2521 00c0 2146     		mov	r1, r4
 2522 00c2 41F20100 		movw	r0, #4097
 2523 00c6 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 2524 00c8 FFF7FEFF 		bl	disk_write
 2525              	.LVL313:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2526              		.loc 1 854 0
 2527 00cc 41F20503 		movw	r3, #4101
 2528 00d0 0022     		movs	r2, #0
 2529 00d2 E254     		strb	r2, [r4, r3]
 2530 00d4 9FE7     		b	.L242
 2531              		.cfi_endproc
 2532              	.LFE77:
 2534              		.section	.text.create_name,"ax",%progbits
 2535              		.align	1
 2536              		.syntax unified
 2537              		.thumb
 2538              		.thumb_func
 2539              		.fpu softvfp
 2541              	create_name:
 2542              	.LFB99:
1917:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
ARM GAS  /tmp/ccTBpncU.s 			page 92


 2543              		.loc 1 1917 0
 2544              		.cfi_startproc
 2545              		@ args = 0, pretend = 0, frame = 8
 2546              		@ frame_needed = 0, uses_anonymous_args = 0
 2547              	.LVL314:
 2548 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2549              	.LCFI34:
 2550              		.cfi_def_cfa_offset 36
 2551              		.cfi_offset 4, -36
 2552              		.cfi_offset 5, -32
 2553              		.cfi_offset 6, -28
 2554              		.cfi_offset 7, -24
 2555              		.cfi_offset 8, -20
 2556              		.cfi_offset 9, -16
 2557              		.cfi_offset 10, -12
 2558              		.cfi_offset 11, -8
 2559              		.cfi_offset 14, -4
 2560 0004 83B0     		sub	sp, sp, #12
 2561              	.LCFI35:
 2562              		.cfi_def_cfa_offset 48
 2563 0006 8046     		mov	r8, r0
 2564 0008 0F46     		mov	r7, r1
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
 2565              		.loc 1 1925 0
 2566 000a 0E68     		ldr	r6, [r1]
 2567              	.LVL315:
 2568 000c 00E0     		b	.L247
 2569              	.L248:
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
 2570              		.loc 1 1925 0 is_stmt 0 discriminator 5
 2571 000e 0136     		adds	r6, r6, #1
 2572              	.LVL316:
 2573              	.L247:
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
 2574              		.loc 1 1925 0 discriminator 1
 2575 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2576 0012 2F2B     		cmp	r3, #47
 2577 0014 FBD0     		beq	.L248
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
 2578              		.loc 1 1925 0 discriminator 4
 2579 0016 5C2B     		cmp	r3, #92
 2580 0018 F9D0     		beq	.L248
1926:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = di = 0;
 2581              		.loc 1 1926 0 is_stmt 1
 2582 001a 08F58153 		add	r3, r8, #4128
 2583 001e 1D68     		ldr	r5, [r3]
 2584              	.LVL317:
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 2585              		.loc 1 1927 0
 2586 0020 0024     		movs	r4, #0
 2587 0022 02E0     		b	.L252
 2588              	.LVL318:
 2589              	.L251:
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2590              		.loc 1 1948 0
 2591 0024 25F81490 		strh	r9, [r5, r4, lsl #1]	@ movhi
1929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
ARM GAS  /tmp/ccTBpncU.s 			page 93


 2592              		.loc 1 1929 0
 2593 0028 5446     		mov	r4, r10
 2594              	.LVL319:
 2595              	.L252:
 2596 002a 04F1010A 		add	r10, r4, #1
 2597              	.LVL320:
 2598 002e 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 2599              	.LVL321:
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
 2600              		.loc 1 1930 0
 2601 0030 1F28     		cmp	r0, #31
 2602 0032 17D9     		bls	.L249
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
 2603              		.loc 1 1930 0 is_stmt 0 discriminator 1
 2604 0034 2F28     		cmp	r0, #47
 2605 0036 15D0     		beq	.L249
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
 2606              		.loc 1 1930 0 discriminator 2
 2607 0038 5C28     		cmp	r0, #92
 2608 003a 13D0     		beq	.L249
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
 2609              		.loc 1 1931 0 is_stmt 1
 2610 003c FE2C     		cmp	r4, #254
 2611 003e 00F2EC80 		bhi	.L285
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
 2612              		.loc 1 1943 0
 2613 0042 0121     		movs	r1, #1
 2614 0044 FFF7FEFF 		bl	ff_convert
 2615              	.LVL322:
1944:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2616              		.loc 1 1944 0
 2617 0048 8146     		mov	r9, r0
 2618 004a 0028     		cmp	r0, #0
 2619 004c 00F0E780 		beq	.L286
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
 2620              		.loc 1 1946 0
 2621 0050 7F28     		cmp	r0, #127
 2622 0052 E7D8     		bhi	.L251
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
 2623              		.loc 1 1946 0 is_stmt 0 discriminator 1
 2624 0054 0146     		mov	r1, r0
 2625 0056 7448     		ldr	r0, .L301
 2626              	.LVL323:
 2627 0058 FFF7FEFF 		bl	chk_chr
 2628              	.LVL324:
 2629 005c 0028     		cmp	r0, #0
 2630 005e E1D0     		beq	.L251
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 2631              		.loc 1 1947 0 is_stmt 1
 2632 0060 0620     		movs	r0, #6
 2633 0062 93E0     		b	.L250
 2634              	.LVL325:
 2635              	.L249:
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 2636              		.loc 1 1950 0
 2637 0064 5644     		add	r6, r6, r10
 2638              	.LVL326:
ARM GAS  /tmp/ccTBpncU.s 			page 94


 2639 0066 3E60     		str	r6, [r7]
1951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 2640              		.loc 1 1951 0
 2641 0068 1F28     		cmp	r0, #31
 2642 006a 01D8     		bhi	.L288
 2643 006c 0427     		movs	r7, #4
 2644              	.LVL327:
 2645 006e 02E0     		b	.L254
 2646              	.LVL328:
 2647              	.L288:
 2648 0070 0027     		movs	r7, #0
 2649              	.LVL329:
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
 2650              		.loc 1 1962 0
 2651 0072 00E0     		b	.L254
 2652              	.LVL330:
 2653              	.L255:
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2654              		.loc 1 1965 0
 2655 0074 013C     		subs	r4, r4, #1
 2656              	.LVL331:
 2657              	.L254:
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
 2658              		.loc 1 1962 0
 2659 0076 44B1     		cbz	r4, .L256
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
 2660              		.loc 1 1963 0
 2661 0078 04F10043 		add	r3, r4, #-2147483648
 2662 007c 013B     		subs	r3, r3, #1
 2663 007e 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 2664              	.LVL332:
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
 2665              		.loc 1 1964 0
 2666 0082 202B     		cmp	r3, #32
 2667 0084 F6D0     		beq	.L255
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
 2668              		.loc 1 1964 0 is_stmt 0 discriminator 1
 2669 0086 2E2B     		cmp	r3, #46
 2670 0088 F4D0     		beq	.L255
 2671              	.LVL333:
 2672              	.L256:
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2673              		.loc 1 1967 0 is_stmt 1
 2674 008a 002C     		cmp	r4, #0
 2675 008c 00F0C980 		beq	.L289
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2676              		.loc 1 1969 0
 2677 0090 0026     		movs	r6, #0
 2678 0092 25F81460 		strh	r6, [r5, r4, lsl #1]	@ movhi
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
 2679              		.loc 1 1972 0
 2680 0096 0B22     		movs	r2, #11
 2681 0098 2021     		movs	r1, #32
 2682 009a 41F21803 		movw	r3, #4120
 2683 009e 58F80300 		ldr	r0, [r8, r3]
 2684 00a2 FFF7FEFF 		bl	mem_set
 2685              	.LVL334:
ARM GAS  /tmp/ccTBpncU.s 			page 95


1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 2686              		.loc 1 1973 0
 2687 00a6 00E0     		b	.L258
 2688              	.LVL335:
 2689              	.L259:
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 2690              		.loc 1 1973 0 is_stmt 0 discriminator 5
 2691 00a8 0136     		adds	r6, r6, #1
 2692              	.LVL336:
 2693              	.L258:
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 2694              		.loc 1 1973 0 discriminator 1
 2695 00aa 35F81620 		ldrh	r2, [r5, r6, lsl #1]
 2696 00ae 202A     		cmp	r2, #32
 2697 00b0 FAD0     		beq	.L259
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 2698              		.loc 1 1973 0 discriminator 4
 2699 00b2 2E2A     		cmp	r2, #46
 2700 00b4 F8D0     		beq	.L259
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 2701              		.loc 1 1974 0 is_stmt 1
 2702 00b6 1EB1     		cbz	r6, .L261
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 2703              		.loc 1 1974 0 is_stmt 0 discriminator 1
 2704 00b8 47F00307 		orr	r7, r7, #3
 2705              	.LVL337:
 2706 00bc 00E0     		b	.L261
 2707              	.L263:
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2708              		.loc 1 1975 0 is_stmt 1 discriminator 3
 2709 00be 013C     		subs	r4, r4, #1
 2710              	.LVL338:
 2711              	.L261:
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2712              		.loc 1 1975 0 is_stmt 0 discriminator 1
 2713 00c0 6CB1     		cbz	r4, .L290
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2714              		.loc 1 1975 0 discriminator 2
 2715 00c2 04F10042 		add	r2, r4, #-2147483648
 2716 00c6 013A     		subs	r2, r2, #1
 2717 00c8 35F81220 		ldrh	r2, [r5, r2, lsl #1]
 2718 00cc 2E2A     		cmp	r2, #46
 2719 00ce F6D1     		bne	.L263
 2720 00d0 4FF0080B 		mov	fp, #8
 2721 00d4 4FF0000A 		mov	r10, #0
 2722 00d8 CDF804A0 		str	r10, [sp, #4]
 2723 00dc 0AE0     		b	.L264
 2724              	.L290:
 2725 00de A246     		mov	r10, r4
 2726 00e0 4FF0080B 		mov	fp, #8
 2727 00e4 0023     		movs	r3, #0
 2728 00e6 0193     		str	r3, [sp, #4]
 2729 00e8 04E0     		b	.L264
 2730              	.LVL339:
 2731              	.L292:
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 2732              		.loc 1 1981 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccTBpncU.s 			page 96


 2733 00ea 4C45     		cmp	r4, r9
 2734 00ec 0BD0     		beq	.L267
 2735              	.L266:
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2736              		.loc 1 1982 0
 2737 00ee 47F00307 		orr	r7, r7, #3
 2738              	.LVL340:
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 2739              		.loc 1 1979 0
 2740 00f2 4E46     		mov	r6, r9
 2741              	.LVL341:
 2742              	.L264:
 2743 00f4 06F10109 		add	r9, r6, #1
 2744              	.LVL342:
 2745 00f8 35F81660 		ldrh	r6, [r5, r6, lsl #1]
 2746              	.LVL343:
1980:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
 2747              		.loc 1 1980 0
 2748 00fc 0EB3     		cbz	r6, .L265
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 2749              		.loc 1 1981 0
 2750 00fe 202E     		cmp	r6, #32
 2751 0100 F5D0     		beq	.L266
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 2752              		.loc 1 1981 0 is_stmt 0 discriminator 1
 2753 0102 2E2E     		cmp	r6, #46
 2754 0104 F1D0     		beq	.L292
 2755              	.L267:
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
 2756              		.loc 1 1985 0 is_stmt 1
 2757 0106 DA45     		cmp	r10, fp
 2758 0108 12D2     		bcs	.L269
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
 2759              		.loc 1 1985 0 is_stmt 0 discriminator 1
 2760 010a 4C45     		cmp	r4, r9
 2761 010c 10D0     		beq	.L269
1995:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 2762              		.loc 1 1995 0 is_stmt 1
 2763 010e 7F2E     		cmp	r6, #127
 2764 0110 4CD8     		bhi	.L293
 2765              	.L273:
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 2766              		.loc 1 2011 0
 2767 0112 002E     		cmp	r6, #0
 2768 0114 57D1     		bne	.L294
 2769              	.L275:
 2770              	.LVL344:
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 2771              		.loc 1 2012 0
 2772 0116 47F00307 		orr	r7, r7, #3
 2773              	.LVL345:
 2774 011a 5F26     		movs	r6, #95
 2775              	.LVL346:
 2776              	.L277:
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2777              		.loc 1 2023 0
 2778 011c 41F21803 		movw	r3, #4120
ARM GAS  /tmp/ccTBpncU.s 			page 97


 2779 0120 58F80330 		ldr	r3, [r8, r3]
 2780              	.LVL347:
 2781 0124 03F80A60 		strb	r6, [r3, r10]
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 2782              		.loc 1 1979 0
 2783 0128 4E46     		mov	r6, r9
 2784              	.LVL348:
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2785              		.loc 1 2023 0
 2786 012a 0AF1010A 		add	r10, r10, #1
 2787              	.LVL349:
 2788 012e E1E7     		b	.L264
 2789              	.LVL350:
 2790              	.L269:
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
 2791              		.loc 1 1986 0
 2792 0130 BBF10B0F 		cmp	fp, #11
 2793 0134 2DD0     		beq	.L295
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 2794              		.loc 1 1989 0
 2795 0136 4C45     		cmp	r4, r9
 2796 0138 01D0     		beq	.L272
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 2797              		.loc 1 1989 0 is_stmt 0 discriminator 1
 2798 013a 47F00307 		orr	r7, r7, #3
 2799              	.LVL351:
 2800              	.L272:
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
 2801              		.loc 1 1990 0 is_stmt 1
 2802 013e 4C45     		cmp	r4, r9
 2803 0140 2AD2     		bcs	.L296
 2804              	.L265:
2026:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2805              		.loc 1 2026 0
 2806 0142 41F21803 		movw	r3, #4120
 2807 0146 58F80330 		ldr	r3, [r8, r3]
 2808 014a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2809 014c E52A     		cmp	r2, #229
 2810 014e 56D0     		beq	.L297
 2811              	.L279:
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
 2812              		.loc 1 2028 0
 2813 0150 BBF1080F 		cmp	fp, #8
 2814 0154 56D0     		beq	.L298
 2815              	.L280:
 2816 0156 019B     		ldr	r3, [sp, #4]
 2817 0158 03F00C02 		and	r2, r3, #12
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
 2818              		.loc 1 2029 0
 2819 015c 0C2A     		cmp	r2, #12
 2820 015e 03D0     		beq	.L281
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
 2821              		.loc 1 2029 0 is_stmt 0 discriminator 1
 2822 0160 03F00303 		and	r3, r3, #3
 2823 0164 032B     		cmp	r3, #3
 2824 0166 01D1     		bne	.L282
 2825              	.L281:
ARM GAS  /tmp/ccTBpncU.s 			page 98


2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 2826              		.loc 1 2030 0 is_stmt 1
 2827 0168 47F00207 		orr	r7, r7, #2
 2828              	.LVL352:
 2829              	.L282:
2031:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
 2830              		.loc 1 2031 0
 2831 016c 17F0020F 		tst	r7, #2
 2832 0170 06D1     		bne	.L283
2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 2833              		.loc 1 2032 0
 2834 0172 019B     		ldr	r3, [sp, #4]
 2835 0174 03F00303 		and	r3, r3, #3
 2836 0178 012B     		cmp	r3, #1
 2837 017a 48D0     		beq	.L299
 2838              	.L284:
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2839              		.loc 1 2033 0
 2840 017c 042A     		cmp	r2, #4
 2841 017e 49D0     		beq	.L300
 2842              	.L283:
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2843              		.loc 1 2036 0
 2844 0180 41F21803 		movw	r3, #4120
 2845 0184 58F80330 		ldr	r3, [r8, r3]
 2846 0188 DF72     		strb	r7, [r3, #11]
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2847              		.loc 1 2038 0
 2848 018a 0020     		movs	r0, #0
 2849              	.LVL353:
 2850              	.L250:
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2851              		.loc 1 2115 0
 2852 018c 03B0     		add	sp, sp, #12
 2853              	.LCFI36:
 2854              		.cfi_remember_state
 2855              		.cfi_def_cfa_offset 36
 2856              		@ sp needed
 2857 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2858              	.LVL354:
 2859              	.L295:
 2860              	.LCFI37:
 2861              		.cfi_restore_state
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2862              		.loc 1 1987 0
 2863 0192 47F00307 		orr	r7, r7, #3
 2864              	.LVL355:
 2865 0196 D4E7     		b	.L265
 2866              	.L296:
 2867              	.LVL356:
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2868              		.loc 1 1992 0
 2869 0198 019B     		ldr	r3, [sp, #4]
 2870 019a 9B00     		lsls	r3, r3, #2
 2871 019c DBB2     		uxtb	r3, r3
 2872 019e 0193     		str	r3, [sp, #4]
 2873              	.LVL357:
ARM GAS  /tmp/ccTBpncU.s 			page 99


1991:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 2874              		.loc 1 1991 0
 2875 01a0 2646     		mov	r6, r4
 2876              	.LVL358:
 2877 01a2 4FF00B0B 		mov	fp, #11
 2878 01a6 4FF0080A 		mov	r10, #8
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2879              		.loc 1 1992 0
 2880 01aa A3E7     		b	.L264
 2881              	.LVL359:
 2882              	.L293:
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
 2883              		.loc 1 1997 0
 2884 01ac 0021     		movs	r1, #0
 2885 01ae 3046     		mov	r0, r6
 2886 01b0 FFF7FEFF 		bl	ff_convert
 2887              	.LVL360:
1998:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 2888              		.loc 1 1998 0
 2889 01b4 0646     		mov	r6, r0
 2890 01b6 18B1     		cbz	r0, .L274
1998:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 2891              		.loc 1 1998 0 is_stmt 0 discriminator 1
 2892 01b8 A0F18006 		sub	r6, r0, #128
 2893 01bc 1B4B     		ldr	r3, .L301+4
 2894 01be 9E5D     		ldrb	r6, [r3, r6]	@ zero_extendqisi2
 2895              	.LVL361:
 2896              	.L274:
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2897              		.loc 1 2002 0 is_stmt 1
 2898 01c0 47F00207 		orr	r7, r7, #2
 2899              	.LVL362:
 2900 01c4 A5E7     		b	.L273
 2901              	.L294:
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 2902              		.loc 1 2011 0 discriminator 1
 2903 01c6 3146     		mov	r1, r6
 2904 01c8 1948     		ldr	r0, .L301+8
 2905 01ca FFF7FEFF 		bl	chk_chr
 2906              	.LVL363:
 2907 01ce 0028     		cmp	r0, #0
 2908 01d0 A1D1     		bne	.L275
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
 2909              		.loc 1 2014 0
 2910 01d2 A6F14103 		sub	r3, r6, #65
 2911 01d6 9BB2     		uxth	r3, r3
 2912 01d8 192B     		cmp	r3, #25
 2913 01da 04D8     		bhi	.L278
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 2914              		.loc 1 2015 0
 2915 01dc 019B     		ldr	r3, [sp, #4]
 2916 01de 43F00203 		orr	r3, r3, #2
 2917 01e2 0193     		str	r3, [sp, #4]
 2918              	.LVL364:
 2919 01e4 9AE7     		b	.L277
 2920              	.L278:
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
ARM GAS  /tmp/ccTBpncU.s 			page 100


 2921              		.loc 1 2017 0
 2922 01e6 A6F16103 		sub	r3, r6, #97
 2923 01ea 9BB2     		uxth	r3, r3
 2924 01ec 192B     		cmp	r3, #25
 2925 01ee 95D8     		bhi	.L277
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 2926              		.loc 1 2018 0
 2927 01f0 019B     		ldr	r3, [sp, #4]
 2928 01f2 43F00103 		orr	r3, r3, #1
 2929 01f6 0193     		str	r3, [sp, #4]
 2930              	.LVL365:
 2931 01f8 203E     		subs	r6, r6, #32
 2932              	.LVL366:
 2933 01fa B6B2     		uxth	r6, r6
 2934              	.LVL367:
 2935 01fc 8EE7     		b	.L277
 2936              	.L297:
2026:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2937              		.loc 1 2026 0 discriminator 1
 2938 01fe 0522     		movs	r2, #5
 2939 0200 1A70     		strb	r2, [r3]
 2940 0202 A5E7     		b	.L279
 2941              	.L298:
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
 2942              		.loc 1 2028 0 discriminator 1
 2943 0204 019B     		ldr	r3, [sp, #4]
 2944 0206 9B00     		lsls	r3, r3, #2
 2945 0208 DBB2     		uxtb	r3, r3
 2946 020a 0193     		str	r3, [sp, #4]
 2947              	.LVL368:
 2948 020c A3E7     		b	.L280
 2949              	.L299:
2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 2950              		.loc 1 2032 0 discriminator 1
 2951 020e 47F01007 		orr	r7, r7, #16
 2952              	.LVL369:
 2953 0212 B3E7     		b	.L284
 2954              	.L300:
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2955              		.loc 1 2033 0 discriminator 1
 2956 0214 47F00807 		orr	r7, r7, #8
 2957              	.LVL370:
 2958 0218 B2E7     		b	.L283
 2959              	.LVL371:
 2960              	.L285:
1932:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 2961              		.loc 1 1932 0
 2962 021a 0620     		movs	r0, #6
 2963              	.LVL372:
 2964 021c B6E7     		b	.L250
 2965              	.LVL373:
 2966              	.L286:
1944:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2967              		.loc 1 1944 0
 2968 021e 0620     		movs	r0, #6
 2969              	.LVL374:
 2970 0220 B4E7     		b	.L250
ARM GAS  /tmp/ccTBpncU.s 			page 101


 2971              	.LVL375:
 2972              	.L289:
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2973              		.loc 1 1967 0
 2974 0222 0620     		movs	r0, #6
 2975 0224 B2E7     		b	.L250
 2976              	.L302:
 2977 0226 00BF     		.align	2
 2978              	.L301:
 2979 0228 00000000 		.word	.LC0
 2980 022c 00000000 		.word	.LANCHOR4
 2981 0230 0C000000 		.word	.LC1
 2982              		.cfi_endproc
 2983              	.LFE99:
 2985              		.section	.text.get_fileinfo,"ax",%progbits
 2986              		.align	1
 2987              		.syntax unified
 2988              		.thumb
 2989              		.thumb_func
 2990              		.fpu softvfp
 2992              	get_fileinfo:
 2993              	.LFB98:
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 2994              		.loc 1 1777 0
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 0, uses_anonymous_args = 0
 2998              	.LVL376:
 2999 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3000              	.LCFI38:
 3001              		.cfi_def_cfa_offset 24
 3002              		.cfi_offset 3, -24
 3003              		.cfi_offset 4, -20
 3004              		.cfi_offset 5, -16
 3005              		.cfi_offset 6, -12
 3006              		.cfi_offset 7, -8
 3007              		.cfi_offset 14, -4
1785:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->sect) {		/* Get SFN */
 3008              		.loc 1 1785 0
 3009 0002 01F10905 		add	r5, r1, #9
 3010              	.LVL377:
1786:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;
 3011              		.loc 1 1786 0
 3012 0006 41F21003 		movw	r3, #4112
 3013 000a C358     		ldr	r3, [r0, r3]
 3014 000c 002B     		cmp	r3, #0
 3015 000e 3ED0     		beq	.L304
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 3016              		.loc 1 1787 0
 3017 0010 41F21403 		movw	r3, #4116
 3018 0014 C658     		ldr	r6, [r0, r3]
 3019              	.LVL378:
1788:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
 3020              		.loc 1 1788 0
 3021 0016 0023     		movs	r3, #0
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 3022              		.loc 1 1789 0
ARM GAS  /tmp/ccTBpncU.s 			page 102


 3023 0018 0AE0     		b	.L305
 3024              	.LVL379:
 3025              	.L324:
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 3026              		.loc 1 1792 0
 3027 001a E523     		movs	r3, #229
 3028              	.LVL380:
 3029 001c 10E0     		b	.L307
 3030              	.LVL381:
 3031              	.L325:
1793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 3032              		.loc 1 1793 0 discriminator 1
 3033 001e 2E24     		movs	r4, #46
 3034 0020 2C70     		strb	r4, [r5]
 3035 0022 0135     		adds	r5, r5, #1
 3036              	.LVL382:
 3037 0024 0EE0     		b	.L308
 3038              	.L326:
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 3039              		.loc 1 1795 0
 3040 0026 1024     		movs	r4, #16
 3041 0028 15E0     		b	.L310
 3042              	.L309:
 3043              	.LVL383:
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3044              		.loc 1 1804 0
 3045 002a 2B70     		strb	r3, [r5]
 3046 002c 0135     		adds	r5, r5, #1
 3047              	.LVL384:
 3048              	.L306:
 3049 002e 1346     		mov	r3, r2
 3050              	.LVL385:
 3051              	.L305:
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 3052              		.loc 1 1789 0
 3053 0030 0A2B     		cmp	r3, #10
 3054 0032 15D8     		bhi	.L323
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
 3055              		.loc 1 1790 0
 3056 0034 5A1C     		adds	r2, r3, #1
 3057              	.LVL386:
 3058 0036 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 3059              	.LVL387:
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 3060              		.loc 1 1791 0
 3061 0038 202B     		cmp	r3, #32
 3062 003a F8D0     		beq	.L306
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 3063              		.loc 1 1792 0
 3064 003c 052B     		cmp	r3, #5
 3065 003e ECD0     		beq	.L324
 3066              	.LVL388:
 3067              	.L307:
1793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 3068              		.loc 1 1793 0
 3069 0040 092A     		cmp	r2, #9
 3070 0042 ECD0     		beq	.L325
ARM GAS  /tmp/ccTBpncU.s 			page 103


 3071              	.L308:
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 3072              		.loc 1 1795 0
 3073 0044 A3F14104 		sub	r4, r3, #65
 3074 0048 E4B2     		uxtb	r4, r4
 3075 004a 192C     		cmp	r4, #25
 3076 004c EDD8     		bhi	.L309
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 3077              		.loc 1 1795 0 is_stmt 0 discriminator 1
 3078 004e 377B     		ldrb	r7, [r6, #12]	@ zero_extendqisi2
 3079 0050 082A     		cmp	r2, #8
 3080 0052 E8D8     		bhi	.L326
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 3081              		.loc 1 1795 0
 3082 0054 0824     		movs	r4, #8
 3083              	.L310:
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 3084              		.loc 1 1795 0 discriminator 5
 3085 0056 2742     		tst	r7, r4
 3086 0058 E7D0     		beq	.L309
1796:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 3087              		.loc 1 1796 0 is_stmt 1
 3088 005a 2033     		adds	r3, r3, #32
 3089              	.LVL389:
 3090 005c DBB2     		uxtb	r3, r3
 3091              	.LVL390:
 3092 005e E4E7     		b	.L309
 3093              	.LVL391:
 3094              	.L323:
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fsize = LD_DWORD(dir + DIR_FileSize);	/* Size */
 3095              		.loc 1 1806 0
 3096 0060 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 3097              	.LVL392:
 3098 0062 0B72     		strb	r3, [r1, #8]
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fdate = LD_WORD(dir + DIR_WrtDate);	/* Date */
 3099              		.loc 1 1807 0
 3100 0064 F27F     		ldrb	r2, [r6, #31]	@ zero_extendqisi2
 3101 0066 B37F     		ldrb	r3, [r6, #30]	@ zero_extendqisi2
 3102 0068 1B04     		lsls	r3, r3, #16
 3103 006a 43EA0263 		orr	r3, r3, r2, lsl #24
 3104 006e 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 3105 0070 43EA0223 		orr	r3, r3, r2, lsl #8
 3106 0074 327F     		ldrb	r2, [r6, #28]	@ zero_extendqisi2
 3107 0076 1343     		orrs	r3, r3, r2
 3108 0078 0B60     		str	r3, [r1]
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->ftime = LD_WORD(dir + DIR_WrtTime);	/* Time */
 3109              		.loc 1 1808 0
 3110 007a 727E     		ldrb	r2, [r6, #25]	@ zero_extendqisi2
 3111 007c 337E     		ldrb	r3, [r6, #24]	@ zero_extendqisi2
 3112 007e 43EA0223 		orr	r3, r3, r2, lsl #8
 3113 0082 8B80     		strh	r3, [r1, #4]	@ movhi
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3114              		.loc 1 1809 0
 3115 0084 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
 3116 0086 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 3117 0088 43EA0223 		orr	r3, r3, r2, lsl #8
 3118 008c CB80     		strh	r3, [r1, #6]	@ movhi
ARM GAS  /tmp/ccTBpncU.s 			page 104


 3119              	.LVL393:
 3120              	.L304:
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3121              		.loc 1 1811 0
 3122 008e 0023     		movs	r3, #0
 3123 0090 2B70     		strb	r3, [r5]
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0; p = fno->lfname;
 3124              		.loc 1 1814 0
 3125 0092 11F11605 		adds	r5, r1, #22
 3126              	.LVL394:
 3127 0096 27D0     		beq	.L303
 3128              	.LVL395:
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
 3129              		.loc 1 1816 0
 3130 0098 41F21003 		movw	r3, #4112
 3131 009c C358     		ldr	r3, [r0, r3]
 3132 009e 03B3     		cbz	r3, .L318
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
 3133              		.loc 1 1816 0 is_stmt 0 discriminator 1
 3134 00a0 D1F81841 		ldr	r4, [r1, #280]
 3135 00a4 F4B1     		cbz	r4, .L313
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
 3136              		.loc 1 1816 0 discriminator 2
 3137 00a6 41F22403 		movw	r3, #4132
 3138 00aa C25A     		ldrh	r2, [r0, r3]
 3139 00ac 4FF6FF73 		movw	r3, #65535
 3140 00b0 9A42     		cmp	r2, r3
 3141 00b2 1AD0     		beq	.L319
 3142 00b4 0E46     		mov	r6, r1
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = *lfn++) != 0) {		/* Get an LFN character */
 3143              		.loc 1 1817 0 is_stmt 1
 3144 00b6 00F58150 		add	r0, r0, #4128
 3145              	.LVL396:
 3146 00ba 0368     		ldr	r3, [r0]
 3147              	.LVL397:
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
 3148              		.loc 1 1815 0
 3149 00bc 0024     		movs	r4, #0
1818:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 3150              		.loc 1 1818 0
 3151 00be 02E0     		b	.L314
 3152              	.LVL398:
 3153              	.L327:
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3154              		.loc 1 1826 0
 3155 00c0 2855     		strb	r0, [r5, r4]
1818:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 3156              		.loc 1 1818 0
 3157 00c2 3B46     		mov	r3, r7
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3158              		.loc 1 1826 0
 3159 00c4 0134     		adds	r4, r4, #1
 3160              	.LVL399:
 3161              	.L314:
1818:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 3162              		.loc 1 1818 0
 3163 00c6 9F1C     		adds	r7, r3, #2
ARM GAS  /tmp/ccTBpncU.s 			page 105


 3164              	.LVL400:
 3165 00c8 1888     		ldrh	r0, [r3]
 3166              	.LVL401:
 3167 00ca 58B1     		cbz	r0, .L313
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
 3168              		.loc 1 1820 0
 3169 00cc 0021     		movs	r1, #0
 3170 00ce FFF7FEFF 		bl	ff_convert
 3171              	.LVL402:
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
 3172              		.loc 1 1821 0
 3173 00d2 60B1     		cbz	r0, .L320
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 				p[i++] = (TCHAR)w;
 3174              		.loc 1 1825 0
 3175 00d4 D6F81831 		ldr	r3, [r6, #280]
 3176 00d8 013B     		subs	r3, r3, #1
 3177 00da 9C42     		cmp	r4, r3
 3178 00dc F0D3     		bcc	.L327
 3179 00de 0024     		movs	r4, #0
 3180              	.LVL403:
 3181 00e0 00E0     		b	.L313
 3182              	.LVL404:
 3183              	.L318:
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
 3184              		.loc 1 1815 0
 3185 00e2 0024     		movs	r4, #0
 3186              	.LVL405:
 3187              	.L313:
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3188              		.loc 1 1829 0
 3189 00e4 0023     		movs	r3, #0
 3190 00e6 2B55     		strb	r3, [r5, r4]
 3191              	.LVL406:
 3192              	.L303:
1832:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
 3193              		.loc 1 1832 0
 3194 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3195              	.LVL407:
 3196              	.L319:
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
 3197              		.loc 1 1815 0
 3198 00ea 0024     		movs	r4, #0
 3199 00ec FAE7     		b	.L313
 3200              	.LVL408:
 3201              	.L320:
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
 3202              		.loc 1 1821 0
 3203 00ee 0024     		movs	r4, #0
 3204              	.LVL409:
 3205 00f0 F8E7     		b	.L313
 3206              		.cfi_endproc
 3207              	.LFE98:
 3209              		.section	.text.cmp_lfn,"ax",%progbits
 3210              		.align	1
 3211              		.syntax unified
 3212              		.thumb
 3213              		.thumb_func
ARM GAS  /tmp/ccTBpncU.s 			page 106


 3214              		.fpu softvfp
 3216              	cmp_lfn:
 3217              	.LFB89:
1351:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
 3218              		.loc 1 1351 0
 3219              		.cfi_startproc
 3220              		@ args = 0, pretend = 0, frame = 0
 3221              		@ frame_needed = 0, uses_anonymous_args = 0
 3222              	.LVL410:
 3223 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3224              	.LCFI39:
 3225              		.cfi_def_cfa_offset 32
 3226              		.cfi_offset 3, -32
 3227              		.cfi_offset 4, -28
 3228              		.cfi_offset 5, -24
 3229              		.cfi_offset 6, -20
 3230              		.cfi_offset 7, -16
 3231              		.cfi_offset 8, -12
 3232              		.cfi_offset 9, -8
 3233              		.cfi_offset 14, -4
 3234 0004 8046     		mov	r8, r0
 3235 0006 0E46     		mov	r6, r1
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
 3236              		.loc 1 1356 0
 3237 0008 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 3238 000a 25F04005 		bic	r5, r5, #64
 3239 000e 013D     		subs	r5, r5, #1
 3240 0010 05EB4503 		add	r3, r5, r5, lsl #1
 3241 0014 05EB8305 		add	r5, r5, r3, lsl #2
 3242              	.LVL411:
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 3243              		.loc 1 1357 0
 3244 0018 0127     		movs	r7, #1
 3245 001a 0024     		movs	r4, #0
 3246 001c 10E0     		b	.L332
 3247              	.LVL412:
 3248              	.L341:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
 3249              		.loc 1 1361 0
 3250 001e FFF7FEFF 		bl	ff_wtoupper
 3251              	.LVL413:
 3252 0022 0746     		mov	r7, r0
 3253              	.LVL414:
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
 3254              		.loc 1 1362 0
 3255 0024 FE2D     		cmp	r5, #254
 3256 0026 24D8     		bhi	.L333
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
 3257              		.loc 1 1362 0 is_stmt 0 discriminator 1
 3258 0028 05F10109 		add	r9, r5, #1
 3259              	.LVL415:
 3260 002c 38F81500 		ldrh	r0, [r8, r5, lsl #1]
 3261 0030 FFF7FEFF 		bl	ff_wtoupper
 3262              	.LVL416:
 3263 0034 B842     		cmp	r0, r7
 3264 0036 1ED1     		bne	.L334
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
ARM GAS  /tmp/ccTBpncU.s 			page 107


 3265              		.loc 1 1362 0
 3266 0038 4D46     		mov	r5, r9
 3267              	.LVL417:
 3268              	.L331:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3269              		.loc 1 1367 0 is_stmt 1
 3270 003a 0134     		adds	r4, r4, #1
 3271              	.LVL418:
 3272 003c 0C2C     		cmp	r4, #12
 3273 003e 0ED8     		bhi	.L340
 3274              	.LVL419:
 3275              	.L332:
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
 3276              		.loc 1 1359 0
 3277 0040 114B     		ldr	r3, .L342
 3278 0042 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3279 0044 5A1C     		adds	r2, r3, #1
 3280 0046 B25C     		ldrb	r2, [r6, r2]	@ zero_extendqisi2
 3281 0048 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 3282 004a 40EA0220 		orr	r0, r0, r2, lsl #8
 3283              	.LVL420:
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
 3284              		.loc 1 1360 0
 3285 004e 002F     		cmp	r7, #0
 3286 0050 E5D1     		bne	.L341
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3287              		.loc 1 1365 0
 3288 0052 4FF6FF73 		movw	r3, #65535
 3289 0056 9842     		cmp	r0, r3
 3290 0058 EFD0     		beq	.L331
 3291 005a 0020     		movs	r0, #0
 3292              	.LVL421:
 3293 005c 0EE0     		b	.L328
 3294              	.LVL422:
 3295              	.L340:
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 3296              		.loc 1 1369 0
 3297 005e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3298 0060 13F0400F 		tst	r3, #64
 3299 0064 09D0     		beq	.L336
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 3300              		.loc 1 1369 0 is_stmt 0 discriminator 1
 3301 0066 5FB1     		cbz	r7, .L337
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 3302              		.loc 1 1369 0 discriminator 2
 3303 0068 38F81530 		ldrh	r3, [r8, r5, lsl #1]
 3304 006c 53B9     		cbnz	r3, .L338
1372:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3305              		.loc 1 1372 0 is_stmt 1
 3306 006e 0120     		movs	r0, #1
 3307 0070 04E0     		b	.L328
 3308              	.L333:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 3309              		.loc 1 1363 0
 3310 0072 0020     		movs	r0, #0
 3311 0074 02E0     		b	.L328
 3312              	.LVL423:
ARM GAS  /tmp/ccTBpncU.s 			page 108


 3313              	.L334:
 3314 0076 0020     		movs	r0, #0
 3315 0078 00E0     		b	.L328
 3316              	.LVL424:
 3317              	.L336:
1372:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3318              		.loc 1 1372 0
 3319 007a 0120     		movs	r0, #1
 3320              	.LVL425:
 3321              	.L328:
1373:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3322              		.loc 1 1373 0
 3323 007c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3324              	.LVL426:
 3325              	.L337:
1372:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3326              		.loc 1 1372 0
 3327 0080 0120     		movs	r0, #1
 3328 0082 FBE7     		b	.L328
 3329              	.L338:
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3330              		.loc 1 1370 0
 3331 0084 0020     		movs	r0, #0
 3332 0086 F9E7     		b	.L328
 3333              	.L343:
 3334              		.align	2
 3335              	.L342:
 3336 0088 00000000 		.word	.LANCHOR1
 3337              		.cfi_endproc
 3338              	.LFE89:
 3340              		.section	.text.clust2sect,"ax",%progbits
 3341              		.align	1
 3342              		.global	clust2sect
 3343              		.syntax unified
 3344              		.thumb
 3345              		.thumb_func
 3346              		.fpu softvfp
 3348              	clust2sect:
 3349              	.LFB78:
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 3350              		.loc 1 877 0
 3351              		.cfi_startproc
 3352              		@ args = 0, pretend = 0, frame = 0
 3353              		@ frame_needed = 0, uses_anonymous_args = 0
 3354              		@ link register save eliminated.
 3355              	.LVL427:
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 3356              		.loc 1 878 0
 3357 0000 0239     		subs	r1, r1, #2
 3358              	.LVL428:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 3359              		.loc 1 879 0
 3360 0002 41F21403 		movw	r3, #4116
 3361 0006 C358     		ldr	r3, [r0, r3]
 3362 0008 023B     		subs	r3, r3, #2
 3363 000a 8B42     		cmp	r3, r1
 3364 000c 08D9     		bls	.L346
ARM GAS  /tmp/ccTBpncU.s 			page 109


 880:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3365              		.loc 1 880 0
 3366 000e 41F20203 		movw	r3, #4098
 3367 0012 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 3368 0014 41F22802 		movw	r2, #4136
 3369 0018 8058     		ldr	r0, [r0, r2]
 3370              	.LVL429:
 3371 001a 01FB0300 		mla	r0, r1, r3, r0
 3372 001e 7047     		bx	lr
 3373              	.LVL430:
 3374              	.L346:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 3375              		.loc 1 879 0
 3376 0020 0020     		movs	r0, #0
 3377              	.LVL431:
 881:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3378              		.loc 1 881 0
 3379 0022 7047     		bx	lr
 3380              		.cfi_endproc
 3381              	.LFE78:
 3383              		.section	.text.get_fat,"ax",%progbits
 3384              		.align	1
 3385              		.global	get_fat
 3386              		.syntax unified
 3387              		.thumb
 3388              		.thumb_func
 3389              		.fpu softvfp
 3391              	get_fat:
 3392              	.LFB79:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 3393              		.loc 1 895 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              	.LVL432:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 3398              		.loc 1 901 0
 3399 0000 0129     		cmp	r1, #1
 3400 0002 40F28880 		bls	.L353
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 3401              		.loc 1 895 0 discriminator 1
 3402 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3403              	.LCFI40:
 3404              		.cfi_def_cfa_offset 24
 3405              		.cfi_offset 3, -24
 3406              		.cfi_offset 4, -20
 3407              		.cfi_offset 5, -16
 3408              		.cfi_offset 6, -12
 3409              		.cfi_offset 7, -8
 3410              		.cfi_offset 14, -4
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 3411              		.loc 1 901 0 discriminator 1
 3412 0008 41F21403 		movw	r3, #4116
 3413 000c C358     		ldr	r3, [r0, r3]
 3414 000e 8B42     		cmp	r3, r1
 3415 0010 40F28380 		bls	.L354
 3416 0014 0C46     		mov	r4, r1
ARM GAS  /tmp/ccTBpncU.s 			page 110


 3417 0016 0546     		mov	r5, r0
 3418              	.LVL433:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 3419              		.loc 1 907 0
 3420 0018 00F58053 		add	r3, r0, #4096
 3421 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3422 001e 022B     		cmp	r3, #2
 3423 0020 3AD0     		beq	.L349
 3424 0022 032B     		cmp	r3, #3
 3425 0024 54D0     		beq	.L350
 3426 0026 012B     		cmp	r3, #1
 3427 0028 01D0     		beq	.L365
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3428              		.loc 1 930 0
 3429 002a 0120     		movs	r0, #1
 3430              	.LVL434:
 3431 002c 76E0     		b	.L347
 3432              	.LVL435:
 3433              	.L365:
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3434              		.loc 1 909 0
 3435 002e 01EB5106 		add	r6, r1, r1, lsr #1
 3436              	.LVL436:
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 3437              		.loc 1 910 0
 3438 0032 00F58153 		add	r3, r0, #4128
 3439 0036 1968     		ldr	r1, [r3]
 3440              	.LVL437:
 3441 0038 41F20A03 		movw	r3, #4106
 3442 003c C35A     		ldrh	r3, [r0, r3]
 3443 003e B6FBF3F3 		udiv	r3, r6, r3
 3444 0042 1944     		add	r1, r1, r3
 3445 0044 FFF7FEFF 		bl	move_window
 3446              	.LVL438:
 3447 0048 0028     		cmp	r0, #0
 3448 004a 68D1     		bne	.L356
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3449              		.loc 1 911 0
 3450 004c 771C     		adds	r7, r6, #1
 3451              	.LVL439:
 3452 004e 41F20A03 		movw	r3, #4106
 3453 0052 EB5A     		ldrh	r3, [r5, r3]
 3454 0054 B6FBF3F2 		udiv	r2, r6, r3
 3455 0058 03FB1266 		mls	r6, r3, r2, r6
 3456 005c AE5D     		ldrb	r6, [r5, r6]	@ zero_extendqisi2
 3457              	.LVL440:
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 3458              		.loc 1 912 0
 3459 005e 05F58152 		add	r2, r5, #4128
 3460 0062 1168     		ldr	r1, [r2]
 3461 0064 B7FBF3F3 		udiv	r3, r7, r3
 3462 0068 1944     		add	r1, r1, r3
 3463 006a 2846     		mov	r0, r5
 3464 006c FFF7FEFF 		bl	move_window
 3465              	.LVL441:
 3466 0070 0028     		cmp	r0, #0
 3467 0072 57D1     		bne	.L357
ARM GAS  /tmp/ccTBpncU.s 			page 111


 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 3468              		.loc 1 913 0
 3469 0074 41F20A03 		movw	r3, #4106
 3470 0078 EA5A     		ldrh	r2, [r5, r3]
 3471 007a B7FBF2F3 		udiv	r3, r7, r2
 3472 007e 02FB1377 		mls	r7, r2, r3, r7
 3473              	.LVL442:
 3474 0082 E85D     		ldrb	r0, [r5, r7]	@ zero_extendqisi2
 3475 0084 46EA0020 		orr	r0, r6, r0, lsl #8
 3476              	.LVL443:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3477              		.loc 1 914 0
 3478 0088 14F0010F 		tst	r4, #1
 3479 008c 01D0     		beq	.L352
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3480              		.loc 1 914 0 is_stmt 0 discriminator 1
 3481 008e 0009     		lsrs	r0, r0, #4
 3482              	.LVL444:
 3483 0090 44E0     		b	.L347
 3484              	.LVL445:
 3485              	.L352:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3486              		.loc 1 914 0 discriminator 2
 3487 0092 C0F30B00 		ubfx	r0, r0, #0, #12
 3488              	.LVL446:
 3489 0096 41E0     		b	.L347
 3490              	.LVL447:
 3491              	.L349:
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 3492              		.loc 1 918 0 is_stmt 1
 3493 0098 00F58153 		add	r3, r0, #4128
 3494 009c 1968     		ldr	r1, [r3]
 3495              	.LVL448:
 3496 009e 41F20A03 		movw	r3, #4106
 3497 00a2 C35A     		ldrh	r3, [r0, r3]
 3498 00a4 5B08     		lsrs	r3, r3, #1
 3499 00a6 B4FBF3F3 		udiv	r3, r4, r3
 3500 00aa 1944     		add	r1, r1, r3
 3501 00ac FFF7FEFF 		bl	move_window
 3502              	.LVL449:
 3503 00b0 0028     		cmp	r0, #0
 3504 00b2 3AD1     		bne	.L358
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 3505              		.loc 1 919 0
 3506 00b4 6100     		lsls	r1, r4, #1
 3507 00b6 41F20A03 		movw	r3, #4106
 3508 00ba EA5A     		ldrh	r2, [r5, r3]
 3509 00bc B1FBF2F3 		udiv	r3, r1, r2
 3510 00c0 02FB1311 		mls	r1, r2, r3, r1
 3511 00c4 6B18     		adds	r3, r5, r1
 3512              	.LVL450:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3513              		.loc 1 920 0
 3514 00c6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3515              	.LVL451:
 3516 00c8 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 3517 00ca 40EA0320 		orr	r0, r0, r3, lsl #8
ARM GAS  /tmp/ccTBpncU.s 			page 112


 3518              	.LVL452:
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3519              		.loc 1 921 0
 3520 00ce 25E0     		b	.L347
 3521              	.LVL453:
 3522              	.L350:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 3523              		.loc 1 924 0
 3524 00d0 00F58153 		add	r3, r0, #4128
 3525 00d4 1968     		ldr	r1, [r3]
 3526              	.LVL454:
 3527 00d6 41F20A03 		movw	r3, #4106
 3528 00da C35A     		ldrh	r3, [r0, r3]
 3529 00dc 9B08     		lsrs	r3, r3, #2
 3530 00de B4FBF3F3 		udiv	r3, r4, r3
 3531 00e2 1944     		add	r1, r1, r3
 3532 00e4 FFF7FEFF 		bl	move_window
 3533              	.LVL455:
 3534 00e8 10BB     		cbnz	r0, .L359
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 3535              		.loc 1 925 0
 3536 00ea A100     		lsls	r1, r4, #2
 3537 00ec 41F20A03 		movw	r3, #4106
 3538 00f0 EB5A     		ldrh	r3, [r5, r3]
 3539 00f2 B1FBF3F4 		udiv	r4, r1, r3
 3540              	.LVL456:
 3541 00f6 03FB1411 		mls	r1, r3, r4, r1
 3542 00fa 6B18     		adds	r3, r5, r1
 3543              	.LVL457:
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3544              		.loc 1 926 0
 3545 00fc DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3546 00fe 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 3547 0100 0004     		lsls	r0, r0, #16
 3548 0102 40EA0260 		orr	r0, r0, r2, lsl #24
 3549 0106 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3550              	.LVL458:
 3551 0108 40EA0320 		orr	r0, r0, r3, lsl #8
 3552 010c 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 3553 010e 1843     		orrs	r0, r0, r3
 3554 0110 20F07040 		bic	r0, r0, #-268435456
 3555              	.LVL459:
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3556              		.loc 1 927 0
 3557 0114 02E0     		b	.L347
 3558              	.LVL460:
 3559              	.L353:
 3560              	.LCFI41:
 3561              		.cfi_def_cfa_offset 0
 3562              		.cfi_restore 3
 3563              		.cfi_restore 4
 3564              		.cfi_restore 5
 3565              		.cfi_restore 6
 3566              		.cfi_restore 7
 3567              		.cfi_restore 14
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3568              		.loc 1 902 0
ARM GAS  /tmp/ccTBpncU.s 			page 113


 3569 0116 0120     		movs	r0, #1
 3570              	.LVL461:
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3571              		.loc 1 935 0
 3572 0118 7047     		bx	lr
 3573              	.LVL462:
 3574              	.L354:
 3575              	.LCFI42:
 3576              		.cfi_def_cfa_offset 24
 3577              		.cfi_offset 3, -24
 3578              		.cfi_offset 4, -20
 3579              		.cfi_offset 5, -16
 3580              		.cfi_offset 6, -12
 3581              		.cfi_offset 7, -8
 3582              		.cfi_offset 14, -4
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3583              		.loc 1 902 0
 3584 011a 0120     		movs	r0, #1
 3585              	.LVL463:
 3586              	.L347:
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3587              		.loc 1 935 0
 3588 011c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3589              	.LVL464:
 3590              	.L356:
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3591              		.loc 1 905 0
 3592 011e 4FF0FF30 		mov	r0, #-1
 3593 0122 FBE7     		b	.L347
 3594              	.LVL465:
 3595              	.L357:
 3596 0124 4FF0FF30 		mov	r0, #-1
 3597 0128 F8E7     		b	.L347
 3598              	.LVL466:
 3599              	.L358:
 3600 012a 4FF0FF30 		mov	r0, #-1
 3601 012e F5E7     		b	.L347
 3602              	.L359:
 3603 0130 4FF0FF30 		mov	r0, #-1
 934:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3604              		.loc 1 934 0
 3605 0134 F2E7     		b	.L347
 3606              		.cfi_endproc
 3607              	.LFE79:
 3609              		.section	.text.dir_sdi,"ax",%progbits
 3610              		.align	1
 3611              		.syntax unified
 3612              		.thumb
 3613              		.thumb_func
 3614              		.fpu softvfp
 3616              	dir_sdi:
 3617              	.LFB84:
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
 3618              		.loc 1 1157 0
 3619              		.cfi_startproc
 3620              		@ args = 0, pretend = 0, frame = 0
 3621              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccTBpncU.s 			page 114


 3622              	.LVL467:
 3623 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3624              	.LCFI43:
 3625              		.cfi_def_cfa_offset 24
 3626              		.cfi_offset 3, -24
 3627              		.cfi_offset 4, -20
 3628              		.cfi_offset 5, -16
 3629              		.cfi_offset 6, -12
 3630              		.cfi_offset 7, -8
 3631              		.cfi_offset 14, -4
 3632 0002 0546     		mov	r5, r0
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
 3633              		.loc 1 1162 0
 3634 0004 41F20603 		movw	r3, #4102
 3635 0008 C152     		strh	r1, [r0, r3]	@ movhi
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
 3636              		.loc 1 1163 0
 3637 000a 41F20803 		movw	r3, #4104
 3638 000e C458     		ldr	r4, [r0, r3]
 3639              	.LVL468:
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3640              		.loc 1 1164 0
 3641 0010 012C     		cmp	r4, #1
 3642 0012 62D0     		beq	.L373
 3643 0014 0E46     		mov	r6, r1
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3644              		.loc 1 1164 0 is_stmt 0 discriminator 1
 3645 0016 00F58053 		add	r3, r0, #4096
 3646 001a 1B68     		ldr	r3, [r3]
 3647 001c 41F21402 		movw	r2, #4116
 3648 0020 9A58     		ldr	r2, [r3, r2]
 3649 0022 A242     		cmp	r2, r4
 3650 0024 5BD9     		bls	.L374
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 3651              		.loc 1 1166 0 is_stmt 1
 3652 0026 24B9     		cbnz	r4, .L368
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 3653              		.loc 1 1166 0 is_stmt 0 discriminator 1
 3654 0028 03F58052 		add	r2, r3, #4096
 3655 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3656 002e 032A     		cmp	r2, #3
 3657 0030 27D0     		beq	.L381
 3658              	.L368:
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
 3659              		.loc 1 1169 0 is_stmt 1
 3660 0032 54BB     		cbnz	r4, .L369
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
 3661              		.loc 1 1170 0
 3662 0034 41F20802 		movw	r2, #4104
 3663 0038 9A5A     		ldrh	r2, [r3, r2]
 3664 003a B242     		cmp	r2, r6
 3665 003c 51D9     		bls	.L375
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3666              		.loc 1 1172 0
 3667 003e 41F22402 		movw	r2, #4132
 3668 0042 9858     		ldr	r0, [r3, r2]
 3669              	.LVL469:
ARM GAS  /tmp/ccTBpncU.s 			page 115


 3670              	.L370:
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
 3671              		.loc 1 1185 0
 3672 0044 41F20C03 		movw	r3, #4108
 3673 0048 EC50     		str	r4, [r5, r3]
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 3674              		.loc 1 1186 0
 3675 004a 0028     		cmp	r0, #0
 3676 004c 51D0     		beq	.L379
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
 3677              		.loc 1 1187 0
 3678 004e 05F58053 		add	r3, r5, #4096
 3679 0052 1A68     		ldr	r2, [r3]
 3680 0054 41F20A01 		movw	r1, #4106
 3681 0058 535A     		ldrh	r3, [r2, r1]
 3682 005a 5B09     		lsrs	r3, r3, #5
 3683 005c B6FBF3F3 		udiv	r3, r6, r3
 3684 0060 1844     		add	r0, r0, r3
 3685              	.LVL470:
 3686 0062 41F21003 		movw	r3, #4112
 3687 0066 E850     		str	r0, [r5, r3]
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3688              		.loc 1 1188 0
 3689 0068 535A     		ldrh	r3, [r2, r1]
 3690 006a 5B09     		lsrs	r3, r3, #5
 3691 006c B6FBF3F1 		udiv	r1, r6, r3
 3692 0070 03FB1166 		mls	r6, r3, r1, r6
 3693              	.LVL471:
 3694 0074 02EB4612 		add	r2, r2, r6, lsl #5
 3695 0078 41F21403 		movw	r3, #4116
 3696 007c EA50     		str	r2, [r5, r3]
1190:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3697              		.loc 1 1190 0
 3698 007e 0020     		movs	r0, #0
 3699 0080 2EE0     		b	.L367
 3700              	.LVL472:
 3701              	.L381:
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3702              		.loc 1 1167 0
 3703 0082 41F22402 		movw	r2, #4132
 3704 0086 9C58     		ldr	r4, [r3, r2]
 3705              	.LVL473:
 3706 0088 D3E7     		b	.L368
 3707              	.L369:
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 3708              		.loc 1 1175 0
 3709 008a 41F20A02 		movw	r2, #4106
 3710 008e 9F5A     		ldrh	r7, [r3, r2]
 3711 0090 7A09     		lsrs	r2, r7, #5
 3712 0092 41F20201 		movw	r1, #4098
 3713              	.LVL474:
 3714 0096 5F5C     		ldrb	r7, [r3, r1]	@ zero_extendqisi2
 3715 0098 07FB02F7 		mul	r7, r7, r2
 3716              	.LVL475:
 3717              	.L371:
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 3718              		.loc 1 1176 0
ARM GAS  /tmp/ccTBpncU.s 			page 116


 3719 009c BE42     		cmp	r6, r7
 3720 009e 15D3     		bcc	.L382
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3721              		.loc 1 1177 0
 3722 00a0 05F58053 		add	r3, r5, #4096
 3723 00a4 2146     		mov	r1, r4
 3724 00a6 1868     		ldr	r0, [r3]
 3725 00a8 FFF7FEFF 		bl	get_fat
 3726              	.LVL476:
 3727 00ac 0446     		mov	r4, r0
 3728              	.LVL477:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 3729              		.loc 1 1178 0
 3730 00ae B0F1FF3F 		cmp	r0, #-1
 3731 00b2 18D0     		beq	.L376
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 3732              		.loc 1 1179 0
 3733 00b4 0128     		cmp	r0, #1
 3734 00b6 18D9     		bls	.L377
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 3735              		.loc 1 1179 0 is_stmt 0 discriminator 1
 3736 00b8 05F58053 		add	r3, r5, #4096
 3737 00bc 1A68     		ldr	r2, [r3]
 3738 00be 41F21403 		movw	r3, #4116
 3739 00c2 D358     		ldr	r3, [r2, r3]
 3740 00c4 8342     		cmp	r3, r0
 3741 00c6 12D9     		bls	.L378
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3742              		.loc 1 1181 0 is_stmt 1
 3743 00c8 F61B     		subs	r6, r6, r7
 3744              	.LVL478:
 3745 00ca E7E7     		b	.L371
 3746              	.LVL479:
 3747              	.L382:
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3748              		.loc 1 1183 0
 3749 00cc 05F58053 		add	r3, r5, #4096
 3750 00d0 2146     		mov	r1, r4
 3751 00d2 1868     		ldr	r0, [r3]
 3752 00d4 FFF7FEFF 		bl	clust2sect
 3753              	.LVL480:
 3754 00d8 B4E7     		b	.L370
 3755              	.LVL481:
 3756              	.L373:
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 3757              		.loc 1 1165 0
 3758 00da 0220     		movs	r0, #2
 3759              	.LVL482:
 3760 00dc 00E0     		b	.L367
 3761              	.LVL483:
 3762              	.L374:
 3763 00de 0220     		movs	r0, #2
 3764              	.LVL484:
 3765              	.L367:
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3766              		.loc 1 1191 0
 3767 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccTBpncU.s 			page 117


 3768              	.LVL485:
 3769              	.L375:
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
 3770              		.loc 1 1171 0
 3771 00e2 0220     		movs	r0, #2
 3772              	.LVL486:
 3773 00e4 FCE7     		b	.L367
 3774              	.LVL487:
 3775              	.L376:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 3776              		.loc 1 1178 0
 3777 00e6 0120     		movs	r0, #1
 3778              	.LVL488:
 3779 00e8 FAE7     		b	.L367
 3780              	.LVL489:
 3781              	.L377:
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
 3782              		.loc 1 1180 0
 3783 00ea 0220     		movs	r0, #2
 3784              	.LVL490:
 3785 00ec F8E7     		b	.L367
 3786              	.LVL491:
 3787              	.L378:
 3788 00ee 0220     		movs	r0, #2
 3789              	.LVL492:
 3790 00f0 F6E7     		b	.L367
 3791              	.LVL493:
 3792              	.L379:
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 3793              		.loc 1 1186 0
 3794 00f2 0220     		movs	r0, #2
 3795              	.LVL494:
 3796 00f4 F4E7     		b	.L367
 3797              		.cfi_endproc
 3798              	.LFE84:
 3800              		.section	.text.put_fat,"ax",%progbits
 3801              		.align	1
 3802              		.global	put_fat
 3803              		.syntax unified
 3804              		.thumb
 3805              		.thumb_func
 3806              		.fpu softvfp
 3808              	put_fat:
 3809              	.LFB80:
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 3810              		.loc 1 951 0
 3811              		.cfi_startproc
 3812              		@ args = 0, pretend = 0, frame = 0
 3813              		@ frame_needed = 0, uses_anonymous_args = 0
 3814              	.LVL495:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 3815              		.loc 1 957 0
 3816 0000 0129     		cmp	r1, #1
 3817 0002 40F2B980 		bls	.L392
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 3818              		.loc 1 957 0 is_stmt 0 discriminator 1
 3819 0006 41F21403 		movw	r3, #4116
ARM GAS  /tmp/ccTBpncU.s 			page 118


 3820 000a C358     		ldr	r3, [r0, r3]
 3821 000c 8B42     		cmp	r3, r1
 3822 000e 40F2B580 		bls	.L393
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 3823              		.loc 1 951 0 is_stmt 1
 3824 0012 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3825              	.LCFI44:
 3826              		.cfi_def_cfa_offset 24
 3827              		.cfi_offset 4, -24
 3828              		.cfi_offset 5, -20
 3829              		.cfi_offset 6, -16
 3830              		.cfi_offset 7, -12
 3831              		.cfi_offset 8, -8
 3832              		.cfi_offset 14, -4
 3833 0016 1646     		mov	r6, r2
 3834 0018 0D46     		mov	r5, r1
 3835 001a 0446     		mov	r4, r0
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 3836              		.loc 1 961 0
 3837 001c 00F58053 		add	r3, r0, #4096
 3838 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3839 0022 022B     		cmp	r3, #2
 3840 0024 58D0     		beq	.L385
 3841 0026 032B     		cmp	r3, #3
 3842 0028 77D0     		beq	.L386
 3843 002a 012B     		cmp	r3, #1
 3844 002c 03D0     		beq	.L400
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3845              		.loc 1 994 0
 3846 002e 0223     		movs	r3, #2
 3847              	.LVL496:
 3848              	.L384:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3849              		.loc 1 999 0
 3850 0030 1846     		mov	r0, r3
 3851 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3852              	.LVL497:
 3853              	.L400:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3854              		.loc 1 963 0
 3855 0036 01EB5107 		add	r7, r1, r1, lsr #1
 3856              	.LVL498:
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3857              		.loc 1 964 0
 3858 003a 00F58153 		add	r3, r0, #4128
 3859 003e 1968     		ldr	r1, [r3]
 3860              	.LVL499:
 3861 0040 41F20A03 		movw	r3, #4106
 3862 0044 C35A     		ldrh	r3, [r0, r3]
 3863 0046 B7FBF3F3 		udiv	r3, r7, r3
 3864 004a 1944     		add	r1, r1, r3
 3865 004c FFF7FEFF 		bl	move_window
 3866              	.LVL500:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 3867              		.loc 1 965 0
 3868 0050 0346     		mov	r3, r0
 3869 0052 0028     		cmp	r0, #0
ARM GAS  /tmp/ccTBpncU.s 			page 119


 3870 0054 ECD1     		bne	.L384
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 3871              		.loc 1 966 0
 3872 0056 07F10108 		add	r8, r7, #1
 3873              	.LVL501:
 3874 005a 41F20A03 		movw	r3, #4106
 3875 005e E35A     		ldrh	r3, [r4, r3]
 3876 0060 B7FBF3F2 		udiv	r2, r7, r3
 3877 0064 03FB1277 		mls	r7, r3, r2, r7
 3878              	.LVL502:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3879              		.loc 1 967 0
 3880 0068 15F00105 		ands	r5, r5, #1
 3881              	.LVL503:
 3882 006c 29D0     		beq	.L388
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3883              		.loc 1 967 0 is_stmt 0 discriminator 1
 3884 006e E257     		ldrsb	r2, [r4, r7]
 3885 0070 02F00F02 		and	r2, r2, #15
 3886 0074 3101     		lsls	r1, r6, #4
 3887 0076 01F47F61 		and	r1, r1, #4080
 3888 007a 0A43     		orrs	r2, r2, r1
 3889 007c D2B2     		uxtb	r2, r2
 3890              	.L389:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3891              		.loc 1 967 0 discriminator 4
 3892 007e E255     		strb	r2, [r4, r7]
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3893              		.loc 1 968 0 is_stmt 1 discriminator 4
 3894 0080 41F20402 		movw	r2, #4100
 3895 0084 0121     		movs	r1, #1
 3896 0086 A154     		strb	r1, [r4, r2]
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3897              		.loc 1 969 0 discriminator 4
 3898 0088 04F58152 		add	r2, r4, #4128
 3899 008c 1168     		ldr	r1, [r2]
 3900 008e B8FBF3F3 		udiv	r3, r8, r3
 3901 0092 1944     		add	r1, r1, r3
 3902 0094 2046     		mov	r0, r4
 3903              	.LVL504:
 3904 0096 FFF7FEFF 		bl	move_window
 3905              	.LVL505:
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 3906              		.loc 1 970 0 discriminator 4
 3907 009a 0346     		mov	r3, r0
 3908 009c 0028     		cmp	r0, #0
 3909 009e C7D1     		bne	.L384
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3910              		.loc 1 971 0
 3911 00a0 41F20A02 		movw	r2, #4106
 3912 00a4 A15A     		ldrh	r1, [r4, r2]
 3913 00a6 B8FBF1F2 		udiv	r2, r8, r1
 3914 00aa 01FB1288 		mls	r8, r1, r2, r8
 3915              	.LVL506:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3916              		.loc 1 972 0
 3917 00ae 55B1     		cbz	r5, .L390
ARM GAS  /tmp/ccTBpncU.s 			page 120


 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3918              		.loc 1 972 0 is_stmt 0 discriminator 1
 3919 00b0 C6F30712 		ubfx	r2, r6, #4, #8
 3920              	.LVL507:
 3921              	.L391:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3922              		.loc 1 972 0 discriminator 4
 3923 00b4 04F80820 		strb	r2, [r4, r8]
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3924              		.loc 1 973 0 is_stmt 1 discriminator 4
 3925 00b8 41F20402 		movw	r2, #4100
 3926 00bc 0121     		movs	r1, #1
 3927 00be A154     		strb	r1, [r4, r2]
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3928              		.loc 1 974 0 discriminator 4
 3929 00c0 B6E7     		b	.L384
 3930              	.LVL508:
 3931              	.L388:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3932              		.loc 1 967 0 discriminator 2
 3933 00c2 F2B2     		uxtb	r2, r6
 3934 00c4 DBE7     		b	.L389
 3935              	.LVL509:
 3936              	.L390:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3937              		.loc 1 972 0 discriminator 2
 3938 00c6 14F90820 		ldrsb	r2, [r4, r8]
 3939 00ca 22F00F02 		bic	r2, r2, #15
 3940 00ce C6F30326 		ubfx	r6, r6, #8, #4
 3941              	.LVL510:
 3942 00d2 3243     		orrs	r2, r2, r6
 3943 00d4 D2B2     		uxtb	r2, r2
 3944 00d6 EDE7     		b	.L391
 3945              	.LVL511:
 3946              	.L385:
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3947              		.loc 1 977 0
 3948 00d8 00F58153 		add	r3, r0, #4128
 3949 00dc 1968     		ldr	r1, [r3]
 3950              	.LVL512:
 3951 00de 41F20A03 		movw	r3, #4106
 3952 00e2 C35A     		ldrh	r3, [r0, r3]
 3953 00e4 5B08     		lsrs	r3, r3, #1
 3954 00e6 B5FBF3F3 		udiv	r3, r5, r3
 3955 00ea 1944     		add	r1, r1, r3
 3956 00ec FFF7FEFF 		bl	move_window
 3957              	.LVL513:
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 3958              		.loc 1 978 0
 3959 00f0 0346     		mov	r3, r0
 3960 00f2 0028     		cmp	r0, #0
 3961 00f4 9CD1     		bne	.L384
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 3962              		.loc 1 979 0
 3963 00f6 6900     		lsls	r1, r5, #1
 3964 00f8 41F20A02 		movw	r2, #4106
 3965 00fc A05A     		ldrh	r0, [r4, r2]
ARM GAS  /tmp/ccTBpncU.s 			page 121


 3966              	.LVL514:
 3967 00fe B1FBF0F2 		udiv	r2, r1, r0
 3968 0102 00FB1211 		mls	r1, r0, r2, r1
 3969 0106 6018     		adds	r0, r4, r1
 3970              	.LVL515:
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3971              		.loc 1 980 0
 3972 0108 6654     		strb	r6, [r4, r1]
 3973 010a C6F30722 		ubfx	r2, r6, #8, #8
 3974 010e 4270     		strb	r2, [r0, #1]
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3975              		.loc 1 981 0
 3976 0110 41F20402 		movw	r2, #4100
 3977 0114 0121     		movs	r1, #1
 3978 0116 A154     		strb	r1, [r4, r2]
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3979              		.loc 1 982 0
 3980 0118 8AE7     		b	.L384
 3981              	.LVL516:
 3982              	.L386:
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3983              		.loc 1 985 0
 3984 011a 00F58153 		add	r3, r0, #4128
 3985 011e 1968     		ldr	r1, [r3]
 3986              	.LVL517:
 3987 0120 41F20A03 		movw	r3, #4106
 3988 0124 C35A     		ldrh	r3, [r0, r3]
 3989 0126 9B08     		lsrs	r3, r3, #2
 3990 0128 B5FBF3F3 		udiv	r3, r5, r3
 3991 012c 1944     		add	r1, r1, r3
 3992 012e FFF7FEFF 		bl	move_window
 3993              	.LVL518:
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 3994              		.loc 1 986 0
 3995 0132 0346     		mov	r3, r0
 3996 0134 0028     		cmp	r0, #0
 3997 0136 7FF47BAF 		bne	.L384
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 3998              		.loc 1 987 0
 3999 013a A900     		lsls	r1, r5, #2
 4000 013c 41F20A02 		movw	r2, #4106
 4001 0140 A25A     		ldrh	r2, [r4, r2]
 4002 0142 B1FBF2F5 		udiv	r5, r1, r2
 4003              	.LVL519:
 4004 0146 02FB1511 		mls	r1, r2, r5, r1
 4005 014a 6018     		adds	r0, r4, r1
 4006              	.LVL520:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 4007              		.loc 1 988 0
 4008 014c C578     		ldrb	r5, [r0, #3]	@ zero_extendqisi2
 4009 014e 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 4010 0150 1204     		lsls	r2, r2, #16
 4011 0152 42EA0562 		orr	r2, r2, r5, lsl #24
 4012 0156 02F07042 		and	r2, r2, #-268435456
 4013 015a 3243     		orrs	r2, r2, r6
 4014              	.LVL521:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
ARM GAS  /tmp/ccTBpncU.s 			page 122


 4015              		.loc 1 989 0
 4016 015c 6254     		strb	r2, [r4, r1]
 4017 015e C2F30721 		ubfx	r1, r2, #8, #8
 4018 0162 4170     		strb	r1, [r0, #1]
 4019 0164 C2F30741 		ubfx	r1, r2, #16, #8
 4020 0168 8170     		strb	r1, [r0, #2]
 4021 016a 120E     		lsrs	r2, r2, #24
 4022              	.LVL522:
 4023 016c C270     		strb	r2, [r0, #3]
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 4024              		.loc 1 990 0
 4025 016e 41F20402 		movw	r2, #4100
 4026 0172 0121     		movs	r1, #1
 4027 0174 A154     		strb	r1, [r4, r2]
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4028              		.loc 1 991 0
 4029 0176 5BE7     		b	.L384
 4030              	.LVL523:
 4031              	.L392:
 4032              	.LCFI45:
 4033              		.cfi_def_cfa_offset 0
 4034              		.cfi_restore 4
 4035              		.cfi_restore 5
 4036              		.cfi_restore 6
 4037              		.cfi_restore 7
 4038              		.cfi_restore 8
 4039              		.cfi_restore 14
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4040              		.loc 1 958 0
 4041 0178 0223     		movs	r3, #2
 4042 017a 00E0     		b	.L397
 4043              	.L393:
 4044 017c 0223     		movs	r3, #2
 4045              	.L397:
 4046              	.LVL524:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 4047              		.loc 1 999 0
 4048 017e 1846     		mov	r0, r3
 4049              	.LVL525:
 4050 0180 7047     		bx	lr
 4051              		.cfi_endproc
 4052              	.LFE80:
 4054              		.section	.text.create_chain,"ax",%progbits
 4055              		.align	1
 4056              		.syntax unified
 4057              		.thumb
 4058              		.thumb_func
 4059              		.fpu softvfp
 4061              	create_chain:
 4062              	.LFB82:
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 4063              		.loc 1 1067 0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 0
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
 4067              	.LVL526:
 4068 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccTBpncU.s 			page 123


 4069              	.LCFI46:
 4070              		.cfi_def_cfa_offset 24
 4071              		.cfi_offset 3, -24
 4072              		.cfi_offset 4, -20
 4073              		.cfi_offset 5, -16
 4074              		.cfi_offset 6, -12
 4075              		.cfi_offset 7, -8
 4076              		.cfi_offset 14, -4
 4077 0002 0546     		mov	r5, r0
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
 4078              		.loc 1 1072 0
 4079 0004 0F46     		mov	r7, r1
 4080 0006 51B9     		cbnz	r1, .L402
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 4081              		.loc 1 1073 0
 4082 0008 41F20C03 		movw	r3, #4108
 4083 000c C658     		ldr	r6, [r0, r3]
 4084              	.LVL527:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4085              		.loc 1 1074 0
 4086 000e AEB1     		cbz	r6, .L410
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4087              		.loc 1 1074 0 is_stmt 0 discriminator 2
 4088 0010 41F21403 		movw	r3, #4116
 4089 0014 C358     		ldr	r3, [r0, r3]
 4090 0016 B342     		cmp	r3, r6
 4091 0018 11D8     		bhi	.L403
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4092              		.loc 1 1074 0
 4093 001a 0126     		movs	r6, #1
 4094              	.LVL528:
 4095 001c 0FE0     		b	.L403
 4096              	.LVL529:
 4097              	.L402:
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
 4098              		.loc 1 1077 0 is_stmt 1
 4099 001e FFF7FEFF 		bl	get_fat
 4100              	.LVL530:
 4101 0022 0346     		mov	r3, r0
 4102              	.LVL531:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 4103              		.loc 1 1078 0
 4104 0024 0128     		cmp	r0, #1
 4105 0026 50D9     		bls	.L412
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 4106              		.loc 1 1079 0
 4107 0028 B0F1FF3F 		cmp	r0, #-1
 4108 002c 52D0     		beq	.L401
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 4109              		.loc 1 1080 0
 4110 002e 41F21402 		movw	r2, #4116
 4111 0032 AA58     		ldr	r2, [r5, r2]
 4112 0034 8242     		cmp	r2, r0
 4113 0036 4DD8     		bhi	.L401
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4114              		.loc 1 1081 0
 4115 0038 3E46     		mov	r6, r7
ARM GAS  /tmp/ccTBpncU.s 			page 124


 4116 003a 00E0     		b	.L403
 4117              	.LVL532:
 4118              	.L410:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4119              		.loc 1 1074 0
 4120 003c 0126     		movs	r6, #1
 4121              	.LVL533:
 4122              	.L403:
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 4123              		.loc 1 1084 0
 4124 003e 3446     		mov	r4, r6
 4125 0040 0CE0     		b	.L407
 4126              	.LVL534:
 4127              	.L405:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 4128              		.loc 1 1091 0
 4129 0042 2146     		mov	r1, r4
 4130 0044 2846     		mov	r0, r5
 4131 0046 FFF7FEFF 		bl	get_fat
 4132              	.LVL535:
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 4133              		.loc 1 1092 0
 4134 004a 0346     		mov	r3, r0
 4135 004c 80B1     		cbz	r0, .L406
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 4136              		.loc 1 1093 0
 4137 004e B0F1FF3F 		cmp	r0, #-1
 4138 0052 3FD0     		beq	.L401
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 4139              		.loc 1 1093 0 is_stmt 0 discriminator 1
 4140 0054 0128     		cmp	r0, #1
 4141 0056 3DD0     		beq	.L401
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4142              		.loc 1 1095 0 is_stmt 1
 4143 0058 B442     		cmp	r4, r6
 4144 005a 3AD0     		beq	.L418
 4145              	.LVL536:
 4146              	.L407:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
 4147              		.loc 1 1086 0
 4148 005c 0134     		adds	r4, r4, #1
 4149              	.LVL537:
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
 4150              		.loc 1 1087 0
 4151 005e 41F21403 		movw	r3, #4116
 4152 0062 EB58     		ldr	r3, [r5, r3]
 4153 0064 A342     		cmp	r3, r4
 4154 0066 ECD8     		bhi	.L405
 4155              	.LVL538:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4156              		.loc 1 1089 0
 4157 0068 012E     		cmp	r6, #1
 4158 006a 30D9     		bls	.L413
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 4159              		.loc 1 1088 0
 4160 006c 0224     		movs	r4, #2
 4161 006e E8E7     		b	.L405
ARM GAS  /tmp/ccTBpncU.s 			page 125


 4162              	.LVL539:
 4163              	.L406:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
 4164              		.loc 1 1098 0
 4165 0070 6FF07042 		mvn	r2, #-268435456
 4166 0074 2146     		mov	r1, r4
 4167 0076 2846     		mov	r0, r5
 4168              	.LVL540:
 4169 0078 FFF7FEFF 		bl	put_fat
 4170              	.LVL541:
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 4171              		.loc 1 1099 0
 4172 007c 0346     		mov	r3, r0
 4173 007e 00B9     		cbnz	r0, .L408
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 4174              		.loc 1 1099 0 is_stmt 0 discriminator 1
 4175 0080 AFB9     		cbnz	r7, .L419
 4176              	.LVL542:
 4177              	.L408:
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
 4178              		.loc 1 1102 0 is_stmt 1
 4179 0082 DBB9     		cbnz	r3, .L409
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
 4180              		.loc 1 1103 0
 4181 0084 41F20C03 		movw	r3, #4108
 4182              	.LVL543:
 4183 0088 EC50     		str	r4, [r5, r3]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
 4184              		.loc 1 1104 0
 4185 008a 41F21003 		movw	r3, #4112
 4186 008e EB58     		ldr	r3, [r5, r3]
 4187 0090 B3F1FF3F 		cmp	r3, #-1
 4188 0094 20D0     		beq	.L415
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 4189              		.loc 1 1105 0
 4190 0096 013B     		subs	r3, r3, #1
 4191 0098 41F21002 		movw	r2, #4112
 4192 009c AB50     		str	r3, [r5, r2]
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4193              		.loc 1 1106 0
 4194 009e 41F20502 		movw	r2, #4101
 4195 00a2 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 4196 00a4 43F00103 		orr	r3, r3, #1
 4197 00a8 AB54     		strb	r3, [r5, r2]
 4198 00aa 2346     		mov	r3, r4
 4199 00ac 12E0     		b	.L401
 4200              	.LVL544:
 4201              	.L419:
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4202              		.loc 1 1100 0
 4203 00ae 2246     		mov	r2, r4
 4204 00b0 3946     		mov	r1, r7
 4205 00b2 2846     		mov	r0, r5
 4206              	.LVL545:
 4207 00b4 FFF7FEFF 		bl	put_fat
 4208              	.LVL546:
 4209 00b8 0346     		mov	r3, r0
ARM GAS  /tmp/ccTBpncU.s 			page 126


 4210              	.LVL547:
 4211 00ba E2E7     		b	.L408
 4212              	.L409:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4213              		.loc 1 1109 0
 4214 00bc 012B     		cmp	r3, #1
 4215 00be 01D0     		beq	.L420
 4216 00c0 0123     		movs	r3, #1
 4217              	.LVL548:
 4218 00c2 07E0     		b	.L401
 4219              	.LVL549:
 4220              	.L420:
 4221 00c4 4FF0FF33 		mov	r3, #-1
 4222              	.LVL550:
 4223 00c8 04E0     		b	.L401
 4224              	.LVL551:
 4225              	.L412:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 4226              		.loc 1 1078 0
 4227 00ca 0123     		movs	r3, #1
 4228 00cc 02E0     		b	.L401
 4229              	.LVL552:
 4230              	.L413:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4231              		.loc 1 1089 0
 4232 00ce 0023     		movs	r3, #0
 4233 00d0 00E0     		b	.L401
 4234              	.LVL553:
 4235              	.L418:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4236              		.loc 1 1095 0
 4237 00d2 0023     		movs	r3, #0
 4238              	.LVL554:
 4239              	.L401:
1113:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 4240              		.loc 1 1113 0
 4241 00d4 1846     		mov	r0, r3
 4242 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4243              	.LVL555:
 4244              	.L415:
 4245 00d8 2346     		mov	r3, r4
 4246 00da FBE7     		b	.L401
 4247              		.cfi_endproc
 4248              	.LFE82:
 4250              		.section	.text.dir_next,"ax",%progbits
 4251              		.align	1
 4252              		.syntax unified
 4253              		.thumb
 4254              		.thumb_func
 4255              		.fpu softvfp
 4257              	dir_next:
 4258              	.LFB85:
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
 4259              		.loc 1 1205 0
 4260              		.cfi_startproc
 4261              		@ args = 0, pretend = 0, frame = 0
 4262              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccTBpncU.s 			page 127


 4263              	.LVL556:
 4264 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4265              	.LCFI47:
 4266              		.cfi_def_cfa_offset 32
 4267              		.cfi_offset 3, -32
 4268              		.cfi_offset 4, -28
 4269              		.cfi_offset 5, -24
 4270              		.cfi_offset 6, -20
 4271              		.cfi_offset 7, -16
 4272              		.cfi_offset 8, -12
 4273              		.cfi_offset 9, -8
 4274              		.cfi_offset 14, -4
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
 4275              		.loc 1 1213 0
 4276 0004 41F20603 		movw	r3, #4102
 4277 0008 C65A     		ldrh	r6, [r0, r3]
 4278 000a 751C     		adds	r5, r6, #1
 4279              	.LVL557:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 4280              		.loc 1 1214 0
 4281 000c ABB2     		uxth	r3, r5
 4282 000e 002B     		cmp	r3, #0
 4283 0010 00F0B180 		beq	.L428
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 4284              		.loc 1 1214 0 is_stmt 0 discriminator 1
 4285 0014 41F21003 		movw	r3, #4112
 4286 0018 C258     		ldr	r2, [r0, r3]
 4287 001a 002A     		cmp	r2, #0
 4288 001c 00F0AD80 		beq	.L429
 4289 0020 0F46     		mov	r7, r1
 4290 0022 0446     		mov	r4, r0
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
 4291              		.loc 1 1217 0 is_stmt 1
 4292 0024 00F58053 		add	r3, r0, #4096
 4293 0028 1868     		ldr	r0, [r3]
 4294              	.LVL558:
 4295 002a 41F20A03 		movw	r3, #4106
 4296 002e C35A     		ldrh	r3, [r0, r3]
 4297 0030 5B09     		lsrs	r3, r3, #5
 4298 0032 B5FBF3F1 		udiv	r1, r5, r3
 4299              	.LVL559:
 4300 0036 03FB1153 		mls	r3, r3, r1, r5
 4301 003a 6BB9     		cbnz	r3, .L423
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4302              		.loc 1 1218 0
 4303 003c 0132     		adds	r2, r2, #1
 4304 003e 41F21003 		movw	r3, #4112
 4305 0042 E250     		str	r2, [r4, r3]
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
 4306              		.loc 1 1220 0
 4307 0044 41F20C03 		movw	r3, #4108
 4308 0048 E158     		ldr	r1, [r4, r3]
 4309 004a E1B9     		cbnz	r1, .L424
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
 4310              		.loc 1 1221 0
 4311 004c 41F20803 		movw	r3, #4104
 4312 0050 C35A     		ldrh	r3, [r0, r3]
ARM GAS  /tmp/ccTBpncU.s 			page 128


 4313 0052 AB42     		cmp	r3, r5
 4314 0054 40F29380 		bls	.L440
 4315              	.LVL560:
 4316              	.L423:
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
 4317              		.loc 1 1257 0
 4318 0058 731C     		adds	r3, r6, #1
 4319 005a 41F20602 		movw	r2, #4102
 4320 005e A352     		strh	r3, [r4, r2]	@ movhi
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4321              		.loc 1 1258 0
 4322 0060 04F58053 		add	r3, r4, #4096
 4323 0064 1B68     		ldr	r3, [r3]
 4324 0066 41F20A02 		movw	r2, #4106
 4325 006a 9A5A     		ldrh	r2, [r3, r2]
 4326 006c 5209     		lsrs	r2, r2, #5
 4327 006e B5FBF2F1 		udiv	r1, r5, r2
 4328 0072 02FB1155 		mls	r5, r2, r1, r5
 4329              	.LVL561:
 4330 0076 03EB4513 		add	r3, r3, r5, lsl #5
 4331 007a 41F21402 		movw	r2, #4116
 4332 007e A350     		str	r3, [r4, r2]
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4333              		.loc 1 1260 0
 4334 0080 0020     		movs	r0, #0
 4335              	.LVL562:
 4336              	.L422:
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4337              		.loc 1 1261 0
 4338 0082 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4339              	.LVL563:
 4340              	.L424:
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
 4341              		.loc 1 1225 0
 4342 0086 41F20A03 		movw	r3, #4106
 4343 008a C35A     		ldrh	r3, [r0, r3]
 4344 008c 5B09     		lsrs	r3, r3, #5
 4345 008e B5FBF3F3 		udiv	r3, r5, r3
 4346 0092 41F20202 		movw	r2, #4098
 4347 0096 10F80280 		ldrb	r8, [r0, r2]	@ zero_extendqisi2
 4348 009a 08F1FF38 		add	r8, r8, #-1
 4349 009e 13EA0808 		ands	r8, r3, r8
 4350 00a2 D9D1     		bne	.L423
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
 4351              		.loc 1 1226 0
 4352 00a4 FFF7FEFF 		bl	get_fat
 4353              	.LVL564:
 4354 00a8 8146     		mov	r9, r0
 4355              	.LVL565:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 4356              		.loc 1 1227 0
 4357 00aa 0128     		cmp	r0, #1
 4358 00ac 69D9     		bls	.L431
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 4359              		.loc 1 1228 0
 4360 00ae B0F1FF3F 		cmp	r0, #-1
 4361 00b2 68D0     		beq	.L432
ARM GAS  /tmp/ccTBpncU.s 			page 129


1229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4362              		.loc 1 1229 0
 4363 00b4 04F58053 		add	r3, r4, #4096
 4364 00b8 1868     		ldr	r0, [r3]
 4365              	.LVL566:
 4366 00ba 41F21403 		movw	r3, #4116
 4367 00be C358     		ldr	r3, [r0, r3]
 4368 00c0 4B45     		cmp	r3, r9
 4369 00c2 4AD8     		bhi	.L425
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 4370              		.loc 1 1231 0
 4371 00c4 002F     		cmp	r7, #0
 4372 00c6 60D0     		beq	.L433
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 4373              		.loc 1 1232 0
 4374 00c8 41F20C03 		movw	r3, #4108
 4375 00cc E158     		ldr	r1, [r4, r3]
 4376 00ce FFF7FEFF 		bl	create_chain
 4377              	.LVL567:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 4378              		.loc 1 1233 0
 4379 00d2 8146     		mov	r9, r0
 4380 00d4 0028     		cmp	r0, #0
 4381 00d6 5AD0     		beq	.L434
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 4382              		.loc 1 1234 0
 4383 00d8 0128     		cmp	r0, #1
 4384 00da 5AD0     		beq	.L435
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 4385              		.loc 1 1235 0
 4386 00dc B0F1FF3F 		cmp	r0, #-1
 4387 00e0 59D0     		beq	.L436
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 4388              		.loc 1 1237 0
 4389 00e2 04F58053 		add	r3, r4, #4096
 4390 00e6 1868     		ldr	r0, [r3]
 4391              	.LVL568:
 4392 00e8 FFF7FEFF 		bl	sync_window
 4393              	.LVL569:
 4394 00ec 08B1     		cbz	r0, .L441
 4395 00ee 0120     		movs	r0, #1
 4396 00f0 C7E7     		b	.L422
 4397              	.L441:
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
 4398              		.loc 1 1238 0
 4399 00f2 04F58057 		add	r7, r4, #4096
 4400              	.LVL570:
 4401 00f6 3868     		ldr	r0, [r7]
 4402 00f8 41F20A03 		movw	r3, #4106
 4403 00fc C25A     		ldrh	r2, [r0, r3]
 4404 00fe 0021     		movs	r1, #0
 4405 0100 FFF7FEFF 		bl	mem_set
 4406              	.LVL571:
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
 4407              		.loc 1 1239 0
 4408 0104 3F68     		ldr	r7, [r7]
 4409 0106 4946     		mov	r1, r9
ARM GAS  /tmp/ccTBpncU.s 			page 130


 4410 0108 3846     		mov	r0, r7
 4411 010a FFF7FEFF 		bl	clust2sect
 4412              	.LVL572:
 4413 010e 41F22C03 		movw	r3, #4140
 4414 0112 F850     		str	r0, [r7, r3]
 4415              	.LVL573:
 4416              	.L426:
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 4417              		.loc 1 1240 0 discriminator 1
 4418 0114 04F58053 		add	r3, r4, #4096
 4419 0118 1B68     		ldr	r3, [r3]
 4420 011a 41F20202 		movw	r2, #4098
 4421 011e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 4422 0120 4245     		cmp	r2, r8
 4423 0122 14D9     		bls	.L442
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
 4424              		.loc 1 1241 0
 4425 0124 41F20402 		movw	r2, #4100
 4426 0128 0121     		movs	r1, #1
 4427 012a 9954     		strb	r1, [r3, r2]
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 4428              		.loc 1 1242 0
 4429 012c 04F58053 		add	r3, r4, #4096
 4430 0130 1868     		ldr	r0, [r3]
 4431 0132 FFF7FEFF 		bl	sync_window
 4432              	.LVL574:
 4433 0136 80BB     		cbnz	r0, .L438
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4434              		.loc 1 1243 0 discriminator 2
 4435 0138 04F58053 		add	r3, r4, #4096
 4436 013c 1968     		ldr	r1, [r3]
 4437 013e 41F22C02 		movw	r2, #4140
 4438 0142 8B58     		ldr	r3, [r1, r2]
 4439 0144 0133     		adds	r3, r3, #1
 4440 0146 8B50     		str	r3, [r1, r2]
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 4441              		.loc 1 1240 0 discriminator 2
 4442 0148 08F10108 		add	r8, r8, #1
 4443              	.LVL575:
 4444 014c E2E7     		b	.L426
 4445              	.L442:
1245:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4446              		.loc 1 1245 0
 4447 014e 41F22C01 		movw	r1, #4140
 4448 0152 5A58     		ldr	r2, [r3, r1]
 4449 0154 A2EB0802 		sub	r2, r2, r8
 4450 0158 5A50     		str	r2, [r3, r1]
 4451              	.LVL576:
 4452              	.L425:
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
 4453              		.loc 1 1251 0
 4454 015a 41F20C03 		movw	r3, #4108
 4455 015e 44F80390 		str	r9, [r4, r3]
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4456              		.loc 1 1252 0
 4457 0162 04F58053 		add	r3, r4, #4096
 4458 0166 4946     		mov	r1, r9
ARM GAS  /tmp/ccTBpncU.s 			page 131


 4459 0168 1868     		ldr	r0, [r3]
 4460 016a FFF7FEFF 		bl	clust2sect
 4461              	.LVL577:
 4462 016e 41F21003 		movw	r3, #4112
 4463 0172 E050     		str	r0, [r4, r3]
 4464 0174 70E7     		b	.L423
 4465              	.LVL578:
 4466              	.L428:
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4467              		.loc 1 1215 0
 4468 0176 0420     		movs	r0, #4
 4469              	.LVL579:
 4470 0178 83E7     		b	.L422
 4471              	.LVL580:
 4472              	.L429:
 4473 017a 0420     		movs	r0, #4
 4474              	.LVL581:
 4475 017c 81E7     		b	.L422
 4476              	.LVL582:
 4477              	.L440:
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4478              		.loc 1 1222 0
 4479 017e 0420     		movs	r0, #4
 4480 0180 7FE7     		b	.L422
 4481              	.LVL583:
 4482              	.L431:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 4483              		.loc 1 1227 0
 4484 0182 0220     		movs	r0, #2
 4485              	.LVL584:
 4486 0184 7DE7     		b	.L422
 4487              	.LVL585:
 4488              	.L432:
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 4489              		.loc 1 1228 0
 4490 0186 0120     		movs	r0, #1
 4491              	.LVL586:
 4492 0188 7BE7     		b	.L422
 4493              	.L433:
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 4494              		.loc 1 1231 0
 4495 018a 0420     		movs	r0, #4
 4496 018c 79E7     		b	.L422
 4497              	.LVL587:
 4498              	.L434:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 4499              		.loc 1 1233 0
 4500 018e 0720     		movs	r0, #7
 4501              	.LVL588:
 4502 0190 77E7     		b	.L422
 4503              	.LVL589:
 4504              	.L435:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 4505              		.loc 1 1234 0
 4506 0192 0220     		movs	r0, #2
 4507              	.LVL590:
 4508 0194 75E7     		b	.L422
ARM GAS  /tmp/ccTBpncU.s 			page 132


 4509              	.LVL591:
 4510              	.L436:
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 4511              		.loc 1 1235 0
 4512 0196 0120     		movs	r0, #1
 4513              	.LVL592:
 4514 0198 73E7     		b	.L422
 4515              	.LVL593:
 4516              	.L438:
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 4517              		.loc 1 1242 0
 4518 019a 0120     		movs	r0, #1
 4519 019c 71E7     		b	.L422
 4520              		.cfi_endproc
 4521              	.LFE85:
 4523              		.section	.text.dir_find,"ax",%progbits
 4524              		.align	1
 4525              		.syntax unified
 4526              		.thumb
 4527              		.thumb_func
 4528              		.fpu softvfp
 4530              	dir_find:
 4531              	.LFB94:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4532              		.loc 1 1531 0
 4533              		.cfi_startproc
 4534              		@ args = 0, pretend = 0, frame = 0
 4535              		@ frame_needed = 0, uses_anonymous_args = 0
 4536              	.LVL594:
 4537 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4538              	.LCFI48:
 4539              		.cfi_def_cfa_offset 24
 4540              		.cfi_offset 4, -24
 4541              		.cfi_offset 5, -20
 4542              		.cfi_offset 6, -16
 4543              		.cfi_offset 7, -12
 4544              		.cfi_offset 8, -8
 4545              		.cfi_offset 14, -4
 4546 0004 0446     		mov	r4, r0
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 4547              		.loc 1 1538 0
 4548 0006 0021     		movs	r1, #0
 4549 0008 FFF7FEFF 		bl	dir_sdi
 4550              	.LVL595:
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4551              		.loc 1 1539 0
 4552 000c 8046     		mov	r8, r0
 4553 000e 0028     		cmp	r0, #0
 4554 0010 70D1     		bne	.L444
 4555              	.LVL596:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4556              		.loc 1 1542 0
 4557 0012 41F22403 		movw	r3, #4132
 4558 0016 4FF6FF72 		movw	r2, #65535
 4559 001a E252     		strh	r2, [r4, r3]	@ movhi
 4560 001c FF27     		movs	r7, #255
 4561 001e 3E46     		mov	r6, r7
ARM GAS  /tmp/ccTBpncU.s 			page 133


 4562 0020 0CE0     		b	.L452
 4563              	.LVL597:
 4564              	.L445:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 4565              		.loc 1 1553 0
 4566 0022 41F22403 		movw	r3, #4132
 4567              	.LVL598:
 4568 0026 4FF6FF72 		movw	r2, #65535
 4569 002a E252     		strh	r2, [r4, r3]	@ movhi
 4570              	.LVL599:
 4571 002c FF26     		movs	r6, #255
 4572              	.LVL600:
 4573              	.L447:
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 4574              		.loc 1 1575 0
 4575 002e 0021     		movs	r1, #0
 4576 0030 2046     		mov	r0, r4
 4577 0032 FFF7FEFF 		bl	dir_next
 4578              	.LVL601:
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4579              		.loc 1 1576 0
 4580 0036 8046     		mov	r8, r0
 4581 0038 0028     		cmp	r0, #0
 4582 003a 5BD1     		bne	.L444
 4583              	.LVL602:
 4584              	.L452:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 4585              		.loc 1 1545 0
 4586 003c 04F58053 		add	r3, r4, #4096
 4587 0040 41F21002 		movw	r2, #4112
 4588 0044 A158     		ldr	r1, [r4, r2]
 4589 0046 1868     		ldr	r0, [r3]
 4590              	.LVL603:
 4591 0048 FFF7FEFF 		bl	move_window
 4592              	.LVL604:
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 4593              		.loc 1 1546 0
 4594 004c 8046     		mov	r8, r0
 4595 004e 0028     		cmp	r0, #0
 4596 0050 50D1     		bne	.L444
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 4597              		.loc 1 1547 0
 4598 0052 41F21403 		movw	r3, #4116
 4599 0056 E558     		ldr	r5, [r4, r3]
 4600              	.LVL605:
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 4601              		.loc 1 1548 0
 4602 0058 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4603              	.LVL606:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 4604              		.loc 1 1549 0
 4605 005a 002B     		cmp	r3, #0
 4606 005c 48D0     		beq	.L453
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 4607              		.loc 1 1551 0
 4608 005e EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
 4609 0060 02F03F01 		and	r1, r2, #63
ARM GAS  /tmp/ccTBpncU.s 			page 134


 4610              	.LVL607:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
 4611              		.loc 1 1552 0
 4612 0064 E52B     		cmp	r3, #229
 4613 0066 DCD0     		beq	.L445
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
 4614              		.loc 1 1552 0 is_stmt 0 discriminator 1
 4615 0068 12F0080F 		tst	r2, #8
 4616 006c 01D0     		beq	.L446
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
 4617              		.loc 1 1552 0 discriminator 2
 4618 006e 0F29     		cmp	r1, #15
 4619 0070 D7D1     		bne	.L445
 4620              	.L446:
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->lfn) {
 4621              		.loc 1 1555 0 is_stmt 1
 4622 0072 0F29     		cmp	r1, #15
 4623 0074 18D0     		beq	.L458
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
 4624              		.loc 1 1566 0
 4625 0076 26B9     		cbnz	r6, .L450
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
 4626              		.loc 1 1566 0 is_stmt 0 discriminator 1
 4627 0078 2846     		mov	r0, r5
 4628              	.LVL608:
 4629 007a FFF7FEFF 		bl	sum_sfn
 4630              	.LVL609:
 4631 007e B842     		cmp	r0, r7
 4632 0080 38D0     		beq	.L444
 4633              	.L450:
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
 4634              		.loc 1 1567 0 is_stmt 1
 4635 0082 41F21803 		movw	r3, #4120
 4636 0086 E158     		ldr	r1, [r4, r3]
 4637 0088 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 4638 008a 13F0010F 		tst	r3, #1
 4639 008e 04D1     		bne	.L451
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
 4640              		.loc 1 1567 0 is_stmt 0 discriminator 1
 4641 0090 0B22     		movs	r2, #11
 4642 0092 2846     		mov	r0, r5
 4643 0094 FFF7FEFF 		bl	mem_cmp
 4644              	.LVL610:
 4645 0098 60B3     		cbz	r0, .L444
 4646              	.L451:
 4647              	.LVL611:
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4648              		.loc 1 1568 0 is_stmt 1
 4649 009a 41F22403 		movw	r3, #4132
 4650 009e 4FF6FF72 		movw	r2, #65535
 4651 00a2 E252     		strh	r2, [r4, r3]	@ movhi
 4652 00a4 FF26     		movs	r6, #255
 4653 00a6 C2E7     		b	.L447
 4654              	.LVL612:
 4655              	.L458:
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
 4656              		.loc 1 1556 0
ARM GAS  /tmp/ccTBpncU.s 			page 135


 4657 00a8 04F58152 		add	r2, r4, #4128
 4658 00ac 1068     		ldr	r0, [r2]
 4659              	.LVL613:
 4660 00ae 0028     		cmp	r0, #0
 4661 00b0 BDD0     		beq	.L447
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dir[LDIR_Chksum];
 4662              		.loc 1 1557 0
 4663 00b2 13F0400F 		tst	r3, #64
 4664 00b6 09D0     		beq	.L449
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= ~LLEF; ord = c;	/* LFN start order */
 4665              		.loc 1 1558 0
 4666 00b8 6F7B     		ldrb	r7, [r5, #13]	@ zero_extendqisi2
 4667              	.LVL614:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
 4668              		.loc 1 1559 0
 4669 00ba 03F0BF03 		and	r3, r3, #191
 4670              	.LVL615:
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4671              		.loc 1 1560 0
 4672 00be 41F20602 		movw	r2, #4102
 4673 00c2 A15A     		ldrh	r1, [r4, r2]
 4674              	.LVL616:
 4675 00c4 41F22402 		movw	r2, #4132
 4676 00c8 A152     		strh	r1, [r4, r2]	@ movhi
 4677              	.LVL617:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
 4678              		.loc 1 1559 0
 4679 00ca 1E46     		mov	r6, r3
 4680              	.LVL618:
 4681              	.L449:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4682              		.loc 1 1563 0
 4683 00cc B342     		cmp	r3, r6
 4684 00ce 01D0     		beq	.L459
 4685 00d0 FF26     		movs	r6, #255
 4686              	.LVL619:
 4687 00d2 ACE7     		b	.L447
 4688              	.LVL620:
 4689              	.L459:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4690              		.loc 1 1563 0 is_stmt 0 discriminator 1
 4691 00d4 6B7B     		ldrb	r3, [r5, #13]	@ zero_extendqisi2
 4692              	.LVL621:
 4693 00d6 BB42     		cmp	r3, r7
 4694 00d8 01D0     		beq	.L460
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4695              		.loc 1 1563 0
 4696 00da FF26     		movs	r6, #255
 4697              	.LVL622:
 4698 00dc A7E7     		b	.L447
 4699              	.LVL623:
 4700              	.L460:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4701              		.loc 1 1563 0 discriminator 3
 4702 00de 2946     		mov	r1, r5
 4703 00e0 FFF7FEFF 		bl	cmp_lfn
 4704              	.LVL624:
ARM GAS  /tmp/ccTBpncU.s 			page 136


 4705 00e4 10B1     		cbz	r0, .L456
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4706              		.loc 1 1563 0 discriminator 5
 4707 00e6 013E     		subs	r6, r6, #1
 4708              	.LVL625:
 4709 00e8 F6B2     		uxtb	r6, r6
 4710 00ea A0E7     		b	.L447
 4711              	.LVL626:
 4712              	.L456:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4713              		.loc 1 1563 0
 4714 00ec FF26     		movs	r6, #255
 4715              	.LVL627:
 4716 00ee 9EE7     		b	.L447
 4717              	.LVL628:
 4718              	.L453:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 4719              		.loc 1 1549 0 is_stmt 1
 4720 00f0 4FF00408 		mov	r8, #4
 4721              	.LVL629:
 4722              	.L444:
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4723              		.loc 1 1579 0
 4724 00f4 4046     		mov	r0, r8
 4725 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4726              		.cfi_endproc
 4727              	.LFE94:
 4729              		.section	.text.follow_path,"ax",%progbits
 4730              		.align	1
 4731              		.syntax unified
 4732              		.thumb
 4733              		.thumb_func
 4734              		.fpu softvfp
 4736              	follow_path:
 4737              	.LFB100:
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4738              		.loc 1 2129 0
 4739              		.cfi_startproc
 4740              		@ args = 0, pretend = 0, frame = 8
 4741              		@ frame_needed = 0, uses_anonymous_args = 0
 4742              	.LVL630:
 4743 0000 10B5     		push	{r4, lr}
 4744              	.LCFI49:
 4745              		.cfi_def_cfa_offset 8
 4746              		.cfi_offset 4, -8
 4747              		.cfi_offset 14, -4
 4748 0002 82B0     		sub	sp, sp, #8
 4749              	.LCFI50:
 4750              		.cfi_def_cfa_offset 16
 4751 0004 0446     		mov	r4, r0
 4752 0006 0191     		str	r1, [sp, #4]
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 4753              		.loc 1 2141 0
 4754 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 4755 000a 2F2B     		cmp	r3, #47
 4756 000c 01D0     		beq	.L462
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
ARM GAS  /tmp/ccTBpncU.s 			page 137


 4757              		.loc 1 2141 0 is_stmt 0 discriminator 1
 4758 000e 5C2B     		cmp	r3, #92
 4759 0010 01D1     		bne	.L463
 4760              	.L462:
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
 4761              		.loc 1 2142 0 is_stmt 1
 4762 0012 0131     		adds	r1, r1, #1
 4763              	.LVL631:
 4764 0014 0191     		str	r1, [sp, #4]
 4765              	.LVL632:
 4766              	.L463:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4767              		.loc 1 2143 0
 4768 0016 41F20803 		movw	r3, #4104
 4769 001a 0022     		movs	r2, #0
 4770 001c E250     		str	r2, [r4, r3]
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 4771              		.loc 1 2146 0
 4772 001e 019B     		ldr	r3, [sp, #4]
 4773 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4774 0022 1F2B     		cmp	r3, #31
 4775 0024 21D9     		bls	.L470
 4776              	.LVL633:
 4777              	.L464:
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4778              		.loc 1 2151 0
 4779 0026 01A9     		add	r1, sp, #4
 4780 0028 2046     		mov	r0, r4
 4781 002a FFF7FEFF 		bl	create_name
 4782              	.LVL634:
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
 4783              		.loc 1 2152 0
 4784 002e 0346     		mov	r3, r0
 4785 0030 20BB     		cbnz	r0, .L465
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 4786              		.loc 1 2153 0
 4787 0032 2046     		mov	r0, r4
 4788              	.LVL635:
 4789 0034 FFF7FEFF 		bl	dir_find
 4790              	.LVL636:
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 4791              		.loc 1 2154 0
 4792 0038 41F21803 		movw	r3, #4120
 4793 003c E358     		ldr	r3, [r4, r3]
 4794 003e DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 4795              	.LVL637:
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 4796              		.loc 1 2155 0
 4797 0040 0346     		mov	r3, r0
 4798 0042 F0B9     		cbnz	r0, .L471
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
 4799              		.loc 1 2167 0
 4800 0044 12F0040F 		tst	r2, #4
 4801 0048 18D1     		bne	.L465
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
 4802              		.loc 1 2168 0
 4803 004a 41F21403 		movw	r3, #4116
ARM GAS  /tmp/ccTBpncU.s 			page 138


 4804 004e E158     		ldr	r1, [r4, r3]
 4805              	.LVL638:
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 4806              		.loc 1 2169 0
 4807 0050 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 4808 0052 13F0100F 		tst	r3, #16
 4809 0056 1BD0     		beq	.L468
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4810              		.loc 1 2172 0
 4811 0058 04F58053 		add	r3, r4, #4096
 4812 005c 1868     		ldr	r0, [r3]
 4813              	.LVL639:
 4814 005e FFF7FEFF 		bl	ld_clust
 4815              	.LVL640:
 4816 0062 41F20803 		movw	r3, #4104
 4817 0066 E050     		str	r0, [r4, r3]
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4818              		.loc 1 2151 0
 4819 0068 DDE7     		b	.L464
 4820              	.LVL641:
 4821              	.L470:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
 4822              		.loc 1 2147 0
 4823 006a 1146     		mov	r1, r2
 4824 006c 2046     		mov	r0, r4
 4825              	.LVL642:
 4826 006e FFF7FEFF 		bl	dir_sdi
 4827              	.LVL643:
 4828 0072 0346     		mov	r3, r0
 4829              	.LVL644:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
 4830              		.loc 1 2148 0
 4831 0074 41F21402 		movw	r2, #4116
 4832 0078 0021     		movs	r1, #0
 4833 007a A150     		str	r1, [r4, r2]
 4834              	.LVL645:
 4835              	.L465:
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4836              		.loc 1 2177 0
 4837 007c 1846     		mov	r0, r3
 4838 007e 02B0     		add	sp, sp, #8
 4839              	.LCFI51:
 4840              		.cfi_remember_state
 4841              		.cfi_def_cfa_offset 8
 4842              		@ sp needed
 4843 0080 10BD     		pop	{r4, pc}
 4844              	.LVL646:
 4845              	.L471:
 4846              	.LCFI52:
 4847              		.cfi_restore_state
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
 4848              		.loc 1 2156 0
 4849 0082 0428     		cmp	r0, #4
 4850 0084 FAD1     		bne	.L465
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4851              		.loc 1 2162 0
 4852 0086 12F0040F 		tst	r2, #4
ARM GAS  /tmp/ccTBpncU.s 			page 139


 4853 008a F7D1     		bne	.L465
 4854 008c 0523     		movs	r3, #5
 4855 008e F5E7     		b	.L465
 4856              	.LVL647:
 4857              	.L468:
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4858              		.loc 1 2170 0
 4859 0090 0523     		movs	r3, #5
 4860 0092 F3E7     		b	.L465
 4861              		.cfi_endproc
 4862              	.LFE100:
 4864              		.section	.text.dir_alloc,"ax",%progbits
 4865              		.align	1
 4866              		.syntax unified
 4867              		.thumb
 4868              		.thumb_func
 4869              		.fpu softvfp
 4871              	dir_alloc:
 4872              	.LFB86:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4873              		.loc 1 1276 0
 4874              		.cfi_startproc
 4875              		@ args = 0, pretend = 0, frame = 0
 4876              		@ frame_needed = 0, uses_anonymous_args = 0
 4877              	.LVL648:
 4878 0000 70B5     		push	{r4, r5, r6, lr}
 4879              	.LCFI53:
 4880              		.cfi_def_cfa_offset 16
 4881              		.cfi_offset 4, -16
 4882              		.cfi_offset 5, -12
 4883              		.cfi_offset 6, -8
 4884              		.cfi_offset 14, -4
 4885 0002 0446     		mov	r4, r0
 4886 0004 0E46     		mov	r6, r1
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4887              		.loc 1 1281 0
 4888 0006 0021     		movs	r1, #0
 4889              	.LVL649:
 4890 0008 FFF7FEFF 		bl	dir_sdi
 4891              	.LVL650:
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 4892              		.loc 1 1282 0
 4893 000c 0346     		mov	r3, r0
 4894 000e F0B9     		cbnz	r0, .L473
1283:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 4895              		.loc 1 1283 0
 4896 0010 0025     		movs	r5, #0
 4897 0012 08E0     		b	.L476
 4898              	.LVL651:
 4899              	.L474:
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4900              		.loc 1 1288 0
 4901 0014 0135     		adds	r5, r5, #1
 4902              	.LVL652:
 4903 0016 B542     		cmp	r5, r6
 4904 0018 19D0     		beq	.L473
 4905              	.LVL653:
ARM GAS  /tmp/ccTBpncU.s 			page 140


 4906              	.L475:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 4907              		.loc 1 1292 0
 4908 001a 0121     		movs	r1, #1
 4909 001c 2046     		mov	r0, r4
 4910              	.LVL654:
 4911 001e FFF7FEFF 		bl	dir_next
 4912              	.LVL655:
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4913              		.loc 1 1293 0
 4914 0022 0346     		mov	r3, r0
 4915 0024 98B9     		cbnz	r0, .L473
 4916              	.LVL656:
 4917              	.L476:
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4918              		.loc 1 1285 0
 4919 0026 04F58053 		add	r3, r4, #4096
 4920 002a 41F21002 		movw	r2, #4112
 4921 002e A158     		ldr	r1, [r4, r2]
 4922 0030 1868     		ldr	r0, [r3]
 4923              	.LVL657:
 4924 0032 FFF7FEFF 		bl	move_window
 4925              	.LVL658:
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
 4926              		.loc 1 1286 0
 4927 0036 0346     		mov	r3, r0
 4928 0038 48B9     		cbnz	r0, .L473
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 4929              		.loc 1 1287 0
 4930 003a 41F21402 		movw	r2, #4116
 4931 003e A258     		ldr	r2, [r4, r2]
 4932 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4933 0042 E52A     		cmp	r2, #229
 4934 0044 E6D0     		beq	.L474
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 4935              		.loc 1 1287 0 is_stmt 0 discriminator 1
 4936 0046 002A     		cmp	r2, #0
 4937 0048 E4D0     		beq	.L474
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4938              		.loc 1 1290 0 is_stmt 1
 4939 004a 0025     		movs	r5, #0
 4940              	.LVL659:
 4941 004c E5E7     		b	.L475
 4942              	.L473:
 4943              	.LVL660:
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4944              		.loc 1 1295 0
 4945 004e 042B     		cmp	r3, #4
 4946 0050 01D0     		beq	.L481
 4947              	.LVL661:
 4948              	.L477:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4949              		.loc 1 1297 0
 4950 0052 1846     		mov	r0, r3
 4951 0054 70BD     		pop	{r4, r5, r6, pc}
 4952              	.LVL662:
 4953              	.L481:
ARM GAS  /tmp/ccTBpncU.s 			page 141


1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4954              		.loc 1 1295 0
 4955 0056 0723     		movs	r3, #7
 4956              	.LVL663:
 4957 0058 FBE7     		b	.L477
 4958              		.cfi_endproc
 4959              	.LFE86:
 4961              		.section	.text.dir_register,"ax",%progbits
 4962              		.align	1
 4963              		.syntax unified
 4964              		.thumb
 4965              		.thumb_func
 4966              		.fpu softvfp
 4968              	dir_register:
 4969              	.LFB96:
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4970              		.loc 1 1651 0
 4971              		.cfi_startproc
 4972              		@ args = 0, pretend = 0, frame = 16
 4973              		@ frame_needed = 0, uses_anonymous_args = 0
 4974              	.LVL664:
 4975 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4976              	.LCFI54:
 4977              		.cfi_def_cfa_offset 24
 4978              		.cfi_offset 4, -24
 4979              		.cfi_offset 5, -20
 4980              		.cfi_offset 6, -16
 4981              		.cfi_offset 7, -12
 4982              		.cfi_offset 8, -8
 4983              		.cfi_offset 14, -4
 4984 0004 84B0     		sub	sp, sp, #16
 4985              	.LCFI55:
 4986              		.cfi_def_cfa_offset 40
 4987 0006 0546     		mov	r5, r0
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, fn, 12);
 4988              		.loc 1 1659 0
 4989 0008 41F21803 		movw	r3, #4120
 4990 000c 50F80380 		ldr	r8, [r0, r3]
 4991              	.LVL665:
 4992 0010 00F58153 		add	r3, r0, #4128
 4993 0014 1F68     		ldr	r7, [r3]
 4994              	.LVL666:
1660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4995              		.loc 1 1660 0
 4996 0016 0C22     		movs	r2, #12
 4997 0018 4146     		mov	r1, r8
 4998 001a 01A8     		add	r0, sp, #4
 4999              	.LVL667:
 5000 001c FFF7FEFF 		bl	mem_cpy
 5001              	.LVL668:
1665:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = 0; dp->lfn = 0;			/* Find only SFN */
 5002              		.loc 1 1665 0
 5003 0020 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5004 0024 13F0010F 		tst	r3, #1
 5005 0028 21D0     		beq	.L483
1666:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
 5006              		.loc 1 1666 0
ARM GAS  /tmp/ccTBpncU.s 			page 142


 5007 002a 0023     		movs	r3, #0
 5008 002c 88F80B30 		strb	r3, [r8, #11]
 5009 0030 05F58152 		add	r2, r5, #4128
 5010 0034 1360     		str	r3, [r2]
 5011              	.LVL669:
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
 5012              		.loc 1 1667 0
 5013 0036 0124     		movs	r4, #1
 5014              	.LVL670:
 5015              	.L484:
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
 5016              		.loc 1 1667 0 is_stmt 0 discriminator 1
 5017 0038 632C     		cmp	r4, #99
 5018 003a 0CD8     		bhi	.L485
1668:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
 5019              		.loc 1 1668 0 is_stmt 1
 5020 003c 2346     		mov	r3, r4
 5021 003e 3A46     		mov	r2, r7
 5022 0040 01A9     		add	r1, sp, #4
 5023 0042 4046     		mov	r0, r8
 5024 0044 FFF7FEFF 		bl	gen_numname
 5025              	.LVL671:
1669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5026              		.loc 1 1669 0
 5027 0048 2846     		mov	r0, r5
 5028 004a FFF7FEFF 		bl	dir_find
 5029              	.LVL672:
1670:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5030              		.loc 1 1670 0
 5031 004e 0646     		mov	r6, r0
 5032 0050 08B9     		cbnz	r0, .L485
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
 5033              		.loc 1 1667 0 discriminator 2
 5034 0052 0134     		adds	r4, r4, #1
 5035              	.LVL673:
 5036 0054 F0E7     		b	.L484
 5037              	.LVL674:
 5038              	.L485:
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 5039              		.loc 1 1672 0
 5040 0056 642C     		cmp	r4, #100
 5041 0058 00F08880 		beq	.L493
1673:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = sn[NSFLAG]; dp->lfn = lfn;
 5042              		.loc 1 1673 0
 5043 005c 042E     		cmp	r6, #4
 5044 005e 16D1     		bne	.L487
1674:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5045              		.loc 1 1674 0
 5046 0060 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5047 0064 88F80B30 		strb	r3, [r8, #11]
 5048 0068 05F58153 		add	r3, r5, #4128
 5049 006c 1F60     		str	r7, [r3]
 5050              	.LVL675:
 5051              	.L483:
1677:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; lfn[n]; n++) ;
 5052              		.loc 1 1677 0
 5053 006e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccTBpncU.s 			page 143


 5054 0072 13F0020F 		tst	r3, #2
 5055 0076 1AD1     		bne	.L494
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5056              		.loc 1 1681 0
 5057 0078 0124     		movs	r4, #1
 5058              	.L489:
 5059              	.LVL676:
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5060              		.loc 1 1683 0
 5061 007a 2146     		mov	r1, r4
 5062 007c 2846     		mov	r0, r5
 5063 007e FFF7FEFF 		bl	dir_alloc
 5064              	.LVL677:
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
 5065              		.loc 1 1685 0
 5066 0082 0646     		mov	r6, r0
 5067 0084 08B9     		cbnz	r0, .L491
 5068              	.LVL678:
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
 5069              		.loc 1 1685 0 is_stmt 0 discriminator 1
 5070 0086 013C     		subs	r4, r4, #1
 5071              	.LVL679:
 5072 0088 13D1     		bne	.L496
 5073              	.LVL680:
 5074              	.L491:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 5075              		.loc 1 1702 0 is_stmt 1
 5076 008a 002E     		cmp	r6, #0
 5077 008c 47D0     		beq	.L497
 5078              	.LVL681:
 5079              	.L487:
1715:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 5080              		.loc 1 1715 0
 5081 008e 3046     		mov	r0, r6
 5082 0090 04B0     		add	sp, sp, #16
 5083              	.LCFI56:
 5084              		.cfi_remember_state
 5085              		.cfi_def_cfa_offset 24
 5086              		@ sp needed
 5087 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5088              	.LVL682:
 5089              	.L490:
 5090              	.LCFI57:
 5091              		.cfi_restore_state
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
 5092              		.loc 1 1678 0 discriminator 3
 5093 0096 0133     		adds	r3, r3, #1
 5094              	.LVL683:
 5095              	.L488:
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
 5096              		.loc 1 1678 0 is_stmt 0 discriminator 1
 5097 0098 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 5098 009c 002A     		cmp	r2, #0
 5099 009e FAD1     		bne	.L490
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {						/* Otherwise allocate an entry for an SFN  */
 5100              		.loc 1 1679 0 is_stmt 1
 5101 00a0 03F11904 		add	r4, r3, #25
ARM GAS  /tmp/ccTBpncU.s 			page 144


 5102 00a4 324B     		ldr	r3, .L498
 5103              	.LVL684:
 5104 00a6 A3FB0434 		umull	r3, r4, r3, r4
 5105              	.LVL685:
 5106 00aa A408     		lsrs	r4, r4, #2
 5107              	.LVL686:
 5108 00ac E5E7     		b	.L489
 5109              	.LVL687:
 5110              	.L494:
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
 5111              		.loc 1 1678 0
 5112 00ae 0023     		movs	r3, #0
 5113 00b0 F2E7     		b	.L488
 5114              	.LVL688:
 5115              	.L496:
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5116              		.loc 1 1686 0
 5117 00b2 41F20603 		movw	r3, #4102
 5118 00b6 E95A     		ldrh	r1, [r5, r3]
 5119 00b8 091B     		subs	r1, r1, r4
 5120 00ba 2846     		mov	r0, r5
 5121              	.LVL689:
 5122 00bc FFF7FEFF 		bl	dir_sdi
 5123              	.LVL690:
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
 5124              		.loc 1 1687 0
 5125 00c0 0646     		mov	r6, r0
 5126 00c2 0028     		cmp	r0, #0
 5127 00c4 E1D1     		bne	.L491
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
 5128              		.loc 1 1688 0
 5129 00c6 41F21803 		movw	r3, #4120
 5130 00ca E858     		ldr	r0, [r5, r3]
 5131              	.LVL691:
 5132 00cc FFF7FEFF 		bl	sum_sfn
 5133              	.LVL692:
 5134 00d0 0746     		mov	r7, r0
 5135              	.LVL693:
 5136              	.L492:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 5137              		.loc 1 1690 0
 5138 00d2 05F58053 		add	r3, r5, #4096
 5139 00d6 41F21002 		movw	r2, #4112
 5140 00da A958     		ldr	r1, [r5, r2]
 5141 00dc 1868     		ldr	r0, [r3]
 5142 00de FFF7FEFF 		bl	move_window
 5143              	.LVL694:
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
 5144              		.loc 1 1691 0
 5145 00e2 0646     		mov	r6, r0
 5146 00e4 0028     		cmp	r0, #0
 5147 00e6 D0D1     		bne	.L491
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->fs->wflag = 1;
 5148              		.loc 1 1692 0
 5149 00e8 05F58150 		add	r0, r5, #4128
 5150              	.LVL695:
 5151 00ec 3B46     		mov	r3, r7
ARM GAS  /tmp/ccTBpncU.s 			page 145


 5152 00ee E2B2     		uxtb	r2, r4
 5153 00f0 41F21401 		movw	r1, #4116
 5154 00f4 6958     		ldr	r1, [r5, r1]
 5155 00f6 0068     		ldr	r0, [r0]
 5156 00f8 FFF7FEFF 		bl	fit_lfn
 5157              	.LVL696:
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
 5158              		.loc 1 1693 0
 5159 00fc 05F58053 		add	r3, r5, #4096
 5160 0100 1A68     		ldr	r2, [r3]
 5161 0102 41F20403 		movw	r3, #4100
 5162 0106 0121     		movs	r1, #1
 5163 0108 D154     		strb	r1, [r2, r3]
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
 5164              		.loc 1 1694 0
 5165 010a 0021     		movs	r1, #0
 5166 010c 2846     		mov	r0, r5
 5167 010e FFF7FEFF 		bl	dir_next
 5168              	.LVL697:
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5169              		.loc 1 1695 0
 5170 0112 0646     		mov	r6, r0
 5171 0114 0028     		cmp	r0, #0
 5172 0116 B8D1     		bne	.L491
 5173              	.LVL698:
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5174              		.loc 1 1695 0 is_stmt 0 discriminator 1
 5175 0118 013C     		subs	r4, r4, #1
 5176              	.LVL699:
 5177 011a DAD1     		bne	.L492
 5178 011c B5E7     		b	.L491
 5179              	.LVL700:
 5180              	.L497:
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5181              		.loc 1 1703 0 is_stmt 1
 5182 011e 05F58053 		add	r3, r5, #4096
 5183 0122 41F21002 		movw	r2, #4112
 5184 0126 A958     		ldr	r1, [r5, r2]
 5185 0128 1868     		ldr	r0, [r3]
 5186 012a FFF7FEFF 		bl	move_window
 5187              	.LVL701:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
 5188              		.loc 1 1704 0
 5189 012e 0646     		mov	r6, r0
 5190 0130 0028     		cmp	r0, #0
 5191 0132 ACD1     		bne	.L487
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
 5192              		.loc 1 1705 0
 5193 0134 41F21404 		movw	r4, #4116
 5194              	.LVL702:
 5195 0138 2022     		movs	r2, #32
 5196 013a 0021     		movs	r1, #0
 5197 013c 2859     		ldr	r0, [r5, r4]
 5198              	.LVL703:
 5199 013e FFF7FEFF 		bl	mem_set
 5200              	.LVL704:
1706:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
ARM GAS  /tmp/ccTBpncU.s 			page 146


 5201              		.loc 1 1706 0
 5202 0142 41F21807 		movw	r7, #4120
 5203 0146 0B22     		movs	r2, #11
 5204 0148 E959     		ldr	r1, [r5, r7]
 5205 014a 2859     		ldr	r0, [r5, r4]
 5206 014c FFF7FEFF 		bl	mem_cpy
 5207              	.LVL705:
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5208              		.loc 1 1708 0
 5209 0150 EB59     		ldr	r3, [r5, r7]
 5210 0152 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 5211 0154 2A59     		ldr	r2, [r5, r4]
 5212 0156 03F01803 		and	r3, r3, #24
 5213 015a 1373     		strb	r3, [r2, #12]
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5214              		.loc 1 1710 0
 5215 015c 05F58055 		add	r5, r5, #4096
 5216              	.LVL706:
 5217 0160 2A68     		ldr	r2, [r5]
 5218 0162 41F20403 		movw	r3, #4100
 5219 0166 0121     		movs	r1, #1
 5220 0168 D154     		strb	r1, [r2, r3]
 5221 016a 90E7     		b	.L487
 5222              	.LVL707:
 5223              	.L493:
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 5224              		.loc 1 1672 0
 5225 016c 0726     		movs	r6, #7
 5226              	.LVL708:
 5227 016e 8EE7     		b	.L487
 5228              	.L499:
 5229              		.align	2
 5230              	.L498:
 5231 0170 4FECC44E 		.word	1321528399
 5232              		.cfi_endproc
 5233              	.LFE96:
 5235              		.section	.text.dir_read,"ax",%progbits
 5236              		.align	1
 5237              		.syntax unified
 5238              		.thumb
 5239              		.thumb_func
 5240              		.fpu softvfp
 5242              	dir_read:
 5243              	.LFB95:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5244              		.loc 1 1593 0
 5245              		.cfi_startproc
 5246              		@ args = 0, pretend = 0, frame = 0
 5247              		@ frame_needed = 0, uses_anonymous_args = 0
 5248              	.LVL709:
 5249 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5250              	.LCFI58:
 5251              		.cfi_def_cfa_offset 24
 5252              		.cfi_offset 4, -24
 5253              		.cfi_offset 5, -20
 5254              		.cfi_offset 6, -16
 5255              		.cfi_offset 7, -12
ARM GAS  /tmp/ccTBpncU.s 			page 147


 5256              		.cfi_offset 8, -8
 5257              		.cfi_offset 14, -4
 5258 0004 0446     		mov	r4, r0
 5259 0006 0E46     		mov	r6, r1
 5260              	.LVL710:
1597:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5261              		.loc 1 1597 0
 5262 0008 FF27     		movs	r7, #255
 5263 000a 3D46     		mov	r5, r7
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
 5264              		.loc 1 1600 0
 5265 000c 4FF00408 		mov	r8, #4
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 5266              		.loc 1 1601 0
 5267 0010 36E0     		b	.L501
 5268              	.LVL711:
 5269              	.L519:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c & LLEF) {			/* Is it start of LFN sequence? */
 5270              		.loc 1 1612 0
 5271 0012 0F2A     		cmp	r2, #15
 5272 0014 1FD1     		bne	.L504
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 					sum = dir[LDIR_Chksum];
 5273              		.loc 1 1613 0
 5274 0016 13F0400F 		tst	r3, #64
 5275 001a 09D0     		beq	.L505
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 					c &= ~LLEF; ord = c;
 5276              		.loc 1 1614 0
 5277 001c 4F7B     		ldrb	r7, [r1, #13]	@ zero_extendqisi2
 5278              	.LVL712:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
 5279              		.loc 1 1615 0
 5280 001e 03F0BF03 		and	r3, r3, #191
 5281              	.LVL713:
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5282              		.loc 1 1616 0
 5283 0022 41F20602 		movw	r2, #4102
 5284              	.LVL714:
 5285 0026 A05A     		ldrh	r0, [r4, r2]
 5286 0028 41F22402 		movw	r2, #4132
 5287 002c A052     		strh	r0, [r4, r2]	@ movhi
 5288              	.LVL715:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
 5289              		.loc 1 1615 0
 5290 002e 1D46     		mov	r5, r3
 5291              	.LVL716:
 5292              	.L505:
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5293              		.loc 1 1619 0
 5294 0030 AB42     		cmp	r3, r5
 5295 0032 01D0     		beq	.L517
 5296 0034 FF25     		movs	r5, #255
 5297              	.LVL717:
 5298 0036 1DE0     		b	.L503
 5299              	.LVL718:
 5300              	.L517:
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5301              		.loc 1 1619 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 148


 5302 0038 4B7B     		ldrb	r3, [r1, #13]	@ zero_extendqisi2
 5303              	.LVL719:
 5304 003a BB42     		cmp	r3, r7
 5305 003c 01D0     		beq	.L518
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5306              		.loc 1 1619 0
 5307 003e FF25     		movs	r5, #255
 5308              	.LVL720:
 5309 0040 18E0     		b	.L503
 5310              	.LVL721:
 5311              	.L518:
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5312              		.loc 1 1619 0 discriminator 3
 5313 0042 04F58153 		add	r3, r4, #4128
 5314 0046 1868     		ldr	r0, [r3]
 5315 0048 FFF7FEFF 		bl	pick_lfn
 5316              	.LVL722:
 5317 004c 0028     		cmp	r0, #0
 5318 004e 38D0     		beq	.L515
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5319              		.loc 1 1619 0 discriminator 5
 5320 0050 013D     		subs	r5, r5, #1
 5321              	.LVL723:
 5322 0052 EDB2     		uxtb	r5, r5
 5323 0054 0EE0     		b	.L503
 5324              	.LVL724:
 5325              	.L504:
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
 5326              		.loc 1 1621 0 is_stmt 1
 5327 0056 25B9     		cbnz	r5, .L506
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
 5328              		.loc 1 1621 0 is_stmt 0 discriminator 1
 5329 0058 0846     		mov	r0, r1
 5330 005a FFF7FEFF 		bl	sum_sfn
 5331              	.LVL725:
 5332 005e B842     		cmp	r0, r7
 5333 0060 33D0     		beq	.L502
 5334              	.L506:
1622:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 5335              		.loc 1 1622 0 is_stmt 1
 5336 0062 41F22403 		movw	r3, #4132
 5337 0066 4FF6FF72 		movw	r2, #65535
 5338 006a E252     		strh	r2, [r4, r3]	@ movhi
 5339 006c 2DE0     		b	.L502
 5340              	.LVL726:
 5341              	.L510:
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5342              		.loc 1 1610 0
 5343 006e FF25     		movs	r5, #255
 5344              	.LVL727:
 5345 0070 00E0     		b	.L503
 5346              	.LVL728:
 5347              	.L511:
 5348 0072 FF25     		movs	r5, #255
 5349              	.LVL729:
 5350              	.L503:
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
ARM GAS  /tmp/ccTBpncU.s 			page 149


 5351              		.loc 1 1630 0
 5352 0074 0021     		movs	r1, #0
 5353 0076 2046     		mov	r0, r4
 5354 0078 FFF7FEFF 		bl	dir_next
 5355              	.LVL730:
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5356              		.loc 1 1631 0
 5357 007c 8046     		mov	r8, r0
 5358 007e 20BB     		cbnz	r0, .L502
 5359              	.LVL731:
 5360              	.L501:
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 5361              		.loc 1 1601 0
 5362 0080 41F21003 		movw	r3, #4112
 5363 0084 E158     		ldr	r1, [r4, r3]
 5364 0086 01B3     		cbz	r1, .L502
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 5365              		.loc 1 1602 0
 5366 0088 04F58053 		add	r3, r4, #4096
 5367 008c 1868     		ldr	r0, [r3]
 5368 008e FFF7FEFF 		bl	move_window
 5369              	.LVL732:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 5370              		.loc 1 1603 0
 5371 0092 8046     		mov	r8, r0
 5372 0094 C8B9     		cbnz	r0, .L502
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 5373              		.loc 1 1604 0
 5374 0096 41F21403 		movw	r3, #4116
 5375 009a E158     		ldr	r1, [r4, r3]
 5376              	.LVL733:
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 5377              		.loc 1 1605 0
 5378 009c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 5379              	.LVL734:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 5380              		.loc 1 1606 0
 5381 009e 93B1     		cbz	r3, .L509
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 5382              		.loc 1 1607 0
 5383 00a0 CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 5384 00a2 02F03F02 		and	r2, r2, #63
 5385              	.LVL735:
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
 5386              		.loc 1 1609 0
 5387 00a6 E52B     		cmp	r3, #229
 5388 00a8 E1D0     		beq	.L510
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
 5389              		.loc 1 1609 0 is_stmt 0 discriminator 1
 5390 00aa 2E2B     		cmp	r3, #46
 5391 00ac E1D0     		beq	.L511
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
 5392              		.loc 1 1609 0 discriminator 2
 5393 00ae 22F02000 		bic	r0, r2, #32
 5394              	.LVL736:
 5395 00b2 0828     		cmp	r0, #8
 5396 00b4 14BF     		ite	ne
ARM GAS  /tmp/ccTBpncU.s 			page 150


 5397 00b6 0020     		movne	r0, #0
 5398 00b8 0120     		moveq	r0, #1
 5399 00ba B042     		cmp	r0, r6
 5400 00bc A9D0     		beq	.L519
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5401              		.loc 1 1610 0 is_stmt 1
 5402 00be FF25     		movs	r5, #255
 5403              	.LVL737:
 5404 00c0 D8E7     		b	.L503
 5405              	.LVL738:
 5406              	.L515:
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
 5407              		.loc 1 1619 0
 5408 00c2 FF25     		movs	r5, #255
 5409              	.LVL739:
 5410 00c4 D6E7     		b	.L503
 5411              	.LVL740:
 5412              	.L509:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 5413              		.loc 1 1606 0
 5414 00c6 4FF00408 		mov	r8, #4
 5415              	.LVL741:
 5416              	.L502:
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5417              		.loc 1 1634 0
 5418 00ca B8F1000F 		cmp	r8, #0
 5419 00ce 03D0     		beq	.L508
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5420              		.loc 1 1634 0 is_stmt 0 discriminator 1
 5421 00d0 41F21003 		movw	r3, #4112
 5422 00d4 0022     		movs	r2, #0
 5423 00d6 E250     		str	r2, [r4, r3]
 5424              	.L508:
1637:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
 5425              		.loc 1 1637 0 is_stmt 1
 5426 00d8 4046     		mov	r0, r8
 5427 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5428              		.cfi_endproc
 5429              	.LFE95:
 5431              		.section	.text.dir_remove,"ax",%progbits
 5432              		.align	1
 5433              		.syntax unified
 5434              		.thumb
 5435              		.thumb_func
 5436              		.fpu softvfp
 5438              	dir_remove:
 5439              	.LFB97:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5440              		.loc 1 1729 0
 5441              		.cfi_startproc
 5442              		@ args = 0, pretend = 0, frame = 0
 5443              		@ frame_needed = 0, uses_anonymous_args = 0
 5444              	.LVL742:
 5445 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5446              	.LCFI59:
 5447              		.cfi_def_cfa_offset 24
 5448              		.cfi_offset 3, -24
ARM GAS  /tmp/ccTBpncU.s 			page 151


 5449              		.cfi_offset 4, -20
 5450              		.cfi_offset 5, -16
 5451              		.cfi_offset 6, -12
 5452              		.cfi_offset 7, -8
 5453              		.cfi_offset 14, -4
 5454 0002 0446     		mov	r4, r0
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN en
 5455              		.loc 1 1734 0
 5456 0004 41F20603 		movw	r3, #4102
 5457 0008 C75A     		ldrh	r7, [r0, r3]
 5458 000a 3946     		mov	r1, r7
 5459              	.LVL743:
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5460              		.loc 1 1735 0
 5461 000c 41F22403 		movw	r3, #4132
 5462 0010 C35A     		ldrh	r3, [r0, r3]
 5463 0012 4FF6FF72 		movw	r2, #65535
 5464 0016 9342     		cmp	r3, r2
 5465 0018 00D0     		beq	.L521
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5466              		.loc 1 1735 0 is_stmt 0 discriminator 1
 5467 001a 1946     		mov	r1, r3
 5468              	.LVL744:
 5469              	.L521:
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5470              		.loc 1 1735 0 discriminator 4
 5471 001c 2046     		mov	r0, r4
 5472              	.LVL745:
 5473 001e FFF7FEFF 		bl	dir_sdi
 5474              	.LVL746:
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 5475              		.loc 1 1736 0 is_stmt 1 discriminator 4
 5476 0022 0646     		mov	r6, r0
 5477 0024 40BB     		cbnz	r0, .L522
 5478              	.L524:
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5479              		.loc 1 1738 0
 5480 0026 04F58053 		add	r3, r4, #4096
 5481 002a 41F21002 		movw	r2, #4112
 5482 002e A158     		ldr	r1, [r4, r2]
 5483 0030 1868     		ldr	r0, [r3]
 5484              	.LVL747:
 5485 0032 FFF7FEFF 		bl	move_window
 5486              	.LVL748:
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
 5487              		.loc 1 1739 0
 5488 0036 0646     		mov	r6, r0
 5489 0038 E0B9     		cbnz	r0, .L523
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
 5490              		.loc 1 1740 0
 5491 003a 41F21405 		movw	r5, #4116
 5492 003e 2022     		movs	r2, #32
 5493 0040 0021     		movs	r1, #0
 5494 0042 6059     		ldr	r0, [r4, r5]
 5495              	.LVL749:
 5496 0044 FFF7FEFF 		bl	mem_set
 5497              	.LVL750:
ARM GAS  /tmp/ccTBpncU.s 			page 152


1741:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
 5498              		.loc 1 1741 0
 5499 0048 6359     		ldr	r3, [r4, r5]
 5500 004a E522     		movs	r2, #229
 5501 004c 1A70     		strb	r2, [r3]
1742:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
 5502              		.loc 1 1742 0
 5503 004e 04F58053 		add	r3, r4, #4096
 5504 0052 1A68     		ldr	r2, [r3]
 5505 0054 41F20403 		movw	r3, #4100
 5506 0058 0121     		movs	r1, #1
 5507 005a D154     		strb	r1, [r2, r3]
1743:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);		/* Next entry */
 5508              		.loc 1 1743 0
 5509 005c 41F20603 		movw	r3, #4102
 5510 0060 E35A     		ldrh	r3, [r4, r3]
 5511 0062 9F42     		cmp	r7, r3
 5512 0064 06D9     		bls	.L523
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 5513              		.loc 1 1744 0
 5514 0066 0021     		movs	r1, #0
 5515 0068 2046     		mov	r0, r4
 5516 006a FFF7FEFF 		bl	dir_next
 5517              	.LVL751:
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
 5518              		.loc 1 1745 0
 5519 006e 0646     		mov	r6, r0
 5520 0070 0028     		cmp	r0, #0
 5521 0072 D8D0     		beq	.L524
 5522              	.LVL752:
 5523              	.L523:
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5524              		.loc 1 1746 0
 5525 0074 042E     		cmp	r6, #4
 5526 0076 01D0     		beq	.L527
 5527              	.LVL753:
 5528              	.L522:
1762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 5529              		.loc 1 1762 0
 5530 0078 3046     		mov	r0, r6
 5531 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5532              	.LVL754:
 5533              	.L527:
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5534              		.loc 1 1746 0
 5535 007c 0226     		movs	r6, #2
 5536              	.LVL755:
 5537 007e FBE7     		b	.L522
 5538              		.cfi_endproc
 5539              	.LFE97:
 5541              		.section	.text.remove_chain,"ax",%progbits
 5542              		.align	1
 5543              		.syntax unified
 5544              		.thumb
 5545              		.thumb_func
 5546              		.fpu softvfp
 5548              	remove_chain:
ARM GAS  /tmp/ccTBpncU.s 			page 153


 5549              	.LFB81:
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5550              		.loc 1 1014 0
 5551              		.cfi_startproc
 5552              		@ args = 0, pretend = 0, frame = 0
 5553              		@ frame_needed = 0, uses_anonymous_args = 0
 5554              	.LVL756:
 5555 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5556              	.LCFI60:
 5557              		.cfi_def_cfa_offset 24
 5558              		.cfi_offset 3, -24
 5559              		.cfi_offset 4, -20
 5560              		.cfi_offset 5, -16
 5561              		.cfi_offset 6, -12
 5562              		.cfi_offset 7, -8
 5563              		.cfi_offset 14, -4
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 5564              		.loc 1 1021 0
 5565 0002 0129     		cmp	r1, #1
 5566 0004 31D9     		bls	.L533
 5567 0006 0446     		mov	r4, r0
 5568 0008 0D46     		mov	r5, r1
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 5569              		.loc 1 1021 0 is_stmt 0 discriminator 1
 5570 000a 41F21403 		movw	r3, #4116
 5571 000e C358     		ldr	r3, [r0, r3]
 5572 0010 8B42     		cmp	r3, r1
 5573 0012 2CD9     		bls	.L534
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 5574              		.loc 1 1025 0 is_stmt 1
 5575 0014 0027     		movs	r7, #0
 5576 0016 0AE0     		b	.L530
 5577              	.LVL757:
 5578              	.L538:
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
 5579              		.loc 1 1034 0
 5580 0018 0133     		adds	r3, r3, #1
 5581 001a 41F21002 		movw	r2, #4112
 5582 001e A350     		str	r3, [r4, r2]
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5583              		.loc 1 1035 0
 5584 0020 41F20502 		movw	r2, #4101
 5585 0024 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 5586 0026 43F00103 		orr	r3, r3, #1
 5587 002a A354     		strb	r3, [r4, r2]
 5588              	.L531:
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5589              		.loc 1 1014 0
 5590 002c 3546     		mov	r5, r6
 5591              	.LVL758:
 5592              	.L530:
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 5593              		.loc 1 1026 0
 5594 002e 41F21403 		movw	r3, #4116
 5595 0032 E358     		ldr	r3, [r4, r3]
 5596 0034 AB42     		cmp	r3, r5
 5597 0036 1BD9     		bls	.L529
ARM GAS  /tmp/ccTBpncU.s 			page 154


1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 5598              		.loc 1 1027 0
 5599 0038 2946     		mov	r1, r5
 5600 003a 2046     		mov	r0, r4
 5601 003c FFF7FEFF 		bl	get_fat
 5602              	.LVL759:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 5603              		.loc 1 1028 0
 5604 0040 0646     		mov	r6, r0
 5605 0042 A8B1     		cbz	r0, .L529
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 5606              		.loc 1 1029 0
 5607 0044 0128     		cmp	r0, #1
 5608 0046 15D0     		beq	.L535
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 5609              		.loc 1 1030 0
 5610 0048 B0F1FF3F 		cmp	r0, #-1
 5611 004c 14D0     		beq	.L536
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5612              		.loc 1 1031 0
 5613 004e 0022     		movs	r2, #0
 5614 0050 2946     		mov	r1, r5
 5615 0052 2046     		mov	r0, r4
 5616              	.LVL760:
 5617 0054 FFF7FEFF 		bl	put_fat
 5618              	.LVL761:
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
 5619              		.loc 1 1032 0
 5620 0058 0746     		mov	r7, r0
 5621 005a 48B9     		cbnz	r0, .L529
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
 5622              		.loc 1 1033 0
 5623 005c 41F21003 		movw	r3, #4112
 5624 0060 E358     		ldr	r3, [r4, r3]
 5625 0062 B3F1FF3F 		cmp	r3, #-1
 5626 0066 D7D1     		bne	.L538
 5627 0068 E0E7     		b	.L531
 5628              	.LVL762:
 5629              	.L533:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5630              		.loc 1 1022 0
 5631 006a 0227     		movs	r7, #2
 5632 006c 00E0     		b	.L529
 5633              	.L534:
 5634 006e 0227     		movs	r7, #2
 5635              	.LVL763:
 5636              	.L529:
1052:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5637              		.loc 1 1052 0
 5638 0070 3846     		mov	r0, r7
 5639 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5640              	.LVL764:
 5641              	.L535:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 5642              		.loc 1 1029 0
 5643 0074 0227     		movs	r7, #2
 5644              	.LVL765:
ARM GAS  /tmp/ccTBpncU.s 			page 155


 5645 0076 FBE7     		b	.L529
 5646              	.LVL766:
 5647              	.L536:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 5648              		.loc 1 1030 0
 5649 0078 0127     		movs	r7, #1
 5650              	.LVL767:
 5651 007a F9E7     		b	.L529
 5652              		.cfi_endproc
 5653              	.LFE81:
 5655              		.section	.text.f_mount,"ax",%progbits
 5656              		.align	1
 5657              		.global	f_mount
 5658              		.syntax unified
 5659              		.thumb
 5660              		.thumb_func
 5661              		.fpu softvfp
 5663              	f_mount:
 5664              	.LFB105:
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** 
2462:Middlewares/Third_Party/FatFs/src/ff.c **** 
2463:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 
2465:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 
2467:Middlewares/Third_Party/FatFs/src/ff.c **** --------------------------------------------------------------------------*/
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 
2471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
2473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 
2475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
2478:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
2479:Middlewares/Third_Party/FatFs/src/ff.c **** )
2480:Middlewares/Third_Party/FatFs/src/ff.c **** {
 5665              		.loc 1 2480 0
 5666              		.cfi_startproc
 5667              		@ args = 0, pretend = 0, frame = 16
 5668              		@ frame_needed = 0, uses_anonymous_args = 0
 5669              	.LVL768:
 5670 0000 70B5     		push	{r4, r5, r6, lr}
 5671              	.LCFI61:
 5672              		.cfi_def_cfa_offset 16
 5673              		.cfi_offset 4, -16
 5674              		.cfi_offset 5, -12
 5675              		.cfi_offset 6, -8
 5676              		.cfi_offset 14, -4
 5677 0002 84B0     		sub	sp, sp, #16
 5678              	.LCFI62:
 5679              		.cfi_def_cfa_offset 32
 5680 0004 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/ccTBpncU.s 			page 156


 5681 0006 0091     		str	r1, [sp]
 5682 0008 1646     		mov	r6, r2
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
 5683              		.loc 1 2484 0
 5684 000a 04A8     		add	r0, sp, #16
 5685              	.LVL769:
 5686 000c 40F8041D 		str	r1, [r0, #-4]!
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
 5687              		.loc 1 2487 0
 5688 0010 FFF7FEFF 		bl	get_ldnumber
 5689              	.LVL770:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 5690              		.loc 1 2488 0
 5691 0014 051E     		subs	r5, r0, #0
 5692 0016 1FDB     		blt	.L543
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5693              		.loc 1 2489 0
 5694 0018 114B     		ldr	r3, .L548
 5695 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 5696              	.LVL771:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
 5697              		.loc 1 2491 0
 5698 001e 34B1     		cbz	r4, .L541
2492:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
 5699              		.loc 1 2493 0
 5700 0020 2046     		mov	r0, r4
 5701              	.LVL772:
 5702 0022 FFF7FEFF 		bl	clear_lock
 5703              	.LVL773:
2494:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2495:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
2496:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
2497:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 5704              		.loc 1 2498 0
 5705 0026 04F58054 		add	r4, r4, #4096
 5706              	.LVL774:
 5707 002a 0023     		movs	r3, #0
 5708 002c 2370     		strb	r3, [r4]
 5709              	.LVL775:
 5710              	.L541:
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
 5711              		.loc 1 2501 0
 5712 002e 019B     		ldr	r3, [sp, #4]
 5713 0030 1BB1     		cbz	r3, .L542
2502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 5714              		.loc 1 2502 0
 5715 0032 03F58052 		add	r2, r3, #4096
ARM GAS  /tmp/ccTBpncU.s 			page 157


 5716 0036 0021     		movs	r1, #0
 5717 0038 1170     		strb	r1, [r2]
 5718              	.L542:
2503:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
2505:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 5719              		.loc 1 2507 0
 5720 003a 094A     		ldr	r2, .L548
 5721 003c 42F82530 		str	r3, [r2, r5, lsl #2]
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 5722              		.loc 1 2509 0
 5723 0040 63B1     		cbz	r3, .L544
 5724              		.loc 1 2509 0 is_stmt 0 discriminator 2
 5725 0042 012E     		cmp	r6, #1
 5726 0044 02D0     		beq	.L547
 5727              		.loc 1 2509 0
 5728 0046 0020     		movs	r0, #0
 5729              	.L540:
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
2513:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5730              		.loc 1 2513 0 is_stmt 1
 5731 0048 04B0     		add	sp, sp, #16
 5732              	.LCFI63:
 5733              		.cfi_remember_state
 5734              		.cfi_def_cfa_offset 16
 5735              		@ sp needed
 5736 004a 70BD     		pop	{r4, r5, r6, pc}
 5737              	.LVL776:
 5738              	.L547:
 5739              	.LCFI64:
 5740              		.cfi_restore_state
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 5741              		.loc 1 2511 0
 5742 004c 0022     		movs	r2, #0
 5743 004e 6946     		mov	r1, sp
 5744 0050 01A8     		add	r0, sp, #4
 5745 0052 FFF7FEFF 		bl	find_volume
 5746              	.LVL777:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5747              		.loc 1 2512 0
 5748 0056 F7E7     		b	.L540
 5749              	.LVL778:
 5750              	.L543:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5751              		.loc 1 2488 0
 5752 0058 0B20     		movs	r0, #11
 5753              	.LVL779:
 5754 005a F5E7     		b	.L540
 5755              	.L544:
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5756              		.loc 1 2509 0
 5757 005c 0020     		movs	r0, #0
ARM GAS  /tmp/ccTBpncU.s 			page 158


 5758 005e F3E7     		b	.L540
 5759              	.L549:
 5760              		.align	2
 5761              	.L548:
 5762 0060 00000000 		.word	.LANCHOR2
 5763              		.cfi_endproc
 5764              	.LFE105:
 5766              		.section	.text.f_open,"ax",%progbits
 5767              		.align	1
 5768              		.global	f_open
 5769              		.syntax unified
 5770              		.thumb
 5771              		.thumb_func
 5772              		.fpu softvfp
 5774              	f_open:
 5775              	.LFB106:
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2519:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
2520:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 
2522:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
2526:Middlewares/Third_Party/FatFs/src/ff.c **** )
2527:Middlewares/Third_Party/FatFs/src/ff.c **** {
 5776              		.loc 1 2527 0
 5777              		.cfi_startproc
 5778              		@ args = 0, pretend = 0, frame = 4160
 5779              		@ frame_needed = 0, uses_anonymous_args = 0
 5780              	.LVL780:
 5781 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5782              	.LCFI65:
 5783              		.cfi_def_cfa_offset 32
 5784              		.cfi_offset 4, -32
 5785              		.cfi_offset 5, -28
 5786              		.cfi_offset 6, -24
 5787              		.cfi_offset 7, -20
 5788              		.cfi_offset 8, -16
 5789              		.cfi_offset 9, -12
 5790              		.cfi_offset 10, -8
 5791              		.cfi_offset 14, -4
 5792 0004 ADF5825D 		sub	sp, sp, #4160
 5793              	.LCFI66:
 5794              		.cfi_def_cfa_offset 4192
 5795 0008 0191     		str	r1, [sp, #4]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2532:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl;
2534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTBpncU.s 			page 159


2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** 
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 5796              		.loc 1 2537 0
 5797 000a 0028     		cmp	r0, #0
 5798 000c 00F00781 		beq	.L560
 5799 0010 0446     		mov	r4, r0
 5800 0012 1546     		mov	r5, r2
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 5801              		.loc 1 2538 0
 5802 0014 00F58053 		add	r3, r0, #4096
 5803 0018 0022     		movs	r2, #0
 5804              	.LVL781:
 5805 001a 1A60     		str	r2, [r3]
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2541:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2542:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 5806              		.loc 1 2542 0
 5807 001c 05F01F08 		and	r8, r5, #31
 5808              	.LVL782:
2543:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
 5809              		.loc 1 2543 0
 5810 0020 05F01E02 		and	r2, r5, #30
 5811 0024 08AB     		add	r3, sp, #32
 5812 0026 01A9     		add	r1, sp, #4
 5813              	.LVL783:
 5814 0028 03F6F870 		addw	r0, r3, #4088
 5815              	.LVL784:
 5816 002c FFF7FEFF 		bl	find_volume
 5817              	.LVL785:
2544:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2545:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ;
2546:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2547:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2548:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5818              		.loc 1 2548 0
 5819 0030 0646     		mov	r6, r0
 5820 0032 20B1     		cbz	r0, .L569
 5821              	.LVL786:
 5822              	.L551:
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2557:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2559:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
ARM GAS  /tmp/ccTBpncU.s 			page 160


2565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2566:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
2567:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
2569:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
2576:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Follow succeeded */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2607:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
2613:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
2614:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
2617:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2618:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 
2620:Middlewares/Third_Party/FatFs/src/ff.c **** #else				/* R/O configuration */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow succeeded */
ARM GAS  /tmp/ccTBpncU.s 			page 161


2622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
2623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Current directory itself */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2630:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
2640:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;						/* Normal seek mode */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fs = dj.fs;	 					/* Validate file object */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 
2648:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
2649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5823              		.loc 1 2649 0
 5824 0034 3046     		mov	r0, r6
 5825 0036 0DF5825D 		add	sp, sp, #4160
 5826              	.LCFI67:
 5827              		.cfi_remember_state
 5828              		.cfi_def_cfa_offset 32
 5829              		@ sp needed
 5830 003a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5831              	.LVL787:
 5832              	.L569:
 5833              	.LCFI68:
 5834              		.cfi_restore_state
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 5835              		.loc 1 2549 0
 5836 003e 08AB     		add	r3, sp, #32
 5837 0040 06AE     		add	r6, sp, #24
 5838 0042 A3F11402 		sub	r2, r3, #20
 5839 0046 41F21803 		movw	r3, #4120
 5840 004a F250     		str	r2, [r6, r3]
 5841 004c 06F58153 		add	r3, r6, #4128
 5842 0050 754A     		ldr	r2, .L573
 5843 0052 1A60     		str	r2, [r3]
2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
 5844              		.loc 1 2550 0
 5845 0054 0199     		ldr	r1, [sp, #4]
 5846 0056 3046     		mov	r0, r6
 5847              	.LVL788:
 5848 0058 FFF7FEFF 		bl	follow_path
 5849              	.LVL789:
ARM GAS  /tmp/ccTBpncU.s 			page 162


2551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 5850              		.loc 1 2551 0
 5851 005c 41F21403 		movw	r3, #4116
 5852 0060 F758     		ldr	r7, [r6, r3]
 5853              	.LVL790:
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
 5854              		.loc 1 2553 0
 5855 0062 0646     		mov	r6, r0
 5856 0064 50B9     		cbnz	r0, .L552
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 5857              		.loc 1 2554 0
 5858 0066 002F     		cmp	r7, #0
 5859 0068 70D0     		beq	.L561
2558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5860              		.loc 1 2558 0
 5861 006a 38F00103 		bics	r3, r8, #1
 5862 006e 14BF     		ite	ne
 5863 0070 0121     		movne	r1, #1
 5864 0072 0021     		moveq	r1, #0
 5865 0074 06A8     		add	r0, sp, #24
 5866              	.LVL791:
 5867 0076 FFF7FEFF 		bl	chk_lock
 5868              	.LVL792:
 5869 007a 0646     		mov	r6, r0
 5870              	.LVL793:
 5871              	.L552:
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 5872              		.loc 1 2562 0
 5873 007c 15F01C0F 		tst	r5, #28
 5874 0080 00F0BA80 		beq	.L553
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 5875              		.loc 1 2563 0
 5876 0084 002E     		cmp	r6, #0
 5877 0086 6DD0     		beq	.L554
2564:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 5878              		.loc 1 2564 0
 5879 0088 042E     		cmp	r6, #4
 5880 008a 61D0     		beq	.L570
 5881              	.LVL794:
 5882              	.L555:
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
 5883              		.loc 1 2570 0
 5884 008c 48F00808 		orr	r8, r8, #8
 5885              	.LVL795:
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5886              		.loc 1 2571 0
 5887 0090 06AA     		add	r2, sp, #24
 5888 0092 41F21403 		movw	r3, #4116
 5889 0096 D758     		ldr	r7, [r2, r3]
 5890              	.LVL796:
 5891              	.L556:
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 5892              		.loc 1 2581 0
 5893 0098 16B9     		cbnz	r6, .L557
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 5894              		.loc 1 2581 0 is_stmt 0 discriminator 1
 5895 009a 18F0080F 		tst	r8, #8
ARM GAS  /tmp/ccTBpncU.s 			page 163


 5896 009e 6CD1     		bne	.L571
 5897              	.LVL797:
 5898              	.L557:
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 5899              		.loc 1 2609 0 is_stmt 1
 5900 00a0 F6B9     		cbnz	r6, .L558
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
 5901              		.loc 1 2610 0
 5902 00a2 18F0080F 		tst	r8, #8
 5903 00a6 01D0     		beq	.L559
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
 5904              		.loc 1 2611 0
 5905 00a8 48F02008 		orr	r8, r8, #32
 5906              	.LVL798:
 5907              	.L559:
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
 5908              		.loc 1 2612 0
 5909 00ac 08A8     		add	r0, sp, #32
 5910 00ae D0F8F82F 		ldr	r2, [r0, #4088]
 5911 00b2 41F22C03 		movw	r3, #4140
 5912 00b6 D258     		ldr	r2, [r2, r3]
 5913 00b8 41F21C03 		movw	r3, #4124
 5914 00bc E250     		str	r2, [r4, r3]
2613:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 5915              		.loc 1 2613 0
 5916 00be 04F58153 		add	r3, r4, #4128
 5917 00c2 1F60     		str	r7, [r3]
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
 5918              		.loc 1 2615 0
 5919 00c4 38F00103 		bics	r3, r8, #1
 5920 00c8 14BF     		ite	ne
 5921 00ca 0121     		movne	r1, #1
 5922 00cc 0021     		moveq	r1, #0
 5923 00ce 06A8     		add	r0, sp, #24
 5924 00d0 FFF7FEFF 		bl	inc_lock
 5925              	.LVL799:
 5926 00d4 41F22803 		movw	r3, #4136
 5927 00d8 E050     		str	r0, [r4, r3]
2616:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5928              		.loc 1 2616 0
 5929 00da 0028     		cmp	r0, #0
 5930 00dc 00F0A180 		beq	.L567
 5931              	.L558:
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
 5932              		.loc 1 2633 0
 5933 00e0 002E     		cmp	r6, #0
 5934 00e2 A7D1     		bne	.L551
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
 5935              		.loc 1 2634 0
 5936 00e4 41F20609 		movw	r9, #4102
 5937 00e8 04F80980 		strb	r8, [r4, r9]
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
 5938              		.loc 1 2635 0
 5939 00ec 0025     		movs	r5, #0
 5940 00ee 41F20703 		movw	r3, #4103
 5941 00f2 E554     		strb	r5, [r4, r3]
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
ARM GAS  /tmp/ccTBpncU.s 			page 164


 5942              		.loc 1 2636 0
 5943 00f4 0DF58053 		add	r3, sp, #4096
 5944 00f8 1833     		adds	r3, r3, #24
 5945 00fa D3F80080 		ldr	r8, [r3]
 5946              	.LVL800:
 5947 00fe 3946     		mov	r1, r7
 5948 0100 4046     		mov	r0, r8
 5949 0102 FFF7FEFF 		bl	ld_clust
 5950              	.LVL801:
 5951 0106 41F21003 		movw	r3, #4112
 5952 010a E050     		str	r0, [r4, r3]
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
 5953              		.loc 1 2637 0
 5954 010c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 5955 010e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5956 0110 1B04     		lsls	r3, r3, #16
 5957 0112 43EA0263 		orr	r3, r3, r2, lsl #24
 5958 0116 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 5959 0118 43EA0223 		orr	r3, r3, r2, lsl #8
 5960 011c 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 5961 011e 1343     		orrs	r3, r3, r2
 5962 0120 41F20C02 		movw	r2, #4108
 5963 0124 A350     		str	r3, [r4, r2]
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
 5964              		.loc 1 2638 0
 5965 0126 41F20803 		movw	r3, #4104
 5966 012a E550     		str	r5, [r4, r3]
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
 5967              		.loc 1 2639 0
 5968 012c 41F21803 		movw	r3, #4120
 5969 0130 E550     		str	r5, [r4, r3]
2641:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5970              		.loc 1 2641 0
 5971 0132 41F22403 		movw	r3, #4132
 5972 0136 E550     		str	r5, [r4, r3]
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
 5973              		.loc 1 2643 0
 5974 0138 04F58053 		add	r3, r4, #4096
 5975 013c C3F80080 		str	r8, [r3]
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5976              		.loc 1 2644 0
 5977 0140 38F80920 		ldrh	r2, [r8, r9]
 5978 0144 41F20403 		movw	r3, #4100
 5979 0148 E252     		strh	r2, [r4, r3]	@ movhi
 5980 014a 73E7     		b	.L551
 5981              	.LVL802:
 5982              	.L561:
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 5983              		.loc 1 2555 0
 5984 014c 0626     		movs	r6, #6
 5985 014e 95E7     		b	.L552
 5986              	.LVL803:
 5987              	.L570:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 5988              		.loc 1 2566 0
 5989 0150 FFF7FEFF 		bl	enq_lock
 5990              	.LVL804:
ARM GAS  /tmp/ccTBpncU.s 			page 165


 5991 0154 08B9     		cbnz	r0, .L572
 5992 0156 1226     		movs	r6, #18
 5993              	.LVL805:
 5994 0158 98E7     		b	.L555
 5995              	.LVL806:
 5996              	.L572:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 5997              		.loc 1 2566 0 is_stmt 0 discriminator 1
 5998 015a 06A8     		add	r0, sp, #24
 5999 015c FFF7FEFF 		bl	dir_register
 6000              	.LVL807:
 6001 0160 0646     		mov	r6, r0
 6002              	.LVL808:
 6003 0162 93E7     		b	.L555
 6004              	.LVL809:
 6005              	.L554:
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 6006              		.loc 1 2574 0 is_stmt 1
 6007 0164 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6008 0166 13F0110F 		tst	r3, #17
 6009 016a 04D1     		bne	.L563
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
 6010              		.loc 1 2577 0
 6011 016c 15F0040F 		tst	r5, #4
 6012 0170 92D0     		beq	.L556
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6013              		.loc 1 2578 0
 6014 0172 0826     		movs	r6, #8
 6015              	.LVL810:
 6016 0174 90E7     		b	.L556
 6017              	.LVL811:
 6018              	.L563:
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6019              		.loc 1 2575 0
 6020 0176 0726     		movs	r6, #7
 6021              	.LVL812:
 6022 0178 8EE7     		b	.L556
 6023              	.LVL813:
 6024              	.L571:
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
 6025              		.loc 1 2582 0
 6026 017a FFF7FEFF 		bl	get_fattime
 6027              	.LVL814:
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
 6028              		.loc 1 2583 0
 6029 017e B873     		strb	r0, [r7, #14]
 6030 0180 C0F30723 		ubfx	r3, r0, #8, #8
 6031 0184 FB73     		strb	r3, [r7, #15]
 6032 0186 C0F30743 		ubfx	r3, r0, #16, #8
 6033 018a 3B74     		strb	r3, [r7, #16]
 6034 018c 000E     		lsrs	r0, r0, #24
 6035              	.LVL815:
 6036 018e 7874     		strb	r0, [r7, #17]
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
 6037              		.loc 1 2584 0
 6038 0190 0025     		movs	r5, #0
 6039 0192 FD72     		strb	r5, [r7, #11]
ARM GAS  /tmp/ccTBpncU.s 			page 166


2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
 6040              		.loc 1 2585 0
 6041 0194 3D77     		strb	r5, [r7, #28]
 6042 0196 7D77     		strb	r5, [r7, #29]
 6043 0198 BD77     		strb	r5, [r7, #30]
 6044 019a FD77     		strb	r5, [r7, #31]
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
 6045              		.loc 1 2586 0
 6046 019c 0DF12009 		add	r9, sp, #32
 6047 01a0 3946     		mov	r1, r7
 6048 01a2 D9F8F80F 		ldr	r0, [r9, #4088]
 6049 01a6 FFF7FEFF 		bl	ld_clust
 6050              	.LVL816:
 6051 01aa 8246     		mov	r10, r0
 6052              	.LVL817:
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 6053              		.loc 1 2587 0
 6054 01ac 2946     		mov	r1, r5
 6055 01ae 3846     		mov	r0, r7
 6056              	.LVL818:
 6057 01b0 FFF7FEFF 		bl	st_clust
 6058              	.LVL819:
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
 6059              		.loc 1 2588 0
 6060 01b4 D9F8F80F 		ldr	r0, [r9, #4088]
 6061 01b8 41F20403 		movw	r3, #4100
 6062 01bc 0122     		movs	r2, #1
 6063 01be C254     		strb	r2, [r0, r3]
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
 6064              		.loc 1 2589 0
 6065 01c0 BAF1000F 		cmp	r10, #0
 6066 01c4 3FF46CAF 		beq	.L557
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
 6067              		.loc 1 2590 0
 6068 01c8 41F22C03 		movw	r3, #4140
 6069 01cc C558     		ldr	r5, [r0, r3]
 6070              	.LVL820:
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 6071              		.loc 1 2591 0
 6072 01ce 5146     		mov	r1, r10
 6073 01d0 FFF7FEFF 		bl	remove_chain
 6074              	.LVL821:
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 6075              		.loc 1 2592 0
 6076 01d4 0646     		mov	r6, r0
 6077 01d6 0028     		cmp	r0, #0
 6078 01d8 7FF462AF 		bne	.L557
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
 6079              		.loc 1 2593 0
 6080 01dc 0DF58053 		add	r3, sp, #4096
 6081 01e0 1833     		adds	r3, r3, #24
 6082 01e2 1868     		ldr	r0, [r3]
 6083              	.LVL822:
 6084 01e4 0AF1FF33 		add	r3, r10, #-1
 6085 01e8 41F20C02 		movw	r2, #4108
 6086 01ec 8350     		str	r3, [r0, r2]
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  /tmp/ccTBpncU.s 			page 167


 6087              		.loc 1 2594 0
 6088 01ee 2946     		mov	r1, r5
 6089 01f0 FFF7FEFF 		bl	move_window
 6090              	.LVL823:
 6091 01f4 0646     		mov	r6, r0
 6092              	.LVL824:
 6093 01f6 53E7     		b	.L557
 6094              	.LVL825:
 6095              	.L553:
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
 6096              		.loc 1 2600 0
 6097 01f8 002E     		cmp	r6, #0
 6098 01fa 7FF451AF 		bne	.L557
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 6099              		.loc 1 2601 0
 6100 01fe FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6101 0200 13F0100F 		tst	r3, #16
 6102 0204 09D1     		bne	.L565
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6103              		.loc 1 2604 0
 6104 0206 15F0020F 		tst	r5, #2
 6105 020a 3FF449AF 		beq	.L557
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6106              		.loc 1 2604 0 is_stmt 0 discriminator 1
 6107 020e 13F0010F 		tst	r3, #1
 6108 0212 3FF445AF 		beq	.L557
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6109              		.loc 1 2605 0 is_stmt 1
 6110 0216 0726     		movs	r6, #7
 6111              	.LVL826:
 6112 0218 42E7     		b	.L557
 6113              	.LVL827:
 6114              	.L565:
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6115              		.loc 1 2602 0
 6116 021a 0426     		movs	r6, #4
 6117              	.LVL828:
 6118 021c 40E7     		b	.L557
 6119              	.LVL829:
 6120              	.L560:
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 6121              		.loc 1 2537 0
 6122 021e 0926     		movs	r6, #9
 6123 0220 08E7     		b	.L551
 6124              	.LVL830:
 6125              	.L567:
2616:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6126              		.loc 1 2616 0
 6127 0222 0226     		movs	r6, #2
 6128              	.LVL831:
 6129 0224 06E7     		b	.L551
 6130              	.L574:
 6131 0226 00BF     		.align	2
 6132              	.L573:
 6133 0228 00000000 		.word	.LANCHOR5
 6134              		.cfi_endproc
 6135              	.LFE106:
ARM GAS  /tmp/ccTBpncU.s 			page 168


 6137              		.section	.text.f_read,"ax",%progbits
 6138              		.align	1
 6139              		.global	f_read
 6140              		.syntax unified
 6141              		.thumb
 6142              		.thumb_func
 6143              		.fpu softvfp
 6145              	f_read:
 6146              	.LFB107:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 
2654:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2655:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
2656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 
2658:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 		/* Pointer to the file object */
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,		/* Pointer to data buffer */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,		/* Number of bytes to read */
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br		/* Pointer to number of bytes read */
2663:Middlewares/Third_Party/FatFs/src/ff.c **** )
2664:Middlewares/Third_Party/FatFs/src/ff.c **** {
 6147              		.loc 1 2664 0
 6148              		.cfi_startproc
 6149              		@ args = 0, pretend = 0, frame = 8
 6150              		@ frame_needed = 0, uses_anonymous_args = 0
 6151              	.LVL832:
 6152 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6153              	.LCFI69:
 6154              		.cfi_def_cfa_offset 36
 6155              		.cfi_offset 4, -36
 6156              		.cfi_offset 5, -32
 6157              		.cfi_offset 6, -28
 6158              		.cfi_offset 7, -24
 6159              		.cfi_offset 8, -20
 6160              		.cfi_offset 9, -16
 6161              		.cfi_offset 10, -12
 6162              		.cfi_offset 11, -8
 6163              		.cfi_offset 14, -4
 6164 0004 83B0     		sub	sp, sp, #12
 6165              	.LCFI70:
 6166              		.cfi_def_cfa_offset 48
 6167 0006 0446     		mov	r4, r0
 6168 0008 8846     		mov	r8, r1
 6169 000a 1546     		mov	r5, r2
 6170 000c 1F46     		mov	r7, r3
 6171              	.LVL833:
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect, remain;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect, *rbuff = (BYTE*)buff;
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
 6172              		.loc 1 2671 0
ARM GAS  /tmp/ccTBpncU.s 			page 169


 6173 000e 0023     		movs	r3, #0
 6174              	.LVL834:
 6175 0010 3B60     		str	r3, [r7]
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);							/* Check validity */
 6176              		.loc 1 2673 0
 6177 0012 FFF7FEFF 		bl	validate
 6178              	.LVL835:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 6179              		.loc 1 2674 0
 6180 0016 0190     		str	r0, [sp, #4]
 6181 0018 0028     		cmp	r0, #0
 6182 001a 40F01981 		bne	.L576
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)								/* Check error */
 6183              		.loc 1 2675 0
 6184 001e 41F20703 		movw	r3, #4103
 6185 0022 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6186 0024 002B     		cmp	r3, #0
 6187 0026 40F01281 		bne	.L598
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 6188              		.loc 1 2677 0
 6189 002a 41F20603 		movw	r3, #4102
 6190 002e E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6191 0030 13F0010F 		tst	r3, #1
 6192 0034 00F01081 		beq	.L599
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 6193              		.loc 1 2679 0
 6194 0038 41F20C03 		movw	r3, #4108
 6195 003c E658     		ldr	r6, [r4, r3]
 6196 003e 41F20803 		movw	r3, #4104
 6197 0042 E358     		ldr	r3, [r4, r3]
 6198 0044 F61A     		subs	r6, r6, r3
 6199              	.LVL836:
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 6200              		.loc 1 2680 0
 6201 0046 AE42     		cmp	r6, r5
 6202 0048 C0F09680 		bcc	.L596
 6203 004c 2E46     		mov	r6, r5
 6204              	.LVL837:
 6205 004e 93E0     		b	.L596
 6206              	.LVL838:
 6207              	.L581:
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
2690:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
 6208              		.loc 1 2691 0
 6209 0050 41F22403 		movw	r3, #4132
ARM GAS  /tmp/ccTBpncU.s 			page 170


 6210 0054 E358     		ldr	r3, [r4, r3]
 6211 0056 1BB1     		cbz	r3, .L583
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6212              		.loc 1 2692 0
 6213 0058 2046     		mov	r0, r4
 6214 005a FFF7FEFF 		bl	clmt_clust
 6215              	.LVL839:
 6216 005e ABE0     		b	.L582
 6217              	.LVL840:
 6218              	.L583:
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
 6219              		.loc 1 2695 0
 6220 0060 41F21403 		movw	r3, #4116
 6221 0064 E158     		ldr	r1, [r4, r3]
 6222 0066 FFF7FEFF 		bl	get_fat
 6223              	.LVL841:
 6224 006a A5E0     		b	.L582
 6225              	.L606:
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
 6226              		.loc 1 2697 0 discriminator 1
 6227 006c 0223     		movs	r3, #2
 6228 006e 41F20702 		movw	r2, #4103
 6229 0072 A354     		strb	r3, [r4, r2]
 6230 0074 0193     		str	r3, [sp, #4]
 6231 0076 EBE0     		b	.L576
 6232              	.L607:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6233              		.loc 1 2698 0 discriminator 1
 6234 0078 0123     		movs	r3, #1
 6235 007a 41F20702 		movw	r2, #4103
 6236 007e A354     		strb	r3, [r4, r2]
 6237 0080 0193     		str	r3, [sp, #4]
 6238 0082 E5E0     		b	.L576
 6239              	.LVL842:
 6240              	.L608:
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 6241              		.loc 1 2702 0 discriminator 1
 6242 0084 0223     		movs	r3, #2
 6243 0086 41F20702 		movw	r2, #4103
 6244 008a A354     		strb	r3, [r4, r2]
 6245 008c 0193     		str	r3, [sp, #4]
 6246 008e DFE0     		b	.L576
 6247              	.LVL843:
 6248              	.L589:
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
ARM GAS  /tmp/ccTBpncU.s 			page 171


2710:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2711:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
2714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
 6249              		.loc 1 2715 0
 6250 0090 41F20603 		movw	r3, #4102
 6251 0094 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6252 0096 13F0400F 		tst	r3, #64
 6253 009a 06D0     		beq	.L590
 6254              		.loc 1 2715 0 is_stmt 0 discriminator 1
 6255 009c 41F21803 		movw	r3, #4120
 6256 00a0 E058     		ldr	r0, [r4, r3]
 6257 00a2 A0EB0A0A 		sub	r10, r0, r10
 6258              	.LVL844:
 6259 00a6 CA45     		cmp	r10, r9
 6260 00a8 08D3     		bcc	.L603
 6261              	.L590:
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
2717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2718:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 6262              		.loc 1 2719 0 is_stmt 1
 6263 00aa 04F58053 		add	r3, r4, #4096
 6264 00ae 1A68     		ldr	r2, [r3]
 6265 00b0 41F20A03 		movw	r3, #4106
 6266 00b4 D35A     		ldrh	r3, [r2, r3]
 6267 00b6 09FB03F9 		mul	r9, r9, r3
 6268              	.LVL845:
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 6269              		.loc 1 2720 0
 6270 00ba 52E0     		b	.L591
 6271              	.LVL846:
 6272              	.L603:
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
 6273              		.loc 1 2716 0
 6274 00bc 04F58053 		add	r3, r4, #4096
 6275 00c0 1A68     		ldr	r2, [r3]
 6276 00c2 41F20A03 		movw	r3, #4106
 6277 00c6 D05A     		ldrh	r0, [r2, r3]
 6278 00c8 0246     		mov	r2, r0
 6279 00ca 2146     		mov	r1, r4
 6280 00cc 00FB0A80 		mla	r0, r0, r10, r8
 6281 00d0 FFF7FEFF 		bl	mem_cpy
 6282              	.LVL847:
 6283 00d4 E9E7     		b	.L590
 6284              	.LVL848:
 6285              	.L587:
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
 6286              		.loc 1 2723 0
 6287 00d6 41F21803 		movw	r3, #4120
 6288 00da E258     		ldr	r2, [r4, r3]
 6289 00dc 5245     		cmp	r2, r10
 6290 00de 24D0     		beq	.L592
ARM GAS  /tmp/ccTBpncU.s 			page 172


2724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
 6291              		.loc 1 2725 0
 6292 00e0 41F20603 		movw	r3, #4102
 6293 00e4 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6294 00e6 13F0400F 		tst	r3, #64
 6295 00ea 10D0     		beq	.L593
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 6296              		.loc 1 2726 0
 6297 00ec 0123     		movs	r3, #1
 6298 00ee 2146     		mov	r1, r4
 6299 00f0 41F20100 		movw	r0, #4097
 6300 00f4 1BF80000 		ldrb	r0, [fp, r0]	@ zero_extendqisi2
 6301 00f8 FFF7FEFF 		bl	disk_write
 6302              	.LVL849:
 6303 00fc 0028     		cmp	r0, #0
 6304 00fe 40F09A80 		bne	.L604
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 6305              		.loc 1 2728 0
 6306 0102 41F20602 		movw	r2, #4102
 6307 0106 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 6308 0108 23F04003 		bic	r3, r3, #64
 6309 010c A354     		strb	r3, [r4, r2]
 6310              	.L593:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)	/* Fill sector cache */
 6311              		.loc 1 2731 0
 6312 010e 04F58053 		add	r3, r4, #4096
 6313 0112 1D68     		ldr	r5, [r3]
 6314              	.LVL850:
 6315 0114 0123     		movs	r3, #1
 6316 0116 5246     		mov	r2, r10
 6317 0118 2146     		mov	r1, r4
 6318 011a 41F20100 		movw	r0, #4097
 6319 011e 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 6320 0120 FFF7FEFF 		bl	disk_read
 6321              	.LVL851:
 6322 0124 0028     		cmp	r0, #0
 6323 0126 40F08C80 		bne	.L605
 6324              	.L592:
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2734:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
 6325              		.loc 1 2735 0
 6326 012a 41F21803 		movw	r3, #4120
 6327 012e 44F803A0 		str	r10, [r4, r3]
 6328              	.LVL852:
 6329              	.L579:
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer 
 6330              		.loc 1 2737 0
 6331 0132 04F58053 		add	r3, r4, #4096
 6332 0136 1A68     		ldr	r2, [r3]
 6333 0138 41F20A03 		movw	r3, #4106
ARM GAS  /tmp/ccTBpncU.s 			page 173


 6334 013c 32F80390 		ldrh	r9, [r2, r3]
 6335 0140 41F20803 		movw	r3, #4104
 6336 0144 E358     		ldr	r3, [r4, r3]
 6337 0146 B3FBF9F1 		udiv	r1, r3, r9
 6338 014a 09FB1131 		mls	r1, r9, r1, r3
 6339 014e A9EB0109 		sub	r9, r9, r1
 6340              	.LVL853:
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
 6341              		.loc 1 2738 0
 6342 0152 4E45     		cmp	r6, r9
 6343 0154 00D2     		bcs	.L595
 6344 0156 B146     		mov	r9, r6
 6345              	.LVL854:
 6346              	.L595:
2739:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)		/* Move sector window */
2741:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2743:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->buf.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 6347              		.loc 1 2744 0
 6348 0158 4A46     		mov	r2, r9
 6349 015a 2144     		add	r1, r1, r4
 6350 015c 4046     		mov	r0, r8
 6351 015e FFF7FEFF 		bl	mem_cpy
 6352              	.LVL855:
 6353              	.L591:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 6354              		.loc 1 2683 0
 6355 0162 C844     		add	r8, r8, r9
 6356              	.LVL856:
 6357 0164 41F20802 		movw	r2, #4104
 6358 0168 A358     		ldr	r3, [r4, r2]
 6359 016a 4B44     		add	r3, r3, r9
 6360 016c A350     		str	r3, [r4, r2]
 6361 016e 3B68     		ldr	r3, [r7]
 6362 0170 4B44     		add	r3, r3, r9
 6363 0172 3B60     		str	r3, [r7]
 6364 0174 A6EB0906 		sub	r6, r6, r9
 6365              	.LVL857:
 6366              	.L596:
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 6367              		.loc 1 2682 0
 6368 0178 002E     		cmp	r6, #0
 6369 017a 69D0     		beq	.L576
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 6370              		.loc 1 2684 0
 6371 017c 41F20803 		movw	r3, #4104
 6372 0180 E158     		ldr	r1, [r4, r3]
 6373 0182 04F58053 		add	r3, r4, #4096
 6374 0186 1868     		ldr	r0, [r3]
 6375 0188 41F20A03 		movw	r3, #4106
 6376 018c C55A     		ldrh	r5, [r0, r3]
 6377 018e B1FBF5F3 		udiv	r3, r1, r5
 6378 0192 05FB1313 		mls	r3, r5, r3, r1
 6379 0196 002B     		cmp	r3, #0
 6380 0198 CBD1     		bne	.L579
ARM GAS  /tmp/ccTBpncU.s 			page 174


2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
 6381              		.loc 1 2685 0
 6382 019a B1FBF5F5 		udiv	r5, r1, r5
 6383 019e 41F20203 		movw	r3, #4098
 6384 01a2 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 6385 01a4 013B     		subs	r3, r3, #1
 6386 01a6 DBB2     		uxtb	r3, r3
 6387              	.LVL858:
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 6388              		.loc 1 2686 0
 6389 01a8 1D40     		ands	r5, r5, r3
 6390              	.LVL859:
 6391 01aa 0FD1     		bne	.L580
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
 6392              		.loc 1 2687 0
 6393 01ac 0029     		cmp	r1, #0
 6394 01ae 7FF44FAF 		bne	.L581
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 6395              		.loc 1 2688 0
 6396 01b2 41F21003 		movw	r3, #4112
 6397 01b6 E058     		ldr	r0, [r4, r3]
 6398              	.LVL860:
 6399              	.L582:
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6400              		.loc 1 2697 0
 6401 01b8 0128     		cmp	r0, #1
 6402 01ba 7FF657AF 		bls	.L606
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 6403              		.loc 1 2698 0
 6404 01be B0F1FF3F 		cmp	r0, #-1
 6405 01c2 3FF459AF 		beq	.L607
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6406              		.loc 1 2699 0
 6407 01c6 41F21403 		movw	r3, #4116
 6408 01ca E050     		str	r0, [r4, r3]
 6409              	.LVL861:
 6410              	.L580:
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 6411              		.loc 1 2701 0
 6412 01cc 04F58053 		add	r3, r4, #4096
 6413 01d0 D3F800B0 		ldr	fp, [r3]
 6414 01d4 41F21403 		movw	r3, #4116
 6415 01d8 E158     		ldr	r1, [r4, r3]
 6416 01da 5846     		mov	r0, fp
 6417 01dc FFF7FEFF 		bl	clust2sect
 6418              	.LVL862:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6419              		.loc 1 2702 0
 6420 01e0 8246     		mov	r10, r0
 6421 01e2 0028     		cmp	r0, #0
 6422 01e4 3FF44EAF 		beq	.L608
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 6423              		.loc 1 2703 0
 6424 01e8 AA44     		add	r10, r10, r5
 6425              	.LVL863:
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 6426              		.loc 1 2704 0
ARM GAS  /tmp/ccTBpncU.s 			page 175


 6427 01ea 41F20A03 		movw	r3, #4106
 6428 01ee 3BF80390 		ldrh	r9, [fp, r3]
 6429 01f2 B6FBF9F9 		udiv	r9, r6, r9
 6430              	.LVL864:
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 6431              		.loc 1 2705 0
 6432 01f6 B9F1000F 		cmp	r9, #0
 6433 01fa 3FF46CAF 		beq	.L587
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 6434              		.loc 1 2706 0
 6435 01fe 05EB0903 		add	r3, r5, r9
 6436 0202 41F20202 		movw	r2, #4098
 6437 0206 1BF80220 		ldrb	r2, [fp, r2]	@ zero_extendqisi2
 6438 020a 9342     		cmp	r3, r2
 6439 020c 01D9     		bls	.L588
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
 6440              		.loc 1 2707 0
 6441 020e A2EB0509 		sub	r9, r2, r5
 6442              	.LVL865:
 6443              	.L588:
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 6444              		.loc 1 2708 0
 6445 0212 4B46     		mov	r3, r9
 6446 0214 5246     		mov	r2, r10
 6447 0216 4146     		mov	r1, r8
 6448 0218 41F20100 		movw	r0, #4097
 6449 021c 1BF80000 		ldrb	r0, [fp, r0]	@ zero_extendqisi2
 6450 0220 FFF7FEFF 		bl	disk_read
 6451              	.LVL866:
 6452 0224 0028     		cmp	r0, #0
 6453 0226 3FF433AF 		beq	.L589
2709:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 6454              		.loc 1 2709 0
 6455 022a 0123     		movs	r3, #1
 6456 022c 41F20702 		movw	r2, #4103
 6457 0230 A354     		strb	r3, [r4, r2]
 6458 0232 0193     		str	r3, [sp, #4]
 6459 0234 0CE0     		b	.L576
 6460              	.L604:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 6461              		.loc 1 2727 0
 6462 0236 0123     		movs	r3, #1
 6463 0238 41F20702 		movw	r2, #4103
 6464 023c A354     		strb	r3, [r4, r2]
 6465 023e 0193     		str	r3, [sp, #4]
 6466 0240 06E0     		b	.L576
 6467              	.LVL867:
 6468              	.L605:
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6469              		.loc 1 2732 0
 6470 0242 0123     		movs	r3, #1
 6471 0244 41F20702 		movw	r2, #4103
 6472 0248 A354     		strb	r3, [r4, r2]
 6473 024a 0193     		str	r3, [sp, #4]
 6474 024c 00E0     		b	.L576
 6475              	.LVL868:
 6476              	.L598:
ARM GAS  /tmp/ccTBpncU.s 			page 176


2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 6477              		.loc 1 2676 0
 6478 024e 0193     		str	r3, [sp, #4]
 6479              	.LVL869:
 6480              	.L576:
2745:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
2749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6481              		.loc 1 2749 0
 6482 0250 0198     		ldr	r0, [sp, #4]
 6483 0252 03B0     		add	sp, sp, #12
 6484              	.LCFI71:
 6485              		.cfi_remember_state
 6486              		.cfi_def_cfa_offset 36
 6487              		@ sp needed
 6488 0254 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6489              	.LVL870:
 6490              	.L599:
 6491              	.LCFI72:
 6492              		.cfi_restore_state
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 6493              		.loc 1 2678 0
 6494 0258 0723     		movs	r3, #7
 6495 025a 0193     		str	r3, [sp, #4]
 6496 025c F8E7     		b	.L576
 6497              		.cfi_endproc
 6498              	.LFE107:
 6500              		.section	.text.f_write,"ax",%progbits
 6501              		.align	1
 6502              		.global	f_write
 6503              		.syntax unified
 6504              		.thumb
 6505              		.thumb_func
 6506              		.fpu softvfp
 6508              	f_write:
 6509              	.LFB108:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** 
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 
2754:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2755:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2756:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
2757:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 
2759:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void *buff,	/* Pointer to the data to be written */
2762:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
2764:Middlewares/Third_Party/FatFs/src/ff.c **** )
2765:Middlewares/Third_Party/FatFs/src/ff.c **** {
 6510              		.loc 1 2765 0
 6511              		.cfi_startproc
 6512              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccTBpncU.s 			page 177


 6513              		@ frame_needed = 0, uses_anonymous_args = 0
 6514              	.LVL871:
 6515 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6516              	.LCFI73:
 6517              		.cfi_def_cfa_offset 36
 6518              		.cfi_offset 4, -36
 6519              		.cfi_offset 5, -32
 6520              		.cfi_offset 6, -28
 6521              		.cfi_offset 7, -24
 6522              		.cfi_offset 8, -20
 6523              		.cfi_offset 9, -16
 6524              		.cfi_offset 10, -12
 6525              		.cfi_offset 11, -8
 6526              		.cfi_offset 14, -4
 6527 0004 83B0     		sub	sp, sp, #12
 6528              	.LCFI74:
 6529              		.cfi_def_cfa_offset 48
 6530 0006 0446     		mov	r4, r0
 6531 0008 0F46     		mov	r7, r1
 6532 000a 1646     		mov	r6, r2
 6533 000c 9846     		mov	r8, r3
 6534              	.LVL872:
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 6535              		.loc 1 2773 0
 6536 000e 0023     		movs	r3, #0
 6537              	.LVL873:
 6538 0010 C8F80030 		str	r3, [r8]
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity */
 6539              		.loc 1 2775 0
 6540 0014 FFF7FEFF 		bl	validate
 6541              	.LVL874:
2776:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 6542              		.loc 1 2776 0
 6543 0018 0190     		str	r0, [sp, #4]
 6544 001a 0028     		cmp	r0, #0
 6545 001c 40F04881 		bne	.L610
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)							/* Check error */
 6546              		.loc 1 2777 0
 6547 0020 41F20703 		movw	r3, #4103
 6548 0024 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6549 0026 002B     		cmp	r3, #0
 6550 0028 40F04181 		bne	.L634
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2779:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 6551              		.loc 1 2779 0
 6552 002c 41F20603 		movw	r3, #4102
 6553 0030 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6554 0032 13F0020F 		tst	r3, #2
 6555 0036 00F03F81 		beq	.L635
ARM GAS  /tmp/ccTBpncU.s 			page 178


2780:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2781:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 6556              		.loc 1 2781 0
 6557 003a 41F20803 		movw	r3, #4104
 6558 003e E358     		ldr	r3, [r4, r3]
 6559 0040 F342     		cmn	r3, r6
 6560 0042 C0F0E980 		bcc	.L631
 6561 0046 0026     		movs	r6, #0
 6562              	.LVL875:
 6563 0048 E6E0     		b	.L631
 6564              	.LVL876:
 6565              	.L615:
2782:Middlewares/Third_Party/FatFs/src/ff.c **** 
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
2793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
 6566              		.loc 1 2794 0
 6567 004a 41F22403 		movw	r3, #4132
 6568 004e E358     		ldr	r3, [r4, r3]
 6569 0050 002B     		cmp	r3, #0
 6570 0052 4CD0     		beq	.L617
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6571              		.loc 1 2795 0
 6572 0054 2046     		mov	r0, r4
 6573 0056 FFF7FEFF 		bl	clmt_clust
 6574              	.LVL877:
 6575              	.L616:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 6576              		.loc 1 2800 0
 6577 005a 0028     		cmp	r0, #0
 6578 005c 00F01581 		beq	.L618
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 6579              		.loc 1 2801 0
 6580 0060 0128     		cmp	r0, #1
 6581 0062 4BD0     		beq	.L639
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6582              		.loc 1 2802 0
 6583 0064 B0F1FF3F 		cmp	r0, #-1
 6584 0068 4ED0     		beq	.L640
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 6585              		.loc 1 2803 0
 6586 006a 41F21403 		movw	r3, #4116
 6587 006e E050     		str	r0, [r4, r3]
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
ARM GAS  /tmp/ccTBpncU.s 			page 179


 6588              		.loc 1 2804 0
 6589 0070 41F21003 		movw	r3, #4112
 6590 0074 E358     		ldr	r3, [r4, r3]
 6591 0076 13B9     		cbnz	r3, .L614
 6592              		.loc 1 2804 0 is_stmt 0 discriminator 1
 6593 0078 41F21003 		movw	r3, #4112
 6594 007c E050     		str	r0, [r4, r3]
 6595              	.LVL878:
 6596              	.L614:
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
2808:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
2809:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
 6597              		.loc 1 2810 0 is_stmt 1
 6598 007e 41F20603 		movw	r3, #4102
 6599 0082 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 6600 0084 13F0400F 		tst	r3, #64
 6601 0088 44D1     		bne	.L641
 6602              	.L621:
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 6603              		.loc 1 2816 0
 6604 008a 04F58053 		add	r3, r4, #4096
 6605 008e D3F800B0 		ldr	fp, [r3]
 6606 0092 41F21403 		movw	r3, #4116
 6607 0096 E158     		ldr	r1, [r4, r3]
 6608 0098 5846     		mov	r0, fp
 6609 009a FFF7FEFF 		bl	clust2sect
 6610              	.LVL879:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 6611              		.loc 1 2817 0
 6612 009e 8246     		mov	r10, r0
 6613 00a0 0028     		cmp	r0, #0
 6614 00a2 54D0     		beq	.L642
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6615              		.loc 1 2818 0
 6616 00a4 AA44     		add	r10, r10, r5
 6617              	.LVL880:
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 6618              		.loc 1 2819 0
 6619 00a6 41F20A03 		movw	r3, #4106
 6620 00aa 3BF80390 		ldrh	r9, [fp, r3]
 6621 00ae B6FBF9F9 		udiv	r9, r6, r9
 6622              	.LVL881:
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 6623              		.loc 1 2820 0
 6624 00b2 B9F1000F 		cmp	r9, #0
 6625 00b6 73D0     		beq	.L624
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 6626              		.loc 1 2821 0
 6627 00b8 05EB0903 		add	r3, r5, r9
ARM GAS  /tmp/ccTBpncU.s 			page 180


 6628 00bc 41F20202 		movw	r2, #4098
 6629 00c0 1BF80220 		ldrb	r2, [fp, r2]	@ zero_extendqisi2
 6630 00c4 9342     		cmp	r3, r2
 6631 00c6 01D9     		bls	.L625
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 6632              		.loc 1 2822 0
 6633 00c8 A2EB0509 		sub	r9, r2, r5
 6634              	.LVL882:
 6635              	.L625:
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
 6636              		.loc 1 2823 0
 6637 00cc 4B46     		mov	r3, r9
 6638 00ce 5246     		mov	r2, r10
 6639 00d0 3946     		mov	r1, r7
 6640 00d2 41F20100 		movw	r0, #4097
 6641 00d6 1BF80000 		ldrb	r0, [fp, r0]	@ zero_extendqisi2
 6642 00da FFF7FEFF 		bl	disk_write
 6643              	.LVL883:
 6644 00de 0028     		cmp	r0, #0
 6645 00e0 3BD0     		beq	.L626
2824:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 6646              		.loc 1 2824 0
 6647 00e2 0123     		movs	r3, #1
 6648 00e4 41F20702 		movw	r2, #4103
 6649 00e8 A354     		strb	r3, [r4, r2]
 6650 00ea 0193     		str	r3, [sp, #4]
 6651 00ec E0E0     		b	.L610
 6652              	.LVL884:
 6653              	.L617:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6654              		.loc 1 2798 0
 6655 00ee 41F21403 		movw	r3, #4116
 6656 00f2 E158     		ldr	r1, [r4, r3]
 6657 00f4 1046     		mov	r0, r2
 6658 00f6 FFF7FEFF 		bl	create_chain
 6659              	.LVL885:
 6660 00fa AEE7     		b	.L616
 6661              	.L639:
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6662              		.loc 1 2801 0 discriminator 1
 6663 00fc 0223     		movs	r3, #2
 6664 00fe 41F20702 		movw	r2, #4103
 6665 0102 A354     		strb	r3, [r4, r2]
 6666 0104 0193     		str	r3, [sp, #4]
 6667 0106 D3E0     		b	.L610
 6668              	.L640:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 6669              		.loc 1 2802 0 discriminator 1
 6670 0108 0123     		movs	r3, #1
 6671 010a 41F20702 		movw	r2, #4103
 6672 010e A354     		strb	r3, [r4, r2]
 6673 0110 0193     		str	r3, [sp, #4]
 6674 0112 CDE0     		b	.L610
 6675              	.LVL886:
 6676              	.L641:
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 6677              		.loc 1 2811 0
ARM GAS  /tmp/ccTBpncU.s 			page 181


 6678 0114 04F58053 		add	r3, r4, #4096
 6679 0118 D3F800C0 		ldr	ip, [r3]
 6680 011c 0123     		movs	r3, #1
 6681 011e 41F21802 		movw	r2, #4120
 6682 0122 A258     		ldr	r2, [r4, r2]
 6683 0124 2146     		mov	r1, r4
 6684 0126 41F20100 		movw	r0, #4097
 6685 012a 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 6686 012e FFF7FEFF 		bl	disk_write
 6687              	.LVL887:
 6688 0132 30B9     		cbnz	r0, .L643
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6689              		.loc 1 2813 0
 6690 0134 41F20602 		movw	r2, #4102
 6691 0138 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 6692 013a 23F04003 		bic	r3, r3, #64
 6693 013e A354     		strb	r3, [r4, r2]
 6694 0140 A3E7     		b	.L621
 6695              	.L643:
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 6696              		.loc 1 2812 0
 6697 0142 0123     		movs	r3, #1
 6698 0144 41F20702 		movw	r2, #4103
 6699 0148 A354     		strb	r3, [r4, r2]
 6700 014a 0193     		str	r3, [sp, #4]
 6701 014c B0E0     		b	.L610
 6702              	.LVL888:
 6703              	.L642:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6704              		.loc 1 2817 0 discriminator 1
 6705 014e 0223     		movs	r3, #2
 6706 0150 41F20702 		movw	r2, #4103
 6707 0154 A354     		strb	r3, [r4, r2]
 6708 0156 0193     		str	r3, [sp, #4]
 6709 0158 AAE0     		b	.L610
 6710              	.LVL889:
 6711              	.L626:
2825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
2826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2828:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->fs->win.d8, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fs->wflag = 0;
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2831:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
 6712              		.loc 1 2832 0
 6713 015a 41F21803 		movw	r3, #4120
 6714 015e E158     		ldr	r1, [r4, r3]
 6715 0160 A1EB0A0A 		sub	r10, r1, r10
 6716              	.LVL890:
 6717 0164 CA45     		cmp	r10, r9
 6718 0166 08D3     		bcc	.L644
 6719              	.L627:
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
2835:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTBpncU.s 			page 182


2837:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
 6720              		.loc 1 2838 0
 6721 0168 04F58053 		add	r3, r4, #4096
 6722 016c 1A68     		ldr	r2, [r3]
 6723 016e 41F20A03 		movw	r3, #4106
 6724 0172 D35A     		ldrh	r3, [r2, r3]
 6725 0174 09FB03F9 		mul	r9, r9, r3
 6726              	.LVL891:
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 6727              		.loc 1 2839 0
 6728 0178 41E0     		b	.L628
 6729              	.LVL892:
 6730              	.L644:
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
 6731              		.loc 1 2833 0
 6732 017a 04F58053 		add	r3, r4, #4096
 6733 017e 1A68     		ldr	r2, [r3]
 6734 0180 41F20A03 		movw	r3, #4106
 6735 0184 D15A     		ldrh	r1, [r2, r3]
 6736 0186 0A46     		mov	r2, r1
 6737 0188 01FB0A71 		mla	r1, r1, r10, r7
 6738 018c 2046     		mov	r0, r4
 6739 018e FFF7FEFF 		bl	mem_cpy
 6740              	.LVL893:
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6741              		.loc 1 2834 0
 6742 0192 41F20602 		movw	r2, #4102
 6743 0196 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 6744 0198 23F04003 		bic	r3, r3, #64
 6745 019c A354     		strb	r3, [r4, r2]
 6746 019e E3E7     		b	.L627
 6747              	.LVL894:
 6748              	.L624:
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2846:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2847:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
 6749              		.loc 1 2847 0
 6750 01a0 41F21803 		movw	r3, #4120
 6751 01a4 E358     		ldr	r3, [r4, r3]
 6752 01a6 5345     		cmp	r3, r10
 6753 01a8 07D0     		beq	.L629
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
 6754              		.loc 1 2848 0
 6755 01aa 41F20803 		movw	r3, #4104
 6756 01ae E258     		ldr	r2, [r4, r3]
 6757 01b0 41F20C03 		movw	r3, #4108
 6758 01b4 E358     		ldr	r3, [r4, r3]
 6759 01b6 9A42     		cmp	r2, r3
 6760 01b8 56D3     		bcc	.L645
 6761              	.L629:
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
ARM GAS  /tmp/ccTBpncU.s 			page 183


2850:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2852:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
 6762              		.loc 1 2853 0
 6763 01ba 41F21803 		movw	r3, #4120
 6764 01be 44F803A0 		str	r10, [r4, r3]
 6765              	.LVL895:
 6766              	.L613:
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
 6767              		.loc 1 2855 0
 6768 01c2 04F58053 		add	r3, r4, #4096
 6769 01c6 1A68     		ldr	r2, [r3]
 6770 01c8 41F20A03 		movw	r3, #4106
 6771 01cc 32F80390 		ldrh	r9, [r2, r3]
 6772 01d0 41F20803 		movw	r3, #4104
 6773 01d4 E358     		ldr	r3, [r4, r3]
 6774 01d6 B3FBF9F0 		udiv	r0, r3, r9
 6775 01da 09FB1030 		mls	r0, r9, r0, r3
 6776 01de A9EB0009 		sub	r9, r9, r0
 6777              	.LVL896:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
 6778              		.loc 1 2856 0
 6779 01e2 4E45     		cmp	r6, r9
 6780 01e4 00D2     		bcs	.L630
 6781 01e6 B146     		mov	r9, r6
 6782              	.LVL897:
 6783              	.L630:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)	/* Move sector window */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->fs->win.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fs->wflag = 1;
2862:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->buf.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 6784              		.loc 1 2863 0
 6785 01e8 4A46     		mov	r2, r9
 6786 01ea 3946     		mov	r1, r7
 6787 01ec 2044     		add	r0, r0, r4
 6788 01ee FFF7FEFF 		bl	mem_cpy
 6789              	.LVL898:
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA__DIRTY;
 6790              		.loc 1 2864 0
 6791 01f2 41F20602 		movw	r2, #4102
 6792 01f6 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 6793 01f8 43F04003 		orr	r3, r3, #64
 6794 01fc A354     		strb	r3, [r4, r2]
 6795              	.L628:
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 6796              		.loc 1 2784 0
 6797 01fe 4F44     		add	r7, r7, r9
 6798              	.LVL899:
 6799 0200 41F20802 		movw	r2, #4104
 6800 0204 A358     		ldr	r3, [r4, r2]
 6801 0206 4B44     		add	r3, r3, r9
 6802 0208 A350     		str	r3, [r4, r2]
ARM GAS  /tmp/ccTBpncU.s 			page 184


 6803 020a D8F80030 		ldr	r3, [r8]
 6804 020e 4B44     		add	r3, r3, r9
 6805 0210 C8F80030 		str	r3, [r8]
 6806 0214 A6EB0906 		sub	r6, r6, r9
 6807              	.LVL900:
 6808              	.L631:
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 6809              		.loc 1 2783 0
 6810 0218 002E     		cmp	r6, #0
 6811 021a 36D0     		beq	.L618
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 6812              		.loc 1 2785 0
 6813 021c 41F20803 		movw	r3, #4104
 6814 0220 E158     		ldr	r1, [r4, r3]
 6815 0222 04F58053 		add	r3, r4, #4096
 6816 0226 1A68     		ldr	r2, [r3]
 6817 0228 41F20A03 		movw	r3, #4106
 6818 022c D55A     		ldrh	r5, [r2, r3]
 6819 022e B1FBF5F3 		udiv	r3, r1, r5
 6820 0232 05FB1313 		mls	r3, r5, r3, r1
 6821 0236 002B     		cmp	r3, #0
 6822 0238 C3D1     		bne	.L613
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
 6823              		.loc 1 2786 0
 6824 023a B1FBF5F5 		udiv	r5, r1, r5
 6825 023e 41F20203 		movw	r3, #4098
 6826 0242 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6827 0244 013B     		subs	r3, r3, #1
 6828 0246 DBB2     		uxtb	r3, r3
 6829              	.LVL901:
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 6830              		.loc 1 2787 0
 6831 0248 1D40     		ands	r5, r5, r3
 6832              	.LVL902:
 6833 024a 7FF418AF 		bne	.L614
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
 6834              		.loc 1 2788 0
 6835 024e 0029     		cmp	r1, #0
 6836 0250 7FF4FBAE 		bne	.L615
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
 6837              		.loc 1 2789 0
 6838 0254 41F21003 		movw	r3, #4112
 6839 0258 E058     		ldr	r0, [r4, r3]
 6840              	.LVL903:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 6841              		.loc 1 2790 0
 6842 025a 0028     		cmp	r0, #0
 6843 025c 7FF4FDAE 		bne	.L616
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
 6844              		.loc 1 2791 0
 6845 0260 1046     		mov	r0, r2
 6846              	.LVL904:
 6847 0262 FFF7FEFF 		bl	create_chain
 6848              	.LVL905:
 6849 0266 F8E6     		b	.L616
 6850              	.LVL906:
 6851              	.L645:
ARM GAS  /tmp/ccTBpncU.s 			page 185


2849:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 6852              		.loc 1 2849 0 discriminator 1
 6853 0268 0123     		movs	r3, #1
 6854 026a 5246     		mov	r2, r10
 6855 026c 2146     		mov	r1, r4
 6856 026e 41F20100 		movw	r0, #4097
 6857 0272 1BF80000 		ldrb	r0, [fp, r0]	@ zero_extendqisi2
 6858 0276 FFF7FEFF 		bl	disk_read
 6859              	.LVL907:
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
 6860              		.loc 1 2848 0 discriminator 1
 6861 027a 0028     		cmp	r0, #0
 6862 027c 9DD0     		beq	.L629
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6863              		.loc 1 2850 0
 6864 027e 0123     		movs	r3, #1
 6865 0280 41F20702 		movw	r2, #4103
 6866 0284 A354     		strb	r3, [r4, r2]
 6867 0286 0193     		str	r3, [sp, #4]
 6868 0288 12E0     		b	.L610
 6869              	.LVL908:
 6870              	.L618:
2865:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 6871              		.loc 1 2868 0
 6872 028a 41F20803 		movw	r3, #4104
 6873 028e E358     		ldr	r3, [r4, r3]
 6874 0290 41F20C02 		movw	r2, #4108
 6875 0294 A258     		ldr	r2, [r4, r2]
 6876 0296 9342     		cmp	r3, r2
 6877 0298 02D9     		bls	.L633
 6878              		.loc 1 2868 0 is_stmt 0 discriminator 1
 6879 029a 41F20C02 		movw	r2, #4108
 6880 029e A350     		str	r3, [r4, r2]
 6881              	.L633:
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 6882              		.loc 1 2869 0 is_stmt 1
 6883 02a0 41F20602 		movw	r2, #4102
 6884 02a4 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 6885 02a6 43F02003 		orr	r3, r3, #32
 6886 02aa A354     		strb	r3, [r4, r2]
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
 6887              		.loc 1 2871 0
 6888 02ac 00E0     		b	.L610
 6889              	.LVL909:
 6890              	.L634:
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 6891              		.loc 1 2778 0
 6892 02ae 0193     		str	r3, [sp, #4]
 6893              	.LVL910:
 6894              	.L610:
2872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6895              		.loc 1 2872 0
 6896 02b0 0198     		ldr	r0, [sp, #4]
ARM GAS  /tmp/ccTBpncU.s 			page 186


 6897 02b2 03B0     		add	sp, sp, #12
 6898              	.LCFI75:
 6899              		.cfi_remember_state
 6900              		.cfi_def_cfa_offset 36
 6901              		@ sp needed
 6902 02b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6903              	.LVL911:
 6904              	.L635:
 6905              	.LCFI76:
 6906              		.cfi_restore_state
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 6907              		.loc 1 2780 0
 6908 02b8 0723     		movs	r3, #7
 6909 02ba 0193     		str	r3, [sp, #4]
 6910 02bc F8E7     		b	.L610
 6911              		.cfi_endproc
 6912              	.LFE108:
 6914              		.section	.text.putc_bfd,"ax",%progbits
 6915              		.align	1
 6916              		.syntax unified
 6917              		.thumb
 6918              		.thumb_func
 6919              		.fpu softvfp
 6921              	putc_bfd:
 6922              	.LFB125:
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 
2877:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2878:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 
2881:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** )
2884:Middlewares/Third_Party/FatFs/src/ff.c **** {
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
2894:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2901:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fp->fs, fp->dir_sect);
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
ARM GAS  /tmp/ccTBpncU.s 			page 187


2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
2919:Middlewares/Third_Party/FatFs/src/ff.c **** }
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 
2921:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 
2926:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2927:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
2928:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 
2930:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp		/* Pointer to the file object to be closed */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** )
2933:Middlewares/Third_Party/FatFs/src/ff.c **** {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 
2937:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
2940:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(fp);				/* Lock volume */
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2944:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2945:Middlewares/Third_Party/FatFs/src/ff.c **** 			FATFS *fs = fp->fs;
2946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->lockid);	/* Decrement file open counter */
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs = 0;				/* Invalidate file object */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
2954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2958:Middlewares/Third_Party/FatFs/src/ff.c **** }
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** 
2961:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTBpncU.s 			page 188


2962:Middlewares/Third_Party/FatFs/src/ff.c **** 
2963:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2964:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
2965:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 
2967:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
2968:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
2969:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** )
2972:Middlewares/Third_Party/FatFs/src/ff.c **** {
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 
2979:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 
2981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
2983:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
2988:Middlewares/Third_Party/FatFs/src/ff.c **** )
2989:Middlewares/Third_Party/FatFs/src/ff.c **** {
2990:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2992:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2993:Middlewares/Third_Party/FatFs/src/ff.c **** 
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dj.dir) {
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->cdir = ld_clust(dj.fs, dj.dir);
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3015:Middlewares/Third_Party/FatFs/src/ff.c **** }
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 
3018:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
ARM GAS  /tmp/ccTBpncU.s 			page 189


3019:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** )
3023:Middlewares/Third_Party/FatFs/src/ff.c **** {
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, (const TCHAR**)&buff, 0);	/* Get current volume */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper directory from current directory */
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 1);			/* Get parent directory */
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3043:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 0);
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.sclust = ld_clust(dj.fs, dj.dir);	/* Goto parent directory */
3046:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 0);
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {							/* Find the entry links to the child directory */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_read(&dj, 0);
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ccl == ld_clust(dj.fs, dj.dir)) break;	/* Found the entry */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(&dj, 0);	
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3056:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfname = buff;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfsize = i;
3059:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = fno.fname;
3062:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*buff) tp = buff;
3064:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (n = 0; tp[n]; n++) ;
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < n + 3) {
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE; break;
3068:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (n) buff[--i] = tp[--n];
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 			buff[--i] = '/';
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3074:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
ARM GAS  /tmp/ccTBpncU.s 			page 190


3076:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3077:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3091:Middlewares/Third_Party/FatFs/src/ff.c **** }
3092:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 
3097:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3098:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3099:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3100:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 
3102:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File pointer from top of file */
3105:Middlewares/Third_Party/FatFs/src/ff.c **** )
3106:Middlewares/Third_Party/FatFs/src/ff.c **** {
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect, ifptr;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 
3119:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
ARM GAS  /tmp/ccTBpncU.s 			page 191


3133:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3157:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fp->fs->drv, fp->buf.d8, dsc, 1) != RES_OK)	/* Load current sector */
3165:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
3166:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->dsect = dsc;
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3169:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3172:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
3177:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			 && !(fp->flag & FA_WRITE)
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 			) ofs = fp->fsize;
3181:Middlewares/Third_Party/FatFs/src/ff.c **** 
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
ARM GAS  /tmp/ccTBpncU.s 			page 192


3190:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->sclust;						/* start from the first cluster */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
3199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3202:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
3204:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
3205:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3211:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3212:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
3219:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fp->fs->drv, fp->buf.d8, nsect, 1) != RES_OK)	/* Fill sector cache */
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = nsect;
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3242:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccTBpncU.s 			page 193


3247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3251:Middlewares/Third_Party/FatFs/src/ff.c **** }
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** )
3264:Middlewares/Third_Party/FatFs/src/ff.c **** {
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = 0;	/* Root directory need not to be locked */
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3299:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccTBpncU.s 			page 194


3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 
3306:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3307:Middlewares/Third_Party/FatFs/src/ff.c **** }
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3313:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
3314:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 
3316:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
3318:Middlewares/Third_Party/FatFs/src/ff.c **** )
3319:Middlewares/Third_Party/FatFs/src/ff.c **** {
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3325:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 		FATFS *fs = dp->fs;
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3328:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->lockid)				/* Decrement sub-directory open counter */
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs = 0;				/* Invalidate directory object */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** }
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 
3344:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3345:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 
3348:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3351:Middlewares/Third_Party/FatFs/src/ff.c **** )
3352:Middlewares/Third_Party/FatFs/src/ff.c **** {
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);						/* Check validity of the object */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
ARM GAS  /tmp/ccTBpncU.s 			page 195


3361:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_BUF(*dp);
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_BUF();
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dp->fs, res);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** }
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 
3385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
3386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3387:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find next file                                                        */
3388:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 
3390:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** )
3394:Middlewares/Third_Party/FatFs/src/ff.c **** {
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
3401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fno->lfname && pattern_matching(dp->pat, fno->lfname, 0, 0)) break;	/* Test for LFN if exist 
3403:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;	/* Test for SFN */
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 
3408:Middlewares/Third_Party/FatFs/src/ff.c **** }
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 
3412:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3413:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find first file                                                       */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 
3416:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
ARM GAS  /tmp/ccTBpncU.s 			page 196


3418:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
3421:Middlewares/Third_Party/FatFs/src/ff.c **** )
3422:Middlewares/Third_Party/FatFs/src/ff.c **** {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3431:Middlewares/Third_Party/FatFs/src/ff.c **** }
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 
3437:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
3438:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3439:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 
3442:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3445:Middlewares/Third_Party/FatFs/src/ff.c **** )
3446:Middlewares/Third_Party/FatFs/src/ff.c **** {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3468:Middlewares/Third_Party/FatFs/src/ff.c **** }
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 
3472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3474:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
ARM GAS  /tmp/ccTBpncU.s 			page 197


3475:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 
3477:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
3481:Middlewares/Third_Party/FatFs/src/ff.c **** )
3482:Middlewares/Third_Party/FatFs/src/ff.c **** {
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, sect, stat;
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fat, *p;
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(fatfs, &path, 0);
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust <= fs->n_fatent - 2) {
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			fat = fs->fs_type;
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(fs, clst);
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fs->n_fatent;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect = fs->fatbase;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!i) {
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fat == FS_FAT16) {
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (--clst);
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = n;
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
ARM GAS  /tmp/ccTBpncU.s 			page 198


3532:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3535:Middlewares/Third_Party/FatFs/src/ff.c **** }
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 
3540:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3541:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 
3544:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3546:Middlewares/Third_Party/FatFs/src/ff.c **** )
3547:Middlewares/Third_Party/FatFs/src/ff.c **** {
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity of the object */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
3568:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = get_fat(fp->fs, fp->clust);
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (fp->flag & FA__DIRTY)) {
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
3584:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) fp->err = (FRESULT)res;
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccTBpncU.s 			page 199


3589:Middlewares/Third_Party/FatFs/src/ff.c **** 
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3591:Middlewares/Third_Party/FatFs/src/ff.c **** }
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** 
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File or Directory                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** )
3603:Middlewares/Third_Party/FatFs/src/ff.c **** {
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open object */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_RDO)
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == dj.fs->cdir) {		 		/* Is it the current directory? */
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3636:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(&sdj, &dj, sizeof (DIR));	/* Open the sub-directory */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
ARM GAS  /tmp/ccTBpncU.s 			page 200


3646:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** }
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 
3665:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3666:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
3667:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3668:Middlewares/Third_Party/FatFs/src/ff.c **** 
3669:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
3671:Middlewares/Third_Party/FatFs/src/ff.c **** )
3672:Middlewares/Third_Party/FatFs/src/ff.c **** {
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, n;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm = GET_FATTIME();
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3678:Middlewares/Third_Party/FatFs/src/ff.c **** 
3679:Middlewares/Third_Party/FatFs/src/ff.c **** 
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
ARM GAS  /tmp/ccTBpncU.s 			page 201


3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3717:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3732:Middlewares/Third_Party/FatFs/src/ff.c **** 
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3734:Middlewares/Third_Party/FatFs/src/ff.c **** }
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 
3739:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3740:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
3741:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 
3743:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
3747:Middlewares/Third_Party/FatFs/src/ff.c **** )
3748:Middlewares/Third_Party/FatFs/src/ff.c **** {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
ARM GAS  /tmp/ccTBpncU.s 			page 202


3760:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** }
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 
3782:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3783:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename File/Directory                                                 */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 
3786:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object to be renamed */
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** )
3790:Middlewares/Third_Party/FatFs/src/ff.c **** {
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[21], *dir;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number of the source object */
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&djo.fs, &path_old, 1);
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Old object is found */
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about object except name */
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
ARM GAS  /tmp/ccTBpncU.s 			page 203


3817:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_INVALID_DRIVE;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3823:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(djo.fs, dw);
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of critical section */
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 
3854:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(djo.fs, res);
3855:Middlewares/Third_Party/FatFs/src/ff.c **** }
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 
3860:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3861:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
3862:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
3867:Middlewares/Third_Party/FatFs/src/ff.c **** )
3868:Middlewares/Third_Party/FatFs/src/ff.c **** {
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTBpncU.s 			page 204


3874:Middlewares/Third_Party/FatFs/src/ff.c **** 
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtTime, fno->ftime);
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3897:Middlewares/Third_Party/FatFs/src/ff.c **** }
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 
3899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
3901:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
3902:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
3907:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
3908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get volume label                                                      */
3910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 
3912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
3916:Middlewares/Third_Party/FatFs/src/ff.c **** )
3917:Middlewares/Third_Party/FatFs/src/ff.c **** {
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
ARM GAS  /tmp/ccTBpncU.s 			page 205


3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = 0;					/* Open root directory */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {			/* A volume label is exist */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = j = 0;
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (i < 11) ? dj.dir[i++] : ' ';
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = w << 8 | dj.dir[i++];
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (j < 11);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(label, dj.dir, 11);
3946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				j = 11;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j] = 0;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!j) break;
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (label[--j] == ' ');
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {	/* No label, return nul string */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				label[0] = 0;
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dj.fs, dj.fs->volbase);
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = LD_DWORD(&dj.fs->win.d8[i]);
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3970:Middlewares/Third_Party/FatFs/src/ff.c **** }
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 
3974:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3976:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set volume label                                                      */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 
3979:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** )
3982:Middlewares/Third_Party/FatFs/src/ff.c **** {
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE vn[11];
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, sl;
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
ARM GAS  /tmp/ccTBpncU.s 			page 206


3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &label, 1);
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res) LEAVE_FF(dj.fs, res);
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create a volume label in directory form */
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	vn[0] = 0;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (sl = 0; label[sl]; sl++) ;				/* Get name length */
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ; sl && label[sl - 1] == ' '; sl--) ;	/* Remove trailing spaces */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sl) {	/* Create volume label in directory form */
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = j = 0;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4002:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(label[i++]), 0);
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (BYTE)label[i++];
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w))
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (j < 10 && i < sl && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4017:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4018:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("\"*+,.:;<=>\?[]|\x7F", w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) /* Reject i
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(dj.fs, FR_INVALID_NAME);
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x100) vn[j++] = (BYTE)(w >> 8);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 			vn[j++] = (BYTE)w;
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i < sl);
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j < 11) vn[j++] = ' ';	/* Fill remaining name field */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (vn[0] == DDEM) LEAVE_FF(dj.fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.sclust = 0;					/* Open root directory */
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* A volume label is found */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (vn[0]) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir, vn, 11);	/* Change the volume label name */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dj.dir + DIR_WrtTime, tm);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[0] = DDEM;			/* Remove the volume label */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.fs->wflag = 1;
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(dj.fs);
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {					/* No volume label is found or error */
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
ARM GAS  /tmp/ccTBpncU.s 			page 207


4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (vn[0]) {				/* Create volume label as new */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry for volume label */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZ_DIRE);	/* Set volume label */
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dj.dir, vn, 11);
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.dir[DIR_Attr] = AM_VOL;
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						tm = GET_FATTIME();
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 						ST_DWORD(dj.dir + DIR_WrtTime, tm);
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->wflag = 1;
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(dj.fs);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** }
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 
4070:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4071:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly (available on only tiny cfg)      */
4072:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD && _FS_TINY
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
4080:Middlewares/Third_Party/FatFs/src/ff.c **** )
4081:Middlewares/Third_Party/FatFs/src/ff.c **** {
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD remain, clst, sect;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);								/* Check validity of the object */
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)									/* Check error */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ))						/* Check access mode */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream becomes busy */
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
ARM GAS  /tmp/ccTBpncU.s 			page 208


4102:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {							/* On the cluster boundary? */
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust : get_fat(fp->fs, fp->clust);
4107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fp->fs, FR_INT_ERR);
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fp->fs, fp->clust);		/* Get current data sector */
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fp->fs, FR_INT_ERR);
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, sect) != FR_OK)		/* Move sector window */
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->dsect = sect;
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - (WORD)(fp->fptr % SS(fp->fs));	/* Forward data from sector window */
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(&fp->fs->win.d8[(WORD)fp->fptr % SS(fp->fs)], rcnt);
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fp->fs, FR_INT_ERR);
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
4125:Middlewares/Third_Party/FatFs/src/ff.c **** }
4126:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 
4130:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
4131:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4132:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create file system on the logical drive                               */
4133:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_ROOTDIR	512		/* Number of root directory entries for FAT12/16 */
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_FATS		1		/* Number of FATs (1 or 2) */
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 
4138:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT au				/* Size of allocation unit in unit of byte or sector */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** )
4143:Middlewares/Third_Party/FatFs/src/ff.c **** {
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
4147:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, md, sys, *tbl, pdrv, part;
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_clst, vs, n, wsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_dir, b_data;	/* LBA */
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_vol, n_rsv, n_fat, n_dir;	/* Size */
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD eb[2];
4156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTBpncU.s 			page 209


4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfd > 1) return FR_INVALID_PARAMETER;
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get disk statics */
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK || SS(fs) > _MAX_SS || SS(fs) < _MIN_SS)
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, fs->win.d8, 0, 1) != RES_OK) return FR_DISK_ERR;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = LD_DWORD(tbl + 8);	/* Volume start sector */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol = LD_DWORD(tbl + 12);	/* Volume size */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a partition in this function */
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au & (au - 1)) au = 0;
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au >= _MIN_SS) au /= SS(fs);	/* Number of sectors per cluster */
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-compute number of clusters and FAT sub-type */
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = n_vol / au;
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine offset and size of FAT structure */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
ARM GAS  /tmp/ccTBpncU.s 			page 210


4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_fat = b_vol + n_rsv;				/* FAT area start sector */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Align data start sector to erase block boundary (for flash memory media) */
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat += n;
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine number of clusters and final check of validity of the FAT sub-type */
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 
4242:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT12 && n_vol < 0x10000) {
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[4] = sys;
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to teh MBR */
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 		md = 0xF8;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sfd) {	/* No partition table (SFD) */
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[1] = 1;						/* Partition start head */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
ARM GAS  /tmp/ccTBpncU.s 			page 211


4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create BPB in the VBR */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fs->win.d8;							/* Clear sector */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_BytsPerSec, i);
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_TotSec32, n_vol);
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_Media] = md;					/* Media descriptor */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID, n);		/* VSN */
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BS_55AA, 0xAA55);			/* Signature (Offset is fixed here regardless of sector size) */
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize FAT area */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	wsect = b_fat;
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
ARM GAS  /tmp/ccTBpncU.s 			page 212


4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= 0xFFFFFF00;
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize root directory */
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 
4356:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM	/* Erase data area if needed */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 		eb[0] = wsect; eb[1] = wsect + (n_clst - ((fmt == FS_FAT32) ? 1 : 0)) * au - 1;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, eb);
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4361:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create FSINFO if needed */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
4375:Middlewares/Third_Party/FatFs/src/ff.c **** }
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 
4379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
4380:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4381:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
4382:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 
4384:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD szt[],	/* Pointer to the size table for each partitions */
ARM GAS  /tmp/ccTBpncU.s 			page 213


4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
4388:Middlewares/Third_Party/FatFs/src/ff.c **** )
4389:Middlewares/Third_Party/FatFs/src/ff.c **** {
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine CHS in the table regardless of the drive geometry */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x06;						/* System type (temporary setting) */
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 8, s_part);			/* Start sector in LBA */
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 12, sz_part);			/* Partition size */
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(p, 0xAA55);
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
4443:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTBpncU.s 			page 214


4444:Middlewares/Third_Party/FatFs/src/ff.c **** 
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 
4446:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
4447:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 
4452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
4453:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
4455:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** )
4462:Middlewares/Third_Party/FatFs/src/ff.c **** {
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
4470:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4471:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence */
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4493:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
4497:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
ARM GAS  /tmp/ccTBpncU.s 			page 215


4501:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
4511:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
4512:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4513:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4517:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
4522:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
4525:Middlewares/Third_Party/FatFs/src/ff.c **** }
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 
4530:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4531:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
4532:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4533:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 
4536:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp;
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];
4540:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 
4543:Middlewares/Third_Party/FatFs/src/ff.c **** static
4544:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
4547:Middlewares/Third_Party/FatFs/src/ff.c **** )
4548:Middlewares/Third_Party/FatFs/src/ff.c **** {
 6923              		.loc 1 4548 0
 6924              		.cfi_startproc
 6925              		@ args = 0, pretend = 0, frame = 8
 6926              		@ frame_needed = 0, uses_anonymous_args = 0
 6927              	.LVL912:
 6928 0000 70B5     		push	{r4, r5, r6, lr}
 6929              	.LCFI77:
 6930              		.cfi_def_cfa_offset 16
 6931              		.cfi_offset 4, -16
ARM GAS  /tmp/ccTBpncU.s 			page 216


 6932              		.cfi_offset 5, -12
 6933              		.cfi_offset 6, -8
 6934              		.cfi_offset 14, -4
 6935 0002 82B0     		sub	sp, sp, #8
 6936              	.LCFI78:
 6937              		.cfi_def_cfa_offset 24
 6938 0004 0446     		mov	r4, r0
 6939 0006 0D46     		mov	r5, r1
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n')	 /* LF -> CRLF conversion */
 6940              		.loc 1 4553 0
 6941 0008 0A29     		cmp	r1, #10
 6942 000a 0DD0     		beq	.L653
 6943              	.LVL913:
 6944              	.L647:
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;	/* Buffer write index (-1:error) */
 6945              		.loc 1 4556 0
 6946 000c 6368     		ldr	r3, [r4, #4]
 6947              	.LVL914:
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 6948              		.loc 1 4557 0
 6949 000e 002B     		cmp	r3, #0
 6950 0010 08DB     		blt	.L646
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 
4559:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4578:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
ARM GAS  /tmp/ccTBpncU.s 			page 217


 6951              		.loc 1 4586 0
 6952 0012 5E1C     		adds	r6, r3, #1
 6953              	.LVL915:
 6954 0014 2344     		add	r3, r3, r4
 6955 0016 1D73     		strb	r5, [r3, #12]
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 6956              		.loc 1 4589 0
 6957 0018 3C2E     		cmp	r6, #60
 6958 001a 09DC     		bgt	.L654
 6959              	.LVL916:
 6960              	.L649:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
 6961              		.loc 1 4593 0
 6962 001c 6660     		str	r6, [r4, #4]
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 6963              		.loc 1 4594 0
 6964 001e A368     		ldr	r3, [r4, #8]
 6965 0020 0133     		adds	r3, r3, #1
 6966 0022 A360     		str	r3, [r4, #8]
 6967              	.LVL917:
 6968              	.L646:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6969              		.loc 1 4595 0
 6970 0024 02B0     		add	sp, sp, #8
 6971              	.LCFI79:
 6972              		.cfi_remember_state
 6973              		.cfi_def_cfa_offset 16
 6974              		@ sp needed
 6975 0026 70BD     		pop	{r4, r5, r6, pc}
 6976              	.LVL918:
 6977              	.L653:
 6978              	.LCFI80:
 6979              		.cfi_restore_state
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6980              		.loc 1 4554 0
 6981 0028 0D21     		movs	r1, #13
 6982              	.LVL919:
 6983 002a FFF7E9FF 		bl	putc_bfd
 6984              	.LVL920:
 6985 002e EDE7     		b	.L647
 6986              	.LVL921:
 6987              	.L654:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 6988              		.loc 1 4590 0
 6989 0030 01AB     		add	r3, sp, #4
 6990 0032 3246     		mov	r2, r6
 6991 0034 04F10C01 		add	r1, r4, #12
 6992 0038 2068     		ldr	r0, [r4]
 6993 003a FFF7FEFF 		bl	f_write
 6994              	.LVL922:
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6995              		.loc 1 4591 0
ARM GAS  /tmp/ccTBpncU.s 			page 218


 6996 003e 019B     		ldr	r3, [sp, #4]
 6997 0040 9E42     		cmp	r6, r3
 6998 0042 02D0     		beq	.L655
 6999 0044 4FF0FF36 		mov	r6, #-1
 7000              	.LVL923:
 7001 0048 E8E7     		b	.L649
 7002              	.LVL924:
 7003              	.L655:
 7004 004a 0026     		movs	r6, #0
 7005              	.LVL925:
 7006 004c E6E7     		b	.L649
 7007              		.cfi_endproc
 7008              	.LFE125:
 7010              		.section	.text.f_sync,"ax",%progbits
 7011              		.align	1
 7012              		.global	f_sync
 7013              		.syntax unified
 7014              		.thumb
 7015              		.thumb_func
 7016              		.fpu softvfp
 7018              	f_sync:
 7019              	.LFB109:
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7020              		.loc 1 2884 0
 7021              		.cfi_startproc
 7022              		@ args = 0, pretend = 0, frame = 0
 7023              		@ frame_needed = 0, uses_anonymous_args = 0
 7024              	.LVL926:
 7025 0000 38B5     		push	{r3, r4, r5, lr}
 7026              	.LCFI81:
 7027              		.cfi_def_cfa_offset 16
 7028              		.cfi_offset 3, -16
 7029              		.cfi_offset 4, -12
 7030              		.cfi_offset 5, -8
 7031              		.cfi_offset 14, -4
 7032 0002 0446     		mov	r4, r0
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7033              		.loc 1 2890 0
 7034 0004 FFF7FEFF 		bl	validate
 7035              	.LVL927:
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 7036              		.loc 1 2891 0
 7037 0008 0346     		mov	r3, r0
 7038 000a 38BB     		cbnz	r0, .L657
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
 7039              		.loc 1 2892 0
 7040 000c 41F20602 		movw	r2, #4102
 7041 0010 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 7042 0012 12F0200F 		tst	r2, #32
 7043 0016 21D0     		beq	.L657
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 7044              		.loc 1 2895 0
 7045 0018 12F0400F 		tst	r2, #64
 7046 001c 14D0     		beq	.L658
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
 7047              		.loc 1 2896 0
 7048 001e 04F58053 		add	r3, r4, #4096
ARM GAS  /tmp/ccTBpncU.s 			page 219


 7049 0022 1D68     		ldr	r5, [r3]
 7050 0024 0123     		movs	r3, #1
 7051 0026 41F21802 		movw	r2, #4120
 7052 002a A258     		ldr	r2, [r4, r2]
 7053 002c 2146     		mov	r1, r4
 7054 002e 41F20100 		movw	r0, #4097
 7055              	.LVL928:
 7056 0032 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 7057 0034 FFF7FEFF 		bl	disk_write
 7058              	.LVL929:
 7059 0038 0028     		cmp	r0, #0
 7060 003a 4CD1     		bne	.L659
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7061              		.loc 1 2898 0
 7062 003c 41F20602 		movw	r2, #4102
 7063 0040 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 7064 0042 23F04003 		bic	r3, r3, #64
 7065 0046 A354     		strb	r3, [r4, r2]
 7066              	.L658:
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
 7067              		.loc 1 2902 0
 7068 0048 04F58053 		add	r3, r4, #4096
 7069 004c 41F21C02 		movw	r2, #4124
 7070 0050 A158     		ldr	r1, [r4, r2]
 7071 0052 1868     		ldr	r0, [r3]
 7072 0054 FFF7FEFF 		bl	move_window
 7073              	.LVL930:
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
 7074              		.loc 1 2903 0
 7075 0058 0346     		mov	r3, r0
 7076 005a 08B1     		cbz	r0, .L661
 7077              	.LVL931:
 7078              	.L657:
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7079              		.loc 1 2919 0
 7080 005c 1846     		mov	r0, r3
 7081 005e 38BD     		pop	{r3, r4, r5, pc}
 7082              	.LVL932:
 7083              	.L661:
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 7084              		.loc 1 2904 0
 7085 0060 04F58153 		add	r3, r4, #4128
 7086 0064 1D68     		ldr	r5, [r3]
 7087              	.LVL933:
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
 7088              		.loc 1 2905 0
 7089 0066 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7090 0068 43F02003 		orr	r3, r3, #32
 7091 006c EB72     		strb	r3, [r5, #11]
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
 7092              		.loc 1 2906 0
 7093 006e 41F20C03 		movw	r3, #4108
 7094 0072 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 7095 0074 2A77     		strb	r2, [r5, #28]
 7096 0076 E25A     		ldrh	r2, [r4, r3]
 7097 0078 120A     		lsrs	r2, r2, #8
 7098 007a 6A77     		strb	r2, [r5, #29]
ARM GAS  /tmp/ccTBpncU.s 			page 220


 7099 007c E258     		ldr	r2, [r4, r3]
 7100 007e C2F30742 		ubfx	r2, r2, #16, #8
 7101 0082 AA77     		strb	r2, [r5, #30]
 7102 0084 E358     		ldr	r3, [r4, r3]
 7103 0086 1B0E     		lsrs	r3, r3, #24
 7104 0088 EB77     		strb	r3, [r5, #31]
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
 7105              		.loc 1 2907 0
 7106 008a 41F21003 		movw	r3, #4112
 7107 008e E158     		ldr	r1, [r4, r3]
 7108 0090 2846     		mov	r0, r5
 7109              	.LVL934:
 7110 0092 FFF7FEFF 		bl	st_clust
 7111              	.LVL935:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 7112              		.loc 1 2908 0
 7113 0096 FFF7FEFF 		bl	get_fattime
 7114              	.LVL936:
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
 7115              		.loc 1 2909 0
 7116 009a A875     		strb	r0, [r5, #22]
 7117 009c C0F30723 		ubfx	r3, r0, #8, #8
 7118 00a0 EB75     		strb	r3, [r5, #23]
 7119 00a2 C0F30743 		ubfx	r3, r0, #16, #8
 7120 00a6 2B76     		strb	r3, [r5, #24]
 7121 00a8 000E     		lsrs	r0, r0, #24
 7122              	.LVL937:
 7123 00aa 6876     		strb	r0, [r5, #25]
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
 7124              		.loc 1 2910 0
 7125 00ac 0023     		movs	r3, #0
 7126 00ae AB74     		strb	r3, [r5, #18]
 7127 00b0 EB74     		strb	r3, [r5, #19]
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
 7128              		.loc 1 2911 0
 7129 00b2 41F20602 		movw	r2, #4102
 7130 00b6 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 7131 00b8 23F02003 		bic	r3, r3, #32
 7132 00bc A354     		strb	r3, [r4, r2]
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
 7133              		.loc 1 2912 0
 7134 00be 04F58054 		add	r4, r4, #4096
 7135              	.LVL938:
 7136 00c2 2268     		ldr	r2, [r4]
 7137 00c4 41F20403 		movw	r3, #4100
 7138 00c8 0121     		movs	r1, #1
 7139 00ca D154     		strb	r1, [r2, r3]
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7140              		.loc 1 2913 0
 7141 00cc 2068     		ldr	r0, [r4]
 7142 00ce FFF7FEFF 		bl	sync_fs
 7143              	.LVL939:
 7144 00d2 0346     		mov	r3, r0
 7145              	.LVL940:
 7146 00d4 C2E7     		b	.L657
 7147              	.LVL941:
 7148              	.L659:
ARM GAS  /tmp/ccTBpncU.s 			page 221


2897:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 7149              		.loc 1 2897 0
 7150 00d6 0123     		movs	r3, #1
 7151 00d8 C0E7     		b	.L657
 7152              		.cfi_endproc
 7153              	.LFE109:
 7155              		.section	.text.f_close,"ax",%progbits
 7156              		.align	1
 7157              		.global	f_close
 7158              		.syntax unified
 7159              		.thumb
 7160              		.thumb_func
 7161              		.fpu softvfp
 7163              	f_close:
 7164              	.LFB110:
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7165              		.loc 1 2933 0
 7166              		.cfi_startproc
 7167              		@ args = 0, pretend = 0, frame = 0
 7168              		@ frame_needed = 0, uses_anonymous_args = 0
 7169              	.LVL942:
 7170 0000 10B5     		push	{r4, lr}
 7171              	.LCFI82:
 7172              		.cfi_def_cfa_offset 8
 7173              		.cfi_offset 4, -8
 7174              		.cfi_offset 14, -4
 7175 0002 0446     		mov	r4, r0
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 7176              		.loc 1 2938 0
 7177 0004 FFF7FEFF 		bl	f_sync
 7178              	.LVL943:
2939:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7179              		.loc 1 2939 0
 7180 0008 0346     		mov	r3, r0
 7181 000a 08B1     		cbz	r0, .L665
 7182              	.LVL944:
 7183              	.L663:
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7184              		.loc 1 2958 0
 7185 000c 1846     		mov	r0, r3
 7186 000e 10BD     		pop	{r4, pc}
 7187              	.LVL945:
 7188              	.L665:
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7189              		.loc 1 2942 0
 7190 0010 2046     		mov	r0, r4
 7191              	.LVL946:
 7192 0012 FFF7FEFF 		bl	validate
 7193              	.LVL947:
2943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 7194              		.loc 1 2943 0
 7195 0016 0346     		mov	r3, r0
 7196 0018 0028     		cmp	r0, #0
 7197 001a F7D1     		bne	.L663
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 7198              		.loc 1 2948 0
 7199 001c 41F22803 		movw	r3, #4136
ARM GAS  /tmp/ccTBpncU.s 			page 222


 7200 0020 E058     		ldr	r0, [r4, r3]
 7201              	.LVL948:
 7202 0022 FFF7FEFF 		bl	dec_lock
 7203              	.LVL949:
2949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7204              		.loc 1 2949 0
 7205 0026 0346     		mov	r3, r0
 7206 0028 0028     		cmp	r0, #0
 7207 002a EFD1     		bne	.L663
2951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 7208              		.loc 1 2951 0
 7209 002c 04F58054 		add	r4, r4, #4096
 7210              	.LVL950:
 7211 0030 0022     		movs	r2, #0
 7212 0032 2260     		str	r2, [r4]
 7213 0034 EAE7     		b	.L663
 7214              		.cfi_endproc
 7215              	.LFE110:
 7217              		.section	.text.f_lseek,"ax",%progbits
 7218              		.align	1
 7219              		.global	f_lseek
 7220              		.syntax unified
 7221              		.thumb
 7222              		.thumb_func
 7223              		.fpu softvfp
 7225              	f_lseek:
 7226              	.LFB111:
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7227              		.loc 1 3106 0
 7228              		.cfi_startproc
 7229              		@ args = 0, pretend = 0, frame = 0
 7230              		@ frame_needed = 0, uses_anonymous_args = 0
 7231              	.LVL951:
 7232 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7233              	.LCFI83:
 7234              		.cfi_def_cfa_offset 40
 7235              		.cfi_offset 3, -40
 7236              		.cfi_offset 4, -36
 7237              		.cfi_offset 5, -32
 7238              		.cfi_offset 6, -28
 7239              		.cfi_offset 7, -24
 7240              		.cfi_offset 8, -20
 7241              		.cfi_offset 9, -16
 7242              		.cfi_offset 10, -12
 7243              		.cfi_offset 11, -8
 7244              		.cfi_offset 14, -4
 7245 0004 0446     		mov	r4, r0
 7246 0006 0D46     		mov	r5, r1
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 7247              		.loc 1 3114 0
 7248 0008 FFF7FEFF 		bl	validate
 7249              	.LVL952:
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
 7250              		.loc 1 3115 0
 7251 000c 0646     		mov	r6, r0
 7252 000e 0028     		cmp	r0, #0
 7253 0010 40F0D281 		bne	.L667
ARM GAS  /tmp/ccTBpncU.s 			page 223


3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
 7254              		.loc 1 3116 0
 7255 0014 41F20703 		movw	r3, #4103
 7256 0018 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 7257 001a 002B     		cmp	r3, #0
 7258 001c 40F0CB81 		bne	.L701
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 7259              		.loc 1 3120 0
 7260 0020 41F22403 		movw	r3, #4132
 7261 0024 E358     		ldr	r3, [r4, r3]
 7262 0026 002B     		cmp	r3, #0
 7263 0028 00F0BD80 		beq	.L668
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 7264              		.loc 1 3121 0
 7265 002c B5F1FF3F 		cmp	r5, #-1
 7266 0030 60D0     		beq	.L709
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
 7267              		.loc 1 3147 0
 7268 0032 41F20C03 		movw	r3, #4108
 7269 0036 E758     		ldr	r7, [r4, r3]
 7270 0038 AF42     		cmp	r7, r5
 7271 003a 00D3     		bcc	.L676
 7272 003c 2F46     		mov	r7, r5
 7273              	.L676:
 7274              	.LVL953:
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 7275              		.loc 1 3149 0
 7276 003e 41F20803 		movw	r3, #4104
 7277 0042 E750     		str	r7, [r4, r3]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 7278              		.loc 1 3150 0
 7279 0044 002F     		cmp	r7, #0
 7280 0046 00F0B781 		beq	.L667
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
 7281              		.loc 1 3151 0
 7282 004a 7D1E     		subs	r5, r7, #1
 7283 004c 2946     		mov	r1, r5
 7284 004e 2046     		mov	r0, r4
 7285              	.LVL954:
 7286 0050 FFF7FEFF 		bl	clmt_clust
 7287              	.LVL955:
 7288 0054 0146     		mov	r1, r0
 7289 0056 41F21403 		movw	r3, #4116
 7290 005a E050     		str	r0, [r4, r3]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
 7291              		.loc 1 3152 0
 7292 005c 04F58053 		add	r3, r4, #4096
 7293 0060 D3F80080 		ldr	r8, [r3]
 7294 0064 4046     		mov	r0, r8
 7295 0066 FFF7FEFF 		bl	clust2sect
 7296              	.LVL956:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 7297              		.loc 1 3153 0
 7298 006a 0028     		cmp	r0, #0
 7299 006c 00F08D80 		beq	.L710
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
 7300              		.loc 1 3154 0
ARM GAS  /tmp/ccTBpncU.s 			page 224


 7301 0070 41F20A03 		movw	r3, #4106
 7302 0074 38F80320 		ldrh	r2, [r8, r3]
 7303 0078 B5FBF2F5 		udiv	r5, r5, r2
 7304 007c 41F20203 		movw	r3, #4098
 7305 0080 18F80330 		ldrb	r3, [r8, r3]	@ zero_extendqisi2
 7306 0084 013B     		subs	r3, r3, #1
 7307 0086 1D40     		ands	r5, r5, r3
 7308 0088 0544     		add	r5, r5, r0
 7309              	.LVL957:
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7310              		.loc 1 3155 0
 7311 008a B7FBF2F3 		udiv	r3, r7, r2
 7312 008e 02FB1377 		mls	r7, r2, r3, r7
 7313              	.LVL958:
 7314 0092 002F     		cmp	r7, #0
 7315 0094 00F09081 		beq	.L667
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7316              		.loc 1 3155 0 is_stmt 0 discriminator 1
 7317 0098 41F21803 		movw	r3, #4120
 7318 009c E258     		ldr	r2, [r4, r3]
 7319 009e AA42     		cmp	r2, r5
 7320 00a0 00F08A81 		beq	.L667
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 7321              		.loc 1 3158 0 is_stmt 1
 7322 00a4 41F20603 		movw	r3, #4102
 7323 00a8 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 7324 00aa 13F0400F 		tst	r3, #64
 7325 00ae 0FD0     		beq	.L678
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
 7326              		.loc 1 3159 0
 7327 00b0 0123     		movs	r3, #1
 7328 00b2 2146     		mov	r1, r4
 7329 00b4 41F20100 		movw	r0, #4097
 7330 00b8 18F80000 		ldrb	r0, [r8, r0]	@ zero_extendqisi2
 7331 00bc FFF7FEFF 		bl	disk_write
 7332              	.LVL959:
 7333 00c0 0028     		cmp	r0, #0
 7334 00c2 67D1     		bne	.L711
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7335              		.loc 1 3161 0
 7336 00c4 41F20602 		movw	r2, #4102
 7337 00c8 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 7338 00ca 23F04003 		bic	r3, r3, #64
 7339 00ce A354     		strb	r3, [r4, r2]
 7340              	.L678:
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 7341              		.loc 1 3164 0
 7342 00d0 04F58053 		add	r3, r4, #4096
 7343 00d4 1F68     		ldr	r7, [r3]
 7344 00d6 0123     		movs	r3, #1
 7345 00d8 2A46     		mov	r2, r5
 7346 00da 2146     		mov	r1, r4
 7347 00dc 41F20100 		movw	r0, #4097
 7348 00e0 385C     		ldrb	r0, [r7, r0]	@ zero_extendqisi2
 7349 00e2 FFF7FEFF 		bl	disk_read
 7350              	.LVL960:
 7351 00e6 0028     		cmp	r0, #0
ARM GAS  /tmp/ccTBpncU.s 			page 225


 7352 00e8 59D0     		beq	.L680
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7353              		.loc 1 3165 0
 7354 00ea 0126     		movs	r6, #1
 7355 00ec 41F20703 		movw	r3, #4103
 7356 00f0 E654     		strb	r6, [r4, r3]
 7357 00f2 61E1     		b	.L667
 7358              	.LVL961:
 7359              	.L709:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 7360              		.loc 1 3123 0
 7361 00f4 03F1040B 		add	fp, r3, #4
 7362              	.LVL962:
 7363 00f8 D3F800A0 		ldr	r10, [r3]
 7364              	.LVL963:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 7365              		.loc 1 3124 0
 7366 00fc 41F21003 		movw	r3, #4112
 7367 0100 54F80390 		ldr	r9, [r4, r3]
 7368              	.LVL964:
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 7369              		.loc 1 3125 0
 7370 0104 B9F1000F 		cmp	r9, #0
 7371 0108 31D0     		beq	.L702
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 7372              		.loc 1 3123 0
 7373 010a 4FF00208 		mov	r8, #2
 7374              	.LVL965:
 7375              	.L675:
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 7376              		.loc 1 3128 0
 7377 010e 08F10208 		add	r8, r8, #2
 7378              	.LVL966:
 7379 0112 4D46     		mov	r5, r9
 7380 0114 0027     		movs	r7, #0
 7381              	.LVL967:
 7382              	.L673:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
 7383              		.loc 1 3130 0
 7384 0116 0137     		adds	r7, r7, #1
 7385              	.LVL968:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 7386              		.loc 1 3131 0
 7387 0118 04F58053 		add	r3, r4, #4096
 7388 011c 2946     		mov	r1, r5
 7389 011e 1868     		ldr	r0, [r3]
 7390 0120 FFF7FEFF 		bl	get_fat
 7391              	.LVL969:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 7392              		.loc 1 3132 0
 7393 0124 0128     		cmp	r0, #1
 7394 0126 18D9     		bls	.L712
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 7395              		.loc 1 3133 0
 7396 0128 B0F1FF3F 		cmp	r0, #-1
 7397 012c 1AD0     		beq	.L713
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
ARM GAS  /tmp/ccTBpncU.s 			page 226


 7398              		.loc 1 3134 0
 7399 012e 6B1C     		adds	r3, r5, #1
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 7400              		.loc 1 3131 0
 7401 0130 0546     		mov	r5, r0
 7402              	.LVL970:
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 7403              		.loc 1 3134 0
 7404 0132 8342     		cmp	r3, r0
 7405 0134 EFD0     		beq	.L673
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 7406              		.loc 1 3135 0
 7407 0136 C245     		cmp	r10, r8
 7408 0138 05D3     		bcc	.L674
 7409              	.LVL971:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7410              		.loc 1 3136 0
 7411 013a 5B46     		mov	r3, fp
 7412              	.LVL972:
 7413 013c 43F8087B 		str	r7, [r3], #8
 7414              	.LVL973:
 7415 0140 CBF80490 		str	r9, [fp, #4]
 7416 0144 9B46     		mov	fp, r3
 7417              	.LVL974:
 7418              	.L674:
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7419              		.loc 1 3138 0
 7420 0146 04F58053 		add	r3, r4, #4096
 7421 014a 1A68     		ldr	r2, [r3]
 7422 014c 41F21403 		movw	r3, #4116
 7423 0150 D358     		ldr	r3, [r2, r3]
 7424 0152 8342     		cmp	r3, r0
 7425 0154 0DD9     		bls	.L670
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 7426              		.loc 1 3131 0
 7427 0156 8146     		mov	r9, r0
 7428              	.LVL975:
 7429 0158 D9E7     		b	.L675
 7430              	.LVL976:
 7431              	.L712:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 7432              		.loc 1 3132 0 discriminator 1
 7433 015a 0226     		movs	r6, #2
 7434 015c 41F20703 		movw	r3, #4103
 7435 0160 E654     		strb	r6, [r4, r3]
 7436 0162 29E1     		b	.L667
 7437              	.L713:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 7438              		.loc 1 3133 0 discriminator 1
 7439 0164 0126     		movs	r6, #1
 7440 0166 41F20703 		movw	r3, #4103
 7441 016a E654     		strb	r6, [r4, r3]
 7442 016c 24E1     		b	.L667
 7443              	.LVL977:
 7444              	.L702:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 7445              		.loc 1 3123 0
ARM GAS  /tmp/ccTBpncU.s 			page 227


 7446 016e 4FF00208 		mov	r8, #2
 7447              	.LVL978:
 7448              	.L670:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
 7449              		.loc 1 3140 0
 7450 0172 41F22403 		movw	r3, #4132
 7451 0176 E358     		ldr	r3, [r4, r3]
 7452 0178 C3F80080 		str	r8, [r3]
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 7453              		.loc 1 3141 0
 7454 017c D045     		cmp	r8, r10
 7455 017e 00F21E81 		bhi	.L704
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
 7456              		.loc 1 3142 0
 7457 0182 0023     		movs	r3, #0
 7458 0184 CBF80030 		str	r3, [fp]
 7459 0188 16E1     		b	.L667
 7460              	.LVL979:
 7461              	.L710:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 7462              		.loc 1 3153 0 discriminator 1
 7463 018a 0226     		movs	r6, #2
 7464 018c 41F20703 		movw	r3, #4103
 7465 0190 E654     		strb	r6, [r4, r3]
 7466 0192 11E1     		b	.L667
 7467              	.LVL980:
 7468              	.L711:
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
 7469              		.loc 1 3160 0
 7470 0194 0126     		movs	r6, #1
 7471 0196 41F20703 		movw	r3, #4103
 7472 019a E654     		strb	r6, [r4, r3]
 7473 019c 0CE1     		b	.L667
 7474              	.L680:
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7475              		.loc 1 3167 0
 7476 019e 41F21803 		movw	r3, #4120
 7477 01a2 E550     		str	r5, [r4, r3]
 7478 01a4 08E1     		b	.L667
 7479              	.LVL981:
 7480              	.L668:
3176:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 7481              		.loc 1 3176 0
 7482 01a6 41F20C03 		movw	r3, #4108
 7483 01aa E358     		ldr	r3, [r4, r3]
 7484 01ac AB42     		cmp	r3, r5
 7485 01ae 06D2     		bcs	.L681
3178:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7486              		.loc 1 3178 0
 7487 01b0 41F20602 		movw	r2, #4102
 7488 01b4 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 7489 01b6 12F0020F 		tst	r2, #2
 7490 01ba 00D1     		bne	.L681
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7491              		.loc 1 3180 0
 7492 01bc 1D46     		mov	r5, r3
 7493              	.LVL982:
ARM GAS  /tmp/ccTBpncU.s 			page 228


 7494              	.L681:
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 7495              		.loc 1 3182 0
 7496 01be 41F20803 		movw	r3, #4104
 7497 01c2 E258     		ldr	r2, [r4, r3]
 7498              	.LVL983:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 7499              		.loc 1 3183 0
 7500 01c4 0021     		movs	r1, #0
 7501 01c6 E150     		str	r1, [r4, r3]
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 7502              		.loc 1 3184 0
 7503 01c8 65B3     		cbz	r5, .L682
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 7504              		.loc 1 3185 0
 7505 01ca 04F58053 		add	r3, r4, #4096
 7506 01ce 1868     		ldr	r0, [r3]
 7507              	.LVL984:
 7508 01d0 41F20203 		movw	r3, #4098
 7509 01d4 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 7510 01d6 41F20A01 		movw	r1, #4106
 7511 01da 30F80180 		ldrh	r8, [r0, r1]
 7512 01de 08FB03F8 		mul	r8, r8, r3
 7513              	.LVL985:
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 7514              		.loc 1 3186 0
 7515 01e2 92B1     		cbz	r2, .L683
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 7516              		.loc 1 3187 0 discriminator 1
 7517 01e4 6B1E     		subs	r3, r5, #1
 7518 01e6 B3FBF8F3 		udiv	r3, r3, r8
 7519 01ea 013A     		subs	r2, r2, #1
 7520              	.LVL986:
 7521 01ec B2FBF8F1 		udiv	r1, r2, r8
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 7522              		.loc 1 3186 0 discriminator 1
 7523 01f0 8B42     		cmp	r3, r1
 7524 01f2 0AD3     		bcc	.L683
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 7525              		.loc 1 3188 0
 7526 01f4 C8F10007 		rsb	r7, r8, #0
 7527 01f8 1740     		ands	r7, r7, r2
 7528 01fa 41F20803 		movw	r3, #4104
 7529 01fe E750     		str	r7, [r4, r3]
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 7530              		.loc 1 3189 0
 7531 0200 EF1B     		subs	r7, r5, r7
 7532              	.LVL987:
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 7533              		.loc 1 3190 0
 7534 0202 41F21403 		movw	r3, #4116
 7535 0206 E558     		ldr	r5, [r4, r3]
 7536              	.LVL988:
 7537 0208 09E0     		b	.L684
 7538              	.LVL989:
 7539              	.L683:
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
ARM GAS  /tmp/ccTBpncU.s 			page 229


 7540              		.loc 1 3192 0
 7541 020a 41F21003 		movw	r3, #4112
 7542 020e E358     		ldr	r3, [r4, r3]
 7543              	.LVL990:
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
 7544              		.loc 1 3194 0
 7545 0210 002B     		cmp	r3, #0
 7546 0212 54D0     		beq	.L714
 7547              	.L685:
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7548              		.loc 1 3201 0
 7549 0214 41F21402 		movw	r2, #4116
 7550 0218 A350     		str	r3, [r4, r2]
 7551 021a 2F46     		mov	r7, r5
 7552 021c 1D46     		mov	r5, r3
 7553              	.LVL991:
 7554              	.L684:
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 7555              		.loc 1 3203 0
 7556 021e 002D     		cmp	r5, #0
 7557 0220 40F08280 		bne	.L688
 7558              	.LVL992:
 7559              	.L682:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7560              		.loc 1 3228 0
 7561 0224 41F20803 		movw	r3, #4104
 7562 0228 E158     		ldr	r1, [r4, r3]
 7563 022a 04F58053 		add	r3, r4, #4096
 7564 022e 1868     		ldr	r0, [r3]
 7565 0230 41F20A03 		movw	r3, #4106
 7566 0234 C25A     		ldrh	r2, [r0, r3]
 7567 0236 B1FBF2F3 		udiv	r3, r1, r2
 7568 023a 02FB1313 		mls	r3, r2, r3, r1
 7569 023e 5BB3     		cbz	r3, .L697
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7570              		.loc 1 3228 0 is_stmt 0 discriminator 1
 7571 0240 41F21803 		movw	r3, #4120
 7572 0244 E258     		ldr	r2, [r4, r3]
 7573 0246 AA42     		cmp	r2, r5
 7574 0248 26D0     		beq	.L697
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 7575              		.loc 1 3231 0 is_stmt 1
 7576 024a 41F20603 		movw	r3, #4102
 7577 024e E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 7578 0250 13F0400F 		tst	r3, #64
 7579 0254 0FD0     		beq	.L698
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 7580              		.loc 1 3232 0
 7581 0256 0123     		movs	r3, #1
 7582 0258 2146     		mov	r1, r4
 7583 025a 41F20107 		movw	r7, #4097
 7584 025e C05D     		ldrb	r0, [r0, r7]	@ zero_extendqisi2
 7585 0260 FFF7FEFF 		bl	disk_write
 7586              	.LVL993:
 7587 0264 0028     		cmp	r0, #0
 7588 0266 40F09C80 		bne	.L715
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccTBpncU.s 			page 230


 7589              		.loc 1 3234 0
 7590 026a 41F20602 		movw	r2, #4102
 7591 026e A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 7592 0270 23F04003 		bic	r3, r3, #64
 7593 0274 A354     		strb	r3, [r4, r2]
 7594              	.L698:
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 7595              		.loc 1 3237 0
 7596 0276 04F58053 		add	r3, r4, #4096
 7597 027a 1F68     		ldr	r7, [r3]
 7598 027c 0123     		movs	r3, #1
 7599 027e 2A46     		mov	r2, r5
 7600 0280 2146     		mov	r1, r4
 7601 0282 41F20100 		movw	r0, #4097
 7602 0286 385C     		ldrb	r0, [r7, r0]	@ zero_extendqisi2
 7603 0288 FFF7FEFF 		bl	disk_read
 7604              	.LVL994:
 7605 028c 0028     		cmp	r0, #0
 7606 028e 40F08D80 		bne	.L716
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7607              		.loc 1 3240 0
 7608 0292 41F21803 		movw	r3, #4120
 7609 0296 E550     		str	r5, [r4, r3]
 7610              	.L697:
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
 7611              		.loc 1 3243 0
 7612 0298 41F20803 		movw	r3, #4104
 7613 029c E358     		ldr	r3, [r4, r3]
 7614 029e 41F20C02 		movw	r2, #4108
 7615 02a2 A258     		ldr	r2, [r4, r2]
 7616 02a4 9342     		cmp	r3, r2
 7617 02a6 40F28780 		bls	.L667
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 7618              		.loc 1 3244 0
 7619 02aa 41F20C02 		movw	r2, #4108
 7620 02ae A350     		str	r3, [r4, r2]
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7621              		.loc 1 3245 0
 7622 02b0 41F20602 		movw	r2, #4102
 7623 02b4 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 7624 02b6 43F02003 		orr	r3, r3, #32
 7625 02ba A354     		strb	r3, [r4, r2]
 7626 02bc 7CE0     		b	.L667
 7627              	.LVL995:
 7628              	.L714:
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 7629              		.loc 1 3195 0
 7630 02be 0021     		movs	r1, #0
 7631 02c0 FFF7FEFF 		bl	create_chain
 7632              	.LVL996:
 7633 02c4 0346     		mov	r3, r0
 7634              	.LVL997:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 7635              		.loc 1 3196 0
 7636 02c6 0128     		cmp	r0, #1
 7637 02c8 06D0     		beq	.L717
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
ARM GAS  /tmp/ccTBpncU.s 			page 231


 7638              		.loc 1 3197 0
 7639 02ca B0F1FF3F 		cmp	r0, #-1
 7640 02ce 08D0     		beq	.L718
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7641              		.loc 1 3198 0
 7642 02d0 41F21002 		movw	r2, #4112
 7643 02d4 A050     		str	r0, [r4, r2]
 7644 02d6 9DE7     		b	.L685
 7645              	.L717:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 7646              		.loc 1 3196 0 discriminator 1
 7647 02d8 0226     		movs	r6, #2
 7648 02da 41F20703 		movw	r3, #4103
 7649 02de E654     		strb	r6, [r4, r3]
 7650 02e0 6AE0     		b	.L667
 7651              	.L718:
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 7652              		.loc 1 3197 0 discriminator 1
 7653 02e2 0126     		movs	r6, #1
 7654 02e4 41F20703 		movw	r3, #4103
 7655 02e8 E654     		strb	r6, [r4, r3]
 7656 02ea 65E0     		b	.L667
 7657              	.LVL998:
 7658              	.L689:
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 7659              		.loc 1 3213 0
 7660 02ec 04F58053 		add	r3, r4, #4096
 7661 02f0 2946     		mov	r1, r5
 7662 02f2 1868     		ldr	r0, [r3]
 7663 02f4 FFF7FEFF 		bl	get_fat
 7664              	.LVL999:
 7665 02f8 0546     		mov	r5, r0
 7666              	.LVL1000:
 7667              	.L691:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 7668              		.loc 1 3214 0
 7669 02fa B5F1FF3F 		cmp	r5, #-1
 7670 02fe 3FD0     		beq	.L719
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 7671              		.loc 1 3215 0
 7672 0300 012D     		cmp	r5, #1
 7673 0302 42D9     		bls	.L693
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 7674              		.loc 1 3215 0 is_stmt 0 discriminator 2
 7675 0304 04F58053 		add	r3, r4, #4096
 7676 0308 1A68     		ldr	r2, [r3]
 7677 030a 41F21403 		movw	r3, #4116
 7678 030e D358     		ldr	r3, [r2, r3]
 7679 0310 AB42     		cmp	r3, r5
 7680 0312 3AD9     		bls	.L693
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
 7681              		.loc 1 3216 0 is_stmt 1
 7682 0314 41F21403 		movw	r3, #4116
 7683 0318 E550     		str	r5, [r4, r3]
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
 7684              		.loc 1 3217 0
 7685 031a 41F20802 		movw	r2, #4104
ARM GAS  /tmp/ccTBpncU.s 			page 232


 7686 031e A358     		ldr	r3, [r4, r2]
 7687 0320 4344     		add	r3, r3, r8
 7688 0322 A350     		str	r3, [r4, r2]
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7689              		.loc 1 3218 0
 7690 0324 A7EB0807 		sub	r7, r7, r8
 7691              	.LVL1001:
 7692              	.L688:
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 7693              		.loc 1 3204 0
 7694 0328 4745     		cmp	r7, r8
 7695 032a 0FD9     		bls	.L690
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 7696              		.loc 1 3206 0
 7697 032c 41F20603 		movw	r3, #4102
 7698 0330 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 7699 0332 13F0020F 		tst	r3, #2
 7700 0336 D9D0     		beq	.L689
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 7701              		.loc 1 3207 0
 7702 0338 04F58053 		add	r3, r4, #4096
 7703 033c 2946     		mov	r1, r5
 7704 033e 1868     		ldr	r0, [r3]
 7705 0340 FFF7FEFF 		bl	create_chain
 7706              	.LVL1002:
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
 7707              		.loc 1 3208 0
 7708 0344 0546     		mov	r5, r0
 7709 0346 0028     		cmp	r0, #0
 7710 0348 D7D1     		bne	.L691
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7711              		.loc 1 3209 0
 7712 034a 4746     		mov	r7, r8
 7713              	.LVL1003:
 7714              	.L690:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
 7715              		.loc 1 3220 0
 7716 034c 41F20802 		movw	r2, #4104
 7717 0350 A358     		ldr	r3, [r4, r2]
 7718 0352 3B44     		add	r3, r3, r7
 7719 0354 A350     		str	r3, [r4, r2]
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 7720              		.loc 1 3221 0
 7721 0356 04F58053 		add	r3, r4, #4096
 7722 035a 1868     		ldr	r0, [r3]
 7723 035c 41F20A03 		movw	r3, #4106
 7724 0360 30F80380 		ldrh	r8, [r0, r3]
 7725              	.LVL1004:
 7726 0364 B7FBF8F3 		udiv	r3, r7, r8
 7727 0368 08FB1373 		mls	r3, r8, r3, r7
 7728 036c BBB1     		cbz	r3, .L707
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 7729              		.loc 1 3222 0
 7730 036e 2946     		mov	r1, r5
 7731 0370 FFF7FEFF 		bl	clust2sect
 7732              	.LVL1005:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
ARM GAS  /tmp/ccTBpncU.s 			page 233


 7733              		.loc 1 3223 0
 7734 0374 0546     		mov	r5, r0
 7735              	.LVL1006:
 7736 0376 68B1     		cbz	r0, .L720
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7737              		.loc 1 3224 0
 7738 0378 B7FBF8F7 		udiv	r7, r7, r8
 7739              	.LVL1007:
 7740 037c 3D44     		add	r5, r5, r7
 7741              	.LVL1008:
 7742 037e 51E7     		b	.L682
 7743              	.LVL1009:
 7744              	.L719:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 7745              		.loc 1 3214 0 discriminator 1
 7746 0380 0126     		movs	r6, #1
 7747 0382 41F20703 		movw	r3, #4103
 7748 0386 E654     		strb	r6, [r4, r3]
 7749 0388 16E0     		b	.L667
 7750              	.L693:
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 7751              		.loc 1 3215 0 discriminator 3
 7752 038a 0226     		movs	r6, #2
 7753 038c 41F20703 		movw	r3, #4103
 7754 0390 E654     		strb	r6, [r4, r3]
 7755 0392 11E0     		b	.L667
 7756              	.LVL1010:
 7757              	.L720:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 7758              		.loc 1 3223 0 discriminator 1
 7759 0394 0226     		movs	r6, #2
 7760 0396 41F20703 		movw	r3, #4103
 7761 039a E654     		strb	r6, [r4, r3]
 7762 039c 0CE0     		b	.L667
 7763              	.LVL1011:
 7764              	.L707:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 7765              		.loc 1 3183 0
 7766 039e 0025     		movs	r5, #0
 7767              	.LVL1012:
 7768 03a0 40E7     		b	.L682
 7769              	.LVL1013:
 7770              	.L715:
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 7771              		.loc 1 3233 0
 7772 03a2 0126     		movs	r6, #1
 7773 03a4 41F20703 		movw	r3, #4103
 7774 03a8 E654     		strb	r6, [r4, r3]
 7775 03aa 05E0     		b	.L667
 7776              	.L716:
3238:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7777              		.loc 1 3238 0
 7778 03ac 0126     		movs	r6, #1
 7779 03ae 41F20703 		movw	r3, #4103
 7780 03b2 E654     		strb	r6, [r4, r3]
 7781 03b4 00E0     		b	.L667
 7782              	.LVL1014:
ARM GAS  /tmp/ccTBpncU.s 			page 234


 7783              	.L701:
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7784              		.loc 1 3117 0
 7785 03b6 1E46     		mov	r6, r3
 7786              	.LVL1015:
 7787              	.L667:
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7788              		.loc 1 3251 0
 7789 03b8 3046     		mov	r0, r6
 7790 03ba BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7791              	.LVL1016:
 7792              	.L704:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7793              		.loc 1 3144 0
 7794 03be 1126     		movs	r6, #17
 7795 03c0 FAE7     		b	.L667
 7796              		.cfi_endproc
 7797              	.LFE111:
 7799              		.section	.text.f_opendir,"ax",%progbits
 7800              		.align	1
 7801              		.global	f_opendir
 7802              		.syntax unified
 7803              		.thumb
 7804              		.thumb_func
 7805              		.fpu softvfp
 7807              	f_opendir:
 7808              	.LFB112:
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7809              		.loc 1 3264 0
 7810              		.cfi_startproc
 7811              		@ args = 0, pretend = 0, frame = 24
 7812              		@ frame_needed = 0, uses_anonymous_args = 0
 7813              	.LVL1017:
 7814 0000 30B5     		push	{r4, r5, lr}
 7815              	.LCFI84:
 7816              		.cfi_def_cfa_offset 12
 7817              		.cfi_offset 4, -12
 7818              		.cfi_offset 5, -8
 7819              		.cfi_offset 14, -4
 7820 0002 87B0     		sub	sp, sp, #28
 7821              	.LCFI85:
 7822              		.cfi_def_cfa_offset 40
 7823 0004 0191     		str	r1, [sp, #4]
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7824              		.loc 1 3270 0
 7825 0006 0028     		cmp	r0, #0
 7826 0008 54D0     		beq	.L728
 7827 000a 0446     		mov	r4, r0
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7828              		.loc 1 3273 0
 7829 000c 0022     		movs	r2, #0
 7830 000e 01A9     		add	r1, sp, #4
 7831              	.LVL1018:
 7832 0010 05A8     		add	r0, sp, #20
 7833              	.LVL1019:
 7834 0012 FFF7FEFF 		bl	find_volume
 7835              	.LVL1020:
ARM GAS  /tmp/ccTBpncU.s 			page 235


3274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
 7836              		.loc 1 3274 0
 7837 0016 0546     		mov	r5, r0
 7838 0018 38B1     		cbz	r0, .L733
 7839              	.L723:
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7840              		.loc 1 3304 0
 7841 001a 1DB1     		cbz	r5, .L722
 7842              	.L727:
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7843              		.loc 1 3304 0 is_stmt 0 discriminator 1
 7844 001c 04F58054 		add	r4, r4, #4096
 7845              	.LVL1021:
 7846 0020 0023     		movs	r3, #0
 7847 0022 2360     		str	r3, [r4]
 7848              	.LVL1022:
 7849              	.L722:
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7850              		.loc 1 3307 0 is_stmt 1
 7851 0024 2846     		mov	r0, r5
 7852 0026 07B0     		add	sp, sp, #28
 7853              	.LCFI86:
 7854              		.cfi_remember_state
 7855              		.cfi_def_cfa_offset 12
 7856              		@ sp needed
 7857 0028 30BD     		pop	{r4, r5, pc}
 7858              	.LVL1023:
 7859              	.L733:
 7860              	.LCFI87:
 7861              		.cfi_restore_state
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
 7862              		.loc 1 3275 0
 7863 002a 04F58053 		add	r3, r4, #4096
 7864 002e 059A     		ldr	r2, [sp, #20]
 7865 0030 1A60     		str	r2, [r3]
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 7866              		.loc 1 3276 0
 7867 0032 41F21803 		movw	r3, #4120
 7868 0036 02AA     		add	r2, sp, #8
 7869 0038 E250     		str	r2, [r4, r3]
 7870 003a 04F58153 		add	r3, r4, #4128
 7871 003e 1E4A     		ldr	r2, .L735
 7872 0040 1A60     		str	r2, [r3]
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7873              		.loc 1 3277 0
 7874 0042 0199     		ldr	r1, [sp, #4]
 7875 0044 2046     		mov	r0, r4
 7876 0046 FFF7FEFF 		bl	follow_path
 7877              	.LVL1024:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
 7878              		.loc 1 3279 0
 7879 004a 0546     		mov	r5, r0
 7880 004c 70BB     		cbnz	r0, .L724
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
 7881              		.loc 1 3280 0
 7882 004e 41F21403 		movw	r3, #4116
 7883 0052 E158     		ldr	r1, [r4, r3]
ARM GAS  /tmp/ccTBpncU.s 			page 236


 7884 0054 49B1     		cbz	r1, .L725
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
 7885              		.loc 1 3281 0
 7886 0056 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 7887 0058 13F0100F 		tst	r3, #16
 7888 005c 25D0     		beq	.L729
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
 7889              		.loc 1 3282 0
 7890 005e 0598     		ldr	r0, [sp, #20]
 7891 0060 FFF7FEFF 		bl	ld_clust
 7892              	.LVL1025:
 7893 0064 41F20803 		movw	r3, #4104
 7894 0068 E050     		str	r0, [r4, r3]
 7895              	.L725:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 7896              		.loc 1 3287 0
 7897 006a 059A     		ldr	r2, [sp, #20]
 7898 006c 41F20603 		movw	r3, #4102
 7899 0070 D25A     		ldrh	r2, [r2, r3]
 7900 0072 41F20403 		movw	r3, #4100
 7901 0076 E252     		strh	r2, [r4, r3]	@ movhi
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 7902              		.loc 1 3288 0
 7903 0078 0021     		movs	r1, #0
 7904 007a 2046     		mov	r0, r4
 7905 007c FFF7FEFF 		bl	dir_sdi
 7906              	.LVL1026:
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
 7907              		.loc 1 3290 0
 7908 0080 0546     		mov	r5, r0
 7909 0082 98B9     		cbnz	r0, .L724
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 7910              		.loc 1 3291 0
 7911 0084 41F20803 		movw	r3, #4104
 7912 0088 E358     		ldr	r3, [r4, r3]
 7913 008a 23B9     		cbnz	r3, .L734
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7914              		.loc 1 3296 0
 7915 008c 41F21C03 		movw	r3, #4124
 7916 0090 0022     		movs	r2, #0
 7917 0092 E250     		str	r2, [r4, r3]
 7918 0094 0AE0     		b	.L724
 7919              	.L734:
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
 7920              		.loc 1 3292 0
 7921 0096 0021     		movs	r1, #0
 7922 0098 2046     		mov	r0, r4
 7923 009a FFF7FEFF 		bl	inc_lock
 7924              	.LVL1027:
 7925 009e 41F21C03 		movw	r3, #4124
 7926 00a2 E050     		str	r0, [r4, r3]
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
 7927              		.loc 1 3293 0
 7928 00a4 10B9     		cbnz	r0, .L724
 7929              	.LVL1028:
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 7930              		.loc 1 3294 0
ARM GAS  /tmp/ccTBpncU.s 			page 237


 7931 00a6 1225     		movs	r5, #18
 7932 00a8 B7E7     		b	.L723
 7933              	.LVL1029:
 7934              	.L729:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7935              		.loc 1 3284 0
 7936 00aa 0525     		movs	r5, #5
 7937              	.LVL1030:
 7938              	.L724:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7939              		.loc 1 3302 0
 7940 00ac 042D     		cmp	r5, #4
 7941 00ae B4D1     		bne	.L723
 7942              	.LVL1031:
 7943 00b0 0525     		movs	r5, #5
 7944 00b2 B3E7     		b	.L727
 7945              	.LVL1032:
 7946              	.L728:
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7947              		.loc 1 3270 0
 7948 00b4 0925     		movs	r5, #9
 7949 00b6 B5E7     		b	.L722
 7950              	.L736:
 7951              		.align	2
 7952              	.L735:
 7953 00b8 00000000 		.word	.LANCHOR5
 7954              		.cfi_endproc
 7955              	.LFE112:
 7957              		.section	.text.f_closedir,"ax",%progbits
 7958              		.align	1
 7959              		.global	f_closedir
 7960              		.syntax unified
 7961              		.thumb
 7962              		.thumb_func
 7963              		.fpu softvfp
 7965              	f_closedir:
 7966              	.LFB113:
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7967              		.loc 1 3319 0
 7968              		.cfi_startproc
 7969              		@ args = 0, pretend = 0, frame = 0
 7970              		@ frame_needed = 0, uses_anonymous_args = 0
 7971              	.LVL1033:
 7972 0000 10B5     		push	{r4, lr}
 7973              	.LCFI88:
 7974              		.cfi_def_cfa_offset 8
 7975              		.cfi_offset 4, -8
 7976              		.cfi_offset 14, -4
 7977 0002 0446     		mov	r4, r0
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7978              		.loc 1 3323 0
 7979 0004 FFF7FEFF 		bl	validate
 7980              	.LVL1034:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 7981              		.loc 1 3324 0
 7982 0008 0346     		mov	r3, r0
 7983 000a 40B9     		cbnz	r0, .L738
ARM GAS  /tmp/ccTBpncU.s 			page 238


3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
 7984              		.loc 1 3329 0
 7985 000c 41F21C02 		movw	r2, #4124
 7986 0010 A058     		ldr	r0, [r4, r2]
 7987              	.LVL1035:
 7988 0012 30B9     		cbnz	r0, .L741
 7989              	.L739:
 7990              	.LVL1036:
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7991              		.loc 1 3331 0
 7992 0014 1BB9     		cbnz	r3, .L738
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 7993              		.loc 1 3333 0
 7994 0016 04F58054 		add	r4, r4, #4096
 7995              	.LVL1037:
 7996 001a 0022     		movs	r2, #0
 7997 001c 2260     		str	r2, [r4]
 7998              	.LVL1038:
 7999              	.L738:
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8000              		.loc 1 3339 0
 8001 001e 1846     		mov	r0, r3
 8002 0020 10BD     		pop	{r4, pc}
 8003              	.LVL1039:
 8004              	.L741:
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
 8005              		.loc 1 3330 0
 8006 0022 FFF7FEFF 		bl	dec_lock
 8007              	.LVL1040:
 8008 0026 0346     		mov	r3, r0
 8009              	.LVL1041:
 8010 0028 F4E7     		b	.L739
 8011              		.cfi_endproc
 8012              	.LFE113:
 8014              		.section	.text.f_readdir,"ax",%progbits
 8015              		.align	1
 8016              		.global	f_readdir
 8017              		.syntax unified
 8018              		.thumb
 8019              		.thumb_func
 8020              		.fpu softvfp
 8022              	f_readdir:
 8023              	.LFB114:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8024              		.loc 1 3352 0
 8025              		.cfi_startproc
 8026              		@ args = 0, pretend = 0, frame = 16
 8027              		@ frame_needed = 0, uses_anonymous_args = 0
 8028              	.LVL1042:
 8029 0000 70B5     		push	{r4, r5, r6, lr}
 8030              	.LCFI89:
 8031              		.cfi_def_cfa_offset 16
 8032              		.cfi_offset 4, -16
 8033              		.cfi_offset 5, -12
 8034              		.cfi_offset 6, -8
 8035              		.cfi_offset 14, -4
 8036 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccTBpncU.s 			page 239


 8037              	.LCFI90:
 8038              		.cfi_def_cfa_offset 32
 8039 0004 0446     		mov	r4, r0
 8040 0006 0E46     		mov	r6, r1
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8041              		.loc 1 3357 0
 8042 0008 FFF7FEFF 		bl	validate
 8043              	.LVL1043:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 8044              		.loc 1 3358 0
 8045 000c 0546     		mov	r5, r0
 8046 000e D0B9     		cbnz	r0, .L743
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 8047              		.loc 1 3359 0
 8048 0010 E6B1     		cbz	r6, .L750
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 8049              		.loc 1 3362 0
 8050 0012 41F21803 		movw	r3, #4120
 8051 0016 01AA     		add	r2, sp, #4
 8052 0018 E250     		str	r2, [r4, r3]
 8053 001a 04F58153 		add	r3, r4, #4128
 8054 001e 144A     		ldr	r2, .L753
 8055 0020 1A60     		str	r2, [r3]
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 8056              		.loc 1 3363 0
 8057 0022 0021     		movs	r1, #0
 8058 0024 2046     		mov	r0, r4
 8059              	.LVL1044:
 8060 0026 FFF7FEFF 		bl	dir_read
 8061              	.LVL1045:
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
 8062              		.loc 1 3364 0
 8063 002a 0428     		cmp	r0, #4
 8064 002c 14D0     		beq	.L751
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 8065              		.loc 1 3368 0
 8066 002e E8B9     		cbnz	r0, .L747
 8067              	.LVL1046:
 8068              	.L746:
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 8069              		.loc 1 3369 0
 8070 0030 3146     		mov	r1, r6
 8071 0032 2046     		mov	r0, r4
 8072 0034 FFF7FEFF 		bl	get_fileinfo
 8073              	.LVL1047:
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 8074              		.loc 1 3370 0
 8075 0038 0021     		movs	r1, #0
 8076 003a 2046     		mov	r0, r4
 8077 003c FFF7FEFF 		bl	dir_next
 8078              	.LVL1048:
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
 8079              		.loc 1 3371 0
 8080 0040 0428     		cmp	r0, #4
 8081 0042 0ED0     		beq	.L752
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 8082              		.loc 1 3370 0
ARM GAS  /tmp/ccTBpncU.s 			page 240


 8083 0044 0546     		mov	r5, r0
 8084              	.LVL1049:
 8085              	.L743:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8086              		.loc 1 3381 0
 8087 0046 2846     		mov	r0, r5
 8088 0048 04B0     		add	sp, sp, #16
 8089              	.LCFI91:
 8090              		.cfi_remember_state
 8091              		.cfi_def_cfa_offset 16
 8092              		@ sp needed
 8093 004a 70BD     		pop	{r4, r5, r6, pc}
 8094              	.LVL1050:
 8095              	.L750:
 8096              	.LCFI92:
 8097              		.cfi_restore_state
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8098              		.loc 1 3360 0
 8099 004c 0021     		movs	r1, #0
 8100 004e 2046     		mov	r0, r4
 8101              	.LVL1051:
 8102 0050 FFF7FEFF 		bl	dir_sdi
 8103              	.LVL1052:
 8104 0054 0546     		mov	r5, r0
 8105              	.LVL1053:
 8106 0056 F6E7     		b	.L743
 8107              	.LVL1054:
 8108              	.L751:
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 8109              		.loc 1 3365 0
 8110 0058 41F21003 		movw	r3, #4112
 8111 005c 0022     		movs	r2, #0
 8112 005e E250     		str	r2, [r4, r3]
 8113              	.LVL1055:
 8114 0060 E6E7     		b	.L746
 8115              	.LVL1056:
 8116              	.L752:
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
 8117              		.loc 1 3372 0
 8118 0062 41F21003 		movw	r3, #4112
 8119 0066 0022     		movs	r2, #0
 8120 0068 E250     		str	r2, [r4, r3]
 8121              	.LVL1057:
 8122 006a ECE7     		b	.L743
 8123              	.LVL1058:
 8124              	.L747:
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 8125              		.loc 1 3363 0
 8126 006c 0546     		mov	r5, r0
 8127 006e EAE7     		b	.L743
 8128              	.L754:
 8129              		.align	2
 8130              	.L753:
 8131 0070 00000000 		.word	.LANCHOR5
 8132              		.cfi_endproc
 8133              	.LFE114:
 8135              		.section	.text.f_stat,"ax",%progbits
ARM GAS  /tmp/ccTBpncU.s 			page 241


 8136              		.align	1
 8137              		.global	f_stat
 8138              		.syntax unified
 8139              		.thumb
 8140              		.thumb_func
 8141              		.fpu softvfp
 8143              	f_stat:
 8144              	.LFB115:
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8145              		.loc 1 3446 0
 8146              		.cfi_startproc
 8147              		@ args = 0, pretend = 0, frame = 4160
 8148              		@ frame_needed = 0, uses_anonymous_args = 0
 8149              	.LVL1059:
 8150 0000 30B5     		push	{r4, r5, lr}
 8151              	.LCFI93:
 8152              		.cfi_def_cfa_offset 12
 8153              		.cfi_offset 4, -12
 8154              		.cfi_offset 5, -8
 8155              		.cfi_offset 14, -4
 8156 0002 ADF5825D 		sub	sp, sp, #4160
 8157              	.LCFI94:
 8158              		.cfi_def_cfa_offset 4172
 8159 0006 81B0     		sub	sp, sp, #4
 8160              	.LCFI95:
 8161              		.cfi_def_cfa_offset 4176
 8162 0008 0190     		str	r0, [sp, #4]
 8163 000a 0D46     		mov	r5, r1
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8164              		.loc 1 3453 0
 8165 000c 0022     		movs	r2, #0
 8166 000e 08AB     		add	r3, sp, #32
 8167 0010 01A9     		add	r1, sp, #4
 8168              	.LVL1060:
 8169 0012 03F6F870 		addw	r0, r3, #4088
 8170              	.LVL1061:
 8171 0016 FFF7FEFF 		bl	find_volume
 8172              	.LVL1062:
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 8173              		.loc 1 3454 0
 8174 001a 0446     		mov	r4, r0
 8175 001c 20B1     		cbz	r0, .L759
 8176              	.LVL1063:
 8177              	.L756:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8178              		.loc 1 3468 0
 8179 001e 2046     		mov	r0, r4
 8180 0020 0DF5825D 		add	sp, sp, #4160
 8181 0024 01B0     		add	sp, sp, #4
 8182              	.LCFI96:
 8183              		.cfi_remember_state
 8184              		.cfi_def_cfa_offset 12
 8185              		@ sp needed
 8186 0026 30BD     		pop	{r4, r5, pc}
 8187              	.LVL1064:
 8188              	.L759:
 8189              	.LCFI97:
ARM GAS  /tmp/ccTBpncU.s 			page 242


 8190              		.cfi_restore_state
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8191              		.loc 1 3455 0
 8192 0028 08AB     		add	r3, sp, #32
 8193 002a 06A8     		add	r0, sp, #24
 8194              	.LVL1065:
 8195 002c A3F11402 		sub	r2, r3, #20
 8196 0030 41F21803 		movw	r3, #4120
 8197 0034 C250     		str	r2, [r0, r3]
 8198 0036 00F58153 		add	r3, r0, #4128
 8199 003a 0B4A     		ldr	r2, .L760
 8200 003c 1A60     		str	r2, [r3]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 8201              		.loc 1 3456 0
 8202 003e 0199     		ldr	r1, [sp, #4]
 8203 0040 FFF7FEFF 		bl	follow_path
 8204              	.LVL1066:
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
 8205              		.loc 1 3457 0
 8206 0044 0446     		mov	r4, r0
 8207 0046 0028     		cmp	r0, #0
 8208 0048 E9D1     		bne	.L756
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
 8209              		.loc 1 3458 0
 8210 004a 06AA     		add	r2, sp, #24
 8211 004c 41F21403 		movw	r3, #4116
 8212 0050 D358     		ldr	r3, [r2, r3]
 8213 0052 33B1     		cbz	r3, .L757
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 8214              		.loc 1 3459 0
 8215 0054 002D     		cmp	r5, #0
 8216 0056 E2D0     		beq	.L756
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 8217              		.loc 1 3459 0 is_stmt 0 discriminator 1
 8218 0058 2946     		mov	r1, r5
 8219 005a 1046     		mov	r0, r2
 8220              	.LVL1067:
 8221 005c FFF7FEFF 		bl	get_fileinfo
 8222              	.LVL1068:
 8223 0060 DDE7     		b	.L756
 8224              	.LVL1069:
 8225              	.L757:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8226              		.loc 1 3461 0 is_stmt 1
 8227 0062 0624     		movs	r4, #6
 8228 0064 DBE7     		b	.L756
 8229              	.L761:
 8230 0066 00BF     		.align	2
 8231              	.L760:
 8232 0068 00000000 		.word	.LANCHOR5
 8233              		.cfi_endproc
 8234              	.LFE115:
 8236              		.section	.text.f_getfree,"ax",%progbits
 8237              		.align	1
 8238              		.global	f_getfree
 8239              		.syntax unified
 8240              		.thumb
ARM GAS  /tmp/ccTBpncU.s 			page 243


 8241              		.thumb_func
 8242              		.fpu softvfp
 8244              	f_getfree:
 8245              	.LFB116:
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8246              		.loc 1 3482 0
 8247              		.cfi_startproc
 8248              		@ args = 0, pretend = 0, frame = 8
 8249              		@ frame_needed = 0, uses_anonymous_args = 0
 8250              	.LVL1070:
 8251 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8252              	.LCFI98:
 8253              		.cfi_def_cfa_offset 32
 8254              		.cfi_offset 4, -32
 8255              		.cfi_offset 5, -28
 8256              		.cfi_offset 6, -24
 8257              		.cfi_offset 7, -20
 8258              		.cfi_offset 8, -16
 8259              		.cfi_offset 9, -12
 8260              		.cfi_offset 10, -8
 8261              		.cfi_offset 14, -4
 8262 0004 82B0     		sub	sp, sp, #8
 8263              	.LCFI99:
 8264              		.cfi_def_cfa_offset 40
 8265 0006 02AB     		add	r3, sp, #8
 8266 0008 43F8040D 		str	r0, [r3, #-4]!
 8267 000c 8946     		mov	r9, r1
 8268 000e 1446     		mov	r4, r2
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
 8269              		.loc 1 3491 0
 8270 0010 0022     		movs	r2, #0
 8271              	.LVL1071:
 8272 0012 1946     		mov	r1, r3
 8273              	.LVL1072:
 8274 0014 2046     		mov	r0, r4
 8275              	.LVL1073:
 8276 0016 FFF7FEFF 		bl	find_volume
 8277              	.LVL1074:
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8278              		.loc 1 3492 0
 8279 001a 2568     		ldr	r5, [r4]
 8280              	.LVL1075:
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
 8281              		.loc 1 3493 0
 8282 001c 0746     		mov	r7, r0
 8283 001e 0028     		cmp	r0, #0
 8284 0020 6FD1     		bne	.L763
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
 8285              		.loc 1 3495 0
 8286 0022 41F21003 		movw	r3, #4112
 8287 0026 EB58     		ldr	r3, [r5, r3]
 8288 0028 41F21402 		movw	r2, #4116
 8289 002c AC58     		ldr	r4, [r5, r2]
 8290              	.LVL1076:
 8291 002e A21E     		subs	r2, r4, #2
 8292 0030 9342     		cmp	r3, r2
 8293 0032 0DD9     		bls	.L778
ARM GAS  /tmp/ccTBpncU.s 			page 244


3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
 8294              		.loc 1 3499 0
 8295 0034 05F58053 		add	r3, r5, #4096
 8296 0038 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 8297              	.LVL1077:
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
 8298              		.loc 1 3501 0
 8299 003c B8F1010F 		cmp	r8, #1
 8300 0040 09D0     		beq	.L779
 8301              	.LVL1078:
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
 8302              		.loc 1 3511 0
 8303 0042 05F58153 		add	r3, r5, #4128
 8304 0046 1968     		ldr	r1, [r3]
 8305              	.LVL1079:
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 8306              		.loc 1 3512 0
 8307 0048 0022     		movs	r2, #0
 8308 004a 1046     		mov	r0, r2
 8309              	.LVL1080:
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
 8310              		.loc 1 3500 0
 8311 004c 1646     		mov	r6, r2
 8312 004e 34E0     		b	.L774
 8313              	.LVL1081:
 8314              	.L778:
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8315              		.loc 1 3496 0
 8316 0050 C9F80030 		str	r3, [r9]
 8317 0054 55E0     		b	.L763
 8318              	.LVL1082:
 8319              	.L779:
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 8320              		.loc 1 3502 0
 8321 0056 0224     		movs	r4, #2
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
 8322              		.loc 1 3500 0
 8323 0058 0026     		movs	r6, #0
 8324 005a 05E0     		b	.L768
 8325              	.LVL1083:
 8326              	.L767:
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8327              		.loc 1 3508 0
 8328 005c 0134     		adds	r4, r4, #1
 8329              	.LVL1084:
 8330 005e 41F21403 		movw	r3, #4116
 8331 0062 EB58     		ldr	r3, [r5, r3]
 8332 0064 A342     		cmp	r3, r4
 8333 0066 41D9     		bls	.L766
 8334              	.LVL1085:
 8335              	.L768:
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 8336              		.loc 1 3504 0
 8337 0068 2146     		mov	r1, r4
 8338 006a 2846     		mov	r0, r5
 8339 006c FFF7FEFF 		bl	get_fat
 8340              	.LVL1086:
ARM GAS  /tmp/ccTBpncU.s 			page 245


3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 8341              		.loc 1 3505 0
 8342 0070 B0F1FF3F 		cmp	r0, #-1
 8343 0074 39D0     		beq	.L775
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 8344              		.loc 1 3506 0
 8345 0076 0128     		cmp	r0, #1
 8346 0078 47D0     		beq	.L776
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 8347              		.loc 1 3507 0
 8348 007a 0028     		cmp	r0, #0
 8349 007c EED1     		bne	.L767
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 8350              		.loc 1 3507 0 is_stmt 0 discriminator 1
 8351 007e 0136     		adds	r6, r6, #1
 8352              	.LVL1087:
 8353 0080 ECE7     		b	.L767
 8354              	.LVL1088:
 8355              	.L780:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 8356              		.loc 1 3515 0 is_stmt 1
 8357 0082 01F1010A 		add	r10, r1, #1
 8358              	.LVL1089:
 8359 0086 2846     		mov	r0, r5
 8360              	.LVL1090:
 8361 0088 FFF7FEFF 		bl	move_window
 8362              	.LVL1091:
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
 8363              		.loc 1 3516 0
 8364 008c 0746     		mov	r7, r0
 8365 008e 68BB     		cbnz	r0, .L766
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
 8366              		.loc 1 3517 0
 8367 0090 2A46     		mov	r2, r5
 8368              	.LVL1092:
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8369              		.loc 1 3518 0
 8370 0092 41F20A03 		movw	r3, #4106
 8371 0096 E85A     		ldrh	r0, [r5, r3]
 8372              	.LVL1093:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 8373              		.loc 1 3515 0
 8374 0098 5146     		mov	r1, r10
 8375 009a 10E0     		b	.L769
 8376              	.LVL1094:
 8377              	.L781:
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 8378              		.loc 1 3521 0
 8379 009c 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 8380 00a0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 8381 00a2 43EA0C23 		orr	r3, r3, ip, lsl #8
 8382 00a6 1BB2     		sxth	r3, r3
 8383 00a8 03B9     		cbnz	r3, .L771
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 8384              		.loc 1 3521 0 is_stmt 0 discriminator 1
 8385 00aa 0136     		adds	r6, r6, #1
 8386              	.LVL1095:
ARM GAS  /tmp/ccTBpncU.s 			page 246


 8387              	.L771:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 8388              		.loc 1 3522 0 is_stmt 1
 8389 00ac 0232     		adds	r2, r2, #2
 8390              	.LVL1096:
 8391 00ae 0238     		subs	r0, r0, #2
 8392              	.LVL1097:
 8393 00b0 01E0     		b	.L772
 8394              	.L773:
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8395              		.loc 1 3525 0
 8396 00b2 0432     		adds	r2, r2, #4
 8397              	.LVL1098:
 8398 00b4 0438     		subs	r0, r0, #4
 8399              	.LVL1099:
 8400              	.L772:
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8401              		.loc 1 3527 0
 8402 00b6 013C     		subs	r4, r4, #1
 8403              	.LVL1100:
 8404 00b8 18D0     		beq	.L766
 8405              	.LVL1101:
 8406              	.L774:
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
 8407              		.loc 1 3514 0
 8408 00ba 0028     		cmp	r0, #0
 8409 00bc E1D0     		beq	.L780
 8410              	.LVL1102:
 8411              	.L769:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
 8412              		.loc 1 3520 0
 8413 00be B8F1020F 		cmp	r8, #2
 8414 00c2 EBD0     		beq	.L781
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 8415              		.loc 1 3524 0
 8416 00c4 92F803C0 		ldrb	ip, [r2, #3]	@ zero_extendqisi2
 8417 00c8 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 8418 00ca 1B04     		lsls	r3, r3, #16
 8419 00cc 43EA0C63 		orr	r3, r3, ip, lsl #24
 8420 00d0 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 8421 00d4 43EA0C23 		orr	r3, r3, ip, lsl #8
 8422 00d8 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
 8423 00dc 43EA0C03 		orr	r3, r3, ip
 8424 00e0 33F07043 		bics	r3, r3, #-268435456
 8425 00e4 E5D1     		bne	.L773
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 8426              		.loc 1 3524 0 is_stmt 0 discriminator 1
 8427 00e6 0136     		adds	r6, r6, #1
 8428              	.LVL1103:
 8429 00e8 E3E7     		b	.L773
 8430              	.LVL1104:
 8431              	.L775:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 8432              		.loc 1 3505 0 is_stmt 1
 8433 00ea 0127     		movs	r7, #1
 8434              	.LVL1105:
 8435              	.L766:
ARM GAS  /tmp/ccTBpncU.s 			page 247


3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 8436              		.loc 1 3529 0
 8437 00ec 41F21003 		movw	r3, #4112
 8438 00f0 EE50     		str	r6, [r5, r3]
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
 8439              		.loc 1 3530 0
 8440 00f2 41F20502 		movw	r2, #4101
 8441 00f6 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 8442 00f8 43F00103 		orr	r3, r3, #1
 8443 00fc AB54     		strb	r3, [r5, r2]
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8444              		.loc 1 3531 0
 8445 00fe C9F80060 		str	r6, [r9]
 8446              	.LVL1106:
 8447              	.L763:
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8448              		.loc 1 3535 0
 8449 0102 3846     		mov	r0, r7
 8450 0104 02B0     		add	sp, sp, #8
 8451              	.LCFI100:
 8452              		.cfi_remember_state
 8453              		.cfi_def_cfa_offset 32
 8454              		@ sp needed
 8455 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 8456              	.LVL1107:
 8457              	.L776:
 8458              	.LCFI101:
 8459              		.cfi_restore_state
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 8460              		.loc 1 3506 0
 8461 010a 0227     		movs	r7, #2
 8462 010c EEE7     		b	.L766
 8463              		.cfi_endproc
 8464              	.LFE116:
 8466              		.section	.text.f_truncate,"ax",%progbits
 8467              		.align	1
 8468              		.global	f_truncate
 8469              		.syntax unified
 8470              		.thumb
 8471              		.thumb_func
 8472              		.fpu softvfp
 8474              	f_truncate:
 8475              	.LFB117:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8476              		.loc 1 3547 0
 8477              		.cfi_startproc
 8478              		@ args = 0, pretend = 0, frame = 0
 8479              		@ frame_needed = 0, uses_anonymous_args = 0
 8480              	.LVL1108:
 8481 0000 70B5     		push	{r4, r5, r6, lr}
 8482              	.LCFI102:
 8483              		.cfi_def_cfa_offset 16
 8484              		.cfi_offset 4, -16
 8485              		.cfi_offset 5, -12
 8486              		.cfi_offset 6, -8
 8487              		.cfi_offset 14, -4
 8488 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccTBpncU.s 			page 248


3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8489              		.loc 1 3552 0
 8490 0004 FFF7FEFF 		bl	validate
 8491              	.LVL1109:
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
 8492              		.loc 1 3553 0
 8493 0008 0546     		mov	r5, r0
 8494 000a 60B9     		cbnz	r0, .L783
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
 8495              		.loc 1 3554 0
 8496 000c 41F20703 		movw	r3, #4103
 8497 0010 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 8498 0012 3BB9     		cbnz	r3, .L790
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
 8499              		.loc 1 3557 0
 8500 0014 41F20603 		movw	r3, #4102
 8501 0018 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 8502 001a 13F0020F 		tst	r3, #2
 8503 001e 02D1     		bne	.L783
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8504              		.loc 1 3558 0
 8505 0020 0725     		movs	r5, #7
 8506 0022 29E0     		b	.L784
 8507              	.L790:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8508              		.loc 1 3555 0
 8509 0024 1D46     		mov	r5, r3
 8510              	.L783:
 8511              	.LVL1110:
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
 8512              		.loc 1 3561 0
 8513 0026 3DBB     		cbnz	r5, .L784
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 8514              		.loc 1 3562 0
 8515 0028 41F20C03 		movw	r3, #4108
 8516 002c E258     		ldr	r2, [r4, r3]
 8517 002e 41F20803 		movw	r3, #4104
 8518 0032 E358     		ldr	r3, [r4, r3]
 8519 0034 9A42     		cmp	r2, r3
 8520 0036 1BD9     		bls	.L785
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 8521              		.loc 1 3563 0
 8522 0038 41F20C02 		movw	r2, #4108
 8523 003c A350     		str	r3, [r4, r2]
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 8524              		.loc 1 3564 0
 8525 003e 41F20601 		movw	r1, #4102
 8526 0042 625C     		ldrb	r2, [r4, r1]	@ zero_extendqisi2
 8527 0044 42F02002 		orr	r2, r2, #32
 8528 0048 6254     		strb	r2, [r4, r1]
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
 8529              		.loc 1 3565 0
 8530 004a BBB9     		cbnz	r3, .L786
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
 8531              		.loc 1 3566 0
 8532 004c 04F58053 		add	r3, r4, #4096
 8533 0050 41F21006 		movw	r6, #4112
ARM GAS  /tmp/ccTBpncU.s 			page 249


 8534 0054 A159     		ldr	r1, [r4, r6]
 8535 0056 1868     		ldr	r0, [r3]
 8536 0058 FFF7FEFF 		bl	remove_chain
 8537              	.LVL1111:
 8538 005c 0546     		mov	r5, r0
 8539              	.LVL1112:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
 8540              		.loc 1 3567 0
 8541 005e 0023     		movs	r3, #0
 8542 0060 A351     		str	r3, [r4, r6]
 8543              	.LVL1113:
 8544              	.L787:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 8545              		.loc 1 3579 0
 8546 0062 2DB9     		cbnz	r5, .L785
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 8547              		.loc 1 3579 0 is_stmt 0 discriminator 1
 8548 0064 41F20603 		movw	r3, #4102
 8549 0068 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 8550 006a 13F0400F 		tst	r3, #64
 8551 006e 33D1     		bne	.L796
 8552              	.L785:
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8553              		.loc 1 3587 0 is_stmt 1
 8554 0070 15B1     		cbz	r5, .L784
 8555              	.LVL1114:
 8556              	.L789:
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8557              		.loc 1 3587 0 is_stmt 0 discriminator 1
 8558 0072 41F20703 		movw	r3, #4103
 8559 0076 E554     		strb	r5, [r4, r3]
 8560              	.L784:
 8561              	.LVL1115:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8562              		.loc 1 3591 0 is_stmt 1
 8563 0078 2846     		mov	r0, r5
 8564 007a 70BD     		pop	{r4, r5, r6, pc}
 8565              	.LVL1116:
 8566              	.L786:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 8567              		.loc 1 3569 0
 8568 007c 04F58053 		add	r3, r4, #4096
 8569 0080 41F21402 		movw	r2, #4116
 8570 0084 A158     		ldr	r1, [r4, r2]
 8571 0086 1868     		ldr	r0, [r3]
 8572 0088 FFF7FEFF 		bl	get_fat
 8573              	.LVL1117:
 8574 008c 0646     		mov	r6, r0
 8575              	.LVL1118:
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
 8576              		.loc 1 3571 0
 8577 008e B0F1FF3F 		cmp	r0, #-1
 8578 0092 1DD0     		beq	.L797
 8579              	.L788:
 8580              	.LVL1119:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 8581              		.loc 1 3572 0
ARM GAS  /tmp/ccTBpncU.s 			page 250


 8582 0094 012E     		cmp	r6, #1
 8583 0096 1DD0     		beq	.L793
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 8584              		.loc 1 3573 0
 8585 0098 002D     		cmp	r5, #0
 8586 009a E2D1     		bne	.L787
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 8587              		.loc 1 3573 0 is_stmt 0 discriminator 1
 8588 009c 04F58053 		add	r3, r4, #4096
 8589 00a0 1868     		ldr	r0, [r3]
 8590              	.LVL1120:
 8591 00a2 41F21403 		movw	r3, #4116
 8592 00a6 C358     		ldr	r3, [r0, r3]
 8593 00a8 B342     		cmp	r3, r6
 8594 00aa DAD9     		bls	.L787
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 8595              		.loc 1 3574 0 is_stmt 1
 8596 00ac 6FF07042 		mvn	r2, #-268435456
 8597 00b0 41F21403 		movw	r3, #4116
 8598 00b4 E158     		ldr	r1, [r4, r3]
 8599 00b6 FFF7FEFF 		bl	put_fat
 8600              	.LVL1121:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8601              		.loc 1 3575 0
 8602 00ba 0546     		mov	r5, r0
 8603 00bc 0028     		cmp	r0, #0
 8604 00be D0D1     		bne	.L787
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8605              		.loc 1 3575 0 is_stmt 0 discriminator 1
 8606 00c0 04F58053 		add	r3, r4, #4096
 8607 00c4 3146     		mov	r1, r6
 8608 00c6 1868     		ldr	r0, [r3]
 8609              	.LVL1122:
 8610 00c8 FFF7FEFF 		bl	remove_chain
 8611              	.LVL1123:
 8612 00cc 0546     		mov	r5, r0
 8613              	.LVL1124:
 8614 00ce C8E7     		b	.L787
 8615              	.LVL1125:
 8616              	.L797:
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
 8617              		.loc 1 3571 0 is_stmt 1
 8618 00d0 0125     		movs	r5, #1
 8619 00d2 DFE7     		b	.L788
 8620              	.LVL1126:
 8621              	.L793:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 8622              		.loc 1 3572 0
 8623 00d4 0225     		movs	r5, #2
 8624              	.LVL1127:
 8625 00d6 C4E7     		b	.L787
 8626              	.LVL1128:
 8627              	.L796:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
 8628              		.loc 1 3580 0
 8629 00d8 04F58053 		add	r3, r4, #4096
 8630 00dc 1E68     		ldr	r6, [r3]
ARM GAS  /tmp/ccTBpncU.s 			page 251


 8631 00de 0123     		movs	r3, #1
 8632 00e0 41F21802 		movw	r2, #4120
 8633 00e4 A258     		ldr	r2, [r4, r2]
 8634 00e6 2146     		mov	r1, r4
 8635 00e8 41F20100 		movw	r0, #4097
 8636 00ec 305C     		ldrb	r0, [r6, r0]	@ zero_extendqisi2
 8637 00ee FFF7FEFF 		bl	disk_write
 8638              	.LVL1129:
 8639 00f2 30B9     		cbnz	r0, .L794
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8640              		.loc 1 3583 0
 8641 00f4 41F20602 		movw	r2, #4102
 8642 00f8 A35C     		ldrb	r3, [r4, r2]	@ zero_extendqisi2
 8643 00fa 23F04003 		bic	r3, r3, #64
 8644 00fe A354     		strb	r3, [r4, r2]
 8645 0100 B6E7     		b	.L785
 8646              	.L794:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 8647              		.loc 1 3581 0
 8648 0102 0125     		movs	r5, #1
 8649              	.LVL1130:
 8650 0104 B5E7     		b	.L789
 8651              		.cfi_endproc
 8652              	.LFE117:
 8654              		.section	.text.f_unlink,"ax",%progbits
 8655              		.align	1
 8656              		.global	f_unlink
 8657              		.syntax unified
 8658              		.thumb
 8659              		.thumb_func
 8660              		.fpu softvfp
 8662              	f_unlink:
 8663              	.LFB118:
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8664              		.loc 1 3603 0
 8665              		.cfi_startproc
 8666              		@ args = 0, pretend = 0, frame = 8296
 8667              		@ frame_needed = 0, uses_anonymous_args = 0
 8668              	.LVL1131:
 8669 0000 70B5     		push	{r4, r5, r6, lr}
 8670              	.LCFI103:
 8671              		.cfi_def_cfa_offset 16
 8672              		.cfi_offset 4, -16
 8673              		.cfi_offset 5, -12
 8674              		.cfi_offset 6, -8
 8675              		.cfi_offset 14, -4
 8676 0002 ADF5015D 		sub	sp, sp, #8256
 8677              	.LCFI104:
 8678              		.cfi_def_cfa_offset 8272
 8679 0006 8AB0     		sub	sp, sp, #40
 8680              	.LCFI105:
 8681              		.cfi_def_cfa_offset 8312
 8682 0008 0190     		str	r0, [sp, #4]
 8683              	.LVL1132:
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8684              		.loc 1 3612 0
 8685 000a 0122     		movs	r2, #1
ARM GAS  /tmp/ccTBpncU.s 			page 252


 8686 000c 01A9     		add	r1, sp, #4
 8687 000e 0DF50150 		add	r0, sp, #8256
 8688              	.LVL1133:
 8689 0012 FFF7FEFF 		bl	find_volume
 8690              	.LVL1134:
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 8691              		.loc 1 3613 0
 8692 0016 0446     		mov	r4, r0
 8693 0018 20B1     		cbz	r0, .L808
 8694              	.LVL1135:
 8695              	.L799:
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8696              		.loc 1 3660 0
 8697 001a 2046     		mov	r0, r4
 8698 001c 0DF5015D 		add	sp, sp, #8256
 8699 0020 0AB0     		add	sp, sp, #40
 8700              	.LCFI106:
 8701              		.cfi_remember_state
 8702              		.cfi_def_cfa_offset 16
 8703              		@ sp needed
 8704 0022 70BD     		pop	{r4, r5, r6, pc}
 8705              	.LVL1136:
 8706              	.L808:
 8707              	.LCFI107:
 8708              		.cfi_restore_state
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 8709              		.loc 1 3614 0
 8710 0024 0DF58250 		add	r0, sp, #4160
 8711              	.LVL1137:
 8712 0028 03AA     		add	r2, sp, #12
 8713 002a 41F21803 		movw	r3, #4120
 8714 002e C250     		str	r2, [r0, r3]
 8715 0030 00F58153 		add	r3, r0, #4128
 8716 0034 2E4A     		ldr	r2, .L810
 8717 0036 1A60     		str	r2, [r3]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
 8718              		.loc 1 3615 0
 8719 0038 0199     		ldr	r1, [sp, #4]
 8720 003a FFF7FEFF 		bl	follow_path
 8721              	.LVL1138:
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8722              		.loc 1 3619 0
 8723 003e 0446     		mov	r4, r0
 8724 0040 28B9     		cbnz	r0, .L800
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8725              		.loc 1 3619 0 is_stmt 0 discriminator 1
 8726 0042 0221     		movs	r1, #2
 8727 0044 0DF58250 		add	r0, sp, #4160
 8728              	.LVL1139:
 8729 0048 FFF7FEFF 		bl	chk_lock
 8730              	.LVL1140:
 8731 004c 0446     		mov	r4, r0
 8732              	.LVL1141:
 8733              	.L800:
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 8734              		.loc 1 3621 0 is_stmt 1
 8735 004e 002C     		cmp	r4, #0
ARM GAS  /tmp/ccTBpncU.s 			page 253


 8736 0050 E3D1     		bne	.L799
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
 8737              		.loc 1 3622 0
 8738 0052 0DF58252 		add	r2, sp, #4160
 8739 0056 41F21403 		movw	r3, #4116
 8740 005a D158     		ldr	r1, [r2, r3]
 8741              	.LVL1142:
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 8742              		.loc 1 3623 0
 8743 005c 31B3     		cbz	r1, .L804
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 8744              		.loc 1 3626 0
 8745 005e CD7A     		ldrb	r5, [r1, #11]	@ zero_extendqisi2
 8746 0060 15F0010F 		tst	r5, #1
 8747 0064 25D1     		bne	.L805
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
 8748              		.loc 1 3630 0
 8749 0066 0DF50153 		add	r3, sp, #8256
 8750 006a 1868     		ldr	r0, [r3]
 8751 006c FFF7FEFF 		bl	ld_clust
 8752              	.LVL1143:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 8753              		.loc 1 3631 0
 8754 0070 0646     		mov	r6, r0
 8755 0072 00B3     		cbz	r0, .L801
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 8756              		.loc 1 3631 0 is_stmt 0 discriminator 1
 8757 0074 15F0100F 		tst	r5, #16
 8758 0078 1DD0     		beq	.L801
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
 8759              		.loc 1 3638 0 is_stmt 1
 8760 007a 0AAC     		add	r4, sp, #40
 8761              	.LVL1144:
 8762 007c 41F22802 		movw	r2, #4136
 8763 0080 0DF58251 		add	r1, sp, #4160
 8764 0084 06A8     		add	r0, sp, #24
 8765              	.LVL1145:
 8766 0086 FFF7FEFF 		bl	mem_cpy
 8767              	.LVL1146:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
 8768              		.loc 1 3639 0
 8769 008a C4F8F86F 		str	r6, [r4, #4088]
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 8770              		.loc 1 3640 0
 8771 008e 0221     		movs	r1, #2
 8772 0090 06A8     		add	r0, sp, #24
 8773 0092 FFF7FEFF 		bl	dir_sdi
 8774              	.LVL1147:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
 8775              		.loc 1 3641 0
 8776 0096 0446     		mov	r4, r0
 8777 0098 68B9     		cbnz	r0, .L801
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
 8778              		.loc 1 3642 0
 8779 009a 0021     		movs	r1, #0
 8780 009c 06A8     		add	r0, sp, #24
 8781              	.LVL1148:
ARM GAS  /tmp/ccTBpncU.s 			page 254


 8782 009e FFF7FEFF 		bl	dir_read
 8783              	.LVL1149:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 8784              		.loc 1 3643 0
 8785 00a2 0446     		mov	r4, r0
 8786 00a4 C8B1     		cbz	r0, .L806
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 8787              		.loc 1 3644 0
 8788 00a6 0428     		cmp	r0, #4
 8789 00a8 05D1     		bne	.L801
 8790 00aa 06E0     		b	.L802
 8791              	.LVL1150:
 8792              	.L804:
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 8793              		.loc 1 3607 0
 8794 00ac 0026     		movs	r6, #0
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8795              		.loc 1 3624 0
 8796 00ae 0624     		movs	r4, #6
 8797              	.LVL1151:
 8798 00b0 01E0     		b	.L801
 8799              	.LVL1152:
 8800              	.L805:
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 8801              		.loc 1 3607 0
 8802 00b2 0026     		movs	r6, #0
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8803              		.loc 1 3627 0
 8804 00b4 0724     		movs	r4, #7
 8805              	.LVL1153:
 8806              	.L801:
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 8807              		.loc 1 3649 0
 8808 00b6 002C     		cmp	r4, #0
 8809 00b8 AFD1     		bne	.L799
 8810              	.LVL1154:
 8811              	.L802:
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
 8812              		.loc 1 3650 0
 8813 00ba 0DF58250 		add	r0, sp, #4160
 8814 00be FFF7FEFF 		bl	dir_remove
 8815              	.LVL1155:
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 8816              		.loc 1 3651 0
 8817 00c2 0446     		mov	r4, r0
 8818 00c4 00B9     		cbnz	r0, .L803
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 8819              		.loc 1 3651 0 is_stmt 0 discriminator 1
 8820 00c6 56B9     		cbnz	r6, .L809
 8821              	.LVL1156:
 8822              	.L803:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8823              		.loc 1 3653 0 is_stmt 1
 8824 00c8 002C     		cmp	r4, #0
 8825 00ca A6D1     		bne	.L799
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8826              		.loc 1 3653 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 255


 8827 00cc 0DF50153 		add	r3, sp, #8256
 8828 00d0 1868     		ldr	r0, [r3]
 8829 00d2 FFF7FEFF 		bl	sync_fs
 8830              	.LVL1157:
 8831 00d6 0446     		mov	r4, r0
 8832              	.LVL1158:
 8833 00d8 9FE7     		b	.L799
 8834              	.LVL1159:
 8835              	.L806:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 8836              		.loc 1 3643 0 is_stmt 1
 8837 00da 0724     		movs	r4, #7
 8838 00dc EBE7     		b	.L801
 8839              	.L809:
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
 8840              		.loc 1 3652 0
 8841 00de 3146     		mov	r1, r6
 8842 00e0 0DF50153 		add	r3, sp, #8256
 8843 00e4 1868     		ldr	r0, [r3]
 8844              	.LVL1160:
 8845 00e6 FFF7FEFF 		bl	remove_chain
 8846              	.LVL1161:
 8847 00ea 0446     		mov	r4, r0
 8848              	.LVL1162:
 8849 00ec ECE7     		b	.L803
 8850              	.L811:
 8851 00ee 00BF     		.align	2
 8852              	.L810:
 8853 00f0 00000000 		.word	.LANCHOR5
 8854              		.cfi_endproc
 8855              	.LFE118:
 8857              		.section	.text.f_mkdir,"ax",%progbits
 8858              		.align	1
 8859              		.global	f_mkdir
 8860              		.syntax unified
 8861              		.thumb
 8862              		.thumb_func
 8863              		.fpu softvfp
 8865              	f_mkdir:
 8866              	.LFB119:
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8867              		.loc 1 3672 0
 8868              		.cfi_startproc
 8869              		@ args = 0, pretend = 0, frame = 4160
 8870              		@ frame_needed = 0, uses_anonymous_args = 0
 8871              	.LVL1163:
 8872 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8873              	.LCFI108:
 8874              		.cfi_def_cfa_offset 36
 8875              		.cfi_offset 4, -36
 8876              		.cfi_offset 5, -32
 8877              		.cfi_offset 6, -28
 8878              		.cfi_offset 7, -24
 8879              		.cfi_offset 8, -20
 8880              		.cfi_offset 9, -16
 8881              		.cfi_offset 10, -12
 8882              		.cfi_offset 11, -8
ARM GAS  /tmp/ccTBpncU.s 			page 256


 8883              		.cfi_offset 14, -4
 8884 0004 ADF5825D 		sub	sp, sp, #4160
 8885              	.LCFI109:
 8886              		.cfi_def_cfa_offset 4196
 8887 0008 81B0     		sub	sp, sp, #4
 8888              	.LCFI110:
 8889              		.cfi_def_cfa_offset 4200
 8890 000a 0190     		str	r0, [sp, #4]
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 8891              		.loc 1 3676 0
 8892 000c FFF7FEFF 		bl	get_fattime
 8893              	.LVL1164:
 8894 0010 0546     		mov	r5, r0
 8895              	.LVL1165:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8896              		.loc 1 3681 0
 8897 0012 0122     		movs	r2, #1
 8898 0014 01A9     		add	r1, sp, #4
 8899 0016 08AB     		add	r3, sp, #32
 8900 0018 03F6F870 		addw	r0, r3, #4088
 8901              	.LVL1166:
 8902 001c FFF7FEFF 		bl	find_volume
 8903              	.LVL1167:
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 8904              		.loc 1 3682 0
 8905 0020 0446     		mov	r4, r0
 8906 0022 28B1     		cbz	r0, .L830
 8907              	.LVL1168:
 8908              	.L813:
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8909              		.loc 1 3734 0
 8910 0024 2046     		mov	r0, r4
 8911 0026 0DF5825D 		add	sp, sp, #4160
 8912 002a 01B0     		add	sp, sp, #4
 8913              	.LCFI111:
 8914              		.cfi_remember_state
 8915              		.cfi_def_cfa_offset 36
 8916              		@ sp needed
 8917 002c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8918              	.LVL1169:
 8919              	.L830:
 8920              	.LCFI112:
 8921              		.cfi_restore_state
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 8922              		.loc 1 3683 0
 8923 0030 08AB     		add	r3, sp, #32
 8924 0032 06A8     		add	r0, sp, #24
 8925              	.LVL1170:
 8926 0034 A3F11402 		sub	r2, r3, #20
 8927 0038 41F21803 		movw	r3, #4120
 8928 003c C250     		str	r2, [r0, r3]
 8929 003e 00F58153 		add	r3, r0, #4128
 8930 0042 664A     		ldr	r2, .L838
 8931 0044 1A60     		str	r2, [r3]
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 8932              		.loc 1 3684 0
 8933 0046 0199     		ldr	r1, [sp, #4]
ARM GAS  /tmp/ccTBpncU.s 			page 257


 8934 0048 FFF7FEFF 		bl	follow_path
 8935              	.LVL1171:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 8936              		.loc 1 3685 0
 8937 004c 0028     		cmp	r0, #0
 8938 004e 00F0C380 		beq	.L823
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 8939              		.loc 1 3688 0
 8940 0052 0428     		cmp	r0, #4
 8941 0054 01D0     		beq	.L831
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 8942              		.loc 1 3684 0
 8943 0056 0446     		mov	r4, r0
 8944 0058 E4E7     		b	.L813
 8945              	.L831:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 8946              		.loc 1 3689 0
 8947 005a 0021     		movs	r1, #0
 8948 005c 0DF58053 		add	r3, sp, #4096
 8949 0060 1833     		adds	r3, r3, #24
 8950 0062 1868     		ldr	r0, [r3]
 8951              	.LVL1172:
 8952 0064 FFF7FEFF 		bl	create_chain
 8953              	.LVL1173:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 8954              		.loc 1 3691 0
 8955 0068 8046     		mov	r8, r0
 8956 006a 00B9     		cbnz	r0, .L814
 8957 006c 0724     		movs	r4, #7
 8958              	.L814:
 8959              	.LVL1174:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 8960              		.loc 1 3692 0
 8961 006e B8F1010F 		cmp	r8, #1
 8962 0072 27D0     		beq	.L832
 8963              	.LVL1175:
 8964              	.L815:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 8965              		.loc 1 3693 0
 8966 0074 B8F1FF3F 		cmp	r8, #-1
 8967 0078 2ED0     		beq	.L827
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
 8968              		.loc 1 3694 0
 8969 007a 2CB3     		cbz	r4, .L833
 8970              	.LVL1176:
 8971              	.L816:
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
 8972              		.loc 1 3696 0
 8973 007c 74B3     		cbz	r4, .L834
 8974              	.LVL1177:
 8975              	.L817:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 8976              		.loc 1 3718 0
 8977 007e 002C     		cmp	r4, #0
 8978 0080 00F09D80 		beq	.L835
 8979              	.L821:
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
ARM GAS  /tmp/ccTBpncU.s 			page 258


 8980              		.loc 1 3719 0
 8981 0084 002C     		cmp	r4, #0
 8982 0086 40F09F80 		bne	.L836
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 8983              		.loc 1 3722 0
 8984 008a 08AC     		add	r4, sp, #32
 8985              	.LVL1178:
 8986 008c 06AA     		add	r2, sp, #24
 8987 008e 41F21403 		movw	r3, #4116
 8988 0092 D058     		ldr	r0, [r2, r3]
 8989              	.LVL1179:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
 8990              		.loc 1 3723 0
 8991 0094 1023     		movs	r3, #16
 8992 0096 C372     		strb	r3, [r0, #11]
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
 8993              		.loc 1 3724 0
 8994 0098 8575     		strb	r5, [r0, #22]
 8995 009a C5F30723 		ubfx	r3, r5, #8, #8
 8996 009e C375     		strb	r3, [r0, #23]
 8997 00a0 C5F30743 		ubfx	r3, r5, #16, #8
 8998 00a4 0376     		strb	r3, [r0, #24]
 8999 00a6 2D0E     		lsrs	r5, r5, #24
 9000              	.LVL1180:
 9001 00a8 4576     		strb	r5, [r0, #25]
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 9002              		.loc 1 3725 0
 9003 00aa 4146     		mov	r1, r8
 9004 00ac FFF7FEFF 		bl	st_clust
 9005              	.LVL1181:
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 9006              		.loc 1 3726 0
 9007 00b0 D4F8F80F 		ldr	r0, [r4, #4088]
 9008 00b4 41F20403 		movw	r3, #4100
 9009 00b8 0122     		movs	r2, #1
 9010 00ba C254     		strb	r2, [r0, r3]
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9011              		.loc 1 3727 0
 9012 00bc FFF7FEFF 		bl	sync_fs
 9013              	.LVL1182:
 9014 00c0 0446     		mov	r4, r0
 9015              	.LVL1183:
 9016 00c2 AFE7     		b	.L813
 9017              	.LVL1184:
 9018              	.L832:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 9019              		.loc 1 3692 0
 9020 00c4 0224     		movs	r4, #2
 9021              	.LVL1185:
 9022 00c6 D5E7     		b	.L815
 9023              	.LVL1186:
 9024              	.L833:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 9025              		.loc 1 3695 0
 9026 00c8 0DF58053 		add	r3, sp, #4096
 9027 00cc 1833     		adds	r3, r3, #24
 9028 00ce 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccTBpncU.s 			page 259


 9029              	.LVL1187:
 9030 00d0 FFF7FEFF 		bl	sync_window
 9031              	.LVL1188:
 9032 00d4 0446     		mov	r4, r0
 9033              	.LVL1189:
 9034 00d6 D1E7     		b	.L816
 9035              	.LVL1190:
 9036              	.L827:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 9037              		.loc 1 3693 0
 9038 00d8 0124     		movs	r4, #1
 9039              	.LVL1191:
 9040 00da CFE7     		b	.L816
 9041              	.LVL1192:
 9042              	.L834:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
 9043              		.loc 1 3697 0
 9044 00dc 0DF12009 		add	r9, sp, #32
 9045 00e0 D9F8F87F 		ldr	r7, [r9, #4088]
 9046 00e4 4146     		mov	r1, r8
 9047 00e6 3846     		mov	r0, r7
 9048 00e8 FFF7FEFF 		bl	clust2sect
 9049              	.LVL1193:
 9050 00ec 0646     		mov	r6, r0
 9051              	.LVL1194:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
 9052              		.loc 1 3698 0
 9053 00ee 0097     		str	r7, [sp]
 9054              	.LVL1195:
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 9055              		.loc 1 3699 0
 9056 00f0 41F20A03 		movw	r3, #4106
 9057 00f4 FA5A     		ldrh	r2, [r7, r3]
 9058 00f6 0021     		movs	r1, #0
 9059 00f8 3846     		mov	r0, r7
 9060              	.LVL1196:
 9061 00fa FFF7FEFF 		bl	mem_set
 9062              	.LVL1197:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
 9063              		.loc 1 3700 0
 9064 00fe 0B22     		movs	r2, #11
 9065 0100 2021     		movs	r1, #32
 9066 0102 3846     		mov	r0, r7
 9067 0104 FFF7FEFF 		bl	mem_set
 9068              	.LVL1198:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
 9069              		.loc 1 3701 0
 9070 0108 4FF02E0B 		mov	fp, #46
 9071 010c 87F800B0 		strb	fp, [r7]
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 9072              		.loc 1 3702 0
 9073 0110 1023     		movs	r3, #16
 9074 0112 FB72     		strb	r3, [r7, #11]
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
 9075              		.loc 1 3703 0
 9076 0114 BD75     		strb	r5, [r7, #22]
 9077 0116 C5F30723 		ubfx	r3, r5, #8, #8
ARM GAS  /tmp/ccTBpncU.s 			page 260


 9078 011a FB75     		strb	r3, [r7, #23]
 9079 011c C5F30743 		ubfx	r3, r5, #16, #8
 9080 0120 3B76     		strb	r3, [r7, #24]
 9081 0122 2B0E     		lsrs	r3, r5, #24
 9082 0124 7B76     		strb	r3, [r7, #25]
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
 9083              		.loc 1 3704 0
 9084 0126 4146     		mov	r1, r8
 9085 0128 3846     		mov	r0, r7
 9086 012a FFF7FEFF 		bl	st_clust
 9087              	.LVL1199:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
 9088              		.loc 1 3705 0
 9089 012e 07F1200A 		add	r10, r7, #32
 9090 0132 2022     		movs	r2, #32
 9091 0134 3946     		mov	r1, r7
 9092 0136 5046     		mov	r0, r10
 9093 0138 FFF7FEFF 		bl	mem_cpy
 9094              	.LVL1200:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 9095              		.loc 1 3706 0
 9096 013c 87F821B0 		strb	fp, [r7, #33]
 9097 0140 09F58053 		add	r3, r9, #4096
 9098 0144 1968     		ldr	r1, [r3]
 9099              	.LVL1201:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 9100              		.loc 1 3707 0
 9101 0146 D9F8F83F 		ldr	r3, [r9, #4088]
 9102 014a 03F58052 		add	r2, r3, #4096
 9103 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9104 0150 032A     		cmp	r2, #3
 9105 0152 2DD0     		beq	.L837
 9106              	.LVL1202:
 9107              	.L818:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 9108              		.loc 1 3709 0
 9109 0154 5046     		mov	r0, r10
 9110 0156 FFF7FEFF 		bl	st_clust
 9111              	.LVL1203:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 9112              		.loc 1 3710 0
 9113 015a 0DF58053 		add	r3, sp, #4096
 9114 015e 1833     		adds	r3, r3, #24
 9115 0160 1A68     		ldr	r2, [r3]
 9116 0162 41F20203 		movw	r3, #4098
 9117 0166 D75C     		ldrb	r7, [r2, r3]	@ zero_extendqisi2
 9118              	.LVL1204:
 9119              	.L819:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 9120              		.loc 1 3710 0 is_stmt 0 discriminator 1
 9121 0168 002F     		cmp	r7, #0
 9122 016a 88D0     		beq	.L817
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 9123              		.loc 1 3711 0 is_stmt 1
 9124 016c 06F10109 		add	r9, r6, #1
 9125              	.LVL1205:
 9126 0170 0DF58053 		add	r3, sp, #4096
ARM GAS  /tmp/ccTBpncU.s 			page 261


 9127 0174 1833     		adds	r3, r3, #24
 9128 0176 1868     		ldr	r0, [r3]
 9129 0178 41F22C03 		movw	r3, #4140
 9130 017c C650     		str	r6, [r0, r3]
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
 9131              		.loc 1 3712 0
 9132 017e 41F20403 		movw	r3, #4100
 9133 0182 0122     		movs	r2, #1
 9134 0184 C254     		strb	r2, [r0, r3]
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 9135              		.loc 1 3713 0
 9136 0186 FFF7FEFF 		bl	sync_window
 9137              	.LVL1206:
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
 9138              		.loc 1 3714 0
 9139 018a 0446     		mov	r4, r0
 9140 018c 0028     		cmp	r0, #0
 9141 018e 7FF476AF 		bne	.L817
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9142              		.loc 1 3715 0 discriminator 2
 9143 0192 0DF58053 		add	r3, sp, #4096
 9144 0196 1833     		adds	r3, r3, #24
 9145 0198 1A68     		ldr	r2, [r3]
 9146 019a 41F20A03 		movw	r3, #4106
 9147 019e D25A     		ldrh	r2, [r2, r3]
 9148 01a0 0021     		movs	r1, #0
 9149 01a2 0098     		ldr	r0, [sp]
 9150              	.LVL1207:
 9151 01a4 FFF7FEFF 		bl	mem_set
 9152              	.LVL1208:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 9153              		.loc 1 3710 0 discriminator 2
 9154 01a8 013F     		subs	r7, r7, #1
 9155              	.LVL1209:
 9156 01aa FFB2     		uxtb	r7, r7
 9157              	.LVL1210:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 9158              		.loc 1 3711 0 discriminator 2
 9159 01ac 4E46     		mov	r6, r9
 9160 01ae DBE7     		b	.L819
 9161              	.LVL1211:
 9162              	.L837:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 9163              		.loc 1 3707 0 discriminator 1
 9164 01b0 41F22402 		movw	r2, #4132
 9165 01b4 9B58     		ldr	r3, [r3, r2]
 9166 01b6 8B42     		cmp	r3, r1
 9167 01b8 CCD1     		bne	.L818
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
 9168              		.loc 1 3708 0
 9169 01ba 0021     		movs	r1, #0
 9170              	.LVL1212:
 9171 01bc CAE7     		b	.L818
 9172              	.LVL1213:
 9173              	.L835:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 9174              		.loc 1 3718 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 262


 9175 01be 06A8     		add	r0, sp, #24
 9176 01c0 FFF7FEFF 		bl	dir_register
 9177              	.LVL1214:
 9178 01c4 0446     		mov	r4, r0
 9179              	.LVL1215:
 9180 01c6 5DE7     		b	.L821
 9181              	.L836:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9182              		.loc 1 3720 0
 9183 01c8 4146     		mov	r1, r8
 9184 01ca 0DF58053 		add	r3, sp, #4096
 9185 01ce 1833     		adds	r3, r3, #24
 9186 01d0 1868     		ldr	r0, [r3]
 9187 01d2 FFF7FEFF 		bl	remove_chain
 9188              	.LVL1216:
 9189 01d6 25E7     		b	.L813
 9190              	.LVL1217:
 9191              	.L823:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 9192              		.loc 1 3685 0
 9193 01d8 0824     		movs	r4, #8
 9194 01da 23E7     		b	.L813
 9195              	.L839:
 9196              		.align	2
 9197              	.L838:
 9198 01dc 00000000 		.word	.LANCHOR5
 9199              		.cfi_endproc
 9200              	.LFE119:
 9202              		.section	.text.f_chmod,"ax",%progbits
 9203              		.align	1
 9204              		.global	f_chmod
 9205              		.syntax unified
 9206              		.thumb
 9207              		.thumb_func
 9208              		.fpu softvfp
 9210              	f_chmod:
 9211              	.LFB120:
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9212              		.loc 1 3748 0
 9213              		.cfi_startproc
 9214              		@ args = 0, pretend = 0, frame = 4160
 9215              		@ frame_needed = 0, uses_anonymous_args = 0
 9216              	.LVL1218:
 9217 0000 30B5     		push	{r4, r5, lr}
 9218              	.LCFI113:
 9219              		.cfi_def_cfa_offset 12
 9220              		.cfi_offset 4, -12
 9221              		.cfi_offset 5, -8
 9222              		.cfi_offset 14, -4
 9223 0002 ADF5825D 		sub	sp, sp, #4160
 9224              	.LCFI114:
 9225              		.cfi_def_cfa_offset 4172
 9226 0006 81B0     		sub	sp, sp, #4
 9227              	.LCFI115:
 9228              		.cfi_def_cfa_offset 4176
 9229 0008 0190     		str	r0, [sp, #4]
 9230 000a 0D46     		mov	r5, r1
ARM GAS  /tmp/ccTBpncU.s 			page 263


 9231 000c 1446     		mov	r4, r2
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9232              		.loc 1 3756 0
 9233 000e 0122     		movs	r2, #1
 9234              	.LVL1219:
 9235 0010 08AB     		add	r3, sp, #32
 9236 0012 01A9     		add	r1, sp, #4
 9237              	.LVL1220:
 9238 0014 03F6F870 		addw	r0, r3, #4088
 9239              	.LVL1221:
 9240 0018 FFF7FEFF 		bl	find_volume
 9241              	.LVL1222:
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 9242              		.loc 1 3757 0
 9243 001c 0346     		mov	r3, r0
 9244 001e 20B1     		cbz	r0, .L844
 9245              	.LVL1223:
 9246              	.L841:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9247              		.loc 1 3777 0
 9248 0020 1846     		mov	r0, r3
 9249 0022 0DF5825D 		add	sp, sp, #4160
 9250 0026 01B0     		add	sp, sp, #4
 9251              	.LCFI116:
 9252              		.cfi_remember_state
 9253              		.cfi_def_cfa_offset 12
 9254              		@ sp needed
 9255 0028 30BD     		pop	{r4, r5, pc}
 9256              	.LVL1224:
 9257              	.L844:
 9258              	.LCFI117:
 9259              		.cfi_restore_state
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9260              		.loc 1 3758 0
 9261 002a 08AB     		add	r3, sp, #32
 9262 002c 06A8     		add	r0, sp, #24
 9263              	.LVL1225:
 9264 002e A3F11402 		sub	r2, r3, #20
 9265 0032 41F21803 		movw	r3, #4120
 9266 0036 C250     		str	r2, [r0, r3]
 9267 0038 00F58153 		add	r3, r0, #4128
 9268 003c 104A     		ldr	r2, .L845
 9269 003e 1A60     		str	r2, [r3]
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 9270              		.loc 1 3759 0
 9271 0040 0199     		ldr	r1, [sp, #4]
 9272 0042 FFF7FEFF 		bl	follow_path
 9273              	.LVL1226:
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 9274              		.loc 1 3763 0
 9275 0046 0346     		mov	r3, r0
 9276 0048 0028     		cmp	r0, #0
 9277 004a E9D1     		bne	.L841
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
 9278              		.loc 1 3764 0
 9279 004c 06AA     		add	r2, sp, #24
 9280 004e 41F21403 		movw	r3, #4116
ARM GAS  /tmp/ccTBpncU.s 			page 264


 9281 0052 D258     		ldr	r2, [r2, r3]
 9282              	.LVL1227:
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 9283              		.loc 1 3765 0
 9284 0054 92B1     		cbz	r2, .L842
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 9285              		.loc 1 3768 0
 9286 0056 04F02704 		and	r4, r4, #39
 9287              	.LVL1228:
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 9288              		.loc 1 3769 0
 9289 005a D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
 9290 005c 5D40     		eors	r5, r5, r3
 9291 005e 2C40     		ands	r4, r4, r5
 9292              	.LVL1229:
 9293 0060 5C40     		eors	r4, r4, r3
 9294 0062 D472     		strb	r4, [r2, #11]
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 9295              		.loc 1 3770 0
 9296 0064 0DF58053 		add	r3, sp, #4096
 9297 0068 1833     		adds	r3, r3, #24
 9298 006a 1868     		ldr	r0, [r3]
 9299              	.LVL1230:
 9300 006c 41F20403 		movw	r3, #4100
 9301 0070 0122     		movs	r2, #1
 9302              	.LVL1231:
 9303 0072 C254     		strb	r2, [r0, r3]
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9304              		.loc 1 3771 0
 9305 0074 FFF7FEFF 		bl	sync_fs
 9306              	.LVL1232:
 9307 0078 0346     		mov	r3, r0
 9308              	.LVL1233:
 9309 007a D1E7     		b	.L841
 9310              	.LVL1234:
 9311              	.L842:
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
 9312              		.loc 1 3766 0
 9313 007c 0623     		movs	r3, #6
 9314 007e CFE7     		b	.L841
 9315              	.L846:
 9316              		.align	2
 9317              	.L845:
 9318 0080 00000000 		.word	.LANCHOR5
 9319              		.cfi_endproc
 9320              	.LFE120:
 9322              		.section	.text.f_rename,"ax",%progbits
 9323              		.align	1
 9324              		.global	f_rename
 9325              		.syntax unified
 9326              		.thumb
 9327              		.thumb_func
 9328              		.fpu softvfp
 9330              	f_rename:
 9331              	.LFB121:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9332              		.loc 1 3790 0
ARM GAS  /tmp/ccTBpncU.s 			page 265


 9333              		.cfi_startproc
 9334              		@ args = 0, pretend = 0, frame = 8320
 9335              		@ frame_needed = 0, uses_anonymous_args = 0
 9336              	.LVL1235:
 9337 0000 70B5     		push	{r4, r5, r6, lr}
 9338              	.LCFI118:
 9339              		.cfi_def_cfa_offset 16
 9340              		.cfi_offset 4, -16
 9341              		.cfi_offset 5, -12
 9342              		.cfi_offset 6, -8
 9343              		.cfi_offset 14, -4
 9344 0002 ADF5025D 		sub	sp, sp, #8320
 9345              	.LCFI119:
 9346              		.cfi_def_cfa_offset 8336
 9347 0006 0190     		str	r0, [sp, #4]
 9348 0008 0091     		str	r1, [sp]
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9349              		.loc 1 3799 0
 9350 000a 0122     		movs	r2, #1
 9351 000c 01A9     		add	r1, sp, #4
 9352              	.LVL1236:
 9353 000e 0DF50150 		add	r0, sp, #8256
 9354              	.LVL1237:
 9355 0012 1830     		adds	r0, r0, #24
 9356 0014 FFF7FEFF 		bl	find_volume
 9357              	.LVL1238:
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
 9358              		.loc 1 3800 0
 9359 0018 0446     		mov	r4, r0
 9360 001a 18B1     		cbz	r0, .L857
 9361              	.LVL1239:
 9362              	.L848:
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9363              		.loc 1 3855 0
 9364 001c 2046     		mov	r0, r4
 9365 001e 0DF5025D 		add	sp, sp, #8320
 9366              	.LCFI120:
 9367              		.cfi_remember_state
 9368              		.cfi_def_cfa_offset 16
 9369              		@ sp needed
 9370 0022 70BD     		pop	{r4, r5, r6, pc}
 9371              	.LVL1240:
 9372              	.L857:
 9373              	.LCFI121:
 9374              		.cfi_restore_state
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
 9375              		.loc 1 3801 0
 9376 0024 0DF58353 		add	r3, sp, #4192
 9377 0028 A3F10800 		sub	r0, r3, #8
 9378              	.LVL1241:
 9379 002c D3F8F82F 		ldr	r2, [r3, #4088]
 9380 0030 10AB     		add	r3, sp, #64
 9381 0032 C3F8F02F 		str	r2, [r3, #4080]
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 9382              		.loc 1 3802 0
 9383 0036 03A9     		add	r1, sp, #12
 9384 0038 41F21802 		movw	r2, #4120
ARM GAS  /tmp/ccTBpncU.s 			page 266


 9385 003c 8150     		str	r1, [r0, r2]
 9386 003e 00F58152 		add	r2, r0, #4128
 9387 0042 5149     		ldr	r1, .L860
 9388 0044 1160     		str	r1, [r2]
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
 9389              		.loc 1 3803 0
 9390 0046 0199     		ldr	r1, [sp, #4]
 9391 0048 FFF7FEFF 		bl	follow_path
 9392              	.LVL1242:
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9393              		.loc 1 3807 0
 9394 004c 0446     		mov	r4, r0
 9395 004e 30B9     		cbnz	r0, .L849
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9396              		.loc 1 3807 0 is_stmt 0 discriminator 1
 9397 0050 0221     		movs	r1, #2
 9398 0052 0DF58250 		add	r0, sp, #4160
 9399              	.LVL1243:
 9400 0056 1830     		adds	r0, r0, #24
 9401 0058 FFF7FEFF 		bl	chk_lock
 9402              	.LVL1244:
 9403 005c 0446     		mov	r4, r0
 9404              	.LVL1245:
 9405              	.L849:
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
 9406              		.loc 1 3809 0 is_stmt 1
 9407 005e 002C     		cmp	r4, #0
 9408 0060 DCD1     		bne	.L848
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
 9409              		.loc 1 3810 0
 9410 0062 0DF58252 		add	r2, sp, #4160
 9411 0066 1832     		adds	r2, r2, #24
 9412 0068 41F21403 		movw	r3, #4116
 9413 006c D158     		ldr	r1, [r2, r3]
 9414 006e 0029     		cmp	r1, #0
 9415 0070 00F08680 		beq	.L852
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 9416              		.loc 1 3813 0
 9417 0074 1522     		movs	r2, #21
 9418 0076 0B31     		adds	r1, r1, #11
 9419 0078 06A8     		add	r0, sp, #24
 9420 007a FFF7FEFF 		bl	mem_cpy
 9421              	.LVL1246:
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
 9422              		.loc 1 3814 0
 9423 007e 41F22802 		movw	r2, #4136
 9424 0082 0DF58251 		add	r1, sp, #4160
 9425 0086 1831     		adds	r1, r1, #24
 9426 0088 0CA8     		add	r0, sp, #48
 9427 008a FFF7FEFF 		bl	mem_cpy
 9428              	.LVL1247:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
 9429              		.loc 1 3815 0
 9430 008e 6846     		mov	r0, sp
 9431 0090 FFF7FEFF 		bl	get_ldnumber
 9432              	.LVL1248:
 9433 0094 0028     		cmp	r0, #0
ARM GAS  /tmp/ccTBpncU.s 			page 267


 9434 0096 5BDA     		bge	.L858
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 9435              		.loc 1 3818 0
 9436 0098 0B24     		movs	r4, #11
 9437              	.LVL1249:
 9438              	.L850:
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 9439              		.loc 1 3820 0
 9440 009a 042C     		cmp	r4, #4
 9441 009c BED1     		bne	.L848
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 9442              		.loc 1 3821 0
 9443 009e 0CA8     		add	r0, sp, #48
 9444 00a0 FFF7FEFF 		bl	dir_register
 9445              	.LVL1250:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
 9446              		.loc 1 3822 0
 9447 00a4 0446     		mov	r4, r0
 9448 00a6 0028     		cmp	r0, #0
 9449 00a8 B8D1     		bne	.L848
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 9450              		.loc 1 3824 0
 9451 00aa 0CAA     		add	r2, sp, #48
 9452 00ac 41F21403 		movw	r3, #4116
 9453 00b0 D558     		ldr	r5, [r2, r3]
 9454              	.LVL1251:
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 9455              		.loc 1 3825 0
 9456 00b2 1322     		movs	r2, #19
 9457 00b4 0DF11A01 		add	r1, sp, #26
 9458 00b8 05F10D00 		add	r0, r5, #13
 9459              	.LVL1252:
 9460 00bc FFF7FEFF 		bl	mem_cpy
 9461              	.LVL1253:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
 9462              		.loc 1 3826 0
 9463 00c0 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 9464 00c4 43F02003 		orr	r3, r3, #32
 9465 00c8 EB72     		strb	r3, [r5, #11]
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
 9466              		.loc 1 3827 0
 9467 00ca 0DF50153 		add	r3, sp, #8256
 9468 00ce 1833     		adds	r3, r3, #24
 9469 00d0 1E68     		ldr	r6, [r3]
 9470 00d2 41F20403 		movw	r3, #4100
 9471 00d6 0122     		movs	r2, #1
 9472 00d8 F254     		strb	r2, [r6, r3]
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 9473              		.loc 1 3828 0
 9474 00da EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 9475 00dc 13F0100F 		tst	r3, #16
 9476 00e0 22D0     		beq	.L851
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 9477              		.loc 1 3828 0 is_stmt 0 discriminator 1
 9478 00e2 10AB     		add	r3, sp, #64
 9479 00e4 D3F8F83F 		ldr	r3, [r3, #4088]
 9480 00e8 0DF50152 		add	r2, sp, #8256
ARM GAS  /tmp/ccTBpncU.s 			page 268


 9481 00ec 2032     		adds	r2, r2, #32
 9482 00ee 1268     		ldr	r2, [r2]
 9483 00f0 9A42     		cmp	r2, r3
 9484 00f2 19D0     		beq	.L851
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 9485              		.loc 1 3829 0 is_stmt 1
 9486 00f4 2946     		mov	r1, r5
 9487 00f6 3046     		mov	r0, r6
 9488 00f8 FFF7FEFF 		bl	ld_clust
 9489              	.LVL1254:
 9490 00fc 0146     		mov	r1, r0
 9491 00fe 3046     		mov	r0, r6
 9492 0100 FFF7FEFF 		bl	clust2sect
 9493              	.LVL1255:
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 9494              		.loc 1 3830 0
 9495 0104 0146     		mov	r1, r0
 9496 0106 0028     		cmp	r0, #0
 9497 0108 3CD0     		beq	.L855
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
 9498              		.loc 1 3833 0
 9499 010a 3046     		mov	r0, r6
 9500              	.LVL1256:
 9501 010c FFF7FEFF 		bl	move_window
 9502              	.LVL1257:
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 9503              		.loc 1 3834 0
 9504 0110 0DF50153 		add	r3, sp, #8256
 9505 0114 1833     		adds	r3, r3, #24
 9506 0116 1B68     		ldr	r3, [r3]
 9507 0118 03F12002 		add	r2, r3, #32
 9508              	.LVL1258:
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 9509              		.loc 1 3835 0
 9510 011c 0446     		mov	r4, r0
 9511 011e 18B9     		cbnz	r0, .L851
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 9512              		.loc 1 3835 0 is_stmt 0 discriminator 1
 9513 0120 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 9514 0124 2E2B     		cmp	r3, #46
 9515 0126 1CD0     		beq	.L859
 9516              	.LVL1259:
 9517              	.L851:
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
 9518              		.loc 1 3841 0 is_stmt 1
 9519 0128 002C     		cmp	r4, #0
 9520 012a 7FF477AF 		bne	.L848
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
 9521              		.loc 1 3842 0
 9522 012e 0DF58250 		add	r0, sp, #4160
 9523 0132 1830     		adds	r0, r0, #24
 9524 0134 FFF7FEFF 		bl	dir_remove
 9525              	.LVL1260:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
 9526              		.loc 1 3843 0
 9527 0138 0446     		mov	r4, r0
 9528 013a 0028     		cmp	r0, #0
ARM GAS  /tmp/ccTBpncU.s 			page 269


 9529 013c 7FF46EAF 		bne	.L848
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9530              		.loc 1 3844 0
 9531 0140 0DF50153 		add	r3, sp, #8256
 9532 0144 1833     		adds	r3, r3, #24
 9533 0146 1868     		ldr	r0, [r3]
 9534              	.LVL1261:
 9535 0148 FFF7FEFF 		bl	sync_fs
 9536              	.LVL1262:
 9537 014c 0446     		mov	r4, r0
 9538              	.LVL1263:
 9539 014e 65E7     		b	.L848
 9540              	.L858:
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 9541              		.loc 1 3816 0
 9542 0150 0099     		ldr	r1, [sp]
 9543 0152 0CA8     		add	r0, sp, #48
 9544 0154 FFF7FEFF 		bl	follow_path
 9545              	.LVL1264:
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 9546              		.loc 1 3819 0
 9547 0158 0446     		mov	r4, r0
 9548 015a 0028     		cmp	r0, #0
 9549 015c 9DD1     		bne	.L850
 9550 015e 0824     		movs	r4, #8
 9551 0160 5CE7     		b	.L848
 9552              	.LVL1265:
 9553              	.L859:
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
 9554              		.loc 1 3836 0
 9555 0162 10AB     		add	r3, sp, #64
 9556 0164 D3F8F81F 		ldr	r1, [r3, #4088]
 9557 0168 1046     		mov	r0, r2
 9558              	.LVL1266:
 9559 016a FFF7FEFF 		bl	st_clust
 9560              	.LVL1267:
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 9561              		.loc 1 3837 0
 9562 016e 0DF50153 		add	r3, sp, #8256
 9563 0172 1833     		adds	r3, r3, #24
 9564 0174 1A68     		ldr	r2, [r3]
 9565 0176 41F20403 		movw	r3, #4100
 9566 017a 0121     		movs	r1, #1
 9567 017c D154     		strb	r1, [r2, r3]
 9568 017e D3E7     		b	.L851
 9569              	.LVL1268:
 9570              	.L852:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9571              		.loc 1 3811 0
 9572 0180 0424     		movs	r4, #4
 9573              	.LVL1269:
 9574 0182 4BE7     		b	.L848
 9575              	.LVL1270:
 9576              	.L855:
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 9577              		.loc 1 3831 0
 9578 0184 0224     		movs	r4, #2
ARM GAS  /tmp/ccTBpncU.s 			page 270


 9579 0186 49E7     		b	.L848
 9580              	.L861:
 9581              		.align	2
 9582              	.L860:
 9583 0188 00000000 		.word	.LANCHOR5
 9584              		.cfi_endproc
 9585              	.LFE121:
 9587              		.section	.text.f_utime,"ax",%progbits
 9588              		.align	1
 9589              		.global	f_utime
 9590              		.syntax unified
 9591              		.thumb
 9592              		.thumb_func
 9593              		.fpu softvfp
 9595              	f_utime:
 9596              	.LFB122:
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9597              		.loc 1 3868 0
 9598              		.cfi_startproc
 9599              		@ args = 0, pretend = 0, frame = 4160
 9600              		@ frame_needed = 0, uses_anonymous_args = 0
 9601              	.LVL1271:
 9602 0000 10B5     		push	{r4, lr}
 9603              	.LCFI122:
 9604              		.cfi_def_cfa_offset 8
 9605              		.cfi_offset 4, -8
 9606              		.cfi_offset 14, -4
 9607 0002 ADF5825D 		sub	sp, sp, #4160
 9608              	.LCFI123:
 9609              		.cfi_def_cfa_offset 4168
 9610 0006 0190     		str	r0, [sp, #4]
 9611 0008 0C46     		mov	r4, r1
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9612              		.loc 1 3876 0
 9613 000a 0122     		movs	r2, #1
 9614 000c 08AB     		add	r3, sp, #32
 9615 000e 01A9     		add	r1, sp, #4
 9616              	.LVL1272:
 9617 0010 03F6F870 		addw	r0, r3, #4088
 9618              	.LVL1273:
 9619 0014 FFF7FEFF 		bl	find_volume
 9620              	.LVL1274:
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 9621              		.loc 1 3877 0
 9622 0018 0346     		mov	r3, r0
 9623 001a 18B1     		cbz	r0, .L866
 9624              	.LVL1275:
 9625              	.L863:
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9626              		.loc 1 3897 0
 9627 001c 1846     		mov	r0, r3
 9628 001e 0DF5825D 		add	sp, sp, #4160
 9629              	.LCFI124:
 9630              		.cfi_remember_state
 9631              		.cfi_def_cfa_offset 8
 9632              		@ sp needed
 9633 0022 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccTBpncU.s 			page 271


 9634              	.LVL1276:
 9635              	.L866:
 9636              	.LCFI125:
 9637              		.cfi_restore_state
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 9638              		.loc 1 3878 0
 9639 0024 08AB     		add	r3, sp, #32
 9640 0026 06A8     		add	r0, sp, #24
 9641              	.LVL1277:
 9642 0028 A3F11402 		sub	r2, r3, #20
 9643 002c 41F21803 		movw	r3, #4120
 9644 0030 C250     		str	r2, [r0, r3]
 9645 0032 00F58153 		add	r3, r0, #4128
 9646 0036 124A     		ldr	r2, .L867
 9647 0038 1A60     		str	r2, [r3]
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 9648              		.loc 1 3879 0
 9649 003a 0199     		ldr	r1, [sp, #4]
 9650 003c FFF7FEFF 		bl	follow_path
 9651              	.LVL1278:
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 9652              		.loc 1 3883 0
 9653 0040 0346     		mov	r3, r0
 9654 0042 0028     		cmp	r0, #0
 9655 0044 EAD1     		bne	.L863
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
 9656              		.loc 1 3884 0
 9657 0046 06AA     		add	r2, sp, #24
 9658 0048 41F21403 		movw	r3, #4116
 9659 004c D358     		ldr	r3, [r2, r3]
 9660              	.LVL1279:
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 9661              		.loc 1 3885 0
 9662 004e ABB1     		cbz	r3, .L864
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
 9663              		.loc 1 3888 0
 9664 0050 A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 9665 0052 9A75     		strb	r2, [r3, #22]
 9666 0054 E288     		ldrh	r2, [r4, #6]
 9667 0056 120A     		lsrs	r2, r2, #8
 9668 0058 DA75     		strb	r2, [r3, #23]
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 9669              		.loc 1 3889 0
 9670 005a 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 9671 005c 1A76     		strb	r2, [r3, #24]
 9672 005e A288     		ldrh	r2, [r4, #4]
 9673 0060 120A     		lsrs	r2, r2, #8
 9674 0062 5A76     		strb	r2, [r3, #25]
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 9675              		.loc 1 3890 0
 9676 0064 0DF58053 		add	r3, sp, #4096
 9677              	.LVL1280:
 9678 0068 1833     		adds	r3, r3, #24
 9679 006a 1868     		ldr	r0, [r3]
 9680              	.LVL1281:
 9681 006c 41F20403 		movw	r3, #4100
 9682 0070 0122     		movs	r2, #1
ARM GAS  /tmp/ccTBpncU.s 			page 272


 9683 0072 C254     		strb	r2, [r0, r3]
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9684              		.loc 1 3891 0
 9685 0074 FFF7FEFF 		bl	sync_fs
 9686              	.LVL1282:
 9687 0078 0346     		mov	r3, r0
 9688              	.LVL1283:
 9689 007a CFE7     		b	.L863
 9690              	.LVL1284:
 9691              	.L864:
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
 9692              		.loc 1 3886 0
 9693 007c 0623     		movs	r3, #6
 9694              	.LVL1285:
 9695 007e CDE7     		b	.L863
 9696              	.L868:
 9697              		.align	2
 9698              	.L867:
 9699 0080 00000000 		.word	.LANCHOR5
 9700              		.cfi_endproc
 9701              	.LFE122:
 9703              		.section	.text.f_mkfs,"ax",%progbits
 9704              		.align	1
 9705              		.global	f_mkfs
 9706              		.syntax unified
 9707              		.thumb
 9708              		.thumb_func
 9709              		.fpu softvfp
 9711              	f_mkfs:
 9712              	.LFB123:
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
 9713              		.loc 1 4143 0
 9714              		.cfi_startproc
 9715              		@ args = 0, pretend = 0, frame = 40
 9716              		@ frame_needed = 0, uses_anonymous_args = 0
 9717              	.LVL1286:
 9718 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9719              	.LCFI126:
 9720              		.cfi_def_cfa_offset 36
 9721              		.cfi_offset 4, -36
 9722              		.cfi_offset 5, -32
 9723              		.cfi_offset 6, -28
 9724              		.cfi_offset 7, -24
 9725              		.cfi_offset 8, -20
 9726              		.cfi_offset 9, -16
 9727              		.cfi_offset 10, -12
 9728              		.cfi_offset 11, -8
 9729              		.cfi_offset 14, -4
 9730 0004 8BB0     		sub	sp, sp, #44
 9731              	.LCFI127:
 9732              		.cfi_def_cfa_offset 80
 9733 0006 0790     		str	r0, [sp, #28]
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
 9734              		.loc 1 4160 0
 9735 0008 0129     		cmp	r1, #1
 9736 000a 03D9     		bls	.L940
 9737 000c 1320     		movs	r0, #19
ARM GAS  /tmp/ccTBpncU.s 			page 273


 9738              	.LVL1287:
 9739              	.L870:
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9740              		.loc 1 4375 0
 9741 000e 0BB0     		add	sp, sp, #44
 9742              	.LCFI128:
 9743              		.cfi_remember_state
 9744              		.cfi_def_cfa_offset 36
 9745              		@ sp needed
 9746 0010 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9747              	.LVL1288:
 9748              	.L940:
 9749              	.LCFI129:
 9750              		.cfi_restore_state
 9751 0014 0C46     		mov	r4, r1
 9752 0016 1746     		mov	r7, r2
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 9753              		.loc 1 4161 0
 9754 0018 07A8     		add	r0, sp, #28
 9755              	.LVL1289:
 9756 001a FFF7FEFF 		bl	get_ldnumber
 9757              	.LVL1290:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 9758              		.loc 1 4162 0
 9759 001e 0028     		cmp	r0, #0
 9760 0020 C0F2EE82 		blt	.L910
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
 9761              		.loc 1 4163 0
 9762 0024 A94B     		ldr	r3, .L953
 9763 0026 53F82060 		ldr	r6, [r3, r0, lsl #2]
 9764              	.LVL1291:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 9765              		.loc 1 4164 0
 9766 002a 002E     		cmp	r6, #0
 9767 002c 00F0EA82 		beq	.L911
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 9768              		.loc 1 4165 0
 9769 0030 06F58053 		add	r3, r6, #4096
 9770 0034 0022     		movs	r2, #0
 9771 0036 1A70     		strb	r2, [r3]
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
 9772              		.loc 1 4166 0
 9773 0038 C5B2     		uxtb	r5, r0
 9774              	.LVL1292:
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 9775              		.loc 1 4170 0
 9776 003a 2846     		mov	r0, r5
 9777              	.LVL1293:
 9778 003c FFF7FEFF 		bl	disk_initialize
 9779              	.LVL1294:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 9780              		.loc 1 4171 0
 9781 0040 10F0010F 		tst	r0, #1
 9782 0044 40F0E082 		bne	.L912
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 9783              		.loc 1 4172 0
 9784 0048 10F0040F 		tst	r0, #4
ARM GAS  /tmp/ccTBpncU.s 			page 274


 9785 004c 40F0DE82 		bne	.L913
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 9786              		.loc 1 4174 0
 9787 0050 06F58052 		add	r2, r6, #4096
 9788 0054 0A32     		adds	r2, r2, #10
 9789 0056 0221     		movs	r1, #2
 9790 0058 2846     		mov	r0, r5
 9791              	.LVL1295:
 9792 005a FFF7FEFF 		bl	disk_ioctl
 9793              	.LVL1296:
 9794 005e 0028     		cmp	r0, #0
 9795 0060 40F0D682 		bne	.L914
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 9796              		.loc 1 4174 0 is_stmt 0 discriminator 1
 9797 0064 41F20A03 		movw	r3, #4106
 9798 0068 F35A     		ldrh	r3, [r6, r3]
 9799 006a B3F5805F 		cmp	r3, #4096
 9800 006e 00F2D182 		bhi	.L915
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 9801              		.loc 1 4174 0 discriminator 2
 9802 0072 B3F5007F 		cmp	r3, #512
 9803 0076 01D2     		bcs	.L941
4175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9804              		.loc 1 4175 0 is_stmt 1
 9805 0078 0120     		movs	r0, #1
 9806 007a C8E7     		b	.L870
 9807              	.L941:
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 9808              		.loc 1 4187 0
 9809 007c 08AA     		add	r2, sp, #32
 9810 007e 0121     		movs	r1, #1
 9811 0080 2846     		mov	r0, r5
 9812 0082 FFF7FEFF 		bl	disk_ioctl
 9813              	.LVL1297:
 9814 0086 0028     		cmp	r0, #0
 9815 0088 40F0C682 		bne	.L917
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 9816              		.loc 1 4187 0 is_stmt 0 discriminator 1
 9817 008c 089A     		ldr	r2, [sp, #32]
 9818 008e 7F2A     		cmp	r2, #127
 9819 0090 40F2C482 		bls	.L918
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 9820              		.loc 1 4189 0 is_stmt 1
 9821 0094 A4B1     		cbz	r4, .L919
 9822 0096 0023     		movs	r3, #0
 9823 0098 0193     		str	r3, [sp, #4]
 9824              	.L871:
 9825              	.LVL1298:
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9826              		.loc 1 4190 0 discriminator 4
 9827 009a 019B     		ldr	r3, [sp, #4]
 9828 009c D21A     		subs	r2, r2, r3
 9829 009e 0892     		str	r2, [sp, #32]
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 9830              		.loc 1 4193 0 discriminator 4
 9831 00a0 7B1E     		subs	r3, r7, #1
 9832 00a2 1F42     		tst	r7, r3
ARM GAS  /tmp/ccTBpncU.s 			page 275


 9833 00a4 00D1     		bne	.L872
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
 9834              		.loc 1 4194 0
 9835 00a6 BFB9     		cbnz	r7, .L873
 9836              	.L872:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
 9837              		.loc 1 4195 0
 9838 00a8 41F20A03 		movw	r3, #4106
 9839 00ac F35A     		ldrh	r3, [r6, r3]
 9840 00ae 5B0A     		lsrs	r3, r3, #9
 9841 00b0 4FF4FA60 		mov	r0, #2000
 9842 00b4 90FBF3F0 		sdiv	r0, r0, r3
 9843 00b8 B2FBF0F0 		udiv	r0, r2, r0
 9844              	.LVL1299:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 9845              		.loc 1 4196 0
 9846 00bc 0023     		movs	r3, #0
 9847 00be 03E0     		b	.L874
 9848              	.LVL1300:
 9849              	.L919:
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 9850              		.loc 1 4189 0
 9851 00c0 3F23     		movs	r3, #63
 9852 00c2 0193     		str	r3, [sp, #4]
 9853 00c4 E9E7     		b	.L871
 9854              	.LVL1301:
 9855              	.L875:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 9856              		.loc 1 4196 0 discriminator 3
 9857 00c6 0133     		adds	r3, r3, #1
 9858              	.LVL1302:
 9859              	.L874:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 9860              		.loc 1 4196 0 is_stmt 0 discriminator 1
 9861 00c8 8149     		ldr	r1, .L953+4
 9862 00ca 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 9863 00ce 8842     		cmp	r0, r1
 9864 00d0 F9D3     		bcc	.L875
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9865              		.loc 1 4197 0 is_stmt 1
 9866 00d2 8049     		ldr	r1, .L953+8
 9867 00d4 31F81370 		ldrh	r7, [r1, r3, lsl #1]
 9868              	.LVL1303:
 9869              	.L873:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 9870              		.loc 1 4199 0
 9871 00d8 B7F5007F 		cmp	r7, #512
 9872 00dc 04D3     		bcc	.L876
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 9873              		.loc 1 4199 0 is_stmt 0 discriminator 1
 9874 00de 41F20A03 		movw	r3, #4106
 9875 00e2 F35A     		ldrh	r3, [r6, r3]
 9876 00e4 B7FBF3F7 		udiv	r7, r7, r3
 9877              	.LVL1304:
 9878              	.L876:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
 9879              		.loc 1 4200 0 is_stmt 1
ARM GAS  /tmp/ccTBpncU.s 			page 276


 9880 00e8 1FB1     		cbz	r7, .L920
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9881              		.loc 1 4201 0
 9882 00ea 802F     		cmp	r7, #128
 9883 00ec 02D9     		bls	.L877
 9884 00ee 8027     		movs	r7, #128
 9885              	.LVL1305:
 9886 00f0 00E0     		b	.L877
 9887              	.LVL1306:
 9888              	.L920:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
 9889              		.loc 1 4200 0
 9890 00f2 0127     		movs	r7, #1
 9891              	.LVL1307:
 9892              	.L877:
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 9893              		.loc 1 4204 0
 9894 00f4 B2FBF7F3 		udiv	r3, r2, r7
 9895              	.LVL1308:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 9896              		.loc 1 4206 0
 9897 00f8 40F6F571 		movw	r1, #4085
 9898 00fc 8B42     		cmp	r3, r1
 9899 00fe 1FD8     		bhi	.L922
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
 9900              		.loc 1 4205 0
 9901 0100 4FF00109 		mov	r9, #1
 9902              	.L878:
 9903              	.LVL1309:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9904              		.loc 1 4207 0
 9905 0104 4FF6F571 		movw	r1, #65525
 9906 0108 8B42     		cmp	r3, r1
 9907 010a 1CD8     		bhi	.L923
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
 9908              		.loc 1 4210 0
 9909 010c B9F1030F 		cmp	r9, #3
 9910 0110 1BD0     		beq	.L879
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 9911              		.loc 1 4215 0
 9912 0112 B9F1010F 		cmp	r9, #1
 9913 0116 00F0B580 		beq	.L942
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 9914              		.loc 1 4215 0 is_stmt 0 discriminator 2
 9915 011a 0233     		adds	r3, r3, #2
 9916              	.LVL1310:
 9917 011c 5B00     		lsls	r3, r3, #1
 9918              	.LVL1311:
 9919              	.L883:
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
 9920              		.loc 1 4216 0 is_stmt 1 discriminator 4
 9921 011e 41F20A01 		movw	r1, #4106
 9922 0122 715A     		ldrh	r1, [r6, r1]
 9923 0124 03EB0108 		add	r8, r3, r1
 9924 0128 08F1FF38 		add	r8, r8, #-1
 9925 012c B8FBF1F8 		udiv	r8, r8, r1
 9926              	.LVL1312:
ARM GAS  /tmp/ccTBpncU.s 			page 277


4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9927              		.loc 1 4218 0 discriminator 4
 9928 0130 4FF48043 		mov	r3, #16384
 9929 0134 B3FBF1F3 		udiv	r3, r3, r1
 9930 0138 0493     		str	r3, [sp, #16]
 9931              	.LVL1313:
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
 9932              		.loc 1 4217 0 discriminator 4
 9933 013a 4FF0010A 		mov	r10, #1
 9934 013e 13E0     		b	.L881
 9935              	.LVL1314:
 9936              	.L922:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 9937              		.loc 1 4206 0
 9938 0140 4FF00209 		mov	r9, #2
 9939 0144 DEE7     		b	.L878
 9940              	.LVL1315:
 9941              	.L923:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9942              		.loc 1 4207 0
 9943 0146 4FF00309 		mov	r9, #3
 9944              	.LVL1316:
 9945              	.L879:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
 9946              		.loc 1 4211 0
 9947 014a 03F10208 		add	r8, r3, #2
 9948 014e 41F20A03 		movw	r3, #4106
 9949              	.LVL1317:
 9950 0152 F35A     		ldrh	r3, [r6, r3]
 9951 0154 03EB8808 		add	r8, r3, r8, lsl #2
 9952              	.LVL1318:
 9953 0158 08F1FF38 		add	r8, r8, #-1
 9954 015c B8FBF3F8 		udiv	r8, r8, r3
 9955              	.LVL1319:
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 9956              		.loc 1 4213 0
 9957 0160 0023     		movs	r3, #0
 9958 0162 0493     		str	r3, [sp, #16]
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
 9959              		.loc 1 4212 0
 9960 0164 4FF0200A 		mov	r10, #32
 9961              	.LVL1320:
 9962              	.L881:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
 9963              		.loc 1 4220 0
 9964 0168 0199     		ldr	r1, [sp, #4]
 9965 016a 0AEB0103 		add	r3, r10, r1
 9966 016e 0293     		str	r3, [sp, #8]
 9967              	.LVL1321:
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
 9968              		.loc 1 4221 0
 9969 0170 08EB030B 		add	fp, r8, r3
 9970              	.LVL1322:
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 9971              		.loc 1 4222 0
 9972 0174 049B     		ldr	r3, [sp, #16]
 9973              	.LVL1323:
ARM GAS  /tmp/ccTBpncU.s 			page 278


 9974 0176 9B44     		add	fp, fp, r3
 9975              	.LVL1324:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9976              		.loc 1 4223 0
 9977 0178 07EB0B03 		add	r3, r7, fp
 9978 017c 5B1A     		subs	r3, r3, r1
 9979 017e 9A42     		cmp	r2, r3
 9980 0180 C0F04E82 		bcc	.L924
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 9981              		.loc 1 4226 0
 9982 0184 09AA     		add	r2, sp, #36
 9983              	.LVL1325:
 9984 0186 0321     		movs	r1, #3
 9985 0188 2846     		mov	r0, r5
 9986 018a FFF7FEFF 		bl	disk_ioctl
 9987              	.LVL1326:
 9988 018e 20B9     		cbnz	r0, .L884
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 9989              		.loc 1 4226 0 is_stmt 0 discriminator 2
 9990 0190 099B     		ldr	r3, [sp, #36]
 9991 0192 13B1     		cbz	r3, .L884
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 9992              		.loc 1 4226 0 discriminator 4
 9993 0194 B3F5004F 		cmp	r3, #32768
 9994 0198 01D9     		bls	.L885
 9995              	.L884:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 9996              		.loc 1 4226 0 discriminator 5
 9997 019a 0123     		movs	r3, #1
 9998 019c 0993     		str	r3, [sp, #36]
 9999              	.L885:
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
 10000              		.loc 1 4227 0 is_stmt 1
 10001 019e 099A     		ldr	r2, [sp, #36]
 10002 01a0 02EB0B03 		add	r3, r2, fp
 10003 01a4 013B     		subs	r3, r3, #1
 10004 01a6 5242     		negs	r2, r2
 10005 01a8 1340     		ands	r3, r3, r2
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
 10006              		.loc 1 4228 0
 10007 01aa A3EB0B03 		sub	r3, r3, fp
 10008 01ae 0993     		str	r3, [sp, #36]
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
 10009              		.loc 1 4229 0
 10010 01b0 B9F1030F 		cmp	r9, #3
 10011 01b4 6CD0     		beq	.L943
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10012              		.loc 1 4233 0
 10013 01b6 9844     		add	r8, r8, r3
 10014              	.LVL1327:
 10015              	.L887:
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 10016              		.loc 1 4237 0
 10017 01b8 089A     		ldr	r2, [sp, #32]
 10018 01ba A2EB0A03 		sub	r3, r2, r10
 10019 01be A3EB0803 		sub	r3, r3, r8
 10020 01c2 0499     		ldr	r1, [sp, #16]
ARM GAS  /tmp/ccTBpncU.s 			page 279


 10021 01c4 5B1A     		subs	r3, r3, r1
 10022 01c6 B3FBF7FB 		udiv	fp, r3, r7
 10023              	.LVL1328:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 10024              		.loc 1 4238 0
 10025 01ca B9F1020F 		cmp	r9, #2
 10026 01ce 64D0     		beq	.L944
 10027              	.L888:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 10028              		.loc 1 4239 0
 10029 01d0 B9F1030F 		cmp	r9, #3
 10030 01d4 67D0     		beq	.L945
 10031              	.L889:
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
 10032              		.loc 1 4243 0
 10033 01d6 B9F1030F 		cmp	r9, #3
 10034 01da 70D0     		beq	.L927
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 10035              		.loc 1 4246 0
 10036 01dc B9F1010F 		cmp	r9, #1
 10037 01e0 67D0     		beq	.L946
 10038              	.L891:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10039              		.loc 1 4249 0
 10040 01e2 B2F5803F 		cmp	r2, #65536
 10041 01e6 6DD2     		bcs	.L929
 10042 01e8 0423     		movs	r3, #4
 10043 01ea 0393     		str	r3, [sp, #12]
 10044              	.L890:
 10045              	.LVL1329:
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
 10046              		.loc 1 4261 0
 10047 01ec 002C     		cmp	r4, #0
 10048 01ee 73D1     		bne	.L930
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
 10049              		.loc 1 4264 0
 10050 01f0 41F20A03 		movw	r3, #4106
 10051 01f4 F25A     		ldrh	r2, [r6, r3]
 10052 01f6 0021     		movs	r1, #0
 10053 01f8 3046     		mov	r0, r6
 10054 01fa FFF7FEFF 		bl	mem_set
 10055              	.LVL1330:
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
 10056              		.loc 1 4266 0
 10057 01fe 0123     		movs	r3, #1
 10058 0200 86F8BF31 		strb	r3, [r6, #447]
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
 10059              		.loc 1 4267 0
 10060 0204 86F8C031 		strb	r3, [r6, #448]
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
 10061              		.loc 1 4268 0
 10062 0208 0022     		movs	r2, #0
 10063 020a 86F8C121 		strb	r2, [r6, #449]
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
 10064              		.loc 1 4269 0
 10065 020e 0399     		ldr	r1, [sp, #12]
 10066 0210 86F8C211 		strb	r1, [r6, #450]
ARM GAS  /tmp/ccTBpncU.s 			page 280


4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
 10067              		.loc 1 4270 0
 10068 0214 FE21     		movs	r1, #254
 10069 0216 86F8C311 		strb	r1, [r6, #451]
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
 10070              		.loc 1 4271 0
 10071 021a 0899     		ldr	r1, [sp, #32]
 10072 021c 0198     		ldr	r0, [sp, #4]
 10073 021e 0844     		add	r0, r0, r1
 10074 0220 43F6C164 		movw	r4, #16065
 10075 0224 B0FBF4F0 		udiv	r0, r0, r4
 10076 0228 0990     		str	r0, [sp, #36]
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
 10077              		.loc 1 4272 0
 10078 022a 8408     		lsrs	r4, r0, #2
 10079 022c 44F03F04 		orr	r4, r4, #63
 10080 0230 86F8C441 		strb	r4, [r6, #452]
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
 10081              		.loc 1 4273 0
 10082 0234 86F8C501 		strb	r0, [r6, #453]
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
 10083              		.loc 1 4274 0
 10084 0238 3F20     		movs	r0, #63
 10085 023a 86F8C601 		strb	r0, [r6, #454]
 10086 023e 86F8C721 		strb	r2, [r6, #455]
 10087 0242 86F8C821 		strb	r2, [r6, #456]
 10088 0246 86F8C921 		strb	r2, [r6, #457]
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
 10089              		.loc 1 4275 0
 10090 024a 86F8CA11 		strb	r1, [r6, #458]
 10091 024e C1F30720 		ubfx	r0, r1, #8, #8
 10092 0252 86F8CB01 		strb	r0, [r6, #459]
 10093 0256 C1F30740 		ubfx	r0, r1, #16, #8
 10094 025a 86F8CC01 		strb	r0, [r6, #460]
 10095 025e 090E     		lsrs	r1, r1, #24
 10096 0260 86F8CD11 		strb	r1, [r6, #461]
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
 10097              		.loc 1 4276 0
 10098 0264 5521     		movs	r1, #85
 10099 0266 86F8FE11 		strb	r1, [r6, #510]
 10100 026a AA21     		movs	r1, #170
 10101 026c 86F8FF11 		strb	r1, [r6, #511]
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 10102              		.loc 1 4277 0
 10103 0270 3146     		mov	r1, r6
 10104 0272 2846     		mov	r0, r5
 10105 0274 FFF7FEFF 		bl	disk_write
 10106              	.LVL1331:
 10107 0278 0028     		cmp	r0, #0
 10108 027a 40F0D381 		bne	.L931
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10109              		.loc 1 4279 0
 10110 027e F823     		movs	r3, #248
 10111 0280 0593     		str	r3, [sp, #20]
 10112 0282 2BE0     		b	.L892
 10113              	.LVL1332:
 10114              	.L942:
ARM GAS  /tmp/ccTBpncU.s 			page 281


4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 10115              		.loc 1 4215 0 discriminator 1
 10116 0284 03EB4303 		add	r3, r3, r3, lsl #1
 10117              	.LVL1333:
 10118 0288 0133     		adds	r3, r3, #1
 10119 028a 5B08     		lsrs	r3, r3, #1
 10120 028c 0333     		adds	r3, r3, #3
 10121 028e 46E7     		b	.L883
 10122              	.LVL1334:
 10123              	.L943:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
 10124              		.loc 1 4230 0
 10125 0290 9A44     		add	r10, r10, r3
 10126              	.LVL1335:
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
 10127              		.loc 1 4231 0
 10128 0292 029A     		ldr	r2, [sp, #8]
 10129 0294 1A44     		add	r2, r2, r3
 10130 0296 0292     		str	r2, [sp, #8]
 10131              	.LVL1336:
 10132 0298 8EE7     		b	.L887
 10133              	.LVL1337:
 10134              	.L944:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 10135              		.loc 1 4238 0 discriminator 1
 10136 029a 40F6F573 		movw	r3, #4085
 10137 029e 9B45     		cmp	fp, r3
 10138 02a0 96D8     		bhi	.L888
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10139              		.loc 1 4240 0
 10140 02a2 0E20     		movs	r0, #14
 10141 02a4 B3E6     		b	.L870
 10142              	.L945:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 10143              		.loc 1 4239 0 discriminator 1
 10144 02a6 4FF6F573 		movw	r3, #65525
 10145 02aa 9B45     		cmp	fp, r3
 10146 02ac 93D8     		bhi	.L889
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10147              		.loc 1 4240 0
 10148 02ae 0E20     		movs	r0, #14
 10149 02b0 ADE6     		b	.L870
 10150              	.L946:
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 10151              		.loc 1 4246 0 discriminator 1
 10152 02b2 B2F5803F 		cmp	r2, #65536
 10153 02b6 94D2     		bcs	.L891
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 10154              		.loc 1 4247 0
 10155 02b8 CDF80C90 		str	r9, [sp, #12]
 10156 02bc 96E7     		b	.L890
 10157              	.L927:
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 10158              		.loc 1 4244 0
 10159 02be 0C23     		movs	r3, #12
 10160 02c0 0393     		str	r3, [sp, #12]
 10161 02c2 93E7     		b	.L890
ARM GAS  /tmp/ccTBpncU.s 			page 282


 10162              	.L929:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10163              		.loc 1 4249 0
 10164 02c4 0623     		movs	r3, #6
 10165 02c6 0393     		str	r3, [sp, #12]
 10166 02c8 90E7     		b	.L890
 10167              	.L954:
 10168 02ca 00BF     		.align	2
 10169              	.L953:
 10170 02cc 00000000 		.word	.LANCHOR2
 10171 02d0 00000000 		.word	.LANCHOR6
 10172 02d4 00000000 		.word	.LANCHOR7
 10173              	.LVL1338:
 10174              	.L930:
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
 10175              		.loc 1 4262 0
 10176 02d8 F023     		movs	r3, #240
 10177 02da 0593     		str	r3, [sp, #20]
 10178              	.L892:
 10179              	.LVL1339:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
 10180              		.loc 1 4284 0
 10181 02dc 0396     		str	r6, [sp, #12]
 10182              	.LVL1340:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
 10183              		.loc 1 4285 0
 10184 02de 41F20A04 		movw	r4, #4106
 10185 02e2 325B     		ldrh	r2, [r6, r4]
 10186 02e4 0021     		movs	r1, #0
 10187 02e6 3046     		mov	r0, r6
 10188 02e8 FFF7FEFF 		bl	mem_set
 10189              	.LVL1341:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
 10190              		.loc 1 4286 0
 10191 02ec 0B22     		movs	r2, #11
 10192 02ee D249     		ldr	r1, .L955
 10193 02f0 3046     		mov	r0, r6
 10194 02f2 FFF7FEFF 		bl	mem_cpy
 10195              	.LVL1342:
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_BytsPerSec, i);
 10196              		.loc 1 4287 0
 10197 02f6 335B     		ldrh	r3, [r6, r4]
 10198              	.LVL1343:
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
 10199              		.loc 1 4288 0
 10200 02f8 F372     		strb	r3, [r6, #11]
 10201 02fa 1B0A     		lsrs	r3, r3, #8
 10202              	.LVL1344:
 10203 02fc 3373     		strb	r3, [r6, #12]
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
 10204              		.loc 1 4289 0
 10205 02fe 7773     		strb	r7, [r6, #13]
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
 10206              		.loc 1 4290 0
 10207 0300 86F80EA0 		strb	r10, [r6, #14]
 10208 0304 CAF3072A 		ubfx	r10, r10, #8, #8
 10209              	.LVL1345:
ARM GAS  /tmp/ccTBpncU.s 			page 283


 10210 0308 86F80FA0 		strb	r10, [r6, #15]
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
 10211              		.loc 1 4291 0
 10212 030c 0123     		movs	r3, #1
 10213 030e 3374     		strb	r3, [r6, #16]
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 10214              		.loc 1 4292 0
 10215 0310 B9F1030F 		cmp	r9, #3
 10216 0314 59D0     		beq	.L947
 10217              	.LVL1346:
 10218 0316 4FF40073 		mov	r3, #512
 10219              	.L893:
 10220              	.LVL1347:
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
 10221              		.loc 1 4293 0 discriminator 4
 10222 031a DAB2     		uxtb	r2, r3
 10223 031c 7274     		strb	r2, [r6, #17]
 10224 031e 9BB2     		uxth	r3, r3
 10225              	.LVL1348:
 10226 0320 1B0A     		lsrs	r3, r3, #8
 10227 0322 B374     		strb	r3, [r6, #18]
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
 10228              		.loc 1 4294 0 discriminator 4
 10229 0324 089B     		ldr	r3, [sp, #32]
 10230 0326 B3F5803F 		cmp	r3, #65536
 10231 032a 50D2     		bcs	.L894
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 10232              		.loc 1 4295 0
 10233 032c F374     		strb	r3, [r6, #19]
 10234 032e C3F30723 		ubfx	r3, r3, #8, #8
 10235 0332 3375     		strb	r3, [r6, #20]
 10236              	.L895:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
 10237              		.loc 1 4299 0
 10238 0334 059B     		ldr	r3, [sp, #20]
 10239 0336 7375     		strb	r3, [r6, #21]
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
 10240              		.loc 1 4300 0
 10241 0338 3F23     		movs	r3, #63
 10242 033a 3376     		strb	r3, [r6, #24]
 10243 033c 0023     		movs	r3, #0
 10244 033e 7376     		strb	r3, [r6, #25]
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
 10245              		.loc 1 4301 0
 10246 0340 FF22     		movs	r2, #255
 10247 0342 B276     		strb	r2, [r6, #26]
 10248 0344 F376     		strb	r3, [r6, #27]
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
 10249              		.loc 1 4302 0
 10250 0346 019B     		ldr	r3, [sp, #4]
 10251 0348 3377     		strb	r3, [r6, #28]
 10252 034a 0023     		movs	r3, #0
 10253 034c 7377     		strb	r3, [r6, #29]
 10254 034e B377     		strb	r3, [r6, #30]
 10255 0350 F377     		strb	r3, [r6, #31]
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 10256              		.loc 1 4303 0
ARM GAS  /tmp/ccTBpncU.s 			page 284


 10257 0352 FFF7FEFF 		bl	get_fattime
 10258              	.LVL1349:
 10259 0356 0990     		str	r0, [sp, #36]
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
 10260              		.loc 1 4304 0
 10261 0358 B9F1030F 		cmp	r9, #3
 10262 035c 45D0     		beq	.L948
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
 10263              		.loc 1 4314 0
 10264 035e 86F82700 		strb	r0, [r6, #39]
 10265 0362 C0F30723 		ubfx	r3, r0, #8, #8
 10266 0366 86F82830 		strb	r3, [r6, #40]
 10267 036a C0F30743 		ubfx	r3, r0, #16, #8
 10268 036e 86F82930 		strb	r3, [r6, #41]
 10269 0372 000E     		lsrs	r0, r0, #24
 10270 0374 86F82A00 		strb	r0, [r6, #42]
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
 10271              		.loc 1 4315 0
 10272 0378 86F81680 		strb	r8, [r6, #22]
 10273 037c C8F30723 		ubfx	r3, r8, #8, #8
 10274 0380 F375     		strb	r3, [r6, #23]
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
 10275              		.loc 1 4316 0
 10276 0382 8023     		movs	r3, #128
 10277 0384 86F82430 		strb	r3, [r6, #36]
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 10278              		.loc 1 4317 0
 10279 0388 2923     		movs	r3, #41
 10280 038a 86F82630 		strb	r3, [r6, #38]
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10281              		.loc 1 4318 0
 10282 038e 1322     		movs	r2, #19
 10283 0390 AA49     		ldr	r1, .L955+4
 10284 0392 06F12B00 		add	r0, r6, #43
 10285 0396 FFF7FEFF 		bl	mem_cpy
 10286              	.LVL1350:
 10287              	.L897:
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 10288              		.loc 1 4320 0
 10289 039a 5523     		movs	r3, #85
 10290 039c 86F8FE31 		strb	r3, [r6, #510]
 10291 03a0 AA23     		movs	r3, #170
 10292 03a2 86F8FF31 		strb	r3, [r6, #511]
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 10293              		.loc 1 4321 0
 10294 03a6 0123     		movs	r3, #1
 10295 03a8 019A     		ldr	r2, [sp, #4]
 10296 03aa 3146     		mov	r1, r6
 10297 03ac 2846     		mov	r0, r5
 10298 03ae FFF7FEFF 		bl	disk_write
 10299              	.LVL1351:
 10300 03b2 0028     		cmp	r0, #0
 10301 03b4 40F03881 		bne	.L933
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
 10302              		.loc 1 4323 0
 10303 03b8 B9F1030F 		cmp	r9, #3
 10304 03bc 51D0     		beq	.L949
ARM GAS  /tmp/ccTBpncU.s 			page 285


 10305              	.L898:
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 10306              		.loc 1 4344 0 discriminator 1
 10307 03be 4FF0000A 		mov	r10, #0
 10308 03c2 029C     		ldr	r4, [sp, #8]
 10309 03c4 CDF818B0 		str	fp, [sp, #24]
 10310 03c8 72E0     		b	.L904
 10311              	.L947:
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 10312              		.loc 1 4292 0
 10313 03ca 0023     		movs	r3, #0
 10314 03cc A5E7     		b	.L893
 10315              	.L894:
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10316              		.loc 1 4297 0
 10317 03ce 86F82030 		strb	r3, [r6, #32]
 10318 03d2 C3F30722 		ubfx	r2, r3, #8, #8
 10319 03d6 86F82120 		strb	r2, [r6, #33]
 10320 03da C3F30742 		ubfx	r2, r3, #16, #8
 10321 03de 86F82220 		strb	r2, [r6, #34]
 10322 03e2 1B0E     		lsrs	r3, r3, #24
 10323 03e4 86F82330 		strb	r3, [r6, #35]
 10324 03e8 A4E7     		b	.L895
 10325              	.L948:
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
 10326              		.loc 1 4305 0
 10327 03ea 86F84300 		strb	r0, [r6, #67]
 10328 03ee C0F30723 		ubfx	r3, r0, #8, #8
 10329 03f2 86F84430 		strb	r3, [r6, #68]
 10330 03f6 C0F30743 		ubfx	r3, r0, #16, #8
 10331 03fa 86F84530 		strb	r3, [r6, #69]
 10332 03fe 000E     		lsrs	r0, r0, #24
 10333 0400 86F84600 		strb	r0, [r6, #70]
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
 10334              		.loc 1 4306 0
 10335 0404 86F82480 		strb	r8, [r6, #36]
 10336 0408 C8F30723 		ubfx	r3, r8, #8, #8
 10337 040c 86F82530 		strb	r3, [r6, #37]
 10338 0410 C8F30743 		ubfx	r3, r8, #16, #8
 10339 0414 86F82630 		strb	r3, [r6, #38]
 10340 0418 4FEA1863 		lsr	r3, r8, #24
 10341 041c 86F82730 		strb	r3, [r6, #39]
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
 10342              		.loc 1 4307 0
 10343 0420 0223     		movs	r3, #2
 10344 0422 86F82C30 		strb	r3, [r6, #44]
 10345 0426 0023     		movs	r3, #0
 10346 0428 86F82D30 		strb	r3, [r6, #45]
 10347 042c 86F82E30 		strb	r3, [r6, #46]
 10348 0430 86F82F30 		strb	r3, [r6, #47]
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
 10349              		.loc 1 4308 0
 10350 0434 0122     		movs	r2, #1
 10351 0436 86F83020 		strb	r2, [r6, #48]
 10352 043a 86F83130 		strb	r3, [r6, #49]
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
 10353              		.loc 1 4309 0
ARM GAS  /tmp/ccTBpncU.s 			page 286


 10354 043e 0622     		movs	r2, #6
 10355 0440 86F83220 		strb	r2, [r6, #50]
 10356 0444 86F83330 		strb	r3, [r6, #51]
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
 10357              		.loc 1 4310 0
 10358 0448 8023     		movs	r3, #128
 10359 044a 86F84030 		strb	r3, [r6, #64]
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 10360              		.loc 1 4311 0
 10361 044e 2923     		movs	r3, #41
 10362 0450 86F84230 		strb	r3, [r6, #66]
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 10363              		.loc 1 4312 0
 10364 0454 1322     		movs	r2, #19
 10365 0456 7A49     		ldr	r1, .L955+8
 10366 0458 06F14700 		add	r0, r6, #71
 10367 045c FFF7FEFF 		bl	mem_cpy
 10368              	.LVL1352:
 10369 0460 9BE7     		b	.L897
 10370              	.L949:
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10371              		.loc 1 4324 0
 10372 0462 0123     		movs	r3, #1
 10373 0464 019A     		ldr	r2, [sp, #4]
 10374 0466 0632     		adds	r2, r2, #6
 10375 0468 3146     		mov	r1, r6
 10376 046a 2846     		mov	r0, r5
 10377 046c FFF7FEFF 		bl	disk_write
 10378              	.LVL1353:
 10379 0470 A5E7     		b	.L898
 10380              	.LVL1354:
 10381              	.L951:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 10382              		.loc 1 4332 0
 10383 0472 744B     		ldr	r3, .L955+12
 10384 0474 2FE0     		b	.L900
 10385              	.L899:
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
 10386              		.loc 1 4335 0
 10387 0476 059B     		ldr	r3, [sp, #20]
 10388 0478 63F0FF03 		orn	r3, r3, #255
 10389 047c 0993     		str	r3, [sp, #36]
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
 10390              		.loc 1 4336 0
 10391 047e 3370     		strb	r3, [r6]
 10392 0480 BDF82430 		ldrh	r3, [sp, #36]
 10393 0484 1B0A     		lsrs	r3, r3, #8
 10394 0486 7370     		strb	r3, [r6, #1]
 10395 0488 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 10396 048c B370     		strb	r3, [r6, #2]
 10397 048e 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 10398 0492 F370     		strb	r3, [r6, #3]
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
 10399              		.loc 1 4337 0
 10400 0494 FF23     		movs	r3, #255
 10401 0496 3371     		strb	r3, [r6, #4]
 10402 0498 7371     		strb	r3, [r6, #5]
ARM GAS  /tmp/ccTBpncU.s 			page 287


 10403 049a B371     		strb	r3, [r6, #6]
 10404 049c F371     		strb	r3, [r6, #7]
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10405              		.loc 1 4338 0
 10406 049e 3372     		strb	r3, [r6, #8]
 10407 04a0 7372     		strb	r3, [r6, #9]
 10408 04a2 B372     		strb	r3, [r6, #10]
 10409 04a4 0F23     		movs	r3, #15
 10410 04a6 F372     		strb	r3, [r6, #11]
 10411 04a8 22E0     		b	.L901
 10412              	.LVL1355:
 10413              	.L952:
 10414 04aa 1446     		mov	r4, r2
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 10415              		.loc 1 4328 0 discriminator 2
 10416 04ac 0AF1010A 		add	r10, r10, #1
 10417              	.LVL1356:
 10418              	.L904:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 10419              		.loc 1 4328 0 is_stmt 0 discriminator 1
 10420 04b0 BAF1000F 		cmp	r10, #0
 10421 04b4 43D1     		bne	.L950
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
 10422              		.loc 1 4329 0 is_stmt 1
 10423 04b6 41F20A03 		movw	r3, #4106
 10424 04ba F25A     		ldrh	r2, [r6, r3]
 10425 04bc 0021     		movs	r1, #0
 10426 04be 0398     		ldr	r0, [sp, #12]
 10427 04c0 FFF7FEFF 		bl	mem_set
 10428              	.LVL1357:
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
 10429              		.loc 1 4330 0
 10430 04c4 059A     		ldr	r2, [sp, #20]
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
 10431              		.loc 1 4331 0
 10432 04c6 B9F1030F 		cmp	r9, #3
 10433 04ca D4D0     		beq	.L899
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 10434              		.loc 1 4332 0
 10435 04cc B9F1010F 		cmp	r9, #1
 10436 04d0 CFD0     		beq	.L951
 10437 04d2 6FF0FF03 		mvn	r3, #255
 10438              	.L900:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 10439              		.loc 1 4332 0 is_stmt 0 discriminator 4
 10440 04d6 1343     		orrs	r3, r3, r2
 10441 04d8 0993     		str	r3, [sp, #36]
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 10442              		.loc 1 4333 0 is_stmt 1 discriminator 4
 10443 04da 3370     		strb	r3, [r6]
 10444 04dc BDF82430 		ldrh	r3, [sp, #36]
 10445 04e0 1B0A     		lsrs	r3, r3, #8
 10446 04e2 7370     		strb	r3, [r6, #1]
 10447 04e4 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 10448 04e8 B370     		strb	r3, [r6, #2]
 10449 04ea 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 10450 04ee F370     		strb	r3, [r6, #3]
ARM GAS  /tmp/ccTBpncU.s 			page 288


 10451              	.L901:
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 10452              		.loc 1 4340 0
 10453 04f0 04F1010B 		add	fp, r4, #1
 10454              	.LVL1358:
 10455 04f4 0123     		movs	r3, #1
 10456 04f6 2246     		mov	r2, r4
 10457 04f8 039C     		ldr	r4, [sp, #12]
 10458 04fa 2146     		mov	r1, r4
 10459 04fc 2846     		mov	r0, r5
 10460 04fe FFF7FEFF 		bl	disk_write
 10461              	.LVL1359:
 10462 0502 0028     		cmp	r0, #0
 10463 0504 40F09280 		bne	.L935
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 10464              		.loc 1 4342 0
 10465 0508 41F20A03 		movw	r3, #4106
 10466 050c F25A     		ldrh	r2, [r6, r3]
 10467 050e 0021     		movs	r1, #0
 10468 0510 2046     		mov	r0, r4
 10469 0512 FFF7FEFF 		bl	mem_set
 10470              	.LVL1360:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 10471              		.loc 1 4343 0
 10472 0516 0123     		movs	r3, #1
 10473 0518 0993     		str	r3, [sp, #36]
 10474 051a 5A46     		mov	r2, fp
 10475              	.LVL1361:
 10476              	.L902:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 10477              		.loc 1 4343 0 is_stmt 0 discriminator 1
 10478 051c 099B     		ldr	r3, [sp, #36]
 10479 051e 9845     		cmp	r8, r3
 10480 0520 C3D9     		bls	.L952
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 10481              		.loc 1 4344 0 is_stmt 1
 10482 0522 02F1010B 		add	fp, r2, #1
 10483              	.LVL1362:
 10484 0526 0123     		movs	r3, #1
 10485 0528 0399     		ldr	r1, [sp, #12]
 10486 052a 2846     		mov	r0, r5
 10487 052c FFF7FEFF 		bl	disk_write
 10488              	.LVL1363:
 10489 0530 0028     		cmp	r0, #0
 10490 0532 7DD1     		bne	.L936
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 10491              		.loc 1 4343 0 discriminator 2
 10492 0534 099B     		ldr	r3, [sp, #36]
 10493 0536 0133     		adds	r3, r3, #1
 10494 0538 0993     		str	r3, [sp, #36]
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 10495              		.loc 1 4344 0 discriminator 2
 10496 053a 5A46     		mov	r2, fp
 10497 053c EEE7     		b	.L902
 10498              	.LVL1364:
 10499              	.L950:
 10500 053e 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/ccTBpncU.s 			page 289


 10501              	.LVL1365:
 10502 0540 DDF818B0 		ldr	fp, [sp, #24]
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 10503              		.loc 1 4350 0
 10504 0544 B9F1030F 		cmp	r9, #3
 10505 0548 58D1     		bne	.L938
 10506 054a 3C46     		mov	r4, r7
 10507              	.LVL1366:
 10508              	.L907:
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 10509              		.loc 1 4352 0
 10510 054c 029A     		ldr	r2, [sp, #8]
 10511 054e 571C     		adds	r7, r2, #1
 10512              	.LVL1367:
 10513 0550 0123     		movs	r3, #1
 10514 0552 0399     		ldr	r1, [sp, #12]
 10515 0554 2846     		mov	r0, r5
 10516 0556 FFF7FEFF 		bl	disk_write
 10517              	.LVL1368:
 10518 055a 0028     		cmp	r0, #0
 10519 055c 6AD1     		bne	.L937
 10520              	.LVL1369:
 10521 055e 0297     		str	r7, [sp, #8]
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10522              		.loc 1 4354 0
 10523 0560 013C     		subs	r4, r4, #1
 10524              	.LVL1370:
 10525 0562 F3D1     		bne	.L907
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
 10526              		.loc 1 4364 0
 10527 0564 B9F1030F 		cmp	r9, #3
 10528 0568 3FD1     		bne	.L908
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
 10529              		.loc 1 4365 0
 10530 056a 5223     		movs	r3, #82
 10531 056c 3370     		strb	r3, [r6]
 10532 056e 7370     		strb	r3, [r6, #1]
 10533 0570 6123     		movs	r3, #97
 10534 0572 B370     		strb	r3, [r6, #2]
 10535 0574 4122     		movs	r2, #65
 10536 0576 F270     		strb	r2, [r6, #3]
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 10537              		.loc 1 4366 0
 10538 0578 7221     		movs	r1, #114
 10539 057a 86F8E411 		strb	r1, [r6, #484]
 10540 057e 86F8E511 		strb	r1, [r6, #485]
 10541 0582 86F8E621 		strb	r2, [r6, #486]
 10542 0586 86F8E731 		strb	r3, [r6, #487]
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 10543              		.loc 1 4367 0
 10544 058a 0BF1FF33 		add	r3, fp, #-1
 10545 058e 86F8E831 		strb	r3, [r6, #488]
 10546 0592 C3F30723 		ubfx	r3, r3, #8, #8
 10547 0596 86F8E931 		strb	r3, [r6, #489]
 10548 059a 0BF1FF33 		add	r3, fp, #-1
 10549 059e C3F30742 		ubfx	r2, r3, #16, #8
 10550 05a2 86F8EA21 		strb	r2, [r6, #490]
ARM GAS  /tmp/ccTBpncU.s 			page 290


 10551 05a6 1B0E     		lsrs	r3, r3, #24
 10552 05a8 86F8EB31 		strb	r3, [r6, #491]
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
 10553              		.loc 1 4368 0
 10554 05ac 0223     		movs	r3, #2
 10555 05ae 86F8EC31 		strb	r3, [r6, #492]
 10556 05b2 0023     		movs	r3, #0
 10557 05b4 86F8ED31 		strb	r3, [r6, #493]
 10558 05b8 86F8EE31 		strb	r3, [r6, #494]
 10559 05bc 86F8EF31 		strb	r3, [r6, #495]
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
 10560              		.loc 1 4369 0
 10561 05c0 5523     		movs	r3, #85
 10562 05c2 86F8FE31 		strb	r3, [r6, #510]
 10563 05c6 AA23     		movs	r3, #170
 10564 05c8 86F8FF31 		strb	r3, [r6, #511]
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
 10565              		.loc 1 4370 0
 10566 05cc 0123     		movs	r3, #1
 10567 05ce 019C     		ldr	r4, [sp, #4]
 10568              	.LVL1371:
 10569 05d0 2246     		mov	r2, r4
 10570 05d2 1A44     		add	r2, r2, r3
 10571 05d4 3146     		mov	r1, r6
 10572 05d6 2846     		mov	r0, r5
 10573 05d8 FFF7FEFF 		bl	disk_write
 10574              	.LVL1372:
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10575              		.loc 1 4371 0
 10576 05dc 0123     		movs	r3, #1
 10577 05de 2246     		mov	r2, r4
 10578 05e0 0732     		adds	r2, r2, #7
 10579 05e2 3146     		mov	r1, r6
 10580 05e4 2846     		mov	r0, r5
 10581 05e6 FFF7FEFF 		bl	disk_write
 10582              	.LVL1373:
 10583              	.L908:
4374:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10584              		.loc 1 4374 0
 10585 05ea 0022     		movs	r2, #0
 10586 05ec 1146     		mov	r1, r2
 10587 05ee 2846     		mov	r0, r5
 10588 05f0 FFF7FEFF 		bl	disk_ioctl
 10589              	.LVL1374:
 10590 05f4 0030     		adds	r0, r0, #0
 10591 05f6 18BF     		it	ne
 10592 05f8 0120     		movne	r0, #1
 10593 05fa 08E5     		b	.L870
 10594              	.LVL1375:
 10595              	.L938:
 10596 05fc 049C     		ldr	r4, [sp, #16]
 10597              	.LVL1376:
 10598 05fe A5E7     		b	.L907
 10599              	.LVL1377:
 10600              	.L910:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 10601              		.loc 1 4162 0
ARM GAS  /tmp/ccTBpncU.s 			page 291


 10602 0600 0B20     		movs	r0, #11
 10603              	.LVL1378:
 10604 0602 04E5     		b	.L870
 10605              	.LVL1379:
 10606              	.L911:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 10607              		.loc 1 4164 0
 10608 0604 0C20     		movs	r0, #12
 10609              	.LVL1380:
 10610 0606 02E5     		b	.L870
 10611              	.LVL1381:
 10612              	.L912:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 10613              		.loc 1 4171 0
 10614 0608 0320     		movs	r0, #3
 10615              	.LVL1382:
 10616 060a 00E5     		b	.L870
 10617              	.LVL1383:
 10618              	.L913:
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 10619              		.loc 1 4172 0
 10620 060c 0A20     		movs	r0, #10
 10621              	.LVL1384:
 10622 060e FEE4     		b	.L870
 10623              	.L914:
4175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 10624              		.loc 1 4175 0
 10625 0610 0120     		movs	r0, #1
 10626 0612 FCE4     		b	.L870
 10627              	.L915:
 10628 0614 0120     		movs	r0, #1
 10629 0616 FAE4     		b	.L870
 10630              	.L917:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
 10631              		.loc 1 4188 0
 10632 0618 0120     		movs	r0, #1
 10633 061a F8E4     		b	.L870
 10634              	.L918:
 10635 061c 0120     		movs	r0, #1
 10636 061e F6E4     		b	.L870
 10637              	.LVL1385:
 10638              	.L924:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10639              		.loc 1 4223 0
 10640 0620 0E20     		movs	r0, #14
 10641 0622 F4E4     		b	.L870
 10642              	.LVL1386:
 10643              	.L931:
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
 10644              		.loc 1 4278 0
 10645 0624 0120     		movs	r0, #1
 10646 0626 F2E4     		b	.L870
 10647              	.LVL1387:
 10648              	.L933:
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
 10649              		.loc 1 4322 0
 10650 0628 0120     		movs	r0, #1
ARM GAS  /tmp/ccTBpncU.s 			page 292


 10651 062a F0E4     		b	.L870
 10652              	.LVL1388:
 10653              	.L935:
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
 10654              		.loc 1 4341 0
 10655 062c 0120     		movs	r0, #1
 10656 062e EEE4     		b	.L870
 10657              	.L936:
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10658              		.loc 1 4345 0
 10659 0630 0120     		movs	r0, #1
 10660 0632 ECE4     		b	.L870
 10661              	.LVL1389:
 10662              	.L937:
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
 10663              		.loc 1 4353 0
 10664 0634 0120     		movs	r0, #1
 10665 0636 EAE4     		b	.L870
 10666              	.L956:
 10667              		.align	2
 10668              	.L955:
 10669 0638 00000000 		.word	.LC2
 10670 063c 20000000 		.word	.LC4
 10671 0640 0C000000 		.word	.LC3
 10672 0644 00FFFF00 		.word	16776960
 10673              		.cfi_endproc
 10674              	.LFE123:
 10676              		.section	.text.f_gets,"ax",%progbits
 10677              		.align	1
 10678              		.global	f_gets
 10679              		.syntax unified
 10680              		.thumb
 10681              		.thumb_func
 10682              		.fpu softvfp
 10684              	f_gets:
 10685              	.LFB124:
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 10686              		.loc 1 4462 0
 10687              		.cfi_startproc
 10688              		@ args = 0, pretend = 0, frame = 8
 10689              		@ frame_needed = 0, uses_anonymous_args = 0
 10690              	.LVL1390:
 10691 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 10692              	.LCFI130:
 10693              		.cfi_def_cfa_offset 24
 10694              		.cfi_offset 4, -24
 10695              		.cfi_offset 5, -20
 10696              		.cfi_offset 6, -16
 10697              		.cfi_offset 7, -12
 10698              		.cfi_offset 8, -8
 10699              		.cfi_offset 14, -4
 10700 0004 82B0     		sub	sp, sp, #8
 10701              	.LCFI131:
 10702              		.cfi_def_cfa_offset 32
 10703 0006 8046     		mov	r8, r0
 10704 0008 0E46     		mov	r6, r1
 10705 000a 1746     		mov	r7, r2
ARM GAS  /tmp/ccTBpncU.s 			page 293


 10706              	.LVL1391:
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 10707              		.loc 1 4464 0
 10708 000c 0446     		mov	r4, r0
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 10709              		.loc 1 4463 0
 10710 000e 0025     		movs	r5, #0
4469:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
 10711              		.loc 1 4469 0
 10712 0010 01E0     		b	.L958
 10713              	.LVL1392:
 10714              	.L963:
 10715 0012 2246     		mov	r2, r4
 10716              	.LVL1393:
 10717              	.L960:
 10718 0014 1446     		mov	r4, r2
 10719              	.LVL1394:
 10720              	.L958:
 10721 0016 731E     		subs	r3, r6, #1
 10722 0018 AB42     		cmp	r3, r5
 10723 001a 12DD     		ble	.L959
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 10724              		.loc 1 4514 0
 10725 001c 6B46     		mov	r3, sp
 10726 001e 0122     		movs	r2, #1
 10727 0020 01A9     		add	r1, sp, #4
 10728 0022 3846     		mov	r0, r7
 10729 0024 FFF7FEFF 		bl	f_read
 10730              	.LVL1395:
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 10731              		.loc 1 4515 0
 10732 0028 009B     		ldr	r3, [sp]
 10733 002a 012B     		cmp	r3, #1
 10734 002c 09D1     		bne	.L959
4516:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 10735              		.loc 1 4516 0
 10736 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 10737              	.LVL1396:
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 10738              		.loc 1 4518 0
 10739 0032 0D2B     		cmp	r3, #13
 10740 0034 EDD0     		beq	.L963
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 10741              		.loc 1 4519 0
 10742 0036 621C     		adds	r2, r4, #1
 10743              	.LVL1397:
 10744 0038 2370     		strb	r3, [r4]
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 10745              		.loc 1 4520 0
 10746 003a 0135     		adds	r5, r5, #1
 10747              	.LVL1398:
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10748              		.loc 1 4521 0
 10749 003c 0A2B     		cmp	r3, #10
 10750 003e E9D1     		bne	.L960
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 10751              		.loc 1 4519 0
ARM GAS  /tmp/ccTBpncU.s 			page 294


 10752 0040 1446     		mov	r4, r2
 10753              	.LVL1399:
 10754              	.L959:
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 10755              		.loc 1 4523 0
 10756 0042 0023     		movs	r3, #0
 10757 0044 2370     		strb	r3, [r4]
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10758              		.loc 1 4524 0
 10759 0046 1DB1     		cbz	r5, .L965
 10760 0048 4046     		mov	r0, r8
 10761              	.L957:
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10762              		.loc 1 4525 0
 10763 004a 02B0     		add	sp, sp, #8
 10764              	.LCFI132:
 10765              		.cfi_remember_state
 10766              		.cfi_def_cfa_offset 24
 10767              		@ sp needed
 10768 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 10769              	.LVL1400:
 10770              	.L965:
 10771              	.LCFI133:
 10772              		.cfi_restore_state
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10773              		.loc 1 4524 0
 10774 0050 0020     		movs	r0, #0
 10775 0052 FAE7     		b	.L957
 10776              		.cfi_endproc
 10777              	.LFE124:
 10779              		.section	.text.f_putc,"ax",%progbits
 10780              		.align	1
 10781              		.global	f_putc
 10782              		.syntax unified
 10783              		.thumb
 10784              		.thumb_func
 10785              		.fpu softvfp
 10787              	f_putc:
 10788              	.LFB126:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4602:Middlewares/Third_Party/FatFs/src/ff.c **** )
4603:Middlewares/Third_Party/FatFs/src/ff.c **** {
 10789              		.loc 1 4603 0
 10790              		.cfi_startproc
 10791              		@ args = 0, pretend = 0, frame = 80
 10792              		@ frame_needed = 0, uses_anonymous_args = 0
 10793              	.LVL1401:
 10794 0000 00B5     		push	{lr}
 10795              	.LCFI134:
 10796              		.cfi_def_cfa_offset 4
 10797              		.cfi_offset 14, -4
 10798 0002 95B0     		sub	sp, sp, #84
ARM GAS  /tmp/ccTBpncU.s 			page 295


 10799              	.LCFI135:
 10800              		.cfi_def_cfa_offset 88
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;			/* Initialize output buffer */
 10801              		.loc 1 4608 0
 10802 0004 0191     		str	r1, [sp, #4]
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 10803              		.loc 1 4609 0
 10804 0006 0023     		movs	r3, #0
 10805 0008 0293     		str	r3, [sp, #8]
 10806 000a 0393     		str	r3, [sp, #12]
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put a character */
 10807              		.loc 1 4611 0
 10808 000c 0146     		mov	r1, r0
 10809              	.LVL1402:
 10810 000e 01A8     		add	r0, sp, #4
 10811              	.LVL1403:
 10812 0010 FFF7FEFF 		bl	putc_bfd
 10813              	.LVL1404:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0	/* Flush buffered characters to the file */
 10814              		.loc 1 4613 0
 10815 0014 029A     		ldr	r2, [sp, #8]
 10816 0016 002A     		cmp	r2, #0
 10817 0018 0DDB     		blt	.L969
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 10818              		.loc 1 4614 0
 10819 001a 6B46     		mov	r3, sp
 10820 001c 04A9     		add	r1, sp, #16
 10821 001e 0198     		ldr	r0, [sp, #4]
 10822 0020 FFF7FEFF 		bl	f_write
 10823              	.LVL1405:
 10824 0024 50B9     		cbnz	r0, .L970
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 10825              		.loc 1 4615 0
 10826 0026 029A     		ldr	r2, [sp, #8]
 10827 0028 009B     		ldr	r3, [sp]
 10828 002a 9A42     		cmp	r2, r3
 10829 002c 09D1     		bne	.L971
 10830              		.loc 1 4615 0 is_stmt 0 discriminator 1
 10831 002e 0398     		ldr	r0, [sp, #12]
 10832              	.L967:
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10833              		.loc 1 4617 0 is_stmt 1
 10834 0030 15B0     		add	sp, sp, #84
 10835              	.LCFI136:
 10836              		.cfi_remember_state
 10837              		.cfi_def_cfa_offset 4
 10838              		@ sp needed
 10839 0032 5DF804FB 		ldr	pc, [sp], #4
 10840              	.L969:
 10841              	.LCFI137:
ARM GAS  /tmp/ccTBpncU.s 			page 296


 10842              		.cfi_restore_state
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 10843              		.loc 1 4616 0
 10844 0036 4FF0FF30 		mov	r0, #-1
 10845 003a F9E7     		b	.L967
 10846              	.L970:
 10847 003c 4FF0FF30 		mov	r0, #-1
 10848 0040 F6E7     		b	.L967
 10849              	.L971:
 10850 0042 4FF0FF30 		mov	r0, #-1
 10851 0046 F3E7     		b	.L967
 10852              		.cfi_endproc
 10853              	.LFE126:
 10855              		.section	.text.f_puts,"ax",%progbits
 10856              		.align	1
 10857              		.global	f_puts
 10858              		.syntax unified
 10859              		.thumb
 10860              		.thumb_func
 10861              		.fpu softvfp
 10863              	f_puts:
 10864              	.LFB127:
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4623:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
4624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 
4626:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** )
4630:Middlewares/Third_Party/FatFs/src/ff.c **** {
 10865              		.loc 1 4630 0
 10866              		.cfi_startproc
 10867              		@ args = 0, pretend = 0, frame = 80
 10868              		@ frame_needed = 0, uses_anonymous_args = 0
 10869              	.LVL1406:
 10870 0000 10B5     		push	{r4, lr}
 10871              	.LCFI138:
 10872              		.cfi_def_cfa_offset 8
 10873              		.cfi_offset 4, -8
 10874              		.cfi_offset 14, -4
 10875 0002 94B0     		sub	sp, sp, #80
 10876              	.LCFI139:
 10877              		.cfi_def_cfa_offset 88
 10878 0004 0446     		mov	r4, r0
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 10879              		.loc 1 4635 0
 10880 0006 0191     		str	r1, [sp, #4]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
ARM GAS  /tmp/ccTBpncU.s 			page 297


 10881              		.loc 1 4636 0
 10882 0008 0023     		movs	r3, #0
 10883 000a 0293     		str	r3, [sp, #8]
 10884 000c 0393     		str	r3, [sp, #12]
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str)			/* Put the string */
 10885              		.loc 1 4638 0
 10886 000e 03E0     		b	.L974
 10887              	.LVL1407:
 10888              	.L975:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 10889              		.loc 1 4639 0
 10890 0010 0134     		adds	r4, r4, #1
 10891              	.LVL1408:
 10892 0012 01A8     		add	r0, sp, #4
 10893 0014 FFF7FEFF 		bl	putc_bfd
 10894              	.LVL1409:
 10895              	.L974:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 10896              		.loc 1 4638 0
 10897 0018 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 10898 001a 0029     		cmp	r1, #0
 10899 001c F8D1     		bne	.L975
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 10900              		.loc 1 4641 0
 10901 001e 029A     		ldr	r2, [sp, #8]
 10902 0020 002A     		cmp	r2, #0
 10903 0022 0CDB     		blt	.L977
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 10904              		.loc 1 4642 0
 10905 0024 6B46     		mov	r3, sp
 10906 0026 04A9     		add	r1, sp, #16
 10907 0028 0198     		ldr	r0, [sp, #4]
 10908 002a FFF7FEFF 		bl	f_write
 10909              	.LVL1410:
 10910 002e 48B9     		cbnz	r0, .L978
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 10911              		.loc 1 4643 0
 10912 0030 029A     		ldr	r2, [sp, #8]
 10913 0032 009B     		ldr	r3, [sp]
 10914 0034 9A42     		cmp	r2, r3
 10915 0036 08D1     		bne	.L979
 10916              		.loc 1 4643 0 is_stmt 0 discriminator 1
 10917 0038 0398     		ldr	r0, [sp, #12]
 10918              	.L973:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10919              		.loc 1 4645 0 is_stmt 1
 10920 003a 14B0     		add	sp, sp, #80
 10921              	.LCFI140:
 10922              		.cfi_remember_state
 10923              		.cfi_def_cfa_offset 8
 10924              		@ sp needed
 10925 003c 10BD     		pop	{r4, pc}
 10926              	.LVL1411:
 10927              	.L977:
ARM GAS  /tmp/ccTBpncU.s 			page 298


 10928              	.LCFI141:
 10929              		.cfi_restore_state
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 10930              		.loc 1 4644 0
 10931 003e 4FF0FF30 		mov	r0, #-1
 10932 0042 FAE7     		b	.L973
 10933              	.L978:
 10934 0044 4FF0FF30 		mov	r0, #-1
 10935 0048 F7E7     		b	.L973
 10936              	.L979:
 10937 004a 4FF0FF30 		mov	r0, #-1
 10938 004e F4E7     		b	.L973
 10939              		.cfi_endproc
 10940              	.LFE127:
 10942              		.section	.text.f_printf,"ax",%progbits
 10943              		.align	1
 10944              		.global	f_printf
 10945              		.syntax unified
 10946              		.thumb
 10947              		.thumb_func
 10948              		.fpu softvfp
 10950              	f_printf:
 10951              	.LFB128:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 
4650:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4651:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 
4654:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** )
4659:Middlewares/Third_Party/FatFs/src/ff.c **** {
 10952              		.loc 1 4659 0
 10953              		.cfi_startproc
 10954              		@ args = 4, pretend = 12, frame = 104
 10955              		@ frame_needed = 0, uses_anonymous_args = 1
 10956              	.LVL1412:
 10957 0000 0EB4     		push	{r1, r2, r3}
 10958              	.LCFI142:
 10959              		.cfi_def_cfa_offset 12
 10960              		.cfi_offset 1, -12
 10961              		.cfi_offset 2, -8
 10962              		.cfi_offset 3, -4
 10963 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 10964              	.LCFI143:
 10965              		.cfi_def_cfa_offset 44
 10966              		.cfi_offset 4, -44
 10967              		.cfi_offset 5, -40
 10968              		.cfi_offset 6, -36
 10969              		.cfi_offset 7, -32
 10970              		.cfi_offset 8, -28
 10971              		.cfi_offset 9, -24
ARM GAS  /tmp/ccTBpncU.s 			page 299


 10972              		.cfi_offset 10, -20
 10973              		.cfi_offset 14, -16
 10974 0006 9BB0     		sub	sp, sp, #108
 10975              	.LCFI144:
 10976              		.cfi_def_cfa_offset 152
 10977 0008 23AB     		add	r3, sp, #140
 10978 000a 53F8046B 		ldr	r6, [r3], #4
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw, i, j, w;
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, s[16], *p;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 10979              		.loc 1 4668 0
 10980 000e 0190     		str	r0, [sp, #4]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 10981              		.loc 1 4669 0
 10982 0010 0022     		movs	r2, #0
 10983 0012 0292     		str	r2, [sp, #8]
 10984 0014 0392     		str	r2, [sp, #12]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 10985              		.loc 1 4671 0
 10986 0016 1993     		str	r3, [sp, #100]
 10987 0018 03E0     		b	.L982
 10988              	.LVL1413:
 10989              	.L1038:
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 10990              		.loc 1 4677 0
 10991 001a 01A8     		add	r0, sp, #4
 10992 001c FFF7FEFF 		bl	putc_bfd
 10993              	.LVL1414:
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 10994              		.loc 1 4674 0
 10995 0020 2646     		mov	r6, r4
 10996              	.LVL1415:
 10997              	.L982:
 10998 0022 741C     		adds	r4, r6, #1
 10999              	.LVL1416:
 11000 0024 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 11001              	.LVL1417:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 11002              		.loc 1 4675 0
 11003 0026 0029     		cmp	r1, #0
 11004 0028 00F0FC80 		beq	.L983
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 11005              		.loc 1 4676 0
 11006 002c 2529     		cmp	r1, #37
 11007 002e F4D1     		bne	.L1038
ARM GAS  /tmp/ccTBpncU.s 			page 300


 11008              	.LVL1418:
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11009              		.loc 1 4681 0
 11010 0030 B21C     		adds	r2, r6, #2
 11011              	.LVL1419:
 11012 0032 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 11013              	.LVL1420:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 11014              		.loc 1 4682 0
 11015 0034 3029     		cmp	r1, #48
 11016 0036 04D0     		beq	.L1039
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 11017              		.loc 1 4685 0
 11018 0038 2D29     		cmp	r1, #45
 11019 003a 06D0     		beq	.L1040
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11020              		.loc 1 4680 0
 11021 003c 0025     		movs	r5, #0
 11022              	.LVL1421:
 11023              	.L987:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 11024              		.loc 1 4683 0
 11025 003e 0024     		movs	r4, #0
 11026 0040 0FE0     		b	.L988
 11027              	.LVL1422:
 11028              	.L1039:
 11029 0042 F21C     		adds	r2, r6, #3
 11030              	.LVL1423:
 11031 0044 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 11032              	.LVL1424:
 11033 0046 0125     		movs	r5, #1
 11034 0048 F9E7     		b	.L987
 11035              	.LVL1425:
 11036              	.L1040:
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 11037              		.loc 1 4686 0
 11038 004a F21C     		adds	r2, r6, #3
 11039              	.LVL1426:
 11040 004c B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 11041              	.LVL1427:
 11042 004e 0225     		movs	r5, #2
 11043 0050 F5E7     		b	.L987
 11044              	.LVL1428:
 11045              	.L989:
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11046              		.loc 1 4690 0
 11047 0052 04EB8404 		add	r4, r4, r4, lsl #2
 11048              	.LVL1429:
 11049 0056 6300     		lsls	r3, r4, #1
ARM GAS  /tmp/ccTBpncU.s 			page 301


 11050 0058 1944     		add	r1, r1, r3
 11051              	.LVL1430:
 11052 005a A1F13004 		sub	r4, r1, #48
 11053              	.LVL1431:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 11054              		.loc 1 4691 0
 11055 005e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 11056              	.LVL1432:
 11057 0060 0132     		adds	r2, r2, #1
 11058              	.LVL1433:
 11059              	.L988:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11060              		.loc 1 4689 0
 11061 0062 A1F13003 		sub	r3, r1, #48
 11062 0066 DBB2     		uxtb	r3, r3
 11063 0068 092B     		cmp	r3, #9
 11064 006a F2D9     		bls	.L989
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 11065              		.loc 1 4693 0
 11066 006c 6C29     		cmp	r1, #108
 11067 006e 03D0     		beq	.L990
 11068              		.loc 1 4693 0 is_stmt 0 discriminator 1
 11069 0070 4C29     		cmp	r1, #76
 11070 0072 01D0     		beq	.L990
 11071 0074 1646     		mov	r6, r2
 11072 0076 03E0     		b	.L991
 11073              	.L990:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 11074              		.loc 1 4694 0 is_stmt 1
 11075 0078 45F00405 		orr	r5, r5, #4
 11076              	.LVL1434:
 11077 007c 561C     		adds	r6, r2, #1
 11078              	.LVL1435:
 11079 007e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 11080              	.LVL1436:
 11081              	.L991:
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 11082              		.loc 1 4696 0
 11083 0080 0029     		cmp	r1, #0
 11084 0082 00F0CF80 		beq	.L983
 11085              	.LVL1437:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 11086              		.loc 1 4698 0
 11087 0086 A1F16103 		sub	r3, r1, #97
 11088 008a DBB2     		uxtb	r3, r3
 11089 008c 192B     		cmp	r3, #25
 11090 008e 14D8     		bhi	.L1029
 11091              		.loc 1 4698 0 is_stmt 0 discriminator 1
 11092 0090 A1F12003 		sub	r3, r1, #32
 11093 0094 DBB2     		uxtb	r3, r3
 11094              	.LVL1438:
 11095              	.L992:
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 11096              		.loc 1 4699 0 is_stmt 1
ARM GAS  /tmp/ccTBpncU.s 			page 302


 11097 0096 A3F14202 		sub	r2, r3, #66
 11098 009a 162A     		cmp	r2, #22
 11099 009c 4AD8     		bhi	.L993
 11100 009e DFE802F0 		tbb	[pc, r2]
 11101              	.L995:
 11102 00a2 4D       		.byte	(.L994-.L995)/2
 11103 00a3 3B       		.byte	(.L996-.L995)/2
 11104 00a4 43       		.byte	(.L997-.L995)/2
 11105 00a5 49       		.byte	(.L993-.L995)/2
 11106 00a6 49       		.byte	(.L993-.L995)/2
 11107 00a7 49       		.byte	(.L993-.L995)/2
 11108 00a8 49       		.byte	(.L993-.L995)/2
 11109 00a9 49       		.byte	(.L993-.L995)/2
 11110 00aa 49       		.byte	(.L993-.L995)/2
 11111 00ab 49       		.byte	(.L993-.L995)/2
 11112 00ac 49       		.byte	(.L993-.L995)/2
 11113 00ad 49       		.byte	(.L993-.L995)/2
 11114 00ae 49       		.byte	(.L993-.L995)/2
 11115 00af 50       		.byte	(.L1030-.L995)/2
 11116 00b0 49       		.byte	(.L993-.L995)/2
 11117 00b1 49       		.byte	(.L993-.L995)/2
 11118 00b2 49       		.byte	(.L993-.L995)/2
 11119 00b3 0E       		.byte	(.L999-.L995)/2
 11120 00b4 49       		.byte	(.L993-.L995)/2
 11121 00b5 43       		.byte	(.L997-.L995)/2
 11122 00b6 49       		.byte	(.L993-.L995)/2
 11123 00b7 49       		.byte	(.L993-.L995)/2
 11124 00b8 46       		.byte	(.L1000-.L995)/2
 11125              	.LVL1439:
 11126 00b9 00       		.p2align 1
 11127              	.L1029:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 11128              		.loc 1 4697 0
 11129 00ba 0B46     		mov	r3, r1
 11130 00bc EBE7     		b	.L992
 11131              	.LVL1440:
 11132              	.L999:
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 11133              		.loc 1 4701 0
 11134 00be 199B     		ldr	r3, [sp, #100]
 11135              	.LVL1441:
 11136 00c0 1A1D     		adds	r2, r3, #4
 11137 00c2 1992     		str	r2, [sp, #100]
 11138 00c4 D3F80080 		ldr	r8, [r3]
 11139              	.LVL1442:
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 11140              		.loc 1 4702 0
 11141 00c8 0027     		movs	r7, #0
 11142 00ca 00E0     		b	.L1001
 11143              	.LVL1443:
 11144              	.L1002:
 11145              		.loc 1 4702 0 is_stmt 0 discriminator 3
 11146 00cc 0137     		adds	r7, r7, #1
 11147              	.LVL1444:
 11148              	.L1001:
 11149              		.loc 1 4702 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 303


 11150 00ce 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 11151 00d2 002B     		cmp	r3, #0
 11152 00d4 FAD1     		bne	.L1002
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 11153              		.loc 1 4703 0 is_stmt 1
 11154 00d6 15F0020F 		tst	r5, #2
 11155 00da 0FD1     		bne	.L1006
 11156 00dc 04E0     		b	.L1003
 11157              	.LVL1445:
 11158              	.L1005:
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 11159              		.loc 1 4704 0 discriminator 2
 11160 00de 2021     		movs	r1, #32
 11161 00e0 01A8     		add	r0, sp, #4
 11162 00e2 FFF7FEFF 		bl	putc_bfd
 11163              	.LVL1446:
 11164 00e6 2F46     		mov	r7, r5
 11165              	.LVL1447:
 11166              	.L1003:
 11167              		.loc 1 4704 0 is_stmt 0 discriminator 1
 11168 00e8 7D1C     		adds	r5, r7, #1
 11169              	.LVL1448:
 11170 00ea A742     		cmp	r7, r4
 11171 00ec F7D3     		bcc	.L1005
 11172              		.loc 1 4704 0
 11173 00ee 2F46     		mov	r7, r5
 11174 00f0 04E0     		b	.L1006
 11175              	.LVL1449:
 11176              	.L1007:
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 11177              		.loc 1 4706 0 is_stmt 1 discriminator 2
 11178 00f2 08F10108 		add	r8, r8, #1
 11179              	.LVL1450:
 11180 00f6 01A8     		add	r0, sp, #4
 11181 00f8 FFF7FEFF 		bl	putc_bfd
 11182              	.LVL1451:
 11183              	.L1006:
 11184              		.loc 1 4706 0 is_stmt 0 discriminator 1
 11185 00fc 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 11186 0100 0029     		cmp	r1, #0
 11187 0102 F6D1     		bne	.L1007
 11188 0104 04E0     		b	.L1008
 11189              	.LVL1452:
 11190              	.L1009:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 11191              		.loc 1 4707 0 is_stmt 1 discriminator 2
 11192 0106 2021     		movs	r1, #32
 11193 0108 01A8     		add	r0, sp, #4
 11194 010a FFF7FEFF 		bl	putc_bfd
 11195              	.LVL1453:
 11196 010e 2F46     		mov	r7, r5
 11197              	.LVL1454:
 11198              	.L1008:
 11199              		.loc 1 4707 0 is_stmt 0 discriminator 1
 11200 0110 7D1C     		adds	r5, r7, #1
 11201              	.LVL1455:
ARM GAS  /tmp/ccTBpncU.s 			page 304


 11202 0112 A742     		cmp	r7, r4
 11203 0114 F7D3     		bcc	.L1009
 11204 0116 84E7     		b	.L982
 11205              	.LVL1456:
 11206              	.L996:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 11207              		.loc 1 4710 0 is_stmt 1
 11208 0118 199B     		ldr	r3, [sp, #100]
 11209              	.LVL1457:
 11210 011a 1A1D     		adds	r2, r3, #4
 11211 011c 1992     		str	r2, [sp, #100]
 11212 011e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11213              	.LVL1458:
 11214 0120 01A8     		add	r0, sp, #4
 11215 0122 FFF7FEFF 		bl	putc_bfd
 11216              	.LVL1459:
 11217 0126 7CE7     		b	.L982
 11218              	.LVL1460:
 11219              	.L997:
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 11220              		.loc 1 4717 0
 11221 0128 4FF00A0E 		mov	lr, #10
 11222 012c 0BE0     		b	.L998
 11223              	.LVL1461:
 11224              	.L1000:
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 11225              		.loc 1 4719 0
 11226 012e 4FF0100E 		mov	lr, #16
 11227 0132 08E0     		b	.L998
 11228              	.LVL1462:
 11229              	.L993:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 11230              		.loc 1 4721 0
 11231 0134 01A8     		add	r0, sp, #4
 11232 0136 FFF7FEFF 		bl	putc_bfd
 11233              	.LVL1463:
 11234 013a 72E7     		b	.L982
 11235              	.LVL1464:
 11236              	.L994:
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
 11237              		.loc 1 4712 0
 11238 013c 4FF0020E 		mov	lr, #2
 11239 0140 01E0     		b	.L998
 11240              	.L1030:
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
 11241              		.loc 1 4714 0
 11242 0142 4FF0080E 		mov	lr, #8
ARM GAS  /tmp/ccTBpncU.s 			page 305


 11243              	.L998:
 11244              	.LVL1465:
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 11245              		.loc 1 4725 0
 11246 0146 15F0040F 		tst	r5, #4
 11247 014a 08D0     		beq	.L1010
 11248 014c 199A     		ldr	r2, [sp, #100]
 11249 014e 101D     		adds	r0, r2, #4
 11250 0150 1990     		str	r0, [sp, #100]
 11251 0152 1068     		ldr	r0, [r2]
 11252              	.L1011:
 11253              	.LVL1466:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11254              		.loc 1 4726 0 discriminator 8
 11255 0154 442B     		cmp	r3, #68
 11256 0156 0ED0     		beq	.L1041
 11257              	.L1013:
 11258              	.LVL1467:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 11259              		.loc 1 4730 0
 11260 0158 4FF0000C 		mov	ip, #0
 11261 015c 20E0     		b	.L1017
 11262              	.LVL1468:
 11263              	.L1010:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11264              		.loc 1 4725 0 discriminator 2
 11265 015e 442B     		cmp	r3, #68
 11266 0160 04D0     		beq	.L1042
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11267              		.loc 1 4725 0 is_stmt 0
 11268 0162 199A     		ldr	r2, [sp, #100]
 11269 0164 101D     		adds	r0, r2, #4
 11270 0166 1990     		str	r0, [sp, #100]
 11271 0168 1068     		ldr	r0, [r2]
 11272 016a F3E7     		b	.L1011
 11273              	.L1042:
 11274 016c 199A     		ldr	r2, [sp, #100]
 11275 016e 101D     		adds	r0, r2, #4
 11276 0170 1990     		str	r0, [sp, #100]
 11277 0172 1068     		ldr	r0, [r2]
 11278 0174 EEE7     		b	.L1011
 11279              	.LVL1469:
 11280              	.L1041:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11281              		.loc 1 4726 0 is_stmt 1 discriminator 1
 11282 0176 0028     		cmp	r0, #0
 11283 0178 EEDA     		bge	.L1013
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 11284              		.loc 1 4727 0
 11285 017a 4042     		negs	r0, r0
 11286              	.LVL1470:
ARM GAS  /tmp/ccTBpncU.s 			page 306


4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11287              		.loc 1 4728 0
 11288 017c 45F00805 		orr	r5, r5, #8
 11289              	.LVL1471:
 11290 0180 EAE7     		b	.L1013
 11291              	.LVL1472:
 11292              	.L1043:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 11293              		.loc 1 4733 0
 11294 0182 2727     		movs	r7, #39
 11295              	.L1015:
 11296              		.loc 1 4733 0 is_stmt 0 discriminator 5
 11297 0184 3B44     		add	r3, r3, r7
 11298              	.LVL1473:
 11299 0186 DBB2     		uxtb	r3, r3
 11300              	.LVL1474:
 11301              	.L1014:
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 11302              		.loc 1 4734 0 is_stmt 1
 11303 0188 0CF10107 		add	r7, ip, #1
 11304              	.LVL1475:
 11305 018c 3033     		adds	r3, r3, #48
 11306              	.LVL1476:
 11307 018e 0DF16808 		add	r8, sp, #104
 11308 0192 E044     		add	r8, r8, ip
 11309 0194 08F8183C 		strb	r3, [r8, #-24]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof s / sizeof s[0]);
 11310              		.loc 1 4735 0
 11311 0198 72B1     		cbz	r2, .L1016
 11312              		.loc 1 4735 0 is_stmt 0 discriminator 1
 11313 019a 0F2F     		cmp	r7, #15
 11314 019c 0CD8     		bhi	.L1016
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 11315              		.loc 1 4734 0 is_stmt 1
 11316 019e BC46     		mov	ip, r7
 11317              	.LVL1477:
 11318              	.L1017:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 11319              		.loc 1 4732 0
 11320 01a0 B0FBFEF2 		udiv	r2, r0, lr
 11321 01a4 0EFB1203 		mls	r3, lr, r2, r0
 11322 01a8 DBB2     		uxtb	r3, r3
 11323              	.LVL1478:
 11324 01aa 1046     		mov	r0, r2
 11325              	.LVL1479:
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 11326              		.loc 1 4733 0
 11327 01ac 092B     		cmp	r3, #9
 11328 01ae EBD9     		bls	.L1014
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 11329              		.loc 1 4733 0 is_stmt 0 discriminator 1
 11330 01b0 7829     		cmp	r1, #120
 11331 01b2 E6D0     		beq	.L1043
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 11332              		.loc 1 4733 0
ARM GAS  /tmp/ccTBpncU.s 			page 307


 11333 01b4 0727     		movs	r7, #7
 11334 01b6 E5E7     		b	.L1015
 11335              	.LVL1480:
 11336              	.L1016:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) s[i++] = '-';
 11337              		.loc 1 4736 0 is_stmt 1
 11338 01b8 15F0080F 		tst	r5, #8
 11339 01bc 06D0     		beq	.L1018
 11340              	.LVL1481:
 11341              		.loc 1 4736 0 is_stmt 0 discriminator 1
 11342 01be 1AAB     		add	r3, sp, #104
 11343 01c0 1F44     		add	r7, r7, r3
 11344 01c2 2D23     		movs	r3, #45
 11345 01c4 07F8183C 		strb	r3, [r7, #-24]
 11346 01c8 0CF10207 		add	r7, ip, #2
 11347              	.LVL1482:
 11348              	.L1018:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 11349              		.loc 1 4737 0 is_stmt 1
 11350 01cc 15F0010F 		tst	r5, #1
 11351 01d0 03D0     		beq	.L1033
 11352 01d2 4FF0300A 		mov	r10, #48
 11353              	.L1019:
 11354              	.LVL1483:
 11355              		.loc 1 4737 0 is_stmt 0 discriminator 4
 11356 01d6 B846     		mov	r8, r7
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 11357              		.loc 1 4738 0 is_stmt 1 discriminator 4
 11358 01d8 07E0     		b	.L1020
 11359              	.LVL1484:
 11360              	.L1033:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 11361              		.loc 1 4737 0
 11362 01da 4FF0200A 		mov	r10, #32
 11363 01de FAE7     		b	.L1019
 11364              	.LVL1485:
 11365              	.L1022:
 11366              		.loc 1 4738 0 discriminator 3
 11367 01e0 5146     		mov	r1, r10
 11368 01e2 01A8     		add	r0, sp, #4
 11369 01e4 FFF7FEFF 		bl	putc_bfd
 11370              	.LVL1486:
 11371 01e8 C846     		mov	r8, r9
 11372              	.LVL1487:
 11373              	.L1020:
 11374              		.loc 1 4738 0 is_stmt 0 discriminator 1
 11375 01ea 15F0020F 		tst	r5, #2
 11376 01ee 04D1     		bne	.L1023
 11377              		.loc 1 4738 0 discriminator 2
 11378 01f0 08F10109 		add	r9, r8, #1
 11379              	.LVL1488:
 11380 01f4 A045     		cmp	r8, r4
 11381 01f6 F3D3     		bcc	.L1022
 11382              		.loc 1 4738 0
 11383 01f8 C846     		mov	r8, r9
 11384              	.LVL1489:
 11385              	.L1023:
ARM GAS  /tmp/ccTBpncU.s 			page 308


4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		do putc_bfd(&pb, s[--i]); while (i);
 11386              		.loc 1 4739 0 is_stmt 1 discriminator 1
 11387 01fa 013F     		subs	r7, r7, #1
 11388              	.LVL1490:
 11389 01fc 1AAB     		add	r3, sp, #104
 11390 01fe 3B44     		add	r3, r3, r7
 11391 0200 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 11392 0204 01A8     		add	r0, sp, #4
 11393 0206 FFF7FEFF 		bl	putc_bfd
 11394              	.LVL1491:
 11395 020a 002F     		cmp	r7, #0
 11396 020c F5D1     		bne	.L1023
 11397 020e 04E0     		b	.L1024
 11398              	.LVL1492:
 11399              	.L1025:
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 11400              		.loc 1 4740 0 discriminator 2
 11401 0210 5146     		mov	r1, r10
 11402 0212 01A8     		add	r0, sp, #4
 11403 0214 FFF7FEFF 		bl	putc_bfd
 11404              	.LVL1493:
 11405 0218 A846     		mov	r8, r5
 11406              	.LVL1494:
 11407              	.L1024:
 11408              		.loc 1 4740 0 is_stmt 0 discriminator 1
 11409 021a 08F10105 		add	r5, r8, #1
 11410              	.LVL1495:
 11411 021e A045     		cmp	r8, r4
 11412 0220 F6D3     		bcc	.L1025
 11413 0222 FEE6     		b	.L982
 11414              	.LVL1496:
 11415              	.L983:
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 11416              		.loc 1 4745 0 is_stmt 1
 11417 0224 029A     		ldr	r2, [sp, #8]
 11418 0226 002A     		cmp	r2, #0
 11419 0228 0FDB     		blt	.L1034
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 11420              		.loc 1 4746 0
 11421 022a 18AB     		add	r3, sp, #96
 11422 022c 04A9     		add	r1, sp, #16
 11423              	.LVL1497:
 11424 022e 0198     		ldr	r0, [sp, #4]
 11425 0230 FFF7FEFF 		bl	f_write
 11426              	.LVL1498:
 11427 0234 60B9     		cbnz	r0, .L1035
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 11428              		.loc 1 4747 0
 11429 0236 029A     		ldr	r2, [sp, #8]
 11430 0238 189B     		ldr	r3, [sp, #96]
 11431 023a 9A42     		cmp	r2, r3
 11432 023c 0BD1     		bne	.L1036
 11433              		.loc 1 4747 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTBpncU.s 			page 309


 11434 023e 0398     		ldr	r0, [sp, #12]
 11435              	.L981:
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11436              		.loc 1 4749 0 is_stmt 1
 11437 0240 1BB0     		add	sp, sp, #108
 11438              	.LCFI145:
 11439              		.cfi_remember_state
 11440              		.cfi_def_cfa_offset 44
 11441              		@ sp needed
 11442 0242 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 11443              	.LCFI146:
 11444              		.cfi_restore 14
 11445              		.cfi_restore 10
 11446              		.cfi_restore 9
 11447              		.cfi_restore 8
 11448              		.cfi_restore 7
 11449              		.cfi_restore 6
 11450              		.cfi_restore 5
 11451              		.cfi_restore 4
 11452              		.cfi_def_cfa_offset 12
 11453 0246 03B0     		add	sp, sp, #12
 11454              	.LCFI147:
 11455              		.cfi_restore 3
 11456              		.cfi_restore 2
 11457              		.cfi_restore 1
 11458              		.cfi_def_cfa_offset 0
 11459 0248 7047     		bx	lr
 11460              	.LVL1499:
 11461              	.L1034:
 11462              	.LCFI148:
 11463              		.cfi_restore_state
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 11464              		.loc 1 4748 0
 11465 024a 4FF0FF30 		mov	r0, #-1
 11466 024e F7E7     		b	.L981
 11467              	.LVL1500:
 11468              	.L1035:
 11469 0250 4FF0FF30 		mov	r0, #-1
 11470 0254 F4E7     		b	.L981
 11471              	.L1036:
 11472 0256 4FF0FF30 		mov	r0, #-1
 11473 025a F1E7     		b	.L981
 11474              		.cfi_endproc
 11475              	.LFE128:
 11477              		.section	.bss.FatFs,"aw",%nobits
 11478              		.align	2
 11479              		.set	.LANCHOR2,. + 0
 11482              	FatFs:
 11483 0000 00000000 		.space	4
 11484              		.section	.bss.Files,"aw",%nobits
 11485              		.align	2
 11486              		.set	.LANCHOR0,. + 0
 11489              	Files:
 11490 0000 00000000 		.space	24
 11490      00000000 
 11490      00000000 
ARM GAS  /tmp/ccTBpncU.s 			page 310


 11490      00000000 
 11490      00000000 
 11491              		.section	.bss.Fsid,"aw",%nobits
 11492              		.align	1
 11493              		.set	.LANCHOR3,. + 0
 11496              	Fsid:
 11497 0000 0000     		.space	2
 11498              		.section	.bss.LfnBuf,"aw",%nobits
 11499              		.align	2
 11500              		.set	.LANCHOR5,. + 0
 11503              	LfnBuf:
 11504 0000 00000000 		.space	512
 11504      00000000 
 11504      00000000 
 11504      00000000 
 11504      00000000 
 11505              		.section	.rodata.ExCvt,"a",%progbits
 11506              		.align	2
 11507              		.set	.LANCHOR4,. + 0
 11510              	ExCvt:
 11511 0000 80       		.byte	-128
 11512 0001 81       		.byte	-127
 11513 0002 82       		.byte	-126
 11514 0003 83       		.byte	-125
 11515 0004 84       		.byte	-124
 11516 0005 85       		.byte	-123
 11517 0006 86       		.byte	-122
 11518 0007 87       		.byte	-121
 11519 0008 88       		.byte	-120
 11520 0009 89       		.byte	-119
 11521 000a 8A       		.byte	-118
 11522 000b 8B       		.byte	-117
 11523 000c 8C       		.byte	-116
 11524 000d 8D       		.byte	-115
 11525 000e 8E       		.byte	-114
 11526 000f 8F       		.byte	-113
 11527 0010 90       		.byte	-112
 11528 0011 91       		.byte	-111
 11529 0012 92       		.byte	-110
 11530 0013 93       		.byte	-109
 11531 0014 94       		.byte	-108
 11532 0015 95       		.byte	-107
 11533 0016 96       		.byte	-106
 11534 0017 97       		.byte	-105
 11535 0018 98       		.byte	-104
 11536 0019 99       		.byte	-103
 11537 001a 9A       		.byte	-102
 11538 001b 9B       		.byte	-101
 11539 001c 9C       		.byte	-100
 11540 001d 9D       		.byte	-99
 11541 001e 9E       		.byte	-98
 11542 001f 9F       		.byte	-97
 11543 0020 80       		.byte	-128
 11544 0021 81       		.byte	-127
 11545 0022 82       		.byte	-126
 11546 0023 83       		.byte	-125
 11547 0024 84       		.byte	-124
ARM GAS  /tmp/ccTBpncU.s 			page 311


 11548 0025 85       		.byte	-123
 11549 0026 86       		.byte	-122
 11550 0027 87       		.byte	-121
 11551 0028 88       		.byte	-120
 11552 0029 89       		.byte	-119
 11553 002a 8A       		.byte	-118
 11554 002b 8B       		.byte	-117
 11555 002c 8C       		.byte	-116
 11556 002d 8D       		.byte	-115
 11557 002e 8E       		.byte	-114
 11558 002f 8F       		.byte	-113
 11559 0030 B0       		.byte	-80
 11560 0031 B1       		.byte	-79
 11561 0032 B2       		.byte	-78
 11562 0033 B3       		.byte	-77
 11563 0034 B4       		.byte	-76
 11564 0035 B5       		.byte	-75
 11565 0036 B6       		.byte	-74
 11566 0037 B7       		.byte	-73
 11567 0038 B8       		.byte	-72
 11568 0039 B9       		.byte	-71
 11569 003a BA       		.byte	-70
 11570 003b BB       		.byte	-69
 11571 003c BC       		.byte	-68
 11572 003d BD       		.byte	-67
 11573 003e BE       		.byte	-66
 11574 003f BF       		.byte	-65
 11575 0040 C0       		.byte	-64
 11576 0041 C1       		.byte	-63
 11577 0042 C2       		.byte	-62
 11578 0043 C3       		.byte	-61
 11579 0044 C4       		.byte	-60
 11580 0045 C5       		.byte	-59
 11581 0046 C6       		.byte	-58
 11582 0047 C7       		.byte	-57
 11583 0048 C8       		.byte	-56
 11584 0049 C9       		.byte	-55
 11585 004a CA       		.byte	-54
 11586 004b CB       		.byte	-53
 11587 004c CC       		.byte	-52
 11588 004d CD       		.byte	-51
 11589 004e CE       		.byte	-50
 11590 004f CF       		.byte	-49
 11591 0050 D0       		.byte	-48
 11592 0051 D1       		.byte	-47
 11593 0052 D2       		.byte	-46
 11594 0053 D3       		.byte	-45
 11595 0054 D4       		.byte	-44
 11596 0055 D5       		.byte	-43
 11597 0056 D6       		.byte	-42
 11598 0057 D7       		.byte	-41
 11599 0058 D8       		.byte	-40
 11600 0059 D9       		.byte	-39
 11601 005a DA       		.byte	-38
 11602 005b DB       		.byte	-37
 11603 005c DC       		.byte	-36
 11604 005d DD       		.byte	-35
ARM GAS  /tmp/ccTBpncU.s 			page 312


 11605 005e DE       		.byte	-34
 11606 005f DF       		.byte	-33
 11607 0060 90       		.byte	-112
 11608 0061 91       		.byte	-111
 11609 0062 92       		.byte	-110
 11610 0063 93       		.byte	-109
 11611 0064 9D       		.byte	-99
 11612 0065 95       		.byte	-107
 11613 0066 96       		.byte	-106
 11614 0067 97       		.byte	-105
 11615 0068 98       		.byte	-104
 11616 0069 99       		.byte	-103
 11617 006a 9A       		.byte	-102
 11618 006b 9B       		.byte	-101
 11619 006c 9C       		.byte	-100
 11620 006d 9D       		.byte	-99
 11621 006e 9E       		.byte	-98
 11622 006f 9F       		.byte	-97
 11623 0070 F0       		.byte	-16
 11624 0071 F0       		.byte	-16
 11625 0072 F2       		.byte	-14
 11626 0073 F2       		.byte	-14
 11627 0074 F4       		.byte	-12
 11628 0075 F4       		.byte	-12
 11629 0076 F6       		.byte	-10
 11630 0077 F6       		.byte	-10
 11631 0078 F8       		.byte	-8
 11632 0079 F9       		.byte	-7
 11633 007a FA       		.byte	-6
 11634 007b FB       		.byte	-5
 11635 007c FC       		.byte	-4
 11636 007d FD       		.byte	-3
 11637 007e FE       		.byte	-2
 11638 007f FF       		.byte	-1
 11639              		.section	.rodata.LfnOfs,"a",%progbits
 11640              		.align	2
 11641              		.set	.LANCHOR1,. + 0
 11644              	LfnOfs:
 11645 0000 01       		.byte	1
 11646 0001 03       		.byte	3
 11647 0002 05       		.byte	5
 11648 0003 07       		.byte	7
 11649 0004 09       		.byte	9
 11650 0005 0E       		.byte	14
 11651 0006 10       		.byte	16
 11652 0007 12       		.byte	18
 11653 0008 14       		.byte	20
 11654 0009 16       		.byte	22
 11655 000a 18       		.byte	24
 11656 000b 1C       		.byte	28
 11657 000c 1E       		.byte	30
 11658              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 11659              		.align	2
 11660              	.LC0:
 11661 0000 222A3A3C 		.ascii	"\"*:<>?|\177\000"
 11661      3E3F7C7F 
 11661      00
ARM GAS  /tmp/ccTBpncU.s 			page 313


 11662 0009 000000   		.space	3
 11663              	.LC1:
 11664 000c 2B2C3B3D 		.ascii	"+,;=[]\000"
 11664      5B5D00
 11665              		.section	.rodata.cst.9418,"a",%progbits
 11666              		.align	2
 11667              		.set	.LANCHOR7,. + 0
 11670              	cst.9418:
 11671 0000 0080     		.short	-32768
 11672 0002 0040     		.short	16384
 11673 0004 0020     		.short	8192
 11674 0006 0010     		.short	4096
 11675 0008 0008     		.short	2048
 11676 000a 0040     		.short	16384
 11677 000c 0020     		.short	8192
 11678 000e 0010     		.short	4096
 11679 0010 0008     		.short	2048
 11680 0012 0004     		.short	1024
 11681 0014 0002     		.short	512
 11682              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 11683              		.align	2
 11684              	.LC2:
 11685 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 11685      53444F53 
 11685      352E3000 
 11686              	.LC3:
 11687 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 11687      414D4520 
 11687      20202046 
 11687      41543332 
 11687      20202000 
 11688              	.LC4:
 11689 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 11689      414D4520 
 11689      20202046 
 11689      41542020 
 11689      20202000 
 11690              		.section	.rodata.vst.9417,"a",%progbits
 11691              		.align	2
 11692              		.set	.LANCHOR6,. + 0
 11695              	vst.9417:
 11696 0000 0004     		.short	1024
 11697 0002 0002     		.short	512
 11698 0004 0001     		.short	256
 11699 0006 8000     		.short	128
 11700 0008 4000     		.short	64
 11701 000a 2000     		.short	32
 11702 000c 1000     		.short	16
 11703 000e 0800     		.short	8
 11704 0010 0400     		.short	4
 11705 0012 0200     		.short	2
 11706 0014 0000     		.short	0
 11707              		.text
 11708              	.Letext0:
 11709              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 11710              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 11711              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccTBpncU.s 			page 314


 11712              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 11713              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 11714              		.file 7 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.h"
 11715              		.file 8 "/usr/arm-none-eabi/include/stdio.h"
 11716              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 11717              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 11718              		.file 11 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 11719              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 11720              		.file 13 "<built-in>"
 11721              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 11722              		.file 15 "/usr/arm-none-eabi/include/stdlib.h"
 11723              		.file 16 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 11724              		.file 17 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 11725              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 11726              		.file 19 "Middlewares/Third_Party/FatFs/src/ff.h"
 11727              		.file 20 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  /tmp/ccTBpncU.s 			page 315


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/ccTBpncU.s:16     .text.mem_cpy:0000000000000000 $t
     /tmp/ccTBpncU.s:22     .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/ccTBpncU.s:56     .text.mem_set:0000000000000000 $t
     /tmp/ccTBpncU.s:62     .text.mem_set:0000000000000000 mem_set
     /tmp/ccTBpncU.s:92     .text.mem_cmp:0000000000000000 $t
     /tmp/ccTBpncU.s:98     .text.mem_cmp:0000000000000000 mem_cmp
     /tmp/ccTBpncU.s:157    .text.chk_chr:0000000000000000 $t
     /tmp/ccTBpncU.s:163    .text.chk_chr:0000000000000000 chk_chr
     /tmp/ccTBpncU.s:193    .text.chk_lock:0000000000000000 $t
     /tmp/ccTBpncU.s:199    .text.chk_lock:0000000000000000 chk_lock
     /tmp/ccTBpncU.s:331    .text.chk_lock:000000000000008c $d
     /tmp/ccTBpncU.s:336    .text.enq_lock:0000000000000000 $t
     /tmp/ccTBpncU.s:342    .text.enq_lock:0000000000000000 enq_lock
     /tmp/ccTBpncU.s:380    .text.enq_lock:0000000000000020 $d
     /tmp/ccTBpncU.s:385    .text.inc_lock:0000000000000000 $t
     /tmp/ccTBpncU.s:391    .text.inc_lock:0000000000000000 inc_lock
     /tmp/ccTBpncU.s:566    .text.inc_lock:00000000000000dc $d
     /tmp/ccTBpncU.s:571    .text.dec_lock:0000000000000000 $t
     /tmp/ccTBpncU.s:577    .text.dec_lock:0000000000000000 dec_lock
     /tmp/ccTBpncU.s:643    .text.dec_lock:0000000000000040 $d
     /tmp/ccTBpncU.s:648    .text.clear_lock:0000000000000000 $t
     /tmp/ccTBpncU.s:654    .text.clear_lock:0000000000000000 clear_lock
     /tmp/ccTBpncU.s:711    .text.clear_lock:0000000000000030 $d
     /tmp/ccTBpncU.s:716    .text.clmt_clust:0000000000000000 $t
     /tmp/ccTBpncU.s:722    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/ccTBpncU.s:777    .text.ld_clust:0000000000000000 $t
     /tmp/ccTBpncU.s:783    .text.ld_clust:0000000000000000 ld_clust
     /tmp/ccTBpncU.s:820    .text.st_clust:0000000000000000 $t
     /tmp/ccTBpncU.s:826    .text.st_clust:0000000000000000 st_clust
     /tmp/ccTBpncU.s:850    .text.pick_lfn:0000000000000000 $t
     /tmp/ccTBpncU.s:856    .text.pick_lfn:0000000000000000 pick_lfn
     /tmp/ccTBpncU.s:975    .text.pick_lfn:0000000000000070 $d
     /tmp/ccTBpncU.s:980    .text.fit_lfn:0000000000000000 $t
     /tmp/ccTBpncU.s:986    .text.fit_lfn:0000000000000000 fit_lfn
     /tmp/ccTBpncU.s:1084   .text.fit_lfn:0000000000000060 $d
     /tmp/ccTBpncU.s:1089   .text.gen_numname:0000000000000000 $t
     /tmp/ccTBpncU.s:1095   .text.gen_numname:0000000000000000 gen_numname
     /tmp/ccTBpncU.s:1256   .text.sum_sfn:0000000000000000 $t
     /tmp/ccTBpncU.s:1262   .text.sum_sfn:0000000000000000 sum_sfn
     /tmp/ccTBpncU.s:1299   .text.get_ldnumber:0000000000000000 $t
     /tmp/ccTBpncU.s:1305   .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/ccTBpncU.s:1409   .text.sync_window:0000000000000000 $t
     /tmp/ccTBpncU.s:1415   .text.sync_window:0000000000000000 sync_window
     /tmp/ccTBpncU.s:1514   .text.move_window:0000000000000000 $t
     /tmp/ccTBpncU.s:1520   .text.move_window:0000000000000000 move_window
     /tmp/ccTBpncU.s:1581   .text.check_fs:0000000000000000 $t
     /tmp/ccTBpncU.s:1587   .text.check_fs:0000000000000000 check_fs
     /tmp/ccTBpncU.s:1666   .text.check_fs:000000000000008c $d
     /tmp/ccTBpncU.s:1672   .text.validate:0000000000000000 $t
     /tmp/ccTBpncU.s:1678   .text.validate:0000000000000000 validate
     /tmp/ccTBpncU.s:1761   .text.find_volume:0000000000000000 $t
     /tmp/ccTBpncU.s:1767   .text.find_volume:0000000000000000 find_volume
     /tmp/ccTBpncU.s:2219   .text.find_volume:0000000000000300 $d
     /tmp/ccTBpncU.s:2223   .text.find_volume:0000000000000308 $t
     /tmp/ccTBpncU.s:2403   .text.find_volume:000000000000040c $d
ARM GAS  /tmp/ccTBpncU.s 			page 316


     /tmp/ccTBpncU.s:2410   .text.sync_fs:0000000000000000 $t
     /tmp/ccTBpncU.s:2416   .text.sync_fs:0000000000000000 sync_fs
     /tmp/ccTBpncU.s:2535   .text.create_name:0000000000000000 $t
     /tmp/ccTBpncU.s:2541   .text.create_name:0000000000000000 create_name
     /tmp/ccTBpncU.s:2979   .text.create_name:0000000000000228 $d
     /tmp/ccTBpncU.s:2986   .text.get_fileinfo:0000000000000000 $t
     /tmp/ccTBpncU.s:2992   .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/ccTBpncU.s:3210   .text.cmp_lfn:0000000000000000 $t
     /tmp/ccTBpncU.s:3216   .text.cmp_lfn:0000000000000000 cmp_lfn
     /tmp/ccTBpncU.s:3336   .text.cmp_lfn:0000000000000088 $d
     /tmp/ccTBpncU.s:3341   .text.clust2sect:0000000000000000 $t
     /tmp/ccTBpncU.s:3348   .text.clust2sect:0000000000000000 clust2sect
     /tmp/ccTBpncU.s:3384   .text.get_fat:0000000000000000 $t
     /tmp/ccTBpncU.s:3391   .text.get_fat:0000000000000000 get_fat
     /tmp/ccTBpncU.s:3610   .text.dir_sdi:0000000000000000 $t
     /tmp/ccTBpncU.s:3616   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/ccTBpncU.s:3801   .text.put_fat:0000000000000000 $t
     /tmp/ccTBpncU.s:3808   .text.put_fat:0000000000000000 put_fat
     /tmp/ccTBpncU.s:4055   .text.create_chain:0000000000000000 $t
     /tmp/ccTBpncU.s:4061   .text.create_chain:0000000000000000 create_chain
     /tmp/ccTBpncU.s:4251   .text.dir_next:0000000000000000 $t
     /tmp/ccTBpncU.s:4257   .text.dir_next:0000000000000000 dir_next
     /tmp/ccTBpncU.s:4524   .text.dir_find:0000000000000000 $t
     /tmp/ccTBpncU.s:4530   .text.dir_find:0000000000000000 dir_find
     /tmp/ccTBpncU.s:4730   .text.follow_path:0000000000000000 $t
     /tmp/ccTBpncU.s:4736   .text.follow_path:0000000000000000 follow_path
     /tmp/ccTBpncU.s:4865   .text.dir_alloc:0000000000000000 $t
     /tmp/ccTBpncU.s:4871   .text.dir_alloc:0000000000000000 dir_alloc
     /tmp/ccTBpncU.s:4962   .text.dir_register:0000000000000000 $t
     /tmp/ccTBpncU.s:4968   .text.dir_register:0000000000000000 dir_register
     /tmp/ccTBpncU.s:5231   .text.dir_register:0000000000000170 $d
     /tmp/ccTBpncU.s:5236   .text.dir_read:0000000000000000 $t
     /tmp/ccTBpncU.s:5242   .text.dir_read:0000000000000000 dir_read
     /tmp/ccTBpncU.s:5432   .text.dir_remove:0000000000000000 $t
     /tmp/ccTBpncU.s:5438   .text.dir_remove:0000000000000000 dir_remove
     /tmp/ccTBpncU.s:5542   .text.remove_chain:0000000000000000 $t
     /tmp/ccTBpncU.s:5548   .text.remove_chain:0000000000000000 remove_chain
     /tmp/ccTBpncU.s:5656   .text.f_mount:0000000000000000 $t
     /tmp/ccTBpncU.s:5663   .text.f_mount:0000000000000000 f_mount
     /tmp/ccTBpncU.s:5762   .text.f_mount:0000000000000060 $d
     /tmp/ccTBpncU.s:5767   .text.f_open:0000000000000000 $t
     /tmp/ccTBpncU.s:5774   .text.f_open:0000000000000000 f_open
     /tmp/ccTBpncU.s:6133   .text.f_open:0000000000000228 $d
     /tmp/ccTBpncU.s:6138   .text.f_read:0000000000000000 $t
     /tmp/ccTBpncU.s:6145   .text.f_read:0000000000000000 f_read
     /tmp/ccTBpncU.s:6501   .text.f_write:0000000000000000 $t
     /tmp/ccTBpncU.s:6508   .text.f_write:0000000000000000 f_write
     /tmp/ccTBpncU.s:6915   .text.putc_bfd:0000000000000000 $t
     /tmp/ccTBpncU.s:6921   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/ccTBpncU.s:7011   .text.f_sync:0000000000000000 $t
     /tmp/ccTBpncU.s:7018   .text.f_sync:0000000000000000 f_sync
     /tmp/ccTBpncU.s:7156   .text.f_close:0000000000000000 $t
     /tmp/ccTBpncU.s:7163   .text.f_close:0000000000000000 f_close
     /tmp/ccTBpncU.s:7218   .text.f_lseek:0000000000000000 $t
     /tmp/ccTBpncU.s:7225   .text.f_lseek:0000000000000000 f_lseek
     /tmp/ccTBpncU.s:7800   .text.f_opendir:0000000000000000 $t
     /tmp/ccTBpncU.s:7807   .text.f_opendir:0000000000000000 f_opendir
ARM GAS  /tmp/ccTBpncU.s 			page 317


     /tmp/ccTBpncU.s:7953   .text.f_opendir:00000000000000b8 $d
     /tmp/ccTBpncU.s:7958   .text.f_closedir:0000000000000000 $t
     /tmp/ccTBpncU.s:7965   .text.f_closedir:0000000000000000 f_closedir
     /tmp/ccTBpncU.s:8015   .text.f_readdir:0000000000000000 $t
     /tmp/ccTBpncU.s:8022   .text.f_readdir:0000000000000000 f_readdir
     /tmp/ccTBpncU.s:8131   .text.f_readdir:0000000000000070 $d
     /tmp/ccTBpncU.s:8136   .text.f_stat:0000000000000000 $t
     /tmp/ccTBpncU.s:8143   .text.f_stat:0000000000000000 f_stat
     /tmp/ccTBpncU.s:8232   .text.f_stat:0000000000000068 $d
     /tmp/ccTBpncU.s:8237   .text.f_getfree:0000000000000000 $t
     /tmp/ccTBpncU.s:8244   .text.f_getfree:0000000000000000 f_getfree
     /tmp/ccTBpncU.s:8467   .text.f_truncate:0000000000000000 $t
     /tmp/ccTBpncU.s:8474   .text.f_truncate:0000000000000000 f_truncate
     /tmp/ccTBpncU.s:8655   .text.f_unlink:0000000000000000 $t
     /tmp/ccTBpncU.s:8662   .text.f_unlink:0000000000000000 f_unlink
     /tmp/ccTBpncU.s:8853   .text.f_unlink:00000000000000f0 $d
     /tmp/ccTBpncU.s:8858   .text.f_mkdir:0000000000000000 $t
     /tmp/ccTBpncU.s:8865   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/ccTBpncU.s:9198   .text.f_mkdir:00000000000001dc $d
     /tmp/ccTBpncU.s:9203   .text.f_chmod:0000000000000000 $t
     /tmp/ccTBpncU.s:9210   .text.f_chmod:0000000000000000 f_chmod
     /tmp/ccTBpncU.s:9318   .text.f_chmod:0000000000000080 $d
     /tmp/ccTBpncU.s:9323   .text.f_rename:0000000000000000 $t
     /tmp/ccTBpncU.s:9330   .text.f_rename:0000000000000000 f_rename
     /tmp/ccTBpncU.s:9583   .text.f_rename:0000000000000188 $d
     /tmp/ccTBpncU.s:9588   .text.f_utime:0000000000000000 $t
     /tmp/ccTBpncU.s:9595   .text.f_utime:0000000000000000 f_utime
     /tmp/ccTBpncU.s:9699   .text.f_utime:0000000000000080 $d
     /tmp/ccTBpncU.s:9704   .text.f_mkfs:0000000000000000 $t
     /tmp/ccTBpncU.s:9711   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/ccTBpncU.s:10170  .text.f_mkfs:00000000000002cc $d
     /tmp/ccTBpncU.s:10176  .text.f_mkfs:00000000000002d8 $t
     /tmp/ccTBpncU.s:10669  .text.f_mkfs:0000000000000638 $d
     /tmp/ccTBpncU.s:10677  .text.f_gets:0000000000000000 $t
     /tmp/ccTBpncU.s:10684  .text.f_gets:0000000000000000 f_gets
     /tmp/ccTBpncU.s:10780  .text.f_putc:0000000000000000 $t
     /tmp/ccTBpncU.s:10787  .text.f_putc:0000000000000000 f_putc
     /tmp/ccTBpncU.s:10856  .text.f_puts:0000000000000000 $t
     /tmp/ccTBpncU.s:10863  .text.f_puts:0000000000000000 f_puts
     /tmp/ccTBpncU.s:10943  .text.f_printf:0000000000000000 $t
     /tmp/ccTBpncU.s:10950  .text.f_printf:0000000000000000 f_printf
     /tmp/ccTBpncU.s:11102  .text.f_printf:00000000000000a2 $d
     /tmp/ccTBpncU.s:11478  .bss.FatFs:0000000000000000 $d
     /tmp/ccTBpncU.s:11482  .bss.FatFs:0000000000000000 FatFs
     /tmp/ccTBpncU.s:11485  .bss.Files:0000000000000000 $d
     /tmp/ccTBpncU.s:11489  .bss.Files:0000000000000000 Files
     /tmp/ccTBpncU.s:11492  .bss.Fsid:0000000000000000 $d
     /tmp/ccTBpncU.s:11496  .bss.Fsid:0000000000000000 Fsid
     /tmp/ccTBpncU.s:11499  .bss.LfnBuf:0000000000000000 $d
     /tmp/ccTBpncU.s:11503  .bss.LfnBuf:0000000000000000 LfnBuf
     /tmp/ccTBpncU.s:11506  .rodata.ExCvt:0000000000000000 $d
     /tmp/ccTBpncU.s:11510  .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/ccTBpncU.s:11640  .rodata.LfnOfs:0000000000000000 $d
     /tmp/ccTBpncU.s:11644  .rodata.LfnOfs:0000000000000000 LfnOfs
     /tmp/ccTBpncU.s:11659  .rodata.create_name.str1.4:0000000000000000 $d
     /tmp/ccTBpncU.s:11666  .rodata.cst.9418:0000000000000000 $d
     /tmp/ccTBpncU.s:11670  .rodata.cst.9418:0000000000000000 cst.9418
ARM GAS  /tmp/ccTBpncU.s 			page 318


     /tmp/ccTBpncU.s:11683  .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/ccTBpncU.s:11691  .rodata.vst.9417:0000000000000000 $d
     /tmp/ccTBpncU.s:11695  .rodata.vst.9417:0000000000000000 vst.9417
     /tmp/ccTBpncU.s:11126  .text.f_printf:00000000000000b9 $d
     /tmp/ccTBpncU.s:11126  .text.f_printf:00000000000000ba $t

UNDEFINED SYMBOLS
disk_write
disk_read
disk_status
disk_initialize
disk_ioctl
ff_convert
ff_wtoupper
get_fattime
