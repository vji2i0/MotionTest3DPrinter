ARM GAS  /tmp/cckOLbKl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Buffer_Gcode.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.number,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	number:
  23              	.LFB0:
  24              		.file 1 "Src/Gcode/Buffer_Gcode.c"
   1:Src/Gcode/Buffer_Gcode.c **** #include "Buffer_Gcode.h"
   2:Src/Gcode/Buffer_Gcode.c **** 
   3:Src/Gcode/Buffer_Gcode.c **** #include "stdbool.h"
   4:Src/Gcode/Buffer_Gcode.c **** #include "math.h"
   5:Src/Gcode/Buffer_Gcode.c **** #include <stdlib.h>
   6:Src/Gcode/Buffer_Gcode.c **** 
   7:Src/Gcode/Buffer_Gcode.c **** const descreteCommand_Gcode defaultDescreteCommand = {EMPTY_COMMAND};
   8:Src/Gcode/Buffer_Gcode.c **** const command_Gcode defaultCommand = {EMPTY_COMMAND};
   9:Src/Gcode/Buffer_Gcode.c **** 
  10:Src/Gcode/Buffer_Gcode.c **** 
  11:Src/Gcode/Buffer_Gcode.c **** static descreteCommand_Gcode descreteBuffer[3];
  12:Src/Gcode/Buffer_Gcode.c **** 
  13:Src/Gcode/Buffer_Gcode.c **** static int number(int elementNumber) { return elementNumber - 1; }
  25              		.loc 1 13 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31              		.loc 1 13 0
  32 0000 0138     		subs	r0, r0, #1
  33              	.LVL1:
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.global	__aeabi_fcmplt
  39              		.section	.text.sign,"ax",%progbits
  40              		.align	1
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	sign:
  47              	.LFB12:
ARM GAS  /tmp/cckOLbKl.s 			page 2


  14:Src/Gcode/Buffer_Gcode.c **** 
  15:Src/Gcode/Buffer_Gcode.c **** void createDescreteCommandBuffer_Gcode(void)
  16:Src/Gcode/Buffer_Gcode.c **** {
  17:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = defaultDescreteCommand;
  18:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = defaultDescreteCommand;
  19:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = defaultDescreteCommand;
  20:Src/Gcode/Buffer_Gcode.c **** }
  21:Src/Gcode/Buffer_Gcode.c **** 
  22:Src/Gcode/Buffer_Gcode.c **** void addElementToDescreteCommandBuffer_Gcode(descreteCommand_Gcode descreteCommand)
  23:Src/Gcode/Buffer_Gcode.c **** {
  24:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = descreteBuffer[number(2)];
  25:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = descreteBuffer[number(3)];
  26:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = descreteCommand;
  27:Src/Gcode/Buffer_Gcode.c **** }
  28:Src/Gcode/Buffer_Gcode.c **** 
  29:Src/Gcode/Buffer_Gcode.c **** void clearDescreteBuffer_Gcode(void)
  30:Src/Gcode/Buffer_Gcode.c **** {
  31:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = defaultDescreteCommand;
  32:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = defaultDescreteCommand;
  33:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = defaultDescreteCommand;
  34:Src/Gcode/Buffer_Gcode.c **** }
  35:Src/Gcode/Buffer_Gcode.c **** 
  36:Src/Gcode/Buffer_Gcode.c **** const descreteCommand_Gcode getDescreteCommandBufferElement_Gcode(int elementNumber)
  37:Src/Gcode/Buffer_Gcode.c **** {
  38:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber < 1) elementNumber = 1;
  39:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > 3) elementNumber = 3;
  40:Src/Gcode/Buffer_Gcode.c ****     return descreteBuffer[number(elementNumber)];
  41:Src/Gcode/Buffer_Gcode.c **** }
  42:Src/Gcode/Buffer_Gcode.c **** 
  43:Src/Gcode/Buffer_Gcode.c **** 
  44:Src/Gcode/Buffer_Gcode.c **** static command_Gcode commandBuffer[COMMAND_BUFFER_LENGTH];
  45:Src/Gcode/Buffer_Gcode.c **** 
  46:Src/Gcode/Buffer_Gcode.c **** static int firstOccupedElementCommandBuffer;
  47:Src/Gcode/Buffer_Gcode.c **** static int firstFreeElementCommandBuffer;
  48:Src/Gcode/Buffer_Gcode.c **** static _Bool commandBufferIsFull;
  49:Src/Gcode/Buffer_Gcode.c **** 
  50:Src/Gcode/Buffer_Gcode.c **** void createCommandBuffer_Gcode(void)
  51:Src/Gcode/Buffer_Gcode.c **** {
  52:Src/Gcode/Buffer_Gcode.c ****     int n;
  53:Src/Gcode/Buffer_Gcode.c ****     for (n=1; n<=COMMAND_BUFFER_LENGTH; n++)
  54:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(n)] = defaultCommand;
  55:Src/Gcode/Buffer_Gcode.c ****     firstOccupedElementCommandBuffer = 1;
  56:Src/Gcode/Buffer_Gcode.c ****     firstFreeElementCommandBuffer = 1;
  57:Src/Gcode/Buffer_Gcode.c ****     commandBufferIsFull = false;
  58:Src/Gcode/Buffer_Gcode.c **** }
  59:Src/Gcode/Buffer_Gcode.c **** 
  60:Src/Gcode/Buffer_Gcode.c **** const command_Gcode getCommandBufferElement_Gcode(int elementNumber)
  61:Src/Gcode/Buffer_Gcode.c **** {
  62:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber < 1) elementNumber = 1;
  63:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > COMMAND_BUFFER_LENGTH) elementNumber = COMMAND_BUFFER_LENGTH;
  64:Src/Gcode/Buffer_Gcode.c ****     return commandBuffer[number(elementNumber)];
  65:Src/Gcode/Buffer_Gcode.c **** }
  66:Src/Gcode/Buffer_Gcode.c **** 
  67:Src/Gcode/Buffer_Gcode.c **** void firstInCommandBuffer_Gcode(command_Gcode command)
  68:Src/Gcode/Buffer_Gcode.c **** {
  69:Src/Gcode/Buffer_Gcode.c ****     if (commandBufferIsFull)
  70:Src/Gcode/Buffer_Gcode.c ****         return;
ARM GAS  /tmp/cckOLbKl.s 			page 3


  71:Src/Gcode/Buffer_Gcode.c **** 
  72:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(firstFreeElementCommandBuffer)] = command;
  73:Src/Gcode/Buffer_Gcode.c **** 
  74:Src/Gcode/Buffer_Gcode.c ****     firstFreeElementCommandBuffer++;
  75:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer > COMMAND_BUFFER_LENGTH)
  76:Src/Gcode/Buffer_Gcode.c ****         firstFreeElementCommandBuffer = firstFreeElementCommandBuffer - COMMAND_BUFFER_LENGTH;
  77:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer == firstOccupedElementCommandBuffer)
  78:Src/Gcode/Buffer_Gcode.c ****         commandBufferIsFull = true;
  79:Src/Gcode/Buffer_Gcode.c **** }
  80:Src/Gcode/Buffer_Gcode.c **** 
  81:Src/Gcode/Buffer_Gcode.c **** const command_Gcode firstOutCommandBuffer_Gcode(void)
  82:Src/Gcode/Buffer_Gcode.c **** {
  83:Src/Gcode/Buffer_Gcode.c ****     return commandBuffer[number(firstOccupedElementCommandBuffer)];
  84:Src/Gcode/Buffer_Gcode.c **** }
  85:Src/Gcode/Buffer_Gcode.c **** 
  86:Src/Gcode/Buffer_Gcode.c **** void eraseFirstCommandBuffer_Gcode(void)
  87:Src/Gcode/Buffer_Gcode.c **** {
  88:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == firstFreeElementCommandBuffer)
  89:Src/Gcode/Buffer_Gcode.c ****         if (!commandBufferIsFull)
  90:Src/Gcode/Buffer_Gcode.c ****             return;
  91:Src/Gcode/Buffer_Gcode.c **** 
  92:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(firstOccupedElementCommandBuffer)] = defaultCommand;
  93:Src/Gcode/Buffer_Gcode.c **** 
  94:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == COMMAND_BUFFER_LENGTH)
  95:Src/Gcode/Buffer_Gcode.c ****         firstOccupedElementCommandBuffer = firstOccupedElementCommandBuffer - COMMAND_BUFFER_LENGTH
  96:Src/Gcode/Buffer_Gcode.c ****     firstOccupedElementCommandBuffer++;
  97:Src/Gcode/Buffer_Gcode.c ****     commandBufferIsFull = false;
  98:Src/Gcode/Buffer_Gcode.c **** }
  99:Src/Gcode/Buffer_Gcode.c **** 
 100:Src/Gcode/Buffer_Gcode.c **** const int checkFreeSpaceCommandBuffer_Gcode(void)
 101:Src/Gcode/Buffer_Gcode.c **** {
 102:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer == firstOccupedElementCommandBuffer)
 103:Src/Gcode/Buffer_Gcode.c ****         if (commandBufferIsFull)
 104:Src/Gcode/Buffer_Gcode.c ****             return 0;
 105:Src/Gcode/Buffer_Gcode.c **** 
 106:Src/Gcode/Buffer_Gcode.c ****     int occupedSpace = firstFreeElementCommandBuffer - firstOccupedElementCommandBuffer;
 107:Src/Gcode/Buffer_Gcode.c ****     if (occupedSpace < 0)
 108:Src/Gcode/Buffer_Gcode.c ****         occupedSpace = occupedSpace + COMMAND_BUFFER_LENGTH;
 109:Src/Gcode/Buffer_Gcode.c ****     int freeSpace = COMMAND_BUFFER_LENGTH - occupedSpace;
 110:Src/Gcode/Buffer_Gcode.c ****     return freeSpace;
 111:Src/Gcode/Buffer_Gcode.c **** }
 112:Src/Gcode/Buffer_Gcode.c **** 
 113:Src/Gcode/Buffer_Gcode.c **** _Bool enoghSpaceIsReservedCommandBuffer_Gcode(void)
 114:Src/Gcode/Buffer_Gcode.c **** {
 115:Src/Gcode/Buffer_Gcode.c ****     return checkFreeSpaceCommandBuffer_Gcode() > RESERVE_LENGTH;
 116:Src/Gcode/Buffer_Gcode.c **** }
 117:Src/Gcode/Buffer_Gcode.c **** 
 118:Src/Gcode/Buffer_Gcode.c **** static const float ACCELERATION_XY_STEPS_PER_SS = (float)ACCELERATION_MM_MIN_S_XY*(float)STEPS_PER_
 119:Src/Gcode/Buffer_Gcode.c **** static const float ACCELERATION_Z_STEPS_PER_SS = (float)ACCELERATION_MM_MIN_S_Z*(float)STEPS_PER_MM
 120:Src/Gcode/Buffer_Gcode.c **** static const float MAX_SPEED_XY_STEPS_PER_SECOND = (float)MAX_SPEED_MM_MIN_XY*(float)STEPS_PER_MM_X
 121:Src/Gcode/Buffer_Gcode.c **** static const float MAX_SPEED_Z_STEPS_PER_SECOND = (float)MAX_SPEED_MM_MIN_Z*(float)STEPS_PER_MM_Z/(
 122:Src/Gcode/Buffer_Gcode.c **** static const float MAX_SPEED_E_STEPS_PER_SECOND = (float)MAX_SPEED_MM_MIN_E*(float)STEPS_PER_MM_E/(
 123:Src/Gcode/Buffer_Gcode.c **** 
 124:Src/Gcode/Buffer_Gcode.c **** static long sign(float x)
 125:Src/Gcode/Buffer_Gcode.c **** {
  48              		.loc 1 125 0
  49              		.cfi_startproc
ARM GAS  /tmp/cckOLbKl.s 			page 4


  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL2:
  53 0000 08B5     		push	{r3, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 3, -8
  57              		.cfi_offset 14, -4
 126:Src/Gcode/Buffer_Gcode.c ****     if (x<0)
  58              		.loc 1 126 0
  59 0002 0021     		movs	r1, #0
  60 0004 FFF7FEFF 		bl	__aeabi_fcmplt
  61              	.LVL3:
  62 0008 08B9     		cbnz	r0, .L9
 127:Src/Gcode/Buffer_Gcode.c ****         return -1;
 128:Src/Gcode/Buffer_Gcode.c ****     return 1;
  63              		.loc 1 128 0
  64 000a 0120     		movs	r0, #1
  65              	.L2:
 129:Src/Gcode/Buffer_Gcode.c **** }
  66              		.loc 1 129 0
  67 000c 08BD     		pop	{r3, pc}
  68              	.L9:
 127:Src/Gcode/Buffer_Gcode.c ****         return -1;
  69              		.loc 1 127 0
  70 000e 4FF0FF30 		mov	r0, #-1
  71 0012 FBE7     		b	.L2
  72              		.cfi_endproc
  73              	.LFE12:
  75              		.global	__aeabi_fsub
  76              		.global	__aeabi_fdiv
  77              		.global	__aeabi_fmul
  78              		.global	__aeabi_fadd
  79              		.section	.text.distanceStartFastMove,"ax",%progbits
  80              		.align	1
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	distanceStartFastMove:
  87              	.LFB16:
 130:Src/Gcode/Buffer_Gcode.c **** 
 131:Src/Gcode/Buffer_Gcode.c **** static const command_Gcode lastCommand(void)
 132:Src/Gcode/Buffer_Gcode.c **** {
 133:Src/Gcode/Buffer_Gcode.c ****     int number;
 134:Src/Gcode/Buffer_Gcode.c ****     number = firstFreeElementCommandBuffer - 1;
 135:Src/Gcode/Buffer_Gcode.c ****     if (number == 0)
 136:Src/Gcode/Buffer_Gcode.c ****         number = COMMAND_BUFFER_LENGTH;
 137:Src/Gcode/Buffer_Gcode.c ****     return getCommandBufferElement_Gcode(number);
 138:Src/Gcode/Buffer_Gcode.c **** }
 139:Src/Gcode/Buffer_Gcode.c **** 
 140:Src/Gcode/Buffer_Gcode.c **** static _Bool conserveSpeedStart(long Xn, long Yn, long Zn)
 141:Src/Gcode/Buffer_Gcode.c **** {
 142:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == firstFreeElementCommandBuffer)
 143:Src/Gcode/Buffer_Gcode.c ****         return false;
 144:Src/Gcode/Buffer_Gcode.c ****     if (lastCommand().type != MOVE_COMMAND)
 145:Src/Gcode/Buffer_Gcode.c ****         return false;
ARM GAS  /tmp/cckOLbKl.s 			page 5


 146:Src/Gcode/Buffer_Gcode.c ****     long XnPrevious = lastCommand().dXn;
 147:Src/Gcode/Buffer_Gcode.c ****     long YnPrevious = lastCommand().dYn;
 148:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2 = (float)XnPrevious*(float)Xn + (float)YnPrevious*(float)Yn;
 149:Src/Gcode/Buffer_Gcode.c ****     float xy1xy1 = (float)XnPrevious*(float)XnPrevious + (float)YnPrevious*(float)YnPrevious;
 150:Src/Gcode/Buffer_Gcode.c ****     float xy2xy2 = (float)Xn*(float)Xn + (float)Yn*(float)Yn;
 151:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2Critical = sqrtf(xy1xy1)*sqrtf(xy2xy2)*cos(3.14*(float)CRITICAL_ANGLE_XY/180.0);
 152:Src/Gcode/Buffer_Gcode.c ****     if (xy1xy2 < xy1xy2Critical)
 153:Src/Gcode/Buffer_Gcode.c ****         return false;
 154:Src/Gcode/Buffer_Gcode.c ****     return true;
 155:Src/Gcode/Buffer_Gcode.c **** }
 156:Src/Gcode/Buffer_Gcode.c **** 
 157:Src/Gcode/Buffer_Gcode.c **** static _Bool conserveSpeedFinish(long Xn, long Yn, long Zn)
 158:Src/Gcode/Buffer_Gcode.c **** {
 159:Src/Gcode/Buffer_Gcode.c ****     if (getDescreteCommandBufferElement_Gcode(3).type != MOVE_COMMAND)
 160:Src/Gcode/Buffer_Gcode.c ****         return false;
 161:Src/Gcode/Buffer_Gcode.c ****     long XnNext = getDescreteCommandBufferElement_Gcode(3).Xn - getDescreteCommandBufferElement_Gco
 162:Src/Gcode/Buffer_Gcode.c ****     long YnNext = getDescreteCommandBufferElement_Gcode(3).Yn - getDescreteCommandBufferElement_Gco
 163:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2 = (float)XnNext*(float)Xn + (float)YnNext*(float)Yn;
 164:Src/Gcode/Buffer_Gcode.c ****     float xy1xy1 = (float)XnNext*(float)XnNext + (float)YnNext*(float)YnNext;
 165:Src/Gcode/Buffer_Gcode.c ****     float xy2xy2 = (float)Xn*(float)Xn + (float)Yn*(float)Yn;
 166:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2Critical = sqrtf(xy1xy1)*sqrtf(xy2xy2)*cos(3.14*(float)CRITICAL_ANGLE_XY/180.0);
 167:Src/Gcode/Buffer_Gcode.c ****     if (xy1xy2 < xy1xy2Critical)
 168:Src/Gcode/Buffer_Gcode.c ****         return false;
 169:Src/Gcode/Buffer_Gcode.c ****     return true;
 170:Src/Gcode/Buffer_Gcode.c **** }
 171:Src/Gcode/Buffer_Gcode.c **** 
 172:Src/Gcode/Buffer_Gcode.c **** static float distanceStartFastMove(float totalDistance, float speedStart, float speedFinish, float 
 173:Src/Gcode/Buffer_Gcode.c **** {
  88              		.loc 1 173 0
  89              		.cfi_startproc
  90              		@ args = 4, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL4:
  93 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 24
  96              		.cfi_offset 3, -24
  97              		.cfi_offset 4, -20
  98              		.cfi_offset 5, -16
  99              		.cfi_offset 6, -12
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 0746     		mov	r7, r0
 103 0004 0D46     		mov	r5, r1
 104 0006 1646     		mov	r6, r2
 174:Src/Gcode/Buffer_Gcode.c ****     float distance_float;
 175:Src/Gcode/Buffer_Gcode.c ****     distance_float = (float)totalDistance*(accelerationFinish/(accelerationFinish-accelerationStart
 105              		.loc 1 175 0
 106 0008 1946     		mov	r1, r3
 107              	.LVL5:
 108 000a 0698     		ldr	r0, [sp, #24]	@ float
 109              	.LVL6:
 110 000c FFF7FEFF 		bl	__aeabi_fsub
 111              	.LVL7:
 112 0010 0446     		mov	r4, r0
 113 0012 0146     		mov	r1, r0
 114 0014 0698     		ldr	r0, [sp, #24]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 6


 115 0016 FFF7FEFF 		bl	__aeabi_fdiv
 116              	.LVL8:
 117 001a 3946     		mov	r1, r7
 118 001c FFF7FEFF 		bl	__aeabi_fmul
 119              	.LVL9:
 120 0020 0746     		mov	r7, r0
 121              	.LVL10:
 176:Src/Gcode/Buffer_Gcode.c ****                     +(speedFinish*speedFinish-speedStart*speedStart)/(2*(accelerationFinish-acceler
 122              		.loc 1 176 0
 123 0022 3146     		mov	r1, r6
 124 0024 3046     		mov	r0, r6
 125 0026 FFF7FEFF 		bl	__aeabi_fmul
 126              	.LVL11:
 127 002a 0646     		mov	r6, r0
 128              	.LVL12:
 129 002c 2946     		mov	r1, r5
 130 002e 2846     		mov	r0, r5
 131 0030 FFF7FEFF 		bl	__aeabi_fmul
 132              	.LVL13:
 133 0034 0146     		mov	r1, r0
 134 0036 3046     		mov	r0, r6
 135 0038 FFF7FEFF 		bl	__aeabi_fsub
 136              	.LVL14:
 137 003c 0546     		mov	r5, r0
 138              	.LVL15:
 139 003e 2146     		mov	r1, r4
 140 0040 2046     		mov	r0, r4
 141 0042 FFF7FEFF 		bl	__aeabi_fadd
 142              	.LVL16:
 143 0046 0146     		mov	r1, r0
 144 0048 2846     		mov	r0, r5
 145 004a FFF7FEFF 		bl	__aeabi_fdiv
 146              	.LVL17:
 175:Src/Gcode/Buffer_Gcode.c ****                     +(speedFinish*speedFinish-speedStart*speedStart)/(2*(accelerationFinish-acceler
 147              		.loc 1 175 0
 148 004e 0146     		mov	r1, r0
 149 0050 3846     		mov	r0, r7
 150 0052 FFF7FEFF 		bl	__aeabi_fadd
 151              	.LVL18:
 177:Src/Gcode/Buffer_Gcode.c ****     return distance_float;
 178:Src/Gcode/Buffer_Gcode.c **** }
 152              		.loc 1 178 0
 153 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 154              		.cfi_endproc
 155              	.LFE16:
 157              		.section	.text.lastCommandNumber,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	lastCommandNumber:
 165              	.LFB30:
 179:Src/Gcode/Buffer_Gcode.c **** 
 180:Src/Gcode/Buffer_Gcode.c **** static float speedMaxFastMove(float totalDistance, float speedStart, float speedFinish, float accel
 181:Src/Gcode/Buffer_Gcode.c **** {
 182:Src/Gcode/Buffer_Gcode.c ****     float speed;
ARM GAS  /tmp/cckOLbKl.s 			page 7


 183:Src/Gcode/Buffer_Gcode.c ****     speed = (float)sign(totalDistance)*sqrt(
 184:Src/Gcode/Buffer_Gcode.c ****                 (float)totalDistance*(2*accelerationStart*accelerationFinish/(accelerationFinish-ac
 185:Src/Gcode/Buffer_Gcode.c ****                 -(speedFinish*speedFinish*accelerationStart-speedStart*speedStart*accelerationFinis
 186:Src/Gcode/Buffer_Gcode.c ****                 );
 187:Src/Gcode/Buffer_Gcode.c ****     return speed;
 188:Src/Gcode/Buffer_Gcode.c **** }
 189:Src/Gcode/Buffer_Gcode.c **** 
 190:Src/Gcode/Buffer_Gcode.c **** static void MoveXY_Analyser(void)
 191:Src/Gcode/Buffer_Gcode.c **** {
 192:Src/Gcode/Buffer_Gcode.c ****     long Xn = getDescreteCommandBufferElement_Gcode(2).Xn - getDescreteCommandBufferElement_Gcode(1
 193:Src/Gcode/Buffer_Gcode.c ****     long Yn = getDescreteCommandBufferElement_Gcode(2).Yn - getDescreteCommandBufferElement_Gcode(1
 194:Src/Gcode/Buffer_Gcode.c ****     long En = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(1
 195:Src/Gcode/Buffer_Gcode.c ****     float distance_XY = sqrtf(pow(Xn,2)+pow(Yn,2)); float cosX = (float)Xn/distance_XY; float cosY 
 196:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = getDescreteCommandBufferElement_Gcode(2).FnXY;  if ( getDescreteCommandBuff
 197:Src/Gcode/Buffer_Gcode.c ****     if (En != 0) if ( fabs(speedTarget*cosE) > MAX_SPEED_E_STEPS_PER_SECOND ) speedTarget = sign(sp
 198:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;                                               if ( conserveSpeedStart(Xn,
 199:Src/Gcode/Buffer_Gcode.c ****     float speedFinish = 0;                                              if ( conserveSpeedFinish(Xn
 200:Src/Gcode/Buffer_Gcode.c ****     float accelerationStart = ACCELERATION_XY_STEPS_PER_SS*sign(speedTarget-speedStart);
 201:Src/Gcode/Buffer_Gcode.c ****     float accelerationFinish = ACCELERATION_XY_STEPS_PER_SS*sign(speedFinish-speedTarget);
 202:Src/Gcode/Buffer_Gcode.c ****     float LnStart  = 0.5*(pow(speedTarget,2)-pow(speedStart,2))/accelerationStart;
 203:Src/Gcode/Buffer_Gcode.c ****     float LnFinish = 0.5*(pow(speedFinish,2)-pow(speedTarget,2))/accelerationFinish;
 204:Src/Gcode/Buffer_Gcode.c ****     float LnMiddle = distance_XY - LnStart - LnFinish;
 205:Src/Gcode/Buffer_Gcode.c ****     if( LnMiddle < 0 )
 206:Src/Gcode/Buffer_Gcode.c ****     {
 207:Src/Gcode/Buffer_Gcode.c ****         if( conserveSpeedFinish(Xn, Yn, 0) )
 208:Src/Gcode/Buffer_Gcode.c ****         {
 209:Src/Gcode/Buffer_Gcode.c ****             long x1 = Xn;                           long y1 = Yn;                           long e1
 210:Src/Gcode/Buffer_Gcode.c ****             float vX1 = speedStart*cosX;            float vY1 = speedStart*cosY;            float v
 211:Src/Gcode/Buffer_Gcode.c ****             float aX1 = accelerationStart*cosX;     float aY1 = accelerationStart*cosY;     float a
 212:Src/Gcode/Buffer_Gcode.c ****             command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1
 213:Src/Gcode/Buffer_Gcode.c ****         }
 214:Src/Gcode/Buffer_Gcode.c ****         if( conserveSpeedStart(Xn, Yn, 0) )
 215:Src/Gcode/Buffer_Gcode.c ****         {
 216:Src/Gcode/Buffer_Gcode.c ****             long x1 = Xn;                           long y1 = Yn;                           long e1
 217:Src/Gcode/Buffer_Gcode.c ****             float vX1 = speedStart*cosX;            float vY1 = speedStart*cosY;            float v
 218:Src/Gcode/Buffer_Gcode.c ****             float aX1 = accelerationFinish*cosX;    float aY1 = accelerationFinish*cosY;    float a
 219:Src/Gcode/Buffer_Gcode.c ****             command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1
 220:Src/Gcode/Buffer_Gcode.c ****         }
 221:Src/Gcode/Buffer_Gcode.c ****         float distance_XY_buffer = distanceStartFastMove(distance_XY, speedStart, speedFinish, acce
 222:Src/Gcode/Buffer_Gcode.c ****         float speed_XY_buffer = speedMaxFastMove(distance_XY, speedStart, speedFinish, acceleration
 223:Src/Gcode/Buffer_Gcode.c ****         long x1 = lroundf(distance_XY_buffer*cosX); long y1 = lroundf(distance_XY_buffer*cosY);    
 224:Src/Gcode/Buffer_Gcode.c ****         float vX1 = speedStart*cosX;                float vY1 = speedStart*cosY;                   
 225:Src/Gcode/Buffer_Gcode.c ****         float aX1 = accelerationStart*cosX;         float aY1 = accelerationStart*cosY;            
 226:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1, 0,
 227:Src/Gcode/Buffer_Gcode.c ****         long x2 = Xn - x1;                          long y2 = Yn - y1;                             
 228:Src/Gcode/Buffer_Gcode.c ****         float vX2 = speed_XY_buffer*cosX;           float vY2 = speed_XY_buffer*cosY;              
 229:Src/Gcode/Buffer_Gcode.c ****         float aX2 = accelerationFinish*cosX;        float aY2 = accelerationFinish*cosY;           
 230:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command2 = {MOVE_COMMAND, x2, y2, 0, e2,    vX2, vY2, 0, vE2,    aX2, aY2, 0,
 231:Src/Gcode/Buffer_Gcode.c ****     }
 232:Src/Gcode/Buffer_Gcode.c ****     long x1 = lroundf(LnStart*cosX);        long y1 = lroundf(LnStart*cosY);        long e1 = lroun
 233:Src/Gcode/Buffer_Gcode.c ****     float vX1 = speedStart*cosX;            float vY1 = speedStart*cosY;            float vE1 = spe
 234:Src/Gcode/Buffer_Gcode.c ****     float aX1 = accelerationStart*cosX;     float aY1 = accelerationStart*cosY;     float aE1 = acc
 235:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1, 0, aE1
 236:Src/Gcode/Buffer_Gcode.c ****     long x2 = lroundf(LnMiddle*cosX);       long y2 = lroundf(LnMiddle*cosY);       long e2 = lroun
 237:Src/Gcode/Buffer_Gcode.c ****     float vX2 = speedTarget*cosX;           float vY2 = speedTarget*cosY;           float vE2 = spe
 238:Src/Gcode/Buffer_Gcode.c ****     float aX2 = 0;                          float aY2 = 0;                          float aE2 = 0;
 239:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND, x2, y2, 0, e2,    vX2, vY2, 0, vE2,    aX2, aY2, 0, aE2
ARM GAS  /tmp/cckOLbKl.s 			page 8


 240:Src/Gcode/Buffer_Gcode.c ****     long x3 = Xn - x1 - x2;                 long y3 = Yn - y2 - y1;                 long e3 = En - 
 241:Src/Gcode/Buffer_Gcode.c ****     float vX3 = speedTarget*cosX;           float vY3 = speedTarget*cosY;           float vE3 = spe
 242:Src/Gcode/Buffer_Gcode.c ****     float aX3 = accelerationFinish*cosX;    float aY3 = accelerationFinish*cosY;    float aE3 = acc
 243:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {MOVE_COMMAND, x3, y3, 0, e3,    vX3, vY3, 0, vE3,    aX3, aY3, 0, aE3
 244:Src/Gcode/Buffer_Gcode.c **** }
 245:Src/Gcode/Buffer_Gcode.c **** 
 246:Src/Gcode/Buffer_Gcode.c **** static void MoveE_Analyser(void)
 247:Src/Gcode/Buffer_Gcode.c **** {
 248:Src/Gcode/Buffer_Gcode.c ****     long En = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(1
 249:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = sign(En)*getDescreteCommandBufferElement_Gcode(2).FnE;
 250:Src/Gcode/Buffer_Gcode.c ****     if (getDescreteCommandBufferElement_Gcode(2).FnE > MAX_SPEED_E_STEPS_PER_SECOND) speedTarget = 
 251:Src/Gcode/Buffer_Gcode.c ****     long e1 = En;
 252:Src/Gcode/Buffer_Gcode.c ****     float vE1 = speedTarget;
 253:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {MOVE_COMMAND, 0, 0, 0, e1,    0, 0, 0, vE1,    0, 0, 0,   0, 0}; firs
 254:Src/Gcode/Buffer_Gcode.c **** }
 255:Src/Gcode/Buffer_Gcode.c **** 
 256:Src/Gcode/Buffer_Gcode.c **** static void MoveZ_Analyser(void)
 257:Src/Gcode/Buffer_Gcode.c **** {
 258:Src/Gcode/Buffer_Gcode.c **** 
 259:Src/Gcode/Buffer_Gcode.c ****     long Zn = getDescreteCommandBufferElement_Gcode(2).Zn - getDescreteCommandBufferElement_Gcode(1
 260:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = getDescreteCommandBufferElement_Gcode(2).FnZ;
 261:Src/Gcode/Buffer_Gcode.c ****     if ( getDescreteCommandBufferElement_Gcode(2).FnZ > MAX_SPEED_Z_STEPS_PER_SECOND ) speedTarget 
 262:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;
 263:Src/Gcode/Buffer_Gcode.c ****     float speedFinish = 0;
 264:Src/Gcode/Buffer_Gcode.c ****     float accelerationStart = ACCELERATION_Z_STEPS_PER_SS*sign(speedTarget-speedStart);
 265:Src/Gcode/Buffer_Gcode.c ****     float accelerationFinish = ACCELERATION_Z_STEPS_PER_SS*sign(speedFinish-speedTarget);
 266:Src/Gcode/Buffer_Gcode.c ****     float LnStart  = 0.5*(pow(speedTarget,2)-pow(speedStart,2))/accelerationStart;
 267:Src/Gcode/Buffer_Gcode.c ****     float LnFinish = 0.5*(pow(speedFinish,2)-pow(speedTarget,2))/accelerationFinish;
 268:Src/Gcode/Buffer_Gcode.c ****     float LnMiddle = (float)abs(Zn) - LnStart - LnFinish;
 269:Src/Gcode/Buffer_Gcode.c ****     if( LnMiddle < 0 )
 270:Src/Gcode/Buffer_Gcode.c ****     {
 271:Src/Gcode/Buffer_Gcode.c ****         float distance_Z_buffer = distanceStartFastMove( (float)abs(Zn), speedStart, speedFinish, a
 272:Src/Gcode/Buffer_Gcode.c ****         float speed_Z_buffer = speedMaxFastMove( (float)abs(Zn), speedStart, speedFinish, accelerat
 273:Src/Gcode/Buffer_Gcode.c ****         long z1 = lroundf(distance_Z_buffer*sign(Zn));
 274:Src/Gcode/Buffer_Gcode.c ****         float vZ1 = speedStart;
 275:Src/Gcode/Buffer_Gcode.c ****         float aZ1 = accelerationStart*sign(Zn);
 276:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command1 = {MOVE_COMMAND, 0, 0, z1, 0,    0, 0, vZ1, 0,    0, 0, aZ1, 0,   0,
 277:Src/Gcode/Buffer_Gcode.c ****         long z2 = Zn - z1;
 278:Src/Gcode/Buffer_Gcode.c ****         float vZ2 = speed_Z_buffer*sign(Zn);
 279:Src/Gcode/Buffer_Gcode.c ****         float aZ2 = accelerationFinish*sign(Zn);
 280:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command2 = {MOVE_COMMAND, 0, 0, z2, 0,    0, 0, vZ2, 0,    0, 0, aZ2, 0,   0,
 281:Src/Gcode/Buffer_Gcode.c ****     }
 282:Src/Gcode/Buffer_Gcode.c ****     long z1 = lroundf(LnStart*sign(Zn));
 283:Src/Gcode/Buffer_Gcode.c ****     float vZ1 = speedStart*sign(Zn);
 284:Src/Gcode/Buffer_Gcode.c ****     float aZ1 = accelerationStart*sign(Zn);
 285:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {MOVE_COMMAND, 0, 0, z1, 0,    0, 0, vZ1, 0,    0, 0, aZ1, 0,   0, 0};
 286:Src/Gcode/Buffer_Gcode.c ****     long z2 = lroundf(LnMiddle*sign(Zn));
 287:Src/Gcode/Buffer_Gcode.c ****     float vZ2 = speedTarget*sign(Zn);
 288:Src/Gcode/Buffer_Gcode.c ****     float aZ2 = 0;
 289:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND, 0, 0, z2, 0,    0, 0, vZ2, 0,    0, 0, aZ2, 0,   0, 0};
 290:Src/Gcode/Buffer_Gcode.c ****     long z3 = Zn - z1 - z2;
 291:Src/Gcode/Buffer_Gcode.c ****     float vZ3 = speedTarget*sign(Zn);
 292:Src/Gcode/Buffer_Gcode.c ****     float aZ3 = accelerationFinish*sign(Zn);
 293:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {MOVE_COMMAND, 0, 0, z3, 0,    0, 0, vZ3, 0,    0, 0, aZ3, 0,   0, 0};
 294:Src/Gcode/Buffer_Gcode.c **** }
 295:Src/Gcode/Buffer_Gcode.c **** 
 296:Src/Gcode/Buffer_Gcode.c **** static const float HOME_COARSE_SPEED_XY_STEPS_PER_SECOND = (float)HOME_COARSE_SPEED*(float)STEPS_PE
ARM GAS  /tmp/cckOLbKl.s 			page 9


 297:Src/Gcode/Buffer_Gcode.c **** static const float HOME_COARSE_SPEED_Z_STEPS_PER_SECOND = (float)HOME_COARSE_SPEED*(float)STEPS_PER
 298:Src/Gcode/Buffer_Gcode.c **** static const float HOME_FINE_SPEED_XY_STEPS_PER_SECOND = (float)HOME_FINE_SPEED*(float)STEPS_PER_MM
 299:Src/Gcode/Buffer_Gcode.c **** static const float HOME_FINE_SPEED_Z_STEPS_PER_SECOND = (float)HOME_FINE_SPEED*(float)STEPS_PER_MM_
 300:Src/Gcode/Buffer_Gcode.c **** static const long  HOME_FINE_STEPS_XY = HOME_FINE_DISTANCE*STEPS_PER_MM_XY;
 301:Src/Gcode/Buffer_Gcode.c **** static const long  HOME_FINE_STEPS_Z = HOME_FINE_DISTANCE*STEPS_PER_MM_Z;
 302:Src/Gcode/Buffer_Gcode.c **** 
 303:Src/Gcode/Buffer_Gcode.c **** 
 304:Src/Gcode/Buffer_Gcode.c **** static void HomeX_Analyser(void)
 305:Src/Gcode/Buffer_Gcode.c **** {
 306:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn;
 307:Src/Gcode/Buffer_Gcode.c ****     long x; float v; float a;
 308:Src/Gcode/Buffer_Gcode.c **** 
 309:Src/Gcode/Buffer_Gcode.c ****     long  L_HOME_XY = lroundf(pow(HOME_COARSE_SPEED_XY_STEPS_PER_SECOND,2)/(2*ACCELERATION_XY_STEPS
 310:Src/Gcode/Buffer_Gcode.c **** 
 311:Src/Gcode/Buffer_Gcode.c ****     x = 0;                          v = -HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;         a = 0;
 312:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {GO_HOME_X_COMMAND, x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 313:Src/Gcode/Buffer_Gcode.c ****     x = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 314:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 315:Src/Gcode/Buffer_Gcode.c ****     x = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_SECOND;           a = 0;
 316:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {GO_HOME_X_COMMAND, x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 317:Src/Gcode/Buffer_Gcode.c ****     if (dXn <= 0)
 318:Src/Gcode/Buffer_Gcode.c ****         return;
 319:Src/Gcode/Buffer_Gcode.c **** 
 320:Src/Gcode/Buffer_Gcode.c ****     if (dXn < 2*L_HOME_XY)
 321:Src/Gcode/Buffer_Gcode.c ****     {
 322:Src/Gcode/Buffer_Gcode.c ****         long  xStar = lroundf(0.25+(float)dXn/2);
 323:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_XY_STEPS_PER_SS*xStar);
 324:Src/Gcode/Buffer_Gcode.c ****         x = xStar;                  v = 0;                                              a = ACCELER
 325:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command4 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0,
 326:Src/Gcode/Buffer_Gcode.c ****         x = dXn-xStar;              v = vStar;                                          a = -ACCELE
 327:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0,
 328:Src/Gcode/Buffer_Gcode.c ****         return;
 329:Src/Gcode/Buffer_Gcode.c ****     }
 330:Src/Gcode/Buffer_Gcode.c **** 
 331:Src/Gcode/Buffer_Gcode.c ****     x = L_HOME_XY;              v = 0;                                              a = ACCELERATIO
 332:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command4 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 333:Src/Gcode/Buffer_Gcode.c ****     x = dXn-2*L_HOME_XY;        v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 334:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 335:Src/Gcode/Buffer_Gcode.c ****     x = L_HOME_XY;              v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = -ACCELERATI
 336:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command6 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 337:Src/Gcode/Buffer_Gcode.c **** }
 338:Src/Gcode/Buffer_Gcode.c **** 
 339:Src/Gcode/Buffer_Gcode.c **** static void HomeY_Analyser(void)
 340:Src/Gcode/Buffer_Gcode.c **** {
 341:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn;
 342:Src/Gcode/Buffer_Gcode.c ****     long y; float v; float a;
 343:Src/Gcode/Buffer_Gcode.c **** 
 344:Src/Gcode/Buffer_Gcode.c ****     long  L_HOME_XY = lroundf(pow(HOME_COARSE_SPEED_XY_STEPS_PER_SECOND,2)/(2*ACCELERATION_XY_STEPS
 345:Src/Gcode/Buffer_Gcode.c **** 
 346:Src/Gcode/Buffer_Gcode.c ****     y = 0;                          v = -HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;         a = 0;
 347:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {GO_HOME_Y_COMMAND, 0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 348:Src/Gcode/Buffer_Gcode.c ****     y = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 349:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 350:Src/Gcode/Buffer_Gcode.c ****     y = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_SECOND;           a = 0;
 351:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {GO_HOME_Y_COMMAND, 0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 352:Src/Gcode/Buffer_Gcode.c ****     if (dYn <= 0)
 353:Src/Gcode/Buffer_Gcode.c ****         return;
ARM GAS  /tmp/cckOLbKl.s 			page 10


 354:Src/Gcode/Buffer_Gcode.c **** 
 355:Src/Gcode/Buffer_Gcode.c ****     if (dYn < 2*L_HOME_XY)
 356:Src/Gcode/Buffer_Gcode.c ****     {
 357:Src/Gcode/Buffer_Gcode.c ****         long  yStar = lroundf(0.25+(float)dYn/2);
 358:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_XY_STEPS_PER_SS*yStar);
 359:Src/Gcode/Buffer_Gcode.c ****         y = yStar;                  v = 0;                                              a = ACCELER
 360:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command4 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0,
 361:Src/Gcode/Buffer_Gcode.c ****         y = dYn-yStar;              v = vStar;                                          a = -ACCELE
 362:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0,
 363:Src/Gcode/Buffer_Gcode.c ****         return;
 364:Src/Gcode/Buffer_Gcode.c ****     }
 365:Src/Gcode/Buffer_Gcode.c **** 
 366:Src/Gcode/Buffer_Gcode.c ****     y = L_HOME_XY;              v = 0;                                              a = ACCELERATIO
 367:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command4 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 368:Src/Gcode/Buffer_Gcode.c ****     y = dYn-2*L_HOME_XY;        v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 369:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 370:Src/Gcode/Buffer_Gcode.c ****     y = L_HOME_XY;              v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = -ACCELERATI
 371:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command6 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 372:Src/Gcode/Buffer_Gcode.c **** }
 373:Src/Gcode/Buffer_Gcode.c **** 
 374:Src/Gcode/Buffer_Gcode.c **** static void HomeZ_Analyser(void)
 375:Src/Gcode/Buffer_Gcode.c **** {
 376:Src/Gcode/Buffer_Gcode.c ****     long dZn = getDescreteCommandBufferElement_Gcode(2).Zn;
 377:Src/Gcode/Buffer_Gcode.c ****     long z; float v; float a;
 378:Src/Gcode/Buffer_Gcode.c **** 
 379:Src/Gcode/Buffer_Gcode.c ****     long  L_HOME_Z = lroundf(pow(HOME_COARSE_SPEED_Z_STEPS_PER_SECOND,2)/(2*ACCELERATION_Z_STEPS_PE
 380:Src/Gcode/Buffer_Gcode.c **** 
 381:Src/Gcode/Buffer_Gcode.c ****     z = 0;                          v = HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;           a = 0;
 382:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {GO_HOME_Z_COMMAND, 0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 383:Src/Gcode/Buffer_Gcode.c ****     z = -HOME_FINE_STEPS_Z;         v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = 0;
 384:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 385:Src/Gcode/Buffer_Gcode.c ****     z = 0;                          v = HOME_FINE_SPEED_Z_STEPS_PER_SECOND;             a = 0;
 386:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {GO_HOME_Z_COMMAND, 0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 387:Src/Gcode/Buffer_Gcode.c ****     if (dZn >= 0)
 388:Src/Gcode/Buffer_Gcode.c ****         return;
 389:Src/Gcode/Buffer_Gcode.c **** 
 390:Src/Gcode/Buffer_Gcode.c ****     if (abs(dZn) < 2*L_HOME_Z)
 391:Src/Gcode/Buffer_Gcode.c ****     {
 392:Src/Gcode/Buffer_Gcode.c ****         long  zStar = abs(lroundf(-0.25+(float)dZn/2));
 393:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_Z_STEPS_PER_SS*zStar);
 394:Src/Gcode/Buffer_Gcode.c ****         z = -zStar;                 v = 0;                                              a = -ACCELE
 395:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command4 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0,
 396:Src/Gcode/Buffer_Gcode.c ****         z = dZn+zStar;              v = -vStar;                                         a = ACCELER
 397:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0,
 398:Src/Gcode/Buffer_Gcode.c ****         return;
 399:Src/Gcode/Buffer_Gcode.c ****     }
 400:Src/Gcode/Buffer_Gcode.c **** 
 401:Src/Gcode/Buffer_Gcode.c ****     z = -L_HOME_Z;              v = 0;                                              a = -ACCELERATI
 402:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command4 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 403:Src/Gcode/Buffer_Gcode.c ****     z = dZn+2*L_HOME_Z;         v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = 0;
 404:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 405:Src/Gcode/Buffer_Gcode.c ****     z = -L_HOME_Z;              v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = ACCELERATIO
 406:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command6 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 407:Src/Gcode/Buffer_Gcode.c **** }
 408:Src/Gcode/Buffer_Gcode.c **** 
 409:Src/Gcode/Buffer_Gcode.c **** static void HomeXY_Analyser(void)
 410:Src/Gcode/Buffer_Gcode.c **** {
ARM GAS  /tmp/cckOLbKl.s 			page 11


 411:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn;
 412:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn;
 413:Src/Gcode/Buffer_Gcode.c **** 
 414:Src/Gcode/Buffer_Gcode.c ****     long x; long y; float v; float a;   float vX; float vY; float aX; float aY;
 415:Src/Gcode/Buffer_Gcode.c **** 
 416:Src/Gcode/Buffer_Gcode.c ****     x = 0;                      y = 0;                          v = -HOME_COARSE_SPEED_XY_STEPS_PER
 417:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {GO_HOME_XY_COMMAND, x, y, 0, 0,   v, v, 0, 0,    a, 0, 0, 0,   0, 0};
 418:Src/Gcode/Buffer_Gcode.c ****     x = HOME_FINE_STEPS_XY;     y = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_
 419:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command2 = {MOVE_COMMAND,       x, y, 0, 0,   v, v, 0, 0,    a, 0, 0, 0,   0, 0};
 420:Src/Gcode/Buffer_Gcode.c ****     x = 0;                      y = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_S
 421:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {GO_HOME_XY_COMMAND, x, y, 0, 0,   v, v, 0, 0,    a, 0, 0, 0,   0, 0};
 422:Src/Gcode/Buffer_Gcode.c **** 
 423:Src/Gcode/Buffer_Gcode.c ****     if (dXn == 0 && dYn == 0) return;
 424:Src/Gcode/Buffer_Gcode.c ****     if (dXn <  0 || dYn <  0) return;
 425:Src/Gcode/Buffer_Gcode.c **** 
 426:Src/Gcode/Buffer_Gcode.c ****     float distance_XY = sqrtf(pow(dXn,2)+pow(dYn,2));
 427:Src/Gcode/Buffer_Gcode.c ****     float cosX = (float)dXn/distance_XY;    float targetSpeedX = HOME_COARSE_SPEED_XY_STEPS_PER_SEC
 428:Src/Gcode/Buffer_Gcode.c ****     float cosY = (float)dYn/distance_XY;    float targetSpeedY = HOME_COARSE_SPEED_XY_STEPS_PER_SEC
 429:Src/Gcode/Buffer_Gcode.c ****     float startDistance_XY = pow(HOME_COARSE_SPEED_XY_STEPS_PER_SECOND,2)/(2*ACCELERATION_XY_STEPS_
 430:Src/Gcode/Buffer_Gcode.c ****     long l_HOME_X = lroundf(startDistance_XY*cosX);     long l_HOME_Y = lroundf(startDistance_XY*co
 431:Src/Gcode/Buffer_Gcode.c **** 
 432:Src/Gcode/Buffer_Gcode.c ****     if (distance_XY < 2*startDistance_XY)
 433:Src/Gcode/Buffer_Gcode.c ****     {
 434:Src/Gcode/Buffer_Gcode.c ****         long xStar = lroundf(0.25+(float)dXn/2);   float vStarX = cosX*sqrtf(2*ACCELERATION_XY_STEP
 435:Src/Gcode/Buffer_Gcode.c ****         long yStar = lroundf(0.25+(float)dYn/2);   float vStarY = cosY*sqrtf(2*ACCELERATION_XY_STEP
 436:Src/Gcode/Buffer_Gcode.c ****         x = xStar;              y = yStar;              vX = 0;                vY = 0;             
 437:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command4 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0, 
 438:Src/Gcode/Buffer_Gcode.c ****         x = dXn-xStar;          y = dYn-yStar;          vX = vStarX;           vY = vStarY;        
 439:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0, 
 440:Src/Gcode/Buffer_Gcode.c ****         return;
 441:Src/Gcode/Buffer_Gcode.c ****     }
 442:Src/Gcode/Buffer_Gcode.c **** 
 443:Src/Gcode/Buffer_Gcode.c ****     x = l_HOME_X;           y = l_HOME_Y;           vX = 0;                vY = 0;                a
 444:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command4 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0,   0,
 445:Src/Gcode/Buffer_Gcode.c ****     x = dXn-2*l_HOME_X;     y = dYn-2*l_HOME_Y;     vX = targetSpeedX;     vY = targetSpeedY;     a
 446:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0,   0,
 447:Src/Gcode/Buffer_Gcode.c ****     x = l_HOME_X;           y = l_HOME_Y;           vX = targetSpeedX;     vY = targetSpeedY;     a
 448:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command6 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0,   0,
 449:Src/Gcode/Buffer_Gcode.c **** }
 450:Src/Gcode/Buffer_Gcode.c **** 
 451:Src/Gcode/Buffer_Gcode.c **** static void SetExtrTemp_Analyser(void)
 452:Src/Gcode/Buffer_Gcode.c **** {
 453:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).extrT;
 454:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {HEAT_EXTRUDER_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   t, 0
 455:Src/Gcode/Buffer_Gcode.c **** }
 456:Src/Gcode/Buffer_Gcode.c **** 
 457:Src/Gcode/Buffer_Gcode.c **** static void SetBedTemp_Analyser(void)
 458:Src/Gcode/Buffer_Gcode.c **** {
 459:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).bedT;
 460:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {HEAT_BED_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   0, t};   
 461:Src/Gcode/Buffer_Gcode.c **** }
 462:Src/Gcode/Buffer_Gcode.c **** 
 463:Src/Gcode/Buffer_Gcode.c **** static void WaitExtrTemp_Analyser(void)
 464:Src/Gcode/Buffer_Gcode.c **** {
 465:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).extrT;
 466:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {WAIT_HEAT_EXTRUDER_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,  
 467:Src/Gcode/Buffer_Gcode.c **** }
ARM GAS  /tmp/cckOLbKl.s 			page 12


 468:Src/Gcode/Buffer_Gcode.c **** 
 469:Src/Gcode/Buffer_Gcode.c **** static void WaitBedTemp_Analyser(void)
 470:Src/Gcode/Buffer_Gcode.c **** {
 471:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).bedT;
 472:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {WAIT_HEAT_BED_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   0, t
 473:Src/Gcode/Buffer_Gcode.c **** }
 474:Src/Gcode/Buffer_Gcode.c **** 
 475:Src/Gcode/Buffer_Gcode.c **** void descreteCommandAnalyser_Gcode(void)
 476:Src/Gcode/Buffer_Gcode.c **** {
 477:Src/Gcode/Buffer_Gcode.c ****     commandType_Gcode typeOfCommand = getDescreteCommandBufferElement_Gcode(2).type;
 478:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn - getDescreteCommandBufferElement_Gcode(
 479:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn - getDescreteCommandBufferElement_Gcode(
 480:Src/Gcode/Buffer_Gcode.c ****     long dZn = getDescreteCommandBufferElement_Gcode(2).Zn - getDescreteCommandBufferElement_Gcode(
 481:Src/Gcode/Buffer_Gcode.c ****     long dEn = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(
 482:Src/Gcode/Buffer_Gcode.c **** 
 483:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == MOVE_COMMAND)
 484:Src/Gcode/Buffer_Gcode.c ****     {
 485:Src/Gcode/Buffer_Gcode.c ****         if (dZn != 0)
 486:Src/Gcode/Buffer_Gcode.c ****             MoveZ_Analyser();
 487:Src/Gcode/Buffer_Gcode.c ****         if (dXn != 0 || dYn != 0)
 488:Src/Gcode/Buffer_Gcode.c ****         {
 489:Src/Gcode/Buffer_Gcode.c ****             MoveXY_Analyser();
 490:Src/Gcode/Buffer_Gcode.c ****             return;
 491:Src/Gcode/Buffer_Gcode.c ****         }
 492:Src/Gcode/Buffer_Gcode.c ****         if (dEn != 0)
 493:Src/Gcode/Buffer_Gcode.c ****             MoveE_Analyser();
 494:Src/Gcode/Buffer_Gcode.c ****         return;
 495:Src/Gcode/Buffer_Gcode.c ****     }
 496:Src/Gcode/Buffer_Gcode.c **** 
 497:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_X_COMMAND)   {HomeX_Analyser();  return;}
 498:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Y_COMMAND)   {HomeY_Analyser();  return;}
 499:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Z_COMMAND)   {HomeZ_Analyser();  return;}
 500:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XY_COMMAND)  {HomeXY_Analyser(); return;}
 501:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XZ_COMMAND)  {HomeZ_Analyser();  HomeX_Analyser();  return;}
 502:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_YZ_COMMAND)  {HomeZ_Analyser();  HomeY_Analyser();  return;}
 503:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XYZ_COMMAND) {HomeZ_Analyser();  HomeXY_Analyser(); return;}
 504:Src/Gcode/Buffer_Gcode.c **** 
 505:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == HEAT_EXTRUDER_COMMAND)   {SetExtrTemp_Analyser();  return;}
 506:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == HEAT_BED_COMMAND)        {SetBedTemp_Analyser();   return;}
 507:Src/Gcode/Buffer_Gcode.c **** 
 508:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == WAIT_HEAT_EXTRUDER_COMMAND)   {WaitExtrTemp_Analyser();  return;}
 509:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == WAIT_HEAT_BED_COMMAND)        {WaitBedTemp_Analyser();   return;}
 510:Src/Gcode/Buffer_Gcode.c **** }
 511:Src/Gcode/Buffer_Gcode.c **** 
 512:Src/Gcode/Buffer_Gcode.c **** 
 513:Src/Gcode/Buffer_Gcode.c **** 
 514:Src/Gcode/Buffer_Gcode.c **** 
 515:Src/Gcode/Buffer_Gcode.c **** static int lastCommandNumber(void)
 516:Src/Gcode/Buffer_Gcode.c **** {
 166              		.loc 1 516 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 517:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer == 1)
 171              		.loc 1 517 0
 172 0000 034B     		ldr	r3, .L15
ARM GAS  /tmp/cckOLbKl.s 			page 13


 173 0002 1868     		ldr	r0, [r3]
 174 0004 0128     		cmp	r0, #1
 175 0006 01D0     		beq	.L14
 518:Src/Gcode/Buffer_Gcode.c ****         return COMMAND_BUFFER_LENGTH;
 519:Src/Gcode/Buffer_Gcode.c ****     return firstFreeElementCommandBuffer - 1;
 176              		.loc 1 519 0
 177 0008 0138     		subs	r0, r0, #1
 178 000a 7047     		bx	lr
 179              	.L14:
 518:Src/Gcode/Buffer_Gcode.c ****         return COMMAND_BUFFER_LENGTH;
 180              		.loc 1 518 0
 181 000c 3220     		movs	r0, #50
 520:Src/Gcode/Buffer_Gcode.c **** }
 182              		.loc 1 520 0
 183 000e 7047     		bx	lr
 184              	.L16:
 185              		.align	2
 186              	.L15:
 187 0010 00000000 		.word	.LANCHOR0
 188              		.cfi_endproc
 189              	.LFE30:
 191              		.section	.text.prevoiusCommandNumber,"ax",%progbits
 192              		.align	1
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu softvfp
 198              	prevoiusCommandNumber:
 199              	.LFB31:
 521:Src/Gcode/Buffer_Gcode.c **** 
 522:Src/Gcode/Buffer_Gcode.c **** static int prevoiusCommandNumber(int commandNumber)
 523:Src/Gcode/Buffer_Gcode.c **** {
 200              		.loc 1 523 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL19:
 524:Src/Gcode/Buffer_Gcode.c ****     if (commandNumber == 1)
 206              		.loc 1 524 0
 207 0000 0128     		cmp	r0, #1
 208 0002 01D0     		beq	.L19
 525:Src/Gcode/Buffer_Gcode.c ****         return COMMAND_BUFFER_LENGTH;
 526:Src/Gcode/Buffer_Gcode.c ****     return commandNumber - 1;
 209              		.loc 1 526 0
 210 0004 0138     		subs	r0, r0, #1
 211              	.LVL20:
 212 0006 7047     		bx	lr
 213              	.LVL21:
 214              	.L19:
 525:Src/Gcode/Buffer_Gcode.c ****         return COMMAND_BUFFER_LENGTH;
 215              		.loc 1 525 0
 216 0008 3220     		movs	r0, #50
 217              	.LVL22:
 527:Src/Gcode/Buffer_Gcode.c **** }
 218              		.loc 1 527 0
 219 000a 7047     		bx	lr
ARM GAS  /tmp/cckOLbKl.s 			page 14


 220              		.cfi_endproc
 221              	.LFE31:
 223              		.section	.text.nextCommandNumber,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	nextCommandNumber:
 231              	.LFB32:
 528:Src/Gcode/Buffer_Gcode.c **** 
 529:Src/Gcode/Buffer_Gcode.c **** static int nextCommandNumber(int commandNumber)
 530:Src/Gcode/Buffer_Gcode.c **** {
 232              		.loc 1 530 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL23:
 531:Src/Gcode/Buffer_Gcode.c ****     if (commandNumber == COMMAND_BUFFER_LENGTH)
 238              		.loc 1 531 0
 239 0000 3228     		cmp	r0, #50
 240 0002 01D0     		beq	.L22
 532:Src/Gcode/Buffer_Gcode.c ****         return 1;
 533:Src/Gcode/Buffer_Gcode.c ****     return commandNumber + 1;
 241              		.loc 1 533 0
 242 0004 0130     		adds	r0, r0, #1
 243              	.LVL24:
 244 0006 7047     		bx	lr
 245              	.LVL25:
 246              	.L22:
 532:Src/Gcode/Buffer_Gcode.c ****         return 1;
 247              		.loc 1 532 0
 248 0008 0120     		movs	r0, #1
 249              	.LVL26:
 534:Src/Gcode/Buffer_Gcode.c **** }
 250              		.loc 1 534 0
 251 000a 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE32:
 255              		.section	.text.smoothable,"ax",%progbits
 256              		.align	1
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	smoothable:
 263              	.LFB35:
 535:Src/Gcode/Buffer_Gcode.c **** 
 536:Src/Gcode/Buffer_Gcode.c **** static long distanceRequired(float speedStart, float speedFinish, float acceleration)
 537:Src/Gcode/Buffer_Gcode.c **** {
 538:Src/Gcode/Buffer_Gcode.c ****     return lroundf(fabs(pow(speedFinish,2)-pow(speedStart,2))/fabs(2*acceleration));
 539:Src/Gcode/Buffer_Gcode.c **** }
 540:Src/Gcode/Buffer_Gcode.c **** 
 541:Src/Gcode/Buffer_Gcode.c **** static void shiftRightAllTheCommandsTillThis(int commandNumber)
 542:Src/Gcode/Buffer_Gcode.c **** {
 543:Src/Gcode/Buffer_Gcode.c ****     int currentCommandNumber = lastCommandNumber();
ARM GAS  /tmp/cckOLbKl.s 			page 15


 544:Src/Gcode/Buffer_Gcode.c ****     firstInCommandBuffer_Gcode(lastCommand());
 545:Src/Gcode/Buffer_Gcode.c ****     while ((currentCommandNumber != commandNumber))
 546:Src/Gcode/Buffer_Gcode.c ****     {
 547:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)] = commandBuffer[number(prevoiusCommandNumber(cu
 548:Src/Gcode/Buffer_Gcode.c ****         currentCommandNumber = prevoiusCommandNumber(currentCommandNumber);
 549:Src/Gcode/Buffer_Gcode.c ****     }
 550:Src/Gcode/Buffer_Gcode.c **** }
 551:Src/Gcode/Buffer_Gcode.c **** 
 552:Src/Gcode/Buffer_Gcode.c **** static _Bool smoothable(commandType_Gcode commandType)
 553:Src/Gcode/Buffer_Gcode.c **** {
 264              		.loc 1 553 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL27:
 554:Src/Gcode/Buffer_Gcode.c ****     if( commandType == MOVE_COMMAND) return true;
 270              		.loc 1 554 0
 271 0000 0128     		cmp	r0, #1
 272 0002 00D0     		beq	.L24
 555:Src/Gcode/Buffer_Gcode.c ****     return false;
 273              		.loc 1 555 0
 274 0004 0020     		movs	r0, #0
 275              	.LVL28:
 276              	.L24:
 556:Src/Gcode/Buffer_Gcode.c **** }
 277              		.loc 1 556 0
 278 0006 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE35:
 282              		.global	__aeabi_f2d
 283              		.global	__aeabi_dsub
 284              		.global	__aeabi_ddiv
 285              		.global	__aeabi_d2f
 286              		.section	.text.distanceRequired,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	distanceRequired:
 294              	.LFB33:
 537:Src/Gcode/Buffer_Gcode.c ****     return lroundf(fabs(pow(speedFinish,2)-pow(speedStart,2))/fabs(2*acceleration));
 295              		.loc 1 537 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL29:
 300 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 301              	.LCFI2:
 302              		.cfi_def_cfa_offset 32
 303              		.cfi_offset 3, -32
 304              		.cfi_offset 4, -28
 305              		.cfi_offset 5, -24
 306              		.cfi_offset 6, -20
 307              		.cfi_offset 7, -16
 308              		.cfi_offset 8, -12
ARM GAS  /tmp/cckOLbKl.s 			page 16


 309              		.cfi_offset 9, -8
 310              		.cfi_offset 14, -4
 311 0004 0746     		mov	r7, r0
 312 0006 1646     		mov	r6, r2
 538:Src/Gcode/Buffer_Gcode.c **** }
 313              		.loc 1 538 0
 314 0008 0024     		movs	r4, #0
 315 000a 4FF08045 		mov	r5, #1073741824
 316 000e 0846     		mov	r0, r1
 317              	.LVL30:
 318 0010 FFF7FEFF 		bl	__aeabi_f2d
 319              	.LVL31:
 320 0014 2246     		mov	r2, r4
 321 0016 2B46     		mov	r3, r5
 322 0018 FFF7FEFF 		bl	pow
 323              	.LVL32:
 324 001c 8046     		mov	r8, r0
 325 001e 8946     		mov	r9, r1
 326 0020 3846     		mov	r0, r7
 327 0022 FFF7FEFF 		bl	__aeabi_f2d
 328              	.LVL33:
 329 0026 2246     		mov	r2, r4
 330 0028 2B46     		mov	r3, r5
 331 002a FFF7FEFF 		bl	pow
 332              	.LVL34:
 333 002e 0246     		mov	r2, r0
 334 0030 0B46     		mov	r3, r1
 335 0032 4046     		mov	r0, r8
 336 0034 4946     		mov	r1, r9
 337 0036 FFF7FEFF 		bl	__aeabi_dsub
 338              	.LVL35:
 339 003a 0546     		mov	r5, r0
 340 003c 21F00044 		bic	r4, r1, #-2147483648
 341 0040 3146     		mov	r1, r6
 342 0042 3046     		mov	r0, r6
 343 0044 FFF7FEFF 		bl	__aeabi_fadd
 344              	.LVL36:
 345 0048 20F00040 		bic	r0, r0, #-2147483648
 346 004c FFF7FEFF 		bl	__aeabi_f2d
 347              	.LVL37:
 348 0050 0246     		mov	r2, r0
 349 0052 0B46     		mov	r3, r1
 350 0054 2846     		mov	r0, r5
 351 0056 2146     		mov	r1, r4
 352 0058 FFF7FEFF 		bl	__aeabi_ddiv
 353              	.LVL38:
 354 005c FFF7FEFF 		bl	__aeabi_d2f
 355              	.LVL39:
 356 0060 FFF7FEFF 		bl	lroundf
 357              	.LVL40:
 539:Src/Gcode/Buffer_Gcode.c **** 
 358              		.loc 1 539 0
 359 0064 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 360              		.cfi_endproc
 361              	.LFE33:
 363              		.global	__aeabi_i2f
 364              		.global	__aeabi_dmul
ARM GAS  /tmp/cckOLbKl.s 			page 17


 365              		.section	.text.speedMaxFastMove,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	speedMaxFastMove:
 373              	.LFB17:
 181:Src/Gcode/Buffer_Gcode.c ****     float speed;
 374              		.loc 1 181 0
 375              		.cfi_startproc
 376              		@ args = 4, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              	.LVL41:
 379 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 380              	.LCFI3:
 381              		.cfi_def_cfa_offset 40
 382              		.cfi_offset 3, -40
 383              		.cfi_offset 4, -36
 384              		.cfi_offset 5, -32
 385              		.cfi_offset 6, -28
 386              		.cfi_offset 7, -24
 387              		.cfi_offset 8, -20
 388              		.cfi_offset 9, -16
 389              		.cfi_offset 10, -12
 390              		.cfi_offset 11, -8
 391              		.cfi_offset 14, -4
 392 0004 8246     		mov	r10, r0
 393 0006 0E46     		mov	r6, r1
 394 0008 1746     		mov	r7, r2
 395 000a 1C46     		mov	r4, r3
 183:Src/Gcode/Buffer_Gcode.c ****                 (float)totalDistance*(2*accelerationStart*accelerationFinish/(accelerationFinish-ac
 396              		.loc 1 183 0
 397 000c FFF7FEFF 		bl	sign
 398              	.LVL42:
 399 0010 FFF7FEFF 		bl	__aeabi_i2f
 400              	.LVL43:
 401 0014 FFF7FEFF 		bl	__aeabi_f2d
 402              	.LVL44:
 403 0018 8046     		mov	r8, r0
 404 001a 8946     		mov	r9, r1
 184:Src/Gcode/Buffer_Gcode.c ****                 -(speedFinish*speedFinish*accelerationStart-speedStart*speedStart*accelerationFinis
 405              		.loc 1 184 0
 406 001c 2146     		mov	r1, r4
 407 001e 2046     		mov	r0, r4
 408 0020 FFF7FEFF 		bl	__aeabi_fadd
 409              	.LVL45:
 410 0024 0A99     		ldr	r1, [sp, #40]	@ float
 411 0026 FFF7FEFF 		bl	__aeabi_fmul
 412              	.LVL46:
 413 002a 8346     		mov	fp, r0
 414 002c 2146     		mov	r1, r4
 415 002e 0A98     		ldr	r0, [sp, #40]	@ float
 416 0030 FFF7FEFF 		bl	__aeabi_fsub
 417              	.LVL47:
 418 0034 0546     		mov	r5, r0
 419 0036 0146     		mov	r1, r0
ARM GAS  /tmp/cckOLbKl.s 			page 18


 420 0038 5846     		mov	r0, fp
 421 003a FFF7FEFF 		bl	__aeabi_fdiv
 422              	.LVL48:
 423 003e 5146     		mov	r1, r10
 424 0040 FFF7FEFF 		bl	__aeabi_fmul
 425              	.LVL49:
 426 0044 8246     		mov	r10, r0
 427              	.LVL50:
 185:Src/Gcode/Buffer_Gcode.c ****                 );
 428              		.loc 1 185 0
 429 0046 3946     		mov	r1, r7
 430 0048 3846     		mov	r0, r7
 431 004a FFF7FEFF 		bl	__aeabi_fmul
 432              	.LVL51:
 433 004e 2146     		mov	r1, r4
 434 0050 FFF7FEFF 		bl	__aeabi_fmul
 435              	.LVL52:
 436 0054 0446     		mov	r4, r0
 437              	.LVL53:
 438 0056 3146     		mov	r1, r6
 439 0058 3046     		mov	r0, r6
 440 005a FFF7FEFF 		bl	__aeabi_fmul
 441              	.LVL54:
 442 005e 0A99     		ldr	r1, [sp, #40]	@ float
 443 0060 FFF7FEFF 		bl	__aeabi_fmul
 444              	.LVL55:
 445 0064 0146     		mov	r1, r0
 446 0066 2046     		mov	r0, r4
 447 0068 FFF7FEFF 		bl	__aeabi_fsub
 448              	.LVL56:
 449 006c 2946     		mov	r1, r5
 450 006e FFF7FEFF 		bl	__aeabi_fdiv
 451              	.LVL57:
 452 0072 0146     		mov	r1, r0
 453 0074 5046     		mov	r0, r10
 454 0076 FFF7FEFF 		bl	__aeabi_fsub
 455              	.LVL58:
 183:Src/Gcode/Buffer_Gcode.c ****                 (float)totalDistance*(2*accelerationStart*accelerationFinish/(accelerationFinish-ac
 456              		.loc 1 183 0
 457 007a FFF7FEFF 		bl	__aeabi_f2d
 458              	.LVL59:
 459 007e FFF7FEFF 		bl	sqrt
 460              	.LVL60:
 461 0082 0246     		mov	r2, r0
 462 0084 0B46     		mov	r3, r1
 463 0086 4046     		mov	r0, r8
 464 0088 4946     		mov	r1, r9
 465 008a FFF7FEFF 		bl	__aeabi_dmul
 466              	.LVL61:
 467 008e FFF7FEFF 		bl	__aeabi_d2f
 468              	.LVL62:
 188:Src/Gcode/Buffer_Gcode.c **** 
 469              		.loc 1 188 0
 470 0092 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              		.cfi_endproc
 472              	.LFE17:
 474              		.section	.text.createDescreteCommandBuffer_Gcode,"ax",%progbits
ARM GAS  /tmp/cckOLbKl.s 			page 19


 475              		.align	1
 476              		.global	createDescreteCommandBuffer_Gcode
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu softvfp
 482              	createDescreteCommandBuffer_Gcode:
 483              	.LFB1:
  16:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = defaultDescreteCommand;
 484              		.loc 1 16 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488 0000 38B5     		push	{r3, r4, r5, lr}
 489              	.LCFI4:
 490              		.cfi_def_cfa_offset 16
 491              		.cfi_offset 3, -16
 492              		.cfi_offset 4, -12
 493              		.cfi_offset 5, -8
 494              		.cfi_offset 14, -4
  17:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = defaultDescreteCommand;
 495              		.loc 1 17 0
 496 0002 0120     		movs	r0, #1
 497 0004 FFF7FEFF 		bl	number
 498              	.LVL63:
 499 0008 104C     		ldr	r4, .L32
 500 000a 00EB8000 		add	r0, r0, r0, lsl #2
 501 000e C300     		lsls	r3, r0, #3
 502 0010 2825     		movs	r5, #40
 503 0012 2A46     		mov	r2, r5
 504 0014 0021     		movs	r1, #0
 505 0016 E018     		adds	r0, r4, r3
 506 0018 FFF7FEFF 		bl	memset
 507              	.LVL64:
  18:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = defaultDescreteCommand;
 508              		.loc 1 18 0
 509 001c 0220     		movs	r0, #2
 510 001e FFF7FEFF 		bl	number
 511              	.LVL65:
 512 0022 00EB8000 		add	r0, r0, r0, lsl #2
 513 0026 C300     		lsls	r3, r0, #3
 514 0028 2A46     		mov	r2, r5
 515 002a 0021     		movs	r1, #0
 516 002c E018     		adds	r0, r4, r3
 517 002e FFF7FEFF 		bl	memset
 518              	.LVL66:
  19:Src/Gcode/Buffer_Gcode.c **** }
 519              		.loc 1 19 0
 520 0032 0320     		movs	r0, #3
 521 0034 FFF7FEFF 		bl	number
 522              	.LVL67:
 523 0038 00EB8000 		add	r0, r0, r0, lsl #2
 524 003c C300     		lsls	r3, r0, #3
 525 003e 2A46     		mov	r2, r5
 526 0040 0021     		movs	r1, #0
 527 0042 E018     		adds	r0, r4, r3
 528 0044 FFF7FEFF 		bl	memset
ARM GAS  /tmp/cckOLbKl.s 			page 20


 529              	.LVL68:
  20:Src/Gcode/Buffer_Gcode.c **** 
 530              		.loc 1 20 0
 531 0048 38BD     		pop	{r3, r4, r5, pc}
 532              	.L33:
 533 004a 00BF     		.align	2
 534              	.L32:
 535 004c 00000000 		.word	.LANCHOR1
 536              		.cfi_endproc
 537              	.LFE1:
 539              		.section	.text.addElementToDescreteCommandBuffer_Gcode,"ax",%progbits
 540              		.align	1
 541              		.global	addElementToDescreteCommandBuffer_Gcode
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu softvfp
 547              	addElementToDescreteCommandBuffer_Gcode:
 548              	.LFB2:
  23:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = descreteBuffer[number(2)];
 549              		.loc 1 23 0
 550              		.cfi_startproc
 551              		@ args = 40, pretend = 16, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553 0000 84B0     		sub	sp, sp, #16
 554              	.LCFI5:
 555              		.cfi_def_cfa_offset 16
 556 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 557              	.LCFI6:
 558              		.cfi_def_cfa_offset 40
 559              		.cfi_offset 4, -40
 560              		.cfi_offset 5, -36
 561              		.cfi_offset 6, -32
 562              		.cfi_offset 7, -28
 563              		.cfi_offset 8, -24
 564              		.cfi_offset 14, -20
 565 0006 06AC     		add	r4, sp, #24
 566 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
  24:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = descreteBuffer[number(3)];
 567              		.loc 1 24 0
 568 000c 0220     		movs	r0, #2
 569 000e FFF7FEFF 		bl	number
 570              	.LVL69:
 571 0012 0746     		mov	r7, r0
 572 0014 0120     		movs	r0, #1
 573 0016 FFF7FEFF 		bl	number
 574              	.LVL70:
 575 001a 1B4C     		ldr	r4, .L36
 576 001c 00EB8000 		add	r0, r0, r0, lsl #2
 577 0020 C500     		lsls	r5, r0, #3
 578 0022 4FEA8708 		lsl	r8, r7, #2
 579 0026 08EB0703 		add	r3, r8, r7
 580 002a DE00     		lsls	r6, r3, #3
 581 002c 2544     		add	r5, r5, r4
 582 002e 2644     		add	r6, r6, r4
 583 0030 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 584 0032 0FC5     		stmia	r5!, {r0, r1, r2, r3}
ARM GAS  /tmp/cckOLbKl.s 			page 21


 585 0034 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 586 0036 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 587 0038 96E80300 		ldm	r6, {r0, r1}
 588 003c 85E80300 		stm	r5, {r0, r1}
  25:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = descreteCommand;
 589              		.loc 1 25 0
 590 0040 0320     		movs	r0, #3
 591 0042 FFF7FEFF 		bl	number
 592              	.LVL71:
 593 0046 8446     		mov	ip, r0
 594 0048 B844     		add	r8, r8, r7
 595 004a 4FEAC805 		lsl	r5, r8, #3
 596 004e 8700     		lsls	r7, r0, #2
 597 0050 3B18     		adds	r3, r7, r0
 598 0052 DE00     		lsls	r6, r3, #3
 599 0054 2544     		add	r5, r5, r4
 600 0056 2644     		add	r6, r6, r4
 601 0058 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 602 005a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 603 005c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 604 005e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 605 0060 96E80300 		ldm	r6, {r0, r1}
 606 0064 85E80300 		stm	r5, {r0, r1}
  26:Src/Gcode/Buffer_Gcode.c **** }
 607              		.loc 1 26 0
 608 0068 6744     		add	r7, r7, ip
 609 006a FB00     		lsls	r3, r7, #3
 610 006c 1C44     		add	r4, r4, r3
 611 006e 06AD     		add	r5, sp, #24
 612 0070 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 613 0072 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 614 0074 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 615 0076 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 616 0078 95E80300 		ldm	r5, {r0, r1}
 617 007c 84E80300 		stm	r4, {r0, r1}
  27:Src/Gcode/Buffer_Gcode.c **** 
 618              		.loc 1 27 0
 619 0080 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 620              	.LCFI7:
 621              		.cfi_restore 14
 622              		.cfi_restore 8
 623              		.cfi_restore 7
 624              		.cfi_restore 6
 625              		.cfi_restore 5
 626              		.cfi_restore 4
 627              		.cfi_def_cfa_offset 16
 628 0084 04B0     		add	sp, sp, #16
 629              	.LCFI8:
 630              		.cfi_def_cfa_offset 0
 631 0086 7047     		bx	lr
 632              	.L37:
 633              		.align	2
 634              	.L36:
 635 0088 00000000 		.word	.LANCHOR1
 636              		.cfi_endproc
 637              	.LFE2:
 639              		.section	.text.clearDescreteBuffer_Gcode,"ax",%progbits
ARM GAS  /tmp/cckOLbKl.s 			page 22


 640              		.align	1
 641              		.global	clearDescreteBuffer_Gcode
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu softvfp
 647              	clearDescreteBuffer_Gcode:
 648              	.LFB3:
  30:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(1)] = defaultDescreteCommand;
 649              		.loc 1 30 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653 0000 38B5     		push	{r3, r4, r5, lr}
 654              	.LCFI9:
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 3, -16
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
  31:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(2)] = defaultDescreteCommand;
 660              		.loc 1 31 0
 661 0002 0120     		movs	r0, #1
 662 0004 FFF7FEFF 		bl	number
 663              	.LVL72:
 664 0008 104C     		ldr	r4, .L40
 665 000a 00EB8000 		add	r0, r0, r0, lsl #2
 666 000e C300     		lsls	r3, r0, #3
 667 0010 2825     		movs	r5, #40
 668 0012 2A46     		mov	r2, r5
 669 0014 0021     		movs	r1, #0
 670 0016 E018     		adds	r0, r4, r3
 671 0018 FFF7FEFF 		bl	memset
 672              	.LVL73:
  32:Src/Gcode/Buffer_Gcode.c ****     descreteBuffer[number(3)] = defaultDescreteCommand;
 673              		.loc 1 32 0
 674 001c 0220     		movs	r0, #2
 675 001e FFF7FEFF 		bl	number
 676              	.LVL74:
 677 0022 00EB8000 		add	r0, r0, r0, lsl #2
 678 0026 C300     		lsls	r3, r0, #3
 679 0028 2A46     		mov	r2, r5
 680 002a 0021     		movs	r1, #0
 681 002c E018     		adds	r0, r4, r3
 682 002e FFF7FEFF 		bl	memset
 683              	.LVL75:
  33:Src/Gcode/Buffer_Gcode.c **** }
 684              		.loc 1 33 0
 685 0032 0320     		movs	r0, #3
 686 0034 FFF7FEFF 		bl	number
 687              	.LVL76:
 688 0038 00EB8000 		add	r0, r0, r0, lsl #2
 689 003c C300     		lsls	r3, r0, #3
 690 003e 2A46     		mov	r2, r5
 691 0040 0021     		movs	r1, #0
 692 0042 E018     		adds	r0, r4, r3
 693 0044 FFF7FEFF 		bl	memset
ARM GAS  /tmp/cckOLbKl.s 			page 23


 694              	.LVL77:
  34:Src/Gcode/Buffer_Gcode.c **** 
 695              		.loc 1 34 0
 696 0048 38BD     		pop	{r3, r4, r5, pc}
 697              	.L41:
 698 004a 00BF     		.align	2
 699              	.L40:
 700 004c 00000000 		.word	.LANCHOR1
 701              		.cfi_endproc
 702              	.LFE3:
 704              		.section	.text.getDescreteCommandBufferElement_Gcode,"ax",%progbits
 705              		.align	1
 706              		.global	getDescreteCommandBufferElement_Gcode
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 712              	getDescreteCommandBufferElement_Gcode:
 713              	.LFB4:
  37:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber < 1) elementNumber = 1;
 714              		.loc 1 37 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              	.LVL78:
 719 0000 70B5     		push	{r4, r5, r6, lr}
 720              	.LCFI10:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 726 0002 0646     		mov	r6, r0
  38:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > 3) elementNumber = 3;
 727              		.loc 1 38 0
 728 0004 081E     		subs	r0, r1, #0
 729              	.LVL79:
 730 0006 14DD     		ble	.L44
  39:Src/Gcode/Buffer_Gcode.c ****     return descreteBuffer[number(elementNumber)];
 731              		.loc 1 39 0
 732 0008 0328     		cmp	r0, #3
 733 000a 00DD     		ble	.L43
 734 000c 0320     		movs	r0, #3
 735              	.L43:
 736              	.LVL80:
  40:Src/Gcode/Buffer_Gcode.c **** }
 737              		.loc 1 40 0
 738 000e FFF7FEFF 		bl	number
 739              	.LVL81:
 740 0012 00EB8000 		add	r0, r0, r0, lsl #2
 741 0016 C300     		lsls	r3, r0, #3
 742 0018 3546     		mov	r5, r6
 743 001a 074C     		ldr	r4, .L47
 744 001c 1C44     		add	r4, r4, r3
 745 001e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 746 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 747 0022 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/cckOLbKl.s 			page 24


 748 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 749 0026 94E80300 		ldm	r4, {r0, r1}
 750 002a 85E80300 		stm	r5, {r0, r1}
  41:Src/Gcode/Buffer_Gcode.c **** 
 751              		.loc 1 41 0
 752 002e 3046     		mov	r0, r6
 753 0030 70BD     		pop	{r4, r5, r6, pc}
 754              	.LVL82:
 755              	.L44:
  38:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > 3) elementNumber = 3;
 756              		.loc 1 38 0
 757 0032 0120     		movs	r0, #1
 758              	.LVL83:
 759 0034 EBE7     		b	.L43
 760              	.L48:
 761 0036 00BF     		.align	2
 762              	.L47:
 763 0038 00000000 		.word	.LANCHOR1
 764              		.cfi_endproc
 765              	.LFE4:
 767              		.section	.text.conserveSpeedFinish,"ax",%progbits
 768              		.align	1
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu softvfp
 774              	conserveSpeedFinish:
 775              	.LFB15:
 158:Src/Gcode/Buffer_Gcode.c ****     if (getDescreteCommandBufferElement_Gcode(3).type != MOVE_COMMAND)
 776              		.loc 1 158 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 200
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              	.LVL84:
 781 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 782              	.LCFI11:
 783              		.cfi_def_cfa_offset 24
 784              		.cfi_offset 4, -24
 785              		.cfi_offset 5, -20
 786              		.cfi_offset 6, -16
 787              		.cfi_offset 7, -12
 788              		.cfi_offset 8, -8
 789              		.cfi_offset 14, -4
 790 0004 B2B0     		sub	sp, sp, #200
 791              	.LCFI12:
 792              		.cfi_def_cfa_offset 224
 793 0006 0546     		mov	r5, r0
 794 0008 0C46     		mov	r4, r1
 159:Src/Gcode/Buffer_Gcode.c ****         return false;
 795              		.loc 1 159 0
 796 000a 0321     		movs	r1, #3
 797              	.LVL85:
 798 000c 6846     		mov	r0, sp
 799              	.LVL86:
 800 000e FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 801              	.LVL87:
 802 0012 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/cckOLbKl.s 			page 25


 803 0016 012B     		cmp	r3, #1
 804 0018 03D0     		beq	.L57
 160:Src/Gcode/Buffer_Gcode.c ****     long XnNext = getDescreteCommandBufferElement_Gcode(3).Xn - getDescreteCommandBufferElement_Gco
 805              		.loc 1 160 0
 806 001a 0020     		movs	r0, #0
 807              	.LVL88:
 808              	.L50:
 170:Src/Gcode/Buffer_Gcode.c **** 
 809              		.loc 1 170 0
 810 001c 32B0     		add	sp, sp, #200
 811              	.LCFI13:
 812              		.cfi_remember_state
 813              		.cfi_def_cfa_offset 24
 814              		@ sp needed
 815 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 816              	.LVL89:
 817              	.L57:
 818              	.LCFI14:
 819              		.cfi_restore_state
 161:Src/Gcode/Buffer_Gcode.c ****     long YnNext = getDescreteCommandBufferElement_Gcode(3).Yn - getDescreteCommandBufferElement_Gco
 820              		.loc 1 161 0
 821 0022 0321     		movs	r1, #3
 822 0024 0AA8     		add	r0, sp, #40
 823 0026 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 824              	.LVL90:
 825 002a 0B9F     		ldr	r7, [sp, #44]
 826 002c 0221     		movs	r1, #2
 827 002e 14A8     		add	r0, sp, #80
 828 0030 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 829              	.LVL91:
 830 0034 159B     		ldr	r3, [sp, #84]
 831 0036 FF1A     		subs	r7, r7, r3
 832              	.LVL92:
 162:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2 = (float)XnNext*(float)Xn + (float)YnNext*(float)Yn;
 833              		.loc 1 162 0
 834 0038 0321     		movs	r1, #3
 835 003a 1EA8     		add	r0, sp, #120
 836 003c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 837              	.LVL93:
 838 0040 209E     		ldr	r6, [sp, #128]
 839 0042 0221     		movs	r1, #2
 840 0044 28A8     		add	r0, sp, #160
 841 0046 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 842              	.LVL94:
 843 004a 2A9B     		ldr	r3, [sp, #168]
 844 004c F61A     		subs	r6, r6, r3
 845              	.LVL95:
 163:Src/Gcode/Buffer_Gcode.c ****     float xy1xy1 = (float)XnNext*(float)XnNext + (float)YnNext*(float)YnNext;
 846              		.loc 1 163 0
 847 004e 3846     		mov	r0, r7
 848 0050 FFF7FEFF 		bl	__aeabi_i2f
 849              	.LVL96:
 850 0054 0746     		mov	r7, r0
 851              	.LVL97:
 852 0056 2846     		mov	r0, r5
 853 0058 FFF7FEFF 		bl	__aeabi_i2f
 854              	.LVL98:
ARM GAS  /tmp/cckOLbKl.s 			page 26


 855 005c 0546     		mov	r5, r0
 856              	.LVL99:
 857 005e 0146     		mov	r1, r0
 858 0060 3846     		mov	r0, r7
 859 0062 FFF7FEFF 		bl	__aeabi_fmul
 860              	.LVL100:
 861 0066 8046     		mov	r8, r0
 862 0068 3046     		mov	r0, r6
 863 006a FFF7FEFF 		bl	__aeabi_i2f
 864              	.LVL101:
 865 006e 0646     		mov	r6, r0
 866              	.LVL102:
 867 0070 2046     		mov	r0, r4
 868 0072 FFF7FEFF 		bl	__aeabi_i2f
 869              	.LVL103:
 870 0076 0446     		mov	r4, r0
 871              	.LVL104:
 872 0078 0146     		mov	r1, r0
 873 007a 3046     		mov	r0, r6
 874 007c FFF7FEFF 		bl	__aeabi_fmul
 875              	.LVL105:
 876 0080 0146     		mov	r1, r0
 877 0082 4046     		mov	r0, r8
 878 0084 FFF7FEFF 		bl	__aeabi_fadd
 879              	.LVL106:
 880 0088 8046     		mov	r8, r0
 881              	.LVL107:
 164:Src/Gcode/Buffer_Gcode.c ****     float xy2xy2 = (float)Xn*(float)Xn + (float)Yn*(float)Yn;
 882              		.loc 1 164 0
 883 008a 3946     		mov	r1, r7
 884 008c 3846     		mov	r0, r7
 885              	.LVL108:
 886 008e FFF7FEFF 		bl	__aeabi_fmul
 887              	.LVL109:
 888 0092 0746     		mov	r7, r0
 889 0094 3146     		mov	r1, r6
 890 0096 3046     		mov	r0, r6
 891 0098 FFF7FEFF 		bl	__aeabi_fmul
 892              	.LVL110:
 893 009c 0146     		mov	r1, r0
 894 009e 3846     		mov	r0, r7
 895 00a0 FFF7FEFF 		bl	__aeabi_fadd
 896              	.LVL111:
 897 00a4 0646     		mov	r6, r0
 898              	.LVL112:
 165:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2Critical = sqrtf(xy1xy1)*sqrtf(xy2xy2)*cos(3.14*(float)CRITICAL_ANGLE_XY/180.0);
 899              		.loc 1 165 0
 900 00a6 2946     		mov	r1, r5
 901 00a8 2846     		mov	r0, r5
 902              	.LVL113:
 903 00aa FFF7FEFF 		bl	__aeabi_fmul
 904              	.LVL114:
 905 00ae 0546     		mov	r5, r0
 906 00b0 2146     		mov	r1, r4
 907 00b2 2046     		mov	r0, r4
 908 00b4 FFF7FEFF 		bl	__aeabi_fmul
 909              	.LVL115:
ARM GAS  /tmp/cckOLbKl.s 			page 27


 910 00b8 0146     		mov	r1, r0
 911 00ba 2846     		mov	r0, r5
 912 00bc FFF7FEFF 		bl	__aeabi_fadd
 913              	.LVL116:
 914 00c0 0546     		mov	r5, r0
 915              	.LVL117:
 166:Src/Gcode/Buffer_Gcode.c ****     if (xy1xy2 < xy1xy2Critical)
 916              		.loc 1 166 0
 917 00c2 3046     		mov	r0, r6
 918              	.LVL118:
 919 00c4 FFF7FEFF 		bl	sqrtf
 920              	.LVL119:
 921 00c8 0446     		mov	r4, r0
 922 00ca 2846     		mov	r0, r5
 923 00cc FFF7FEFF 		bl	sqrtf
 924              	.LVL120:
 925 00d0 0146     		mov	r1, r0
 926 00d2 2046     		mov	r0, r4
 927 00d4 FFF7FEFF 		bl	__aeabi_fmul
 928              	.LVL121:
 929 00d8 FFF7FEFF 		bl	__aeabi_f2d
 930              	.LVL122:
 931 00dc 08A3     		adr	r3, .L59
 932 00de D3E90023 		ldrd	r2, [r3]
 933 00e2 FFF7FEFF 		bl	__aeabi_dmul
 934              	.LVL123:
 935 00e6 FFF7FEFF 		bl	__aeabi_d2f
 936              	.LVL124:
 167:Src/Gcode/Buffer_Gcode.c ****         return false;
 937              		.loc 1 167 0
 938 00ea 0146     		mov	r1, r0
 939 00ec 4046     		mov	r0, r8
 940              	.LVL125:
 941 00ee FFF7FEFF 		bl	__aeabi_fcmplt
 942              	.LVL126:
 943 00f2 08B9     		cbnz	r0, .L58
 169:Src/Gcode/Buffer_Gcode.c **** }
 944              		.loc 1 169 0
 945 00f4 0120     		movs	r0, #1
 946 00f6 91E7     		b	.L50
 947              	.L58:
 168:Src/Gcode/Buffer_Gcode.c ****     return true;
 948              		.loc 1 168 0
 949 00f8 0020     		movs	r0, #0
 950 00fa 8FE7     		b	.L50
 951              	.L60:
 952 00fc AFF30080 		.align	3
 953              	.L59:
 954 0100 32453628 		.word	674645298
 955 0104 7512EE3F 		.word	1072566901
 956              		.cfi_endproc
 957              	.LFE15:
 959              		.section	.text.createCommandBuffer_Gcode,"ax",%progbits
 960              		.align	1
 961              		.global	createCommandBuffer_Gcode
 962              		.syntax unified
 963              		.thumb
ARM GAS  /tmp/cckOLbKl.s 			page 28


 964              		.thumb_func
 965              		.fpu softvfp
 967              	createCommandBuffer_Gcode:
 968              	.LFB5:
  51:Src/Gcode/Buffer_Gcode.c ****     int n;
 969              		.loc 1 51 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973 0000 10B5     		push	{r4, lr}
 974              	.LCFI15:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 4, -8
 977              		.cfi_offset 14, -4
 978              	.LVL127:
  53:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(n)] = defaultCommand;
 979              		.loc 1 53 0
 980 0002 0124     		movs	r4, #1
 981 0004 0CE0     		b	.L62
 982              	.LVL128:
 983              	.L63:
  54:Src/Gcode/Buffer_Gcode.c ****     firstOccupedElementCommandBuffer = 1;
 984              		.loc 1 54 0 discriminator 3
 985 0006 2046     		mov	r0, r4
 986 0008 FFF7FEFF 		bl	number
 987              	.LVL129:
 988 000c C0EB0010 		rsb	r0, r0, r0, lsl #4
 989 0010 8300     		lsls	r3, r0, #2
 990 0012 3C22     		movs	r2, #60
 991 0014 0021     		movs	r1, #0
 992 0016 0848     		ldr	r0, .L65
 993 0018 1844     		add	r0, r0, r3
 994 001a FFF7FEFF 		bl	memset
 995              	.LVL130:
  53:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(n)] = defaultCommand;
 996              		.loc 1 53 0 discriminator 3
 997 001e 0134     		adds	r4, r4, #1
 998              	.LVL131:
 999              	.L62:
  53:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(n)] = defaultCommand;
 1000              		.loc 1 53 0 is_stmt 0 discriminator 1
 1001 0020 322C     		cmp	r4, #50
 1002 0022 F0DD     		ble	.L63
  55:Src/Gcode/Buffer_Gcode.c ****     firstFreeElementCommandBuffer = 1;
 1003              		.loc 1 55 0 is_stmt 1
 1004 0024 0123     		movs	r3, #1
 1005 0026 054A     		ldr	r2, .L65+4
 1006 0028 1360     		str	r3, [r2]
  56:Src/Gcode/Buffer_Gcode.c ****     commandBufferIsFull = false;
 1007              		.loc 1 56 0
 1008 002a 054A     		ldr	r2, .L65+8
 1009 002c 1360     		str	r3, [r2]
  57:Src/Gcode/Buffer_Gcode.c **** }
 1010              		.loc 1 57 0
 1011 002e 054B     		ldr	r3, .L65+12
 1012 0030 0022     		movs	r2, #0
 1013 0032 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cckOLbKl.s 			page 29


  58:Src/Gcode/Buffer_Gcode.c **** 
 1014              		.loc 1 58 0
 1015 0034 10BD     		pop	{r4, pc}
 1016              	.LVL132:
 1017              	.L66:
 1018 0036 00BF     		.align	2
 1019              	.L65:
 1020 0038 00000000 		.word	.LANCHOR2
 1021 003c 00000000 		.word	.LANCHOR3
 1022 0040 00000000 		.word	.LANCHOR0
 1023 0044 00000000 		.word	.LANCHOR4
 1024              		.cfi_endproc
 1025              	.LFE5:
 1027              		.section	.text.getCommandBufferElement_Gcode,"ax",%progbits
 1028              		.align	1
 1029              		.global	getCommandBufferElement_Gcode
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu softvfp
 1035              	getCommandBufferElement_Gcode:
 1036              	.LFB6:
  61:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber < 1) elementNumber = 1;
 1037              		.loc 1 61 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              	.LVL133:
 1042 0000 70B5     		push	{r4, r5, r6, lr}
 1043              	.LCFI16:
 1044              		.cfi_def_cfa_offset 16
 1045              		.cfi_offset 4, -16
 1046              		.cfi_offset 5, -12
 1047              		.cfi_offset 6, -8
 1048              		.cfi_offset 14, -4
 1049 0002 0646     		mov	r6, r0
  62:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > COMMAND_BUFFER_LENGTH) elementNumber = COMMAND_BUFFER_LENGTH;
 1050              		.loc 1 62 0
 1051 0004 081E     		subs	r0, r1, #0
 1052              	.LVL134:
 1053 0006 16DD     		ble	.L69
  63:Src/Gcode/Buffer_Gcode.c ****     return commandBuffer[number(elementNumber)];
 1054              		.loc 1 63 0
 1055 0008 3228     		cmp	r0, #50
 1056 000a 00DD     		ble	.L68
 1057 000c 3220     		movs	r0, #50
 1058              	.L68:
 1059              	.LVL135:
  64:Src/Gcode/Buffer_Gcode.c **** }
 1060              		.loc 1 64 0
 1061 000e FFF7FEFF 		bl	number
 1062              	.LVL136:
 1063 0012 C0EB0010 		rsb	r0, r0, r0, lsl #4
 1064 0016 8300     		lsls	r3, r0, #2
 1065 0018 3546     		mov	r5, r6
 1066 001a 084C     		ldr	r4, .L72
 1067 001c 1C44     		add	r4, r4, r3
ARM GAS  /tmp/cckOLbKl.s 			page 30


 1068 001e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1069 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1070 0022 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1071 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1072 0026 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1073 0028 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1074 002a 94E80700 		ldm	r4, {r0, r1, r2}
 1075 002e 85E80700 		stm	r5, {r0, r1, r2}
  65:Src/Gcode/Buffer_Gcode.c **** 
 1076              		.loc 1 65 0
 1077 0032 3046     		mov	r0, r6
 1078 0034 70BD     		pop	{r4, r5, r6, pc}
 1079              	.LVL137:
 1080              	.L69:
  62:Src/Gcode/Buffer_Gcode.c ****     if (elementNumber > COMMAND_BUFFER_LENGTH) elementNumber = COMMAND_BUFFER_LENGTH;
 1081              		.loc 1 62 0
 1082 0036 0120     		movs	r0, #1
 1083              	.LVL138:
 1084 0038 E9E7     		b	.L68
 1085              	.L73:
 1086 003a 00BF     		.align	2
 1087              	.L72:
 1088 003c 00000000 		.word	.LANCHOR2
 1089              		.cfi_endproc
 1090              	.LFE6:
 1092              		.section	.text.lastCommand,"ax",%progbits
 1093              		.align	1
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu softvfp
 1099              	lastCommand:
 1100              	.LFB13:
 132:Src/Gcode/Buffer_Gcode.c ****     int number;
 1101              		.loc 1 132 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              	.LVL139:
 1106 0000 10B5     		push	{r4, lr}
 1107              	.LCFI17:
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 4, -8
 1110              		.cfi_offset 14, -4
 1111 0002 0446     		mov	r4, r0
 134:Src/Gcode/Buffer_Gcode.c ****     if (number == 0)
 1112              		.loc 1 134 0
 1113 0004 044B     		ldr	r3, .L78
 1114 0006 1968     		ldr	r1, [r3]
 1115              	.LVL140:
 135:Src/Gcode/Buffer_Gcode.c ****         number = COMMAND_BUFFER_LENGTH;
 1116              		.loc 1 135 0
 1117 0008 0139     		subs	r1, r1, #1
 1118              	.LVL141:
 1119 000a 00D1     		bne	.L75
 136:Src/Gcode/Buffer_Gcode.c ****     return getCommandBufferElement_Gcode(number);
 1120              		.loc 1 136 0
ARM GAS  /tmp/cckOLbKl.s 			page 31


 1121 000c 3221     		movs	r1, #50
 1122              	.LVL142:
 1123              	.L75:
 137:Src/Gcode/Buffer_Gcode.c **** }
 1124              		.loc 1 137 0
 1125 000e 2046     		mov	r0, r4
 1126              	.LVL143:
 1127 0010 FFF7FEFF 		bl	getCommandBufferElement_Gcode
 1128              	.LVL144:
 138:Src/Gcode/Buffer_Gcode.c **** 
 1129              		.loc 1 138 0
 1130 0014 2046     		mov	r0, r4
 1131 0016 10BD     		pop	{r4, pc}
 1132              	.LVL145:
 1133              	.L79:
 1134              		.align	2
 1135              	.L78:
 1136 0018 00000000 		.word	.LANCHOR0
 1137              		.cfi_endproc
 1138              	.LFE13:
 1140              		.section	.text.conserveSpeedStart,"ax",%progbits
 1141              		.align	1
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu softvfp
 1147              	conserveSpeedStart:
 1148              	.LFB14:
 141:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == firstFreeElementCommandBuffer)
 1149              		.loc 1 141 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 184
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              	.LVL146:
 142:Src/Gcode/Buffer_Gcode.c ****         return false;
 1154              		.loc 1 142 0
 1155 0000 3D4B     		ldr	r3, .L94+8
 1156 0002 1A68     		ldr	r2, [r3]
 1157              	.LVL147:
 1158 0004 3D4B     		ldr	r3, .L94+12
 1159 0006 1B68     		ldr	r3, [r3]
 1160 0008 9A42     		cmp	r2, r3
 1161 000a 6DD0     		beq	.L83
 141:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == firstFreeElementCommandBuffer)
 1162              		.loc 1 141 0
 1163 000c 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1164              	.LCFI18:
 1165              		.cfi_def_cfa_offset 28
 1166              		.cfi_offset 4, -28
 1167              		.cfi_offset 5, -24
 1168              		.cfi_offset 6, -20
 1169              		.cfi_offset 7, -16
 1170              		.cfi_offset 8, -12
 1171              		.cfi_offset 9, -8
 1172              		.cfi_offset 14, -4
 1173 0010 AFB0     		sub	sp, sp, #188
 1174              	.LCFI19:
ARM GAS  /tmp/cckOLbKl.s 			page 32


 1175              		.cfi_def_cfa_offset 216
 1176 0012 0D46     		mov	r5, r1
 1177 0014 0446     		mov	r4, r0
 144:Src/Gcode/Buffer_Gcode.c ****         return false;
 1178              		.loc 1 144 0
 1179 0016 01A8     		add	r0, sp, #4
 1180              	.LVL148:
 1181 0018 FFF7FEFF 		bl	lastCommand
 1182              	.LVL149:
 1183 001c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1184 0020 012B     		cmp	r3, #1
 1185 0022 03D0     		beq	.L92
 145:Src/Gcode/Buffer_Gcode.c ****     long XnPrevious = lastCommand().dXn;
 1186              		.loc 1 145 0
 1187 0024 0020     		movs	r0, #0
 1188              	.LVL150:
 1189              	.L81:
 155:Src/Gcode/Buffer_Gcode.c **** 
 1190              		.loc 1 155 0
 1191 0026 2FB0     		add	sp, sp, #188
 1192              	.LCFI20:
 1193              		.cfi_remember_state
 1194              		.cfi_def_cfa_offset 28
 1195              		@ sp needed
 1196 0028 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1197              	.LVL151:
 1198              	.L92:
 1199              	.LCFI21:
 1200              		.cfi_restore_state
 146:Src/Gcode/Buffer_Gcode.c ****     long YnPrevious = lastCommand().dYn;
 1201              		.loc 1 146 0
 1202 002c 10A8     		add	r0, sp, #64
 1203 002e FFF7FEFF 		bl	lastCommand
 1204              	.LVL152:
 1205 0032 119E     		ldr	r6, [sp, #68]
 1206              	.LVL153:
 147:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2 = (float)XnPrevious*(float)Xn + (float)YnPrevious*(float)Yn;
 1207              		.loc 1 147 0
 1208 0034 1FA8     		add	r0, sp, #124
 1209 0036 FFF7FEFF 		bl	lastCommand
 1210              	.LVL154:
 148:Src/Gcode/Buffer_Gcode.c ****     float xy1xy1 = (float)XnPrevious*(float)XnPrevious + (float)YnPrevious*(float)YnPrevious;
 1211              		.loc 1 148 0
 1212 003a 3046     		mov	r0, r6
 1213 003c FFF7FEFF 		bl	__aeabi_i2f
 1214              	.LVL155:
 1215 0040 8046     		mov	r8, r0
 1216 0042 2046     		mov	r0, r4
 1217 0044 FFF7FEFF 		bl	__aeabi_i2f
 1218              	.LVL156:
 1219 0048 0646     		mov	r6, r0
 1220              	.LVL157:
 1221 004a 0146     		mov	r1, r0
 1222 004c 4046     		mov	r0, r8
 1223 004e FFF7FEFF 		bl	__aeabi_fmul
 1224              	.LVL158:
 1225 0052 8146     		mov	r9, r0
ARM GAS  /tmp/cckOLbKl.s 			page 33


 1226 0054 2198     		ldr	r0, [sp, #132]
 1227 0056 FFF7FEFF 		bl	__aeabi_i2f
 1228              	.LVL159:
 1229 005a 0746     		mov	r7, r0
 1230 005c 2846     		mov	r0, r5
 1231 005e FFF7FEFF 		bl	__aeabi_i2f
 1232              	.LVL160:
 1233 0062 0446     		mov	r4, r0
 1234              	.LVL161:
 1235 0064 0146     		mov	r1, r0
 1236 0066 3846     		mov	r0, r7
 1237 0068 FFF7FEFF 		bl	__aeabi_fmul
 1238              	.LVL162:
 1239 006c 0146     		mov	r1, r0
 1240 006e 4846     		mov	r0, r9
 1241 0070 FFF7FEFF 		bl	__aeabi_fadd
 1242              	.LVL163:
 1243 0074 0546     		mov	r5, r0
 1244              	.LVL164:
 149:Src/Gcode/Buffer_Gcode.c ****     float xy2xy2 = (float)Xn*(float)Xn + (float)Yn*(float)Yn;
 1245              		.loc 1 149 0
 1246 0076 4146     		mov	r1, r8
 1247 0078 4046     		mov	r0, r8
 1248              	.LVL165:
 1249 007a FFF7FEFF 		bl	__aeabi_fmul
 1250              	.LVL166:
 1251 007e 8046     		mov	r8, r0
 1252 0080 3946     		mov	r1, r7
 1253 0082 3846     		mov	r0, r7
 1254 0084 FFF7FEFF 		bl	__aeabi_fmul
 1255              	.LVL167:
 1256 0088 0146     		mov	r1, r0
 1257 008a 4046     		mov	r0, r8
 1258 008c FFF7FEFF 		bl	__aeabi_fadd
 1259              	.LVL168:
 1260 0090 0746     		mov	r7, r0
 1261              	.LVL169:
 150:Src/Gcode/Buffer_Gcode.c ****     float xy1xy2Critical = sqrtf(xy1xy1)*sqrtf(xy2xy2)*cos(3.14*(float)CRITICAL_ANGLE_XY/180.0);
 1262              		.loc 1 150 0
 1263 0092 3146     		mov	r1, r6
 1264 0094 3046     		mov	r0, r6
 1265              	.LVL170:
 1266 0096 FFF7FEFF 		bl	__aeabi_fmul
 1267              	.LVL171:
 1268 009a 0646     		mov	r6, r0
 1269 009c 2146     		mov	r1, r4
 1270 009e 2046     		mov	r0, r4
 1271 00a0 FFF7FEFF 		bl	__aeabi_fmul
 1272              	.LVL172:
 1273 00a4 0146     		mov	r1, r0
 1274 00a6 3046     		mov	r0, r6
 1275 00a8 FFF7FEFF 		bl	__aeabi_fadd
 1276              	.LVL173:
 1277 00ac 0646     		mov	r6, r0
 1278              	.LVL174:
 151:Src/Gcode/Buffer_Gcode.c ****     if (xy1xy2 < xy1xy2Critical)
 1279              		.loc 1 151 0
ARM GAS  /tmp/cckOLbKl.s 			page 34


 1280 00ae 3846     		mov	r0, r7
 1281              	.LVL175:
 1282 00b0 FFF7FEFF 		bl	sqrtf
 1283              	.LVL176:
 1284 00b4 0446     		mov	r4, r0
 1285 00b6 3046     		mov	r0, r6
 1286 00b8 FFF7FEFF 		bl	sqrtf
 1287              	.LVL177:
 1288 00bc 0146     		mov	r1, r0
 1289 00be 2046     		mov	r0, r4
 1290 00c0 FFF7FEFF 		bl	__aeabi_fmul
 1291              	.LVL178:
 1292 00c4 FFF7FEFF 		bl	__aeabi_f2d
 1293              	.LVL179:
 1294 00c8 09A3     		adr	r3, .L94
 1295 00ca D3E90023 		ldrd	r2, [r3]
 1296 00ce FFF7FEFF 		bl	__aeabi_dmul
 1297              	.LVL180:
 1298 00d2 FFF7FEFF 		bl	__aeabi_d2f
 1299              	.LVL181:
 152:Src/Gcode/Buffer_Gcode.c ****         return false;
 1300              		.loc 1 152 0
 1301 00d6 0146     		mov	r1, r0
 1302 00d8 2846     		mov	r0, r5
 1303              	.LVL182:
 1304 00da FFF7FEFF 		bl	__aeabi_fcmplt
 1305              	.LVL183:
 1306 00de 08B9     		cbnz	r0, .L93
 154:Src/Gcode/Buffer_Gcode.c **** }
 1307              		.loc 1 154 0
 1308 00e0 0120     		movs	r0, #1
 1309 00e2 A0E7     		b	.L81
 1310              	.L93:
 153:Src/Gcode/Buffer_Gcode.c ****     return true;
 1311              		.loc 1 153 0
 1312 00e4 0020     		movs	r0, #0
 1313 00e6 9EE7     		b	.L81
 1314              	.LVL184:
 1315              	.L83:
 1316              	.LCFI22:
 1317              		.cfi_def_cfa_offset 0
 1318              		.cfi_restore 4
 1319              		.cfi_restore 5
 1320              		.cfi_restore 6
 1321              		.cfi_restore 7
 1322              		.cfi_restore 8
 1323              		.cfi_restore 9
 1324              		.cfi_restore 14
 143:Src/Gcode/Buffer_Gcode.c ****     if (lastCommand().type != MOVE_COMMAND)
 1325              		.loc 1 143 0
 1326 00e8 0020     		movs	r0, #0
 1327              	.LVL185:
 155:Src/Gcode/Buffer_Gcode.c **** 
 1328              		.loc 1 155 0
 1329 00ea 7047     		bx	lr
 1330              	.L95:
 1331 00ec AFF30080 		.align	3
ARM GAS  /tmp/cckOLbKl.s 			page 35


 1332              	.L94:
 1333 00f0 32453628 		.word	674645298
 1334 00f4 7512EE3F 		.word	1072566901
 1335 00f8 00000000 		.word	.LANCHOR3
 1336 00fc 00000000 		.word	.LANCHOR0
 1337              		.cfi_endproc
 1338              	.LFE14:
 1340              		.section	.text.firstInCommandBuffer_Gcode,"ax",%progbits
 1341              		.align	1
 1342              		.global	firstInCommandBuffer_Gcode
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu softvfp
 1348              	firstInCommandBuffer_Gcode:
 1349              	.LFB7:
  68:Src/Gcode/Buffer_Gcode.c ****     if (commandBufferIsFull)
 1350              		.loc 1 68 0
 1351              		.cfi_startproc
 1352              		@ args = 60, pretend = 16, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354 0000 84B0     		sub	sp, sp, #16
 1355              	.LCFI23:
 1356              		.cfi_def_cfa_offset 16
 1357 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1358              	.LCFI24:
 1359              		.cfi_def_cfa_offset 40
 1360              		.cfi_offset 3, -40
 1361              		.cfi_offset 4, -36
 1362              		.cfi_offset 5, -32
 1363              		.cfi_offset 6, -28
 1364              		.cfi_offset 7, -24
 1365              		.cfi_offset 14, -20
 1366 0004 06AC     		add	r4, sp, #24
 1367 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
  69:Src/Gcode/Buffer_Gcode.c ****         return;
 1368              		.loc 1 69 0
 1369 000a 164B     		ldr	r3, .L101
 1370 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 000e 0BBB     		cbnz	r3, .L96
  72:Src/Gcode/Buffer_Gcode.c **** 
 1372              		.loc 1 72 0
 1373 0010 154F     		ldr	r7, .L101+4
 1374 0012 3E68     		ldr	r6, [r7]
 1375 0014 3046     		mov	r0, r6
 1376 0016 FFF7FEFF 		bl	number
 1377              	.LVL186:
 1378 001a C0EB0010 		rsb	r0, r0, r0, lsl #4
 1379 001e 8300     		lsls	r3, r0, #2
 1380 0020 124C     		ldr	r4, .L101+8
 1381 0022 1C44     		add	r4, r4, r3
 1382 0024 06AD     		add	r5, sp, #24
 1383 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1384 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1385 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1386 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1387 002e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /tmp/cckOLbKl.s 			page 36


 1388 0030 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1389 0032 95E80700 		ldm	r5, {r0, r1, r2}
 1390 0036 84E80700 		stm	r4, {r0, r1, r2}
  74:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer > COMMAND_BUFFER_LENGTH)
 1391              		.loc 1 74 0
 1392 003a 0136     		adds	r6, r6, #1
 1393 003c 3E60     		str	r6, [r7]
  75:Src/Gcode/Buffer_Gcode.c ****         firstFreeElementCommandBuffer = firstFreeElementCommandBuffer - COMMAND_BUFFER_LENGTH;
 1394              		.loc 1 75 0
 1395 003e 322E     		cmp	r6, #50
 1396 0040 02DD     		ble	.L98
  76:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer == firstOccupedElementCommandBuffer)
 1397              		.loc 1 76 0
 1398 0042 A6F13200 		sub	r0, r6, #50
 1399 0046 3860     		str	r0, [r7]
 1400              	.L98:
  77:Src/Gcode/Buffer_Gcode.c ****         commandBufferIsFull = true;
 1401              		.loc 1 77 0
 1402 0048 074B     		ldr	r3, .L101+4
 1403 004a 1A68     		ldr	r2, [r3]
 1404 004c 084B     		ldr	r3, .L101+12
 1405 004e 1B68     		ldr	r3, [r3]
 1406 0050 9A42     		cmp	r2, r3
 1407 0052 03D0     		beq	.L100
 1408              	.L96:
  79:Src/Gcode/Buffer_Gcode.c **** 
 1409              		.loc 1 79 0
 1410 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1411              	.LCFI25:
 1412              		.cfi_remember_state
 1413              		.cfi_restore 14
 1414              		.cfi_restore 7
 1415              		.cfi_restore 6
 1416              		.cfi_restore 5
 1417              		.cfi_restore 4
 1418              		.cfi_restore 3
 1419              		.cfi_def_cfa_offset 16
 1420 0058 04B0     		add	sp, sp, #16
 1421              	.LCFI26:
 1422              		.cfi_def_cfa_offset 0
 1423 005a 7047     		bx	lr
 1424              	.L100:
 1425              	.LCFI27:
 1426              		.cfi_restore_state
  78:Src/Gcode/Buffer_Gcode.c **** }
 1427              		.loc 1 78 0
 1428 005c 014B     		ldr	r3, .L101
 1429 005e 0122     		movs	r2, #1
 1430 0060 1A70     		strb	r2, [r3]
 1431 0062 F7E7     		b	.L96
 1432              	.L102:
 1433              		.align	2
 1434              	.L101:
 1435 0064 00000000 		.word	.LANCHOR4
 1436 0068 00000000 		.word	.LANCHOR0
 1437 006c 00000000 		.word	.LANCHOR2
 1438 0070 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/cckOLbKl.s 			page 37


 1439              		.cfi_endproc
 1440              	.LFE7:
 1442              		.global	__aeabi_fcmpgt
 1443              		.section	.text.MoveZ_Analyser,"ax",%progbits
 1444              		.align	1
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu softvfp
 1450              	MoveZ_Analyser:
 1451              	.LFB20:
 257:Src/Gcode/Buffer_Gcode.c **** 
 1452              		.loc 1 257 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 480
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1457              	.LCFI28:
 1458              		.cfi_def_cfa_offset 36
 1459              		.cfi_offset 4, -36
 1460              		.cfi_offset 5, -32
 1461              		.cfi_offset 6, -28
 1462              		.cfi_offset 7, -24
 1463              		.cfi_offset 8, -20
 1464              		.cfi_offset 9, -16
 1465              		.cfi_offset 10, -12
 1466              		.cfi_offset 11, -8
 1467              		.cfi_offset 14, -4
 1468 0004 ADF5057D 		sub	sp, sp, #532
 1469              	.LCFI29:
 1470              		.cfi_def_cfa_offset 568
 259:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = getDescreteCommandBufferElement_Gcode(2).FnZ;
 1471              		.loc 1 259 0
 1472 0008 0221     		movs	r1, #2
 1473 000a 11A8     		add	r0, sp, #68
 1474 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1475              	.LVL187:
 1476 0010 149C     		ldr	r4, [sp, #80]
 1477 0012 0121     		movs	r1, #1
 1478 0014 1BA8     		add	r0, sp, #108
 1479 0016 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1480              	.LVL188:
 1481 001a 1E9B     		ldr	r3, [sp, #120]
 1482 001c A4EB030B 		sub	fp, r4, r3
 1483              	.LVL189:
 260:Src/Gcode/Buffer_Gcode.c ****     if ( getDescreteCommandBufferElement_Gcode(2).FnZ > MAX_SPEED_Z_STEPS_PER_SECOND ) speedTarget 
 1484              		.loc 1 260 0
 1485 0020 0221     		movs	r1, #2
 1486 0022 25A8     		add	r0, sp, #148
 1487 0024 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1488              	.LVL190:
 1489 0028 DDF8ACA0 		ldr	r10, [sp, #172]	@ float
 1490              	.LVL191:
 261:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;
 1491              		.loc 1 261 0
 1492 002c 0221     		movs	r1, #2
 1493 002e 2FA8     		add	r0, sp, #188
ARM GAS  /tmp/cckOLbKl.s 			page 38


 1494 0030 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1495              	.LVL192:
 1496 0034 8249     		ldr	r1, .L113
 1497 0036 3598     		ldr	r0, [sp, #212]	@ float
 1498 0038 FFF7FEFF 		bl	__aeabi_fcmpgt
 1499              	.LVL193:
 1500 003c 08B1     		cbz	r0, .L104
 1501 003e DFF800A2 		ldr	r10, .L113
 1502              	.LVL194:
 1503              	.L104:
 264:Src/Gcode/Buffer_Gcode.c ****     float accelerationFinish = ACCELERATION_Z_STEPS_PER_SS*sign(speedFinish-speedTarget);
 1504              		.loc 1 264 0
 1505 0042 5046     		mov	r0, r10
 1506 0044 FFF7FEFF 		bl	sign
 1507              	.LVL195:
 1508 0048 FFF7FEFF 		bl	__aeabi_i2f
 1509              	.LVL196:
 1510 004c 7D49     		ldr	r1, .L113+4
 1511 004e FFF7FEFF 		bl	__aeabi_fmul
 1512              	.LVL197:
 1513 0052 8146     		mov	r9, r0
 1514              	.LVL198:
 265:Src/Gcode/Buffer_Gcode.c ****     float LnStart  = 0.5*(pow(speedTarget,2)-pow(speedStart,2))/accelerationStart;
 1515              		.loc 1 265 0
 1516 0054 5146     		mov	r1, r10
 1517 0056 0020     		movs	r0, #0
 1518              	.LVL199:
 1519 0058 FFF7FEFF 		bl	__aeabi_fsub
 1520              	.LVL200:
 1521 005c FFF7FEFF 		bl	sign
 1522              	.LVL201:
 1523 0060 FFF7FEFF 		bl	__aeabi_i2f
 1524              	.LVL202:
 1525 0064 7749     		ldr	r1, .L113+4
 1526 0066 FFF7FEFF 		bl	__aeabi_fmul
 1527              	.LVL203:
 1528 006a 0D90     		str	r0, [sp, #52]	@ float
 1529              	.LVL204:
 266:Src/Gcode/Buffer_Gcode.c ****     float LnFinish = 0.5*(pow(speedFinish,2)-pow(speedTarget,2))/accelerationFinish;
 1530              		.loc 1 266 0
 1531 006c 5046     		mov	r0, r10
 1532              	.LVL205:
 1533 006e FFF7FEFF 		bl	__aeabi_f2d
 1534              	.LVL206:
 1535 0072 0646     		mov	r6, r0
 1536 0074 0F46     		mov	r7, r1
 1537 0076 0024     		movs	r4, #0
 1538 0078 4FF08045 		mov	r5, #1073741824
 1539 007c 2246     		mov	r2, r4
 1540 007e 2B46     		mov	r3, r5
 1541 0080 FFF7FEFF 		bl	pow
 1542              	.LVL207:
 1543 0084 0022     		movs	r2, #0
 1544 0086 704B     		ldr	r3, .L113+8
 1545 0088 FFF7FEFF 		bl	__aeabi_dmul
 1546              	.LVL208:
 1547 008c CDE90E01 		strd	r0, [sp, #56]
ARM GAS  /tmp/cckOLbKl.s 			page 39


 1548 0090 4846     		mov	r0, r9
 1549 0092 FFF7FEFF 		bl	__aeabi_f2d
 1550              	.LVL209:
 1551 0096 0246     		mov	r2, r0
 1552 0098 0B46     		mov	r3, r1
 1553 009a DDE90E01 		ldrd	r0, [sp, #56]
 1554 009e FFF7FEFF 		bl	__aeabi_ddiv
 1555              	.LVL210:
 1556 00a2 FFF7FEFF 		bl	__aeabi_d2f
 1557              	.LVL211:
 1558 00a6 8046     		mov	r8, r0
 1559              	.LVL212:
 267:Src/Gcode/Buffer_Gcode.c ****     float LnMiddle = (float)abs(Zn) - LnStart - LnFinish;
 1560              		.loc 1 267 0
 1561 00a8 2246     		mov	r2, r4
 1562 00aa 2B46     		mov	r3, r5
 1563 00ac 3046     		mov	r0, r6
 1564              	.LVL213:
 1565 00ae 3946     		mov	r1, r7
 1566 00b0 FFF7FEFF 		bl	pow
 1567              	.LVL214:
 1568 00b4 0246     		mov	r2, r0
 1569 00b6 0B46     		mov	r3, r1
 1570 00b8 0020     		movs	r0, #0
 1571 00ba 0021     		movs	r1, #0
 1572 00bc FFF7FEFF 		bl	__aeabi_dsub
 1573              	.LVL215:
 1574 00c0 0022     		movs	r2, #0
 1575 00c2 614B     		ldr	r3, .L113+8
 1576 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1577              	.LVL216:
 1578 00c8 0446     		mov	r4, r0
 1579 00ca 0D46     		mov	r5, r1
 1580 00cc 0D98     		ldr	r0, [sp, #52]	@ float
 1581 00ce FFF7FEFF 		bl	__aeabi_f2d
 1582              	.LVL217:
 1583 00d2 0246     		mov	r2, r0
 1584 00d4 0B46     		mov	r3, r1
 1585 00d6 2046     		mov	r0, r4
 1586 00d8 2946     		mov	r1, r5
 1587 00da FFF7FEFF 		bl	__aeabi_ddiv
 1588              	.LVL218:
 1589 00de FFF7FEFF 		bl	__aeabi_d2f
 1590              	.LVL219:
 1591 00e2 0446     		mov	r4, r0
 1592              	.LVL220:
 268:Src/Gcode/Buffer_Gcode.c ****     if( LnMiddle < 0 )
 1593              		.loc 1 268 0
 1594 00e4 8BEAEB70 		eor	r0, fp, fp, asr #31
 1595              	.LVL221:
 1596 00e8 A0EBEB70 		sub	r0, r0, fp, asr #31
 1597 00ec FFF7FEFF 		bl	__aeabi_i2f
 1598              	.LVL222:
 1599 00f0 0546     		mov	r5, r0
 1600 00f2 4146     		mov	r1, r8
 1601 00f4 FFF7FEFF 		bl	__aeabi_fsub
 1602              	.LVL223:
ARM GAS  /tmp/cckOLbKl.s 			page 40


 1603 00f8 2146     		mov	r1, r4
 1604 00fa FFF7FEFF 		bl	__aeabi_fsub
 1605              	.LVL224:
 1606 00fe 0E90     		str	r0, [sp, #56]	@ float
 1607              	.LVL225:
 269:Src/Gcode/Buffer_Gcode.c ****     {
 1608              		.loc 1 269 0
 1609 0100 0021     		movs	r1, #0
 1610 0102 FFF7FEFF 		bl	__aeabi_fcmplt
 1611              	.LVL226:
 1612 0106 0028     		cmp	r0, #0
 1613 0108 40F0A080 		bne	.L112
 282:Src/Gcode/Buffer_Gcode.c ****     float vZ1 = speedStart*sign(Zn);
 1614              		.loc 1 282 0
 1615 010c 5846     		mov	r0, fp
 1616 010e FFF7FEFF 		bl	__aeabi_i2f
 1617              	.LVL227:
 1618 0112 FFF7FEFF 		bl	sign
 1619              	.LVL228:
 1620 0116 FFF7FEFF 		bl	__aeabi_i2f
 1621              	.LVL229:
 1622 011a 0646     		mov	r6, r0
 1623 011c 4146     		mov	r1, r8
 1624 011e FFF7FEFF 		bl	__aeabi_fmul
 1625              	.LVL230:
 1626 0122 FFF7FEFF 		bl	lroundf
 1627              	.LVL231:
 1628 0126 0746     		mov	r7, r0
 1629              	.LVL232:
 283:Src/Gcode/Buffer_Gcode.c ****     float aZ1 = accelerationStart*sign(Zn);
 1630              		.loc 1 283 0
 1631 0128 0021     		movs	r1, #0
 1632 012a 3046     		mov	r0, r6
 1633              	.LVL233:
 1634 012c FFF7FEFF 		bl	__aeabi_fmul
 1635              	.LVL234:
 1636 0130 8046     		mov	r8, r0
 1637              	.LVL235:
 284:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {MOVE_COMMAND, 0, 0, z1, 0,    0, 0, vZ1, 0,    0, 0, aZ1, 0,   0, 0};
 1638              		.loc 1 284 0
 1639 0132 4946     		mov	r1, r9
 1640 0134 3046     		mov	r0, r6
 1641              	.LVL236:
 1642 0136 FFF7FEFF 		bl	__aeabi_fmul
 1643              	.LVL237:
 285:Src/Gcode/Buffer_Gcode.c ****     long z2 = lroundf(LnMiddle*sign(Zn));
 1644              		.loc 1 285 0
 1645 013a 4FF00109 		mov	r9, #1
 1646              	.LVL238:
 1647 013e 8DF8D491 		strb	r9, [sp, #468]
 1648 0142 0025     		movs	r5, #0
 1649 0144 7695     		str	r5, [sp, #472]
 1650 0146 7795     		str	r5, [sp, #476]
 1651 0148 7897     		str	r7, [sp, #480]
 1652 014a 7995     		str	r5, [sp, #484]
 1653 014c 0024     		movs	r4, #0
 1654              	.LVL239:
ARM GAS  /tmp/cckOLbKl.s 			page 41


 1655 014e 7A94     		str	r4, [sp, #488]	@ float
 1656 0150 7B94     		str	r4, [sp, #492]	@ float
 1657 0152 CDF8F081 		str	r8, [sp, #496]	@ float
 1658 0156 7D94     		str	r4, [sp, #500]	@ float
 1659 0158 7E94     		str	r4, [sp, #504]	@ float
 1660 015a 7F94     		str	r4, [sp, #508]	@ float
 1661 015c 8090     		str	r0, [sp, #512]	@ float
 1662 015e 8194     		str	r4, [sp, #516]	@ float
 1663 0160 8294     		str	r4, [sp, #520]	@ float
 1664 0162 8394     		str	r4, [sp, #524]	@ float
 1665 0164 EC46     		mov	ip, sp
 1666 0166 0DF5F27E 		add	lr, sp, #484
 1667 016a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1668              	.LVL240:
 1669 016e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1670 0172 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1671 0176 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1672 017a 9EE80700 		ldm	lr, {r0, r1, r2}
 1673 017e 8CE80700 		stm	ip, {r0, r1, r2}
 1674 0182 75AB     		add	r3, sp, #468
 1675 0184 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1676 0186 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 1677              	.LVL241:
 286:Src/Gcode/Buffer_Gcode.c ****     float vZ2 = speedTarget*sign(Zn);
 1678              		.loc 1 286 0
 1679 018a 0E99     		ldr	r1, [sp, #56]	@ float
 1680 018c 3046     		mov	r0, r6
 1681 018e FFF7FEFF 		bl	__aeabi_fmul
 1682              	.LVL242:
 1683 0192 FFF7FEFF 		bl	lroundf
 1684              	.LVL243:
 1685 0196 8046     		mov	r8, r0
 1686              	.LVL244:
 287:Src/Gcode/Buffer_Gcode.c ****     float aZ2 = 0;
 1687              		.loc 1 287 0
 1688 0198 5146     		mov	r1, r10
 1689 019a 3046     		mov	r0, r6
 1690              	.LVL245:
 1691 019c FFF7FEFF 		bl	__aeabi_fmul
 1692              	.LVL246:
 1693 01a0 8246     		mov	r10, r0
 1694              	.LVL247:
 289:Src/Gcode/Buffer_Gcode.c ****     long z3 = Zn - z1 - z2;
 1695              		.loc 1 289 0
 1696 01a2 8DF89891 		strb	r9, [sp, #408]
 1697 01a6 6795     		str	r5, [sp, #412]
 1698 01a8 6895     		str	r5, [sp, #416]
 1699 01aa CDF8A481 		str	r8, [sp, #420]
 1700 01ae 6A95     		str	r5, [sp, #424]
 1701 01b0 6B94     		str	r4, [sp, #428]	@ float
 1702 01b2 6C94     		str	r4, [sp, #432]	@ float
 1703 01b4 6D90     		str	r0, [sp, #436]	@ float
 1704 01b6 6E94     		str	r4, [sp, #440]	@ float
 1705 01b8 6F94     		str	r4, [sp, #444]	@ float
 1706 01ba 7094     		str	r4, [sp, #448]	@ float
 1707 01bc 7194     		str	r4, [sp, #452]	@ float
 1708 01be 7294     		str	r4, [sp, #456]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 42


 1709 01c0 7394     		str	r4, [sp, #460]	@ float
 1710 01c2 7494     		str	r4, [sp, #464]	@ float
 1711 01c4 EC46     		mov	ip, sp
 1712 01c6 0DF5D47E 		add	lr, sp, #424
 1713 01ca BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1714              	.LVL248:
 1715 01ce ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1716 01d2 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1717 01d6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1718 01da 9EE80700 		ldm	lr, {r0, r1, r2}
 1719 01de 8CE80700 		stm	ip, {r0, r1, r2}
 1720 01e2 66AB     		add	r3, sp, #408
 1721 01e4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1722 01e6 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 1723              	.LVL249:
 290:Src/Gcode/Buffer_Gcode.c ****     float vZ3 = speedTarget*sign(Zn);
 1724              		.loc 1 290 0
 1725 01ea ABEB0707 		sub	r7, fp, r7
 1726              	.LVL250:
 1727 01ee A7EB0807 		sub	r7, r7, r8
 1728              	.LVL251:
 292:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {MOVE_COMMAND, 0, 0, z3, 0,    0, 0, vZ3, 0,    0, 0, aZ3, 0,   0, 0};
 1729              		.loc 1 292 0
 1730 01f2 0D99     		ldr	r1, [sp, #52]	@ float
 1731 01f4 3046     		mov	r0, r6
 1732 01f6 FFF7FEFF 		bl	__aeabi_fmul
 1733              	.LVL252:
 293:Src/Gcode/Buffer_Gcode.c **** }
 1734              		.loc 1 293 0
 1735 01fa 8DF85C91 		strb	r9, [sp, #348]
 1736 01fe 5895     		str	r5, [sp, #352]
 1737 0200 5995     		str	r5, [sp, #356]
 1738 0202 5A97     		str	r7, [sp, #360]
 1739 0204 5B95     		str	r5, [sp, #364]
 1740 0206 5C94     		str	r4, [sp, #368]	@ float
 1741 0208 5D94     		str	r4, [sp, #372]	@ float
 1742 020a CDF878A1 		str	r10, [sp, #376]	@ float
 1743 020e 5F94     		str	r4, [sp, #380]	@ float
 1744 0210 6094     		str	r4, [sp, #384]	@ float
 1745 0212 6194     		str	r4, [sp, #388]	@ float
 1746 0214 6290     		str	r0, [sp, #392]	@ float
 1747 0216 6394     		str	r4, [sp, #396]	@ float
 1748 0218 6494     		str	r4, [sp, #400]	@ float
 1749 021a 6594     		str	r4, [sp, #404]	@ float
 1750 021c 6C46     		mov	r4, sp
 1751 021e 5BAD     		add	r5, sp, #364
 1752 0220 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1753              	.LVL253:
 1754 0222 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1755 0224 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1756 0226 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1757 0228 95E80700 		ldm	r5, {r0, r1, r2}
 1758 022c 84E80700 		stm	r4, {r0, r1, r2}
 1759 0230 57AB     		add	r3, sp, #348
 1760 0232 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1761 0234 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 1762              	.LVL254:
ARM GAS  /tmp/cckOLbKl.s 			page 43


 1763              	.L103:
 294:Src/Gcode/Buffer_Gcode.c **** 
 1764              		.loc 1 294 0
 1765 0238 0DF5057D 		add	sp, sp, #532
 1766              	.LCFI30:
 1767              		.cfi_remember_state
 1768              		.cfi_def_cfa_offset 36
 1769              		@ sp needed
 1770 023c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1771              	.LVL255:
 1772              	.L114:
 1773              		.align	2
 1774              	.L113:
 1775 0240 5555D046 		.word	1188058453
 1776 0244 5555D045 		.word	1171281237
 1777 0248 0000E03F 		.word	1071644672
 1778              	.LVL256:
 1779              	.L112:
 1780              	.LCFI31:
 1781              		.cfi_restore_state
 1782              	.LBB2:
 271:Src/Gcode/Buffer_Gcode.c ****         float speed_Z_buffer = speedMaxFastMove( (float)abs(Zn), speedStart, speedFinish, accelerat
 1783              		.loc 1 271 0
 1784 024c 0024     		movs	r4, #0
 1785              	.LVL257:
 1786 024e 0D9F     		ldr	r7, [sp, #52]	@ float
 1787 0250 0097     		str	r7, [sp]	@ float
 1788 0252 4B46     		mov	r3, r9
 1789 0254 2246     		mov	r2, r4
 1790 0256 2146     		mov	r1, r4
 1791 0258 2846     		mov	r0, r5
 1792 025a FFF7FEFF 		bl	distanceStartFastMove
 1793              	.LVL258:
 1794 025e 0646     		mov	r6, r0
 1795              	.LVL259:
 272:Src/Gcode/Buffer_Gcode.c ****         long z1 = lroundf(distance_Z_buffer*sign(Zn));
 1796              		.loc 1 272 0
 1797 0260 0D97     		str	r7, [sp, #52]	@ float
 1798              	.LVL260:
 1799 0262 0097     		str	r7, [sp]	@ float
 1800 0264 4B46     		mov	r3, r9
 1801 0266 2246     		mov	r2, r4
 1802 0268 2146     		mov	r1, r4
 1803 026a 2846     		mov	r0, r5
 1804              	.LVL261:
 1805 026c FFF7FEFF 		bl	speedMaxFastMove
 1806              	.LVL262:
 1807 0270 8246     		mov	r10, r0
 1808              	.LVL263:
 273:Src/Gcode/Buffer_Gcode.c ****         float vZ1 = speedStart;
 1809              		.loc 1 273 0
 1810 0272 5846     		mov	r0, fp
 1811              	.LVL264:
 1812 0274 FFF7FEFF 		bl	__aeabi_i2f
 1813              	.LVL265:
 1814 0278 FFF7FEFF 		bl	sign
 1815              	.LVL266:
ARM GAS  /tmp/cckOLbKl.s 			page 44


 1816 027c FFF7FEFF 		bl	__aeabi_i2f
 1817              	.LVL267:
 1818 0280 8046     		mov	r8, r0
 1819              	.LVL268:
 1820 0282 3146     		mov	r1, r6
 1821 0284 FFF7FEFF 		bl	__aeabi_fmul
 1822              	.LVL269:
 1823 0288 FFF7FEFF 		bl	lroundf
 1824              	.LVL270:
 1825 028c 0746     		mov	r7, r0
 1826              	.LVL271:
 275:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command1 = {MOVE_COMMAND, 0, 0, z1, 0,    0, 0, vZ1, 0,    0, 0, aZ1, 0,   0,
 1827              		.loc 1 275 0
 1828 028e 4946     		mov	r1, r9
 1829 0290 4046     		mov	r0, r8
 1830              	.LVL272:
 1831 0292 FFF7FEFF 		bl	__aeabi_fmul
 1832              	.LVL273:
 276:Src/Gcode/Buffer_Gcode.c ****         long z2 = Zn - z1;
 1833              		.loc 1 276 0
 1834 0296 39AD     		add	r5, sp, #228
 1835 0298 4FF00109 		mov	r9, #1
 1836              	.LVL274:
 1837 029c 85F80090 		strb	r9, [r5]
 1838 02a0 0026     		movs	r6, #0
 1839              	.LVL275:
 1840 02a2 6E60     		str	r6, [r5, #4]
 1841 02a4 AE60     		str	r6, [r5, #8]
 1842 02a6 EF60     		str	r7, [r5, #12]
 1843 02a8 2E61     		str	r6, [r5, #16]
 1844 02aa 6C61     		str	r4, [r5, #20]	@ float
 1845 02ac AC61     		str	r4, [r5, #24]	@ float
 1846 02ae EC61     		str	r4, [r5, #28]	@ float
 1847 02b0 2C62     		str	r4, [r5, #32]	@ float
 1848 02b2 6C62     		str	r4, [r5, #36]	@ float
 1849 02b4 AC62     		str	r4, [r5, #40]	@ float
 1850 02b6 E862     		str	r0, [r5, #44]	@ float
 1851 02b8 2C63     		str	r4, [r5, #48]	@ float
 1852 02ba 6C63     		str	r4, [r5, #52]	@ float
 1853 02bc AC63     		str	r4, [r5, #56]	@ float
 1854 02be EC46     		mov	ip, sp
 1855 02c0 0DF1F40E 		add	lr, sp, #244
 1856 02c4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1857              	.LVL276:
 1858 02c8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1859 02cc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1860 02d0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1861 02d4 9EE80700 		ldm	lr, {r0, r1, r2}
 1862 02d8 8CE80700 		stm	ip, {r0, r1, r2}
 1863 02dc 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1864 02e0 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 1865              	.LVL277:
 277:Src/Gcode/Buffer_Gcode.c ****         float vZ2 = speed_Z_buffer*sign(Zn);
 1866              		.loc 1 277 0
 1867 02e4 ABEB0707 		sub	r7, fp, r7
 1868              	.LVL278:
 278:Src/Gcode/Buffer_Gcode.c ****         float aZ2 = accelerationFinish*sign(Zn);
ARM GAS  /tmp/cckOLbKl.s 			page 45


 1869              		.loc 1 278 0
 1870 02e8 5146     		mov	r1, r10
 1871 02ea 4046     		mov	r0, r8
 1872 02ec FFF7FEFF 		bl	__aeabi_fmul
 1873              	.LVL279:
 1874 02f0 0546     		mov	r5, r0
 1875              	.LVL280:
 279:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command2 = {MOVE_COMMAND, 0, 0, z2, 0,    0, 0, vZ2, 0,    0, 0, aZ2, 0,   0,
 1876              		.loc 1 279 0
 1877 02f2 0D99     		ldr	r1, [sp, #52]	@ float
 1878 02f4 4046     		mov	r0, r8
 1879              	.LVL281:
 1880 02f6 FFF7FEFF 		bl	__aeabi_fmul
 1881              	.LVL282:
 280:Src/Gcode/Buffer_Gcode.c ****     }
 1882              		.loc 1 280 0
 1883 02fa 8DF82091 		strb	r9, [sp, #288]
 1884 02fe 4996     		str	r6, [sp, #292]
 1885 0300 4A96     		str	r6, [sp, #296]
 1886 0302 4B97     		str	r7, [sp, #300]
 1887 0304 4C96     		str	r6, [sp, #304]
 1888 0306 4D94     		str	r4, [sp, #308]	@ float
 1889 0308 4E94     		str	r4, [sp, #312]	@ float
 1890 030a 4F95     		str	r5, [sp, #316]	@ float
 1891 030c 5094     		str	r4, [sp, #320]	@ float
 1892 030e 5194     		str	r4, [sp, #324]	@ float
 1893 0310 5294     		str	r4, [sp, #328]	@ float
 1894 0312 5390     		str	r0, [sp, #332]	@ float
 1895 0314 5494     		str	r4, [sp, #336]	@ float
 1896 0316 5594     		str	r4, [sp, #340]	@ float
 1897 0318 5694     		str	r4, [sp, #344]	@ float
 1898 031a 6C46     		mov	r4, sp
 1899 031c 4CAD     		add	r5, sp, #304
 1900              	.LVL283:
 1901 031e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1902              	.LVL284:
 1903 0320 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1904 0322 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1905 0324 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1906 0326 95E80700 		ldm	r5, {r0, r1, r2}
 1907 032a 84E80700 		stm	r4, {r0, r1, r2}
 1908 032e 48AB     		add	r3, sp, #288
 1909 0330 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1910 0332 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 1911              	.LVL285:
 1912 0336 7FE7     		b	.L103
 1913              	.LBE2:
 1914              		.cfi_endproc
 1915              	.LFE20:
 1917              		.global	__aeabi_i2d
 1918              		.global	__aeabi_dadd
 1919              		.section	.text.MoveXY_Analyser,"ax",%progbits
 1920              		.align	1
 1921              		.syntax unified
 1922              		.thumb
 1923              		.thumb_func
 1924              		.fpu softvfp
ARM GAS  /tmp/cckOLbKl.s 			page 46


 1926              	MoveXY_Analyser:
 1927              	.LFB18:
 191:Src/Gcode/Buffer_Gcode.c ****     long Xn = getDescreteCommandBufferElement_Gcode(2).Xn - getDescreteCommandBufferElement_Gcode(1
 1928              		.loc 1 191 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 1048
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 1932 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1933              	.LCFI32:
 1934              		.cfi_def_cfa_offset 36
 1935              		.cfi_offset 4, -36
 1936              		.cfi_offset 5, -32
 1937              		.cfi_offset 6, -28
 1938              		.cfi_offset 7, -24
 1939              		.cfi_offset 8, -20
 1940              		.cfi_offset 9, -16
 1941              		.cfi_offset 10, -12
 1942              		.cfi_offset 11, -8
 1943              		.cfi_offset 14, -4
 1944 0004 ADF24C4D 		subw	sp, sp, #1100
 1945              	.LCFI33:
 1946              		.cfi_def_cfa_offset 1136
 192:Src/Gcode/Buffer_Gcode.c ****     long Yn = getDescreteCommandBufferElement_Gcode(2).Yn - getDescreteCommandBufferElement_Gcode(1
 1947              		.loc 1 192 0
 1948 0008 0221     		movs	r1, #2
 1949 000a 1DA8     		add	r0, sp, #116
 1950 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1951              	.LVL286:
 1952 0010 1E9C     		ldr	r4, [sp, #120]
 1953 0012 0121     		movs	r1, #1
 1954 0014 27A8     		add	r0, sp, #156
 1955 0016 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1956              	.LVL287:
 1957 001a 289E     		ldr	r6, [sp, #160]
 1958 001c A4EB060A 		sub	r10, r4, r6
 1959              	.LVL288:
 193:Src/Gcode/Buffer_Gcode.c ****     long En = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(1
 1960              		.loc 1 193 0
 1961 0020 0221     		movs	r1, #2
 1962 0022 31A8     		add	r0, sp, #196
 1963 0024 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1964              	.LVL289:
 1965 0028 339C     		ldr	r4, [sp, #204]
 1966 002a 0121     		movs	r1, #1
 1967 002c 3BA8     		add	r0, sp, #236
 1968 002e FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1969              	.LVL290:
 1970 0032 3D9D     		ldr	r5, [sp, #244]
 1971 0034 631B     		subs	r3, r4, r5
 1972 0036 0F93     		str	r3, [sp, #60]
 1973              	.LVL291:
 194:Src/Gcode/Buffer_Gcode.c ****     float distance_XY = sqrtf(pow(Xn,2)+pow(Yn,2)); float cosX = (float)Xn/distance_XY; float cosY 
 1974              		.loc 1 194 0
 1975 0038 0221     		movs	r1, #2
 1976 003a 45A8     		add	r0, sp, #276
 1977 003c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1978              	.LVL292:
ARM GAS  /tmp/cckOLbKl.s 			page 47


 1979 0040 499C     		ldr	r4, [sp, #292]
 1980 0042 0121     		movs	r1, #1
 1981 0044 4FA8     		add	r0, sp, #316
 1982 0046 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 1983              	.LVL293:
 1984 004a 539F     		ldr	r7, [sp, #332]
 1985 004c A4EB070B 		sub	fp, r4, r7
 1986              	.LVL294:
 195:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = getDescreteCommandBufferElement_Gcode(2).FnXY;  if ( getDescreteCommandBuff
 1987              		.loc 1 195 0
 1988 0050 0024     		movs	r4, #0
 1989 0052 4FF08045 		mov	r5, #1073741824
 1990 0056 5046     		mov	r0, r10
 1991 0058 FFF7FEFF 		bl	__aeabi_i2d
 1992              	.LVL295:
 1993 005c 2246     		mov	r2, r4
 1994 005e 2B46     		mov	r3, r5
 1995 0060 FFF7FEFF 		bl	pow
 1996              	.LVL296:
 1997 0064 0646     		mov	r6, r0
 1998 0066 0F46     		mov	r7, r1
 1999 0068 DDF83C80 		ldr	r8, [sp, #60]
 2000 006c 4046     		mov	r0, r8
 2001 006e FFF7FEFF 		bl	__aeabi_i2d
 2002              	.LVL297:
 2003 0072 2246     		mov	r2, r4
 2004 0074 2B46     		mov	r3, r5
 2005 0076 FFF7FEFF 		bl	pow
 2006              	.LVL298:
 2007 007a 0246     		mov	r2, r0
 2008 007c 0B46     		mov	r3, r1
 2009 007e 3046     		mov	r0, r6
 2010 0080 3946     		mov	r1, r7
 2011 0082 FFF7FEFF 		bl	__aeabi_dadd
 2012              	.LVL299:
 2013 0086 FFF7FEFF 		bl	__aeabi_d2f
 2014              	.LVL300:
 2015 008a FFF7FEFF 		bl	sqrtf
 2016              	.LVL301:
 2017 008e 0746     		mov	r7, r0
 2018              	.LVL302:
 2019 0090 5046     		mov	r0, r10
 2020              	.LVL303:
 2021 0092 FFF7FEFF 		bl	__aeabi_i2f
 2022              	.LVL304:
 2023 0096 3946     		mov	r1, r7
 2024 0098 FFF7FEFF 		bl	__aeabi_fdiv
 2025              	.LVL305:
 2026 009c 1090     		str	r0, [sp, #64]	@ float
 2027              	.LVL306:
 2028 009e 4046     		mov	r0, r8
 2029              	.LVL307:
 2030 00a0 FFF7FEFF 		bl	__aeabi_i2f
 2031              	.LVL308:
 2032 00a4 3946     		mov	r1, r7
 2033 00a6 FFF7FEFF 		bl	__aeabi_fdiv
 2034              	.LVL309:
ARM GAS  /tmp/cckOLbKl.s 			page 48


 2035 00aa 0E90     		str	r0, [sp, #56]	@ float
 2036              	.LVL310:
 2037 00ac 5846     		mov	r0, fp
 2038              	.LVL311:
 2039 00ae FFF7FEFF 		bl	__aeabi_i2f
 2040              	.LVL312:
 2041 00b2 3946     		mov	r1, r7
 2042 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 2043              	.LVL313:
 2044 00b8 0D90     		str	r0, [sp, #52]	@ float
 2045              	.LVL314:
 196:Src/Gcode/Buffer_Gcode.c ****     if (En != 0) if ( fabs(speedTarget*cosE) > MAX_SPEED_E_STEPS_PER_SECOND ) speedTarget = sign(sp
 2046              		.loc 1 196 0
 2047 00ba 0221     		movs	r1, #2
 2048 00bc 59A8     		add	r0, sp, #356
 2049              	.LVL315:
 2050 00be FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 2051              	.LVL316:
 2052 00c2 5E9E     		ldr	r6, [sp, #376]	@ float
 2053              	.LVL317:
 2054 00c4 0221     		movs	r1, #2
 2055 00c6 63A8     		add	r0, sp, #396
 2056 00c8 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 2057              	.LVL318:
 2058 00cc 8949     		ldr	r1, .L141
 2059 00ce 6898     		ldr	r0, [sp, #416]	@ float
 2060 00d0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2061              	.LVL319:
 2062 00d4 00B1     		cbz	r0, .L116
 2063 00d6 874E     		ldr	r6, .L141
 2064              	.LVL320:
 2065              	.L116:
 197:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;                                               if ( conserveSpeedStart(Xn,
 2066              		.loc 1 197 0
 2067 00d8 BBF1000F 		cmp	fp, #0
 2068 00dc 17D0     		beq	.L117
 197:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;                                               if ( conserveSpeedStart(Xn,
 2069              		.loc 1 197 0 is_stmt 0 discriminator 1
 2070 00de 0D9C     		ldr	r4, [sp, #52]	@ float
 2071 00e0 2146     		mov	r1, r4
 2072 00e2 3046     		mov	r0, r6
 2073 00e4 FFF7FEFF 		bl	__aeabi_fmul
 2074              	.LVL321:
 2075 00e8 20F00040 		bic	r0, r0, #-2147483648
 2076 00ec 8249     		ldr	r1, .L141+4
 2077 00ee FFF7FEFF 		bl	__aeabi_fcmpgt
 2078              	.LVL322:
 2079 00f2 60B1     		cbz	r0, .L117
 197:Src/Gcode/Buffer_Gcode.c ****     float speedStart = 0;                                               if ( conserveSpeedStart(Xn,
 2080              		.loc 1 197 0 discriminator 2
 2081 00f4 3046     		mov	r0, r6
 2082 00f6 FFF7FEFF 		bl	sign
 2083              	.LVL323:
 2084 00fa FFF7FEFF 		bl	__aeabi_i2f
 2085              	.LVL324:
 2086 00fe 7E49     		ldr	r1, .L141+4
 2087 0100 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  /tmp/cckOLbKl.s 			page 49


 2088              	.LVL325:
 2089 0104 24F00041 		bic	r1, r4, #-2147483648
 2090 0108 FFF7FEFF 		bl	__aeabi_fdiv
 2091              	.LVL326:
 2092 010c 0646     		mov	r6, r0
 2093              	.LVL327:
 2094              	.L117:
 198:Src/Gcode/Buffer_Gcode.c ****     float speedFinish = 0;                                              if ( conserveSpeedFinish(Xn
 2095              		.loc 1 198 0 is_stmt 1
 2096 010e 0022     		movs	r2, #0
 2097 0110 0F99     		ldr	r1, [sp, #60]
 2098 0112 5046     		mov	r0, r10
 2099 0114 FFF7FEFF 		bl	conserveSpeedStart
 2100              	.LVL328:
 2101 0118 0028     		cmp	r0, #0
 2102 011a 40F0AC81 		bne	.L139
 2103 011e 0024     		movs	r4, #0
 2104              	.LVL329:
 2105              	.L119:
 199:Src/Gcode/Buffer_Gcode.c ****     float accelerationStart = ACCELERATION_XY_STEPS_PER_SS*sign(speedTarget-speedStart);
 2106              		.loc 1 199 0
 2107 0120 0022     		movs	r2, #0
 2108 0122 0F99     		ldr	r1, [sp, #60]
 2109 0124 5046     		mov	r0, r10
 2110 0126 FFF7FEFF 		bl	conserveSpeedFinish
 2111              	.LVL330:
 2112 012a 0028     		cmp	r0, #0
 2113 012c 40F0F681 		bne	.L134
 2114 0130 0025     		movs	r5, #0
 2115              	.L120:
 2116              	.LVL331:
 200:Src/Gcode/Buffer_Gcode.c ****     float accelerationFinish = ACCELERATION_XY_STEPS_PER_SS*sign(speedFinish-speedTarget);
 2117              		.loc 1 200 0
 2118 0132 2146     		mov	r1, r4
 2119 0134 3046     		mov	r0, r6
 2120 0136 FFF7FEFF 		bl	__aeabi_fsub
 2121              	.LVL332:
 2122 013a FFF7FEFF 		bl	sign
 2123              	.LVL333:
 2124 013e FFF7FEFF 		bl	__aeabi_i2f
 2125              	.LVL334:
 2126 0142 6E49     		ldr	r1, .L141+8
 2127 0144 FFF7FEFF 		bl	__aeabi_fmul
 2128              	.LVL335:
 2129 0148 1190     		str	r0, [sp, #68]	@ float
 2130              	.LVL336:
 201:Src/Gcode/Buffer_Gcode.c ****     float LnStart  = 0.5*(pow(speedTarget,2)-pow(speedStart,2))/accelerationStart;
 2131              		.loc 1 201 0
 2132 014a 3146     		mov	r1, r6
 2133 014c 2846     		mov	r0, r5
 2134              	.LVL337:
 2135 014e FFF7FEFF 		bl	__aeabi_fsub
 2136              	.LVL338:
 2137 0152 FFF7FEFF 		bl	sign
 2138              	.LVL339:
 2139 0156 FFF7FEFF 		bl	__aeabi_i2f
 2140              	.LVL340:
ARM GAS  /tmp/cckOLbKl.s 			page 50


 2141 015a 6849     		ldr	r1, .L141+8
 2142 015c FFF7FEFF 		bl	__aeabi_fmul
 2143              	.LVL341:
 2144 0160 1890     		str	r0, [sp, #96]	@ float
 2145              	.LVL342:
 202:Src/Gcode/Buffer_Gcode.c ****     float LnFinish = 0.5*(pow(speedFinish,2)-pow(speedTarget,2))/accelerationFinish;
 2146              		.loc 1 202 0
 2147 0162 3046     		mov	r0, r6
 2148              	.LVL343:
 2149 0164 FFF7FEFF 		bl	__aeabi_f2d
 2150              	.LVL344:
 2151 0168 CDE91401 		strd	r0, [sp, #80]
 2152 016c 4FF00008 		mov	r8, #0
 2153 0170 4FF08049 		mov	r9, #1073741824
 2154 0174 4246     		mov	r2, r8
 2155 0176 4B46     		mov	r3, r9
 2156 0178 FFF7FEFF 		bl	pow
 2157              	.LVL345:
 2158 017c CDE91201 		strd	r0, [sp, #72]
 2159 0180 2046     		mov	r0, r4
 2160 0182 FFF7FEFF 		bl	__aeabi_f2d
 2161              	.LVL346:
 2162 0186 4246     		mov	r2, r8
 2163 0188 4B46     		mov	r3, r9
 2164 018a FFF7FEFF 		bl	pow
 2165              	.LVL347:
 2166 018e 0246     		mov	r2, r0
 2167 0190 0B46     		mov	r3, r1
 2168 0192 DDE91201 		ldrd	r0, [sp, #72]
 2169 0196 FFF7FEFF 		bl	__aeabi_dsub
 2170              	.LVL348:
 2171 019a 0022     		movs	r2, #0
 2172 019c 584B     		ldr	r3, .L141+12
 2173 019e FFF7FEFF 		bl	__aeabi_dmul
 2174              	.LVL349:
 2175 01a2 CDE91201 		strd	r0, [sp, #72]
 2176 01a6 1198     		ldr	r0, [sp, #68]	@ float
 2177 01a8 FFF7FEFF 		bl	__aeabi_f2d
 2178              	.LVL350:
 2179 01ac 0246     		mov	r2, r0
 2180 01ae 0B46     		mov	r3, r1
 2181 01b0 DDE91201 		ldrd	r0, [sp, #72]
 2182 01b4 FFF7FEFF 		bl	__aeabi_ddiv
 2183              	.LVL351:
 2184 01b8 FFF7FEFF 		bl	__aeabi_d2f
 2185              	.LVL352:
 2186 01bc 1290     		str	r0, [sp, #72]	@ float
 2187              	.LVL353:
 203:Src/Gcode/Buffer_Gcode.c ****     float LnMiddle = distance_XY - LnStart - LnFinish;
 2188              		.loc 1 203 0
 2189 01be 2846     		mov	r0, r5
 2190              	.LVL354:
 2191 01c0 FFF7FEFF 		bl	__aeabi_f2d
 2192              	.LVL355:
 2193 01c4 4246     		mov	r2, r8
 2194 01c6 4B46     		mov	r3, r9
 2195 01c8 FFF7FEFF 		bl	pow
ARM GAS  /tmp/cckOLbKl.s 			page 51


 2196              	.LVL356:
 2197 01cc CDE91601 		strd	r0, [sp, #88]
 2198 01d0 4246     		mov	r2, r8
 2199 01d2 4B46     		mov	r3, r9
 2200 01d4 DDE91401 		ldrd	r0, [sp, #80]
 2201 01d8 FFF7FEFF 		bl	pow
 2202              	.LVL357:
 2203 01dc 0246     		mov	r2, r0
 2204 01de 0B46     		mov	r3, r1
 2205 01e0 DDE91601 		ldrd	r0, [sp, #88]
 2206 01e4 FFF7FEFF 		bl	__aeabi_dsub
 2207              	.LVL358:
 2208 01e8 0022     		movs	r2, #0
 2209 01ea 454B     		ldr	r3, .L141+12
 2210 01ec FFF7FEFF 		bl	__aeabi_dmul
 2211              	.LVL359:
 2212 01f0 8046     		mov	r8, r0
 2213 01f2 8946     		mov	r9, r1
 2214 01f4 1898     		ldr	r0, [sp, #96]	@ float
 2215 01f6 FFF7FEFF 		bl	__aeabi_f2d
 2216              	.LVL360:
 2217 01fa 0246     		mov	r2, r0
 2218 01fc 0B46     		mov	r3, r1
 2219 01fe 4046     		mov	r0, r8
 2220 0200 4946     		mov	r1, r9
 2221 0202 FFF7FEFF 		bl	__aeabi_ddiv
 2222              	.LVL361:
 2223 0206 FFF7FEFF 		bl	__aeabi_d2f
 2224              	.LVL362:
 2225 020a 8046     		mov	r8, r0
 2226 020c 1990     		str	r0, [sp, #100]	@ float
 2227              	.LVL363:
 204:Src/Gcode/Buffer_Gcode.c ****     if( LnMiddle < 0 )
 2228              		.loc 1 204 0
 2229 020e 1299     		ldr	r1, [sp, #72]	@ float
 2230 0210 3846     		mov	r0, r7
 2231              	.LVL364:
 2232 0212 FFF7FEFF 		bl	__aeabi_fsub
 2233              	.LVL365:
 2234 0216 4146     		mov	r1, r8
 2235 0218 FFF7FEFF 		bl	__aeabi_fsub
 2236              	.LVL366:
 2237 021c 1A90     		str	r0, [sp, #104]	@ float
 2238              	.LVL367:
 205:Src/Gcode/Buffer_Gcode.c ****     {
 2239              		.loc 1 205 0
 2240 021e 0021     		movs	r1, #0
 2241 0220 FFF7FEFF 		bl	__aeabi_fcmplt
 2242              	.LVL368:
 2243 0224 0028     		cmp	r0, #0
 2244 0226 40F07B81 		bne	.L140
 232:Src/Gcode/Buffer_Gcode.c ****     float vX1 = speedStart*cosX;            float vY1 = speedStart*cosY;            float vE1 = spe
 2245              		.loc 1 232 0
 2246 022a 129D     		ldr	r5, [sp, #72]	@ float
 2247              	.LVL369:
 2248 022c 2946     		mov	r1, r5
 2249 022e DDF84080 		ldr	r8, [sp, #64]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 52


 2250              	.LVL370:
 2251 0232 4046     		mov	r0, r8
 2252 0234 FFF7FEFF 		bl	__aeabi_fmul
 2253              	.LVL371:
 2254 0238 FFF7FEFF 		bl	lroundf
 2255              	.LVL372:
 2256 023c 1290     		str	r0, [sp, #72]
 2257              	.LVL373:
 2258 023e 2946     		mov	r1, r5
 2259 0240 0E9F     		ldr	r7, [sp, #56]	@ float
 2260              	.LVL374:
 2261 0242 3846     		mov	r0, r7
 2262              	.LVL375:
 2263 0244 FFF7FEFF 		bl	__aeabi_fmul
 2264              	.LVL376:
 2265 0248 FFF7FEFF 		bl	lroundf
 2266              	.LVL377:
 2267 024c 1490     		str	r0, [sp, #80]
 2268              	.LVL378:
 2269 024e 2946     		mov	r1, r5
 2270 0250 0D9D     		ldr	r5, [sp, #52]	@ float
 2271 0252 2846     		mov	r0, r5
 2272              	.LVL379:
 2273 0254 FFF7FEFF 		bl	__aeabi_fmul
 2274              	.LVL380:
 2275 0258 FFF7FEFF 		bl	lroundf
 2276              	.LVL381:
 2277 025c 1690     		str	r0, [sp, #88]
 2278              	.LVL382:
 233:Src/Gcode/Buffer_Gcode.c ****     float aX1 = accelerationStart*cosX;     float aY1 = accelerationStart*cosY;     float aE1 = acc
 2279              		.loc 1 233 0
 2280 025e CDF84080 		str	r8, [sp, #64]	@ float
 2281              	.LVL383:
 2282 0262 4146     		mov	r1, r8
 2283 0264 2046     		mov	r0, r4
 2284              	.LVL384:
 2285 0266 FFF7FEFF 		bl	__aeabi_fmul
 2286              	.LVL385:
 2287 026a 8046     		mov	r8, r0
 2288              	.LVL386:
 2289 026c 0E97     		str	r7, [sp, #56]	@ float
 2290              	.LVL387:
 2291 026e 3946     		mov	r1, r7
 2292 0270 2046     		mov	r0, r4
 2293              	.LVL388:
 2294 0272 FFF7FEFF 		bl	__aeabi_fmul
 2295              	.LVL389:
 2296 0276 0746     		mov	r7, r0
 2297              	.LVL390:
 2298 0278 0D95     		str	r5, [sp, #52]	@ float
 2299              	.LVL391:
 2300 027a 2946     		mov	r1, r5
 2301 027c 2046     		mov	r0, r4
 2302              	.LVL392:
 2303 027e FFF7FEFF 		bl	__aeabi_fmul
 2304              	.LVL393:
 2305 0282 8146     		mov	r9, r0
ARM GAS  /tmp/cckOLbKl.s 			page 53


 2306              	.LVL394:
 234:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1, 0, aE1
 2307              		.loc 1 234 0
 2308 0284 119C     		ldr	r4, [sp, #68]	@ float
 2309              	.LVL395:
 2310 0286 2146     		mov	r1, r4
 2311 0288 1098     		ldr	r0, [sp, #64]	@ float
 2312              	.LVL396:
 2313 028a FFF7FEFF 		bl	__aeabi_fmul
 2314              	.LVL397:
 2315 028e 0546     		mov	r5, r0
 2316              	.LVL398:
 2317 0290 1194     		str	r4, [sp, #68]	@ float
 2318              	.LVL399:
 2319 0292 2146     		mov	r1, r4
 2320 0294 0E98     		ldr	r0, [sp, #56]	@ float
 2321              	.LVL400:
 2322 0296 FFF7FEFF 		bl	__aeabi_fmul
 2323              	.LVL401:
 2324 029a 0446     		mov	r4, r0
 2325              	.LVL402:
 2326 029c 1199     		ldr	r1, [sp, #68]	@ float
 2327 029e 0D98     		ldr	r0, [sp, #52]	@ float
 2328              	.LVL403:
 2329 02a0 FFF7FEFF 		bl	__aeabi_fmul
 2330              	.LVL404:
 235:Src/Gcode/Buffer_Gcode.c ****     long x2 = lroundf(LnMiddle*cosX);       long y2 = lroundf(LnMiddle*cosY);       long e2 = lroun
 2331              		.loc 1 235 0
 2332 02a4 0123     		movs	r3, #1
 2333 02a6 8DF80C34 		strb	r3, [sp, #1036]
 2334 02aa 129A     		ldr	r2, [sp, #72]
 2335 02ac CDF81024 		str	r2, [sp, #1040]
 2336 02b0 1499     		ldr	r1, [sp, #80]
 2337 02b2 CDF81414 		str	r1, [sp, #1044]
 2338 02b6 0023     		movs	r3, #0
 2339 02b8 CDF81834 		str	r3, [sp, #1048]
 2340 02bc 169B     		ldr	r3, [sp, #88]
 2341 02be CDF81C34 		str	r3, [sp, #1052]
 2342 02c2 CDF82084 		str	r8, [sp, #1056]	@ float
 2343 02c6 CDF82474 		str	r7, [sp, #1060]	@ float
 2344 02ca 0023     		movs	r3, #0
 2345 02cc CDF82834 		str	r3, [sp, #1064]	@ float
 2346 02d0 CDF82C94 		str	r9, [sp, #1068]	@ float
 2347 02d4 CDF83054 		str	r5, [sp, #1072]	@ float
 2348 02d8 CDF83444 		str	r4, [sp, #1076]	@ float
 2349 02dc CDF83834 		str	r3, [sp, #1080]	@ float
 2350 02e0 CDF83C04 		str	r0, [sp, #1084]	@ float
 2351 02e4 CDF84034 		str	r3, [sp, #1088]	@ float
 2352 02e8 CDF84434 		str	r3, [sp, #1092]	@ float
 2353 02ec 52B9     		cbnz	r2, .L127
 235:Src/Gcode/Buffer_Gcode.c ****     long x2 = lroundf(LnMiddle*cosX);       long y2 = lroundf(LnMiddle*cosY);       long e2 = lroun
 2354              		.loc 1 235 0 is_stmt 0 discriminator 2
 2355 02ee C9B1     		cbz	r1, .L128
 2356 02f0 08E0     		b	.L142
 2357              	.L143:
 2358 02f2 00BF     		.align	2
 2359              	.L141:
ARM GAS  /tmp/cckOLbKl.s 			page 54


 2360 02f4 ABAAA645 		.word	1168550571
 2361 02f8 ABAA2646 		.word	1176939179
 2362 02fc ABAAA644 		.word	1151773355
 2363 0300 0000E03F 		.word	1071644672
 2364              	.L142:
 2365              	.L127:
 235:Src/Gcode/Buffer_Gcode.c ****     long x2 = lroundf(LnMiddle*cosX);       long y2 = lroundf(LnMiddle*cosY);       long e2 = lroun
 2366              		.loc 1 235 0 discriminator 3
 2367 0304 6C46     		mov	r4, sp
 2368              	.LVL405:
 2369 0306 0DF21C45 		addw	r5, sp, #1052
 2370              	.LVL406:
 2371 030a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2372              	.LVL407:
 2373 030c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2374 030e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2375 0310 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2376 0312 95E80700 		ldm	r5, {r0, r1, r2}
 2377 0316 84E80700 		stm	r4, {r0, r1, r2}
 2378 031a 0DF20C43 		addw	r3, sp, #1036
 2379 031e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2380 0320 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 2381              	.LVL408:
 2382              	.L128:
 236:Src/Gcode/Buffer_Gcode.c ****     float vX2 = speedTarget*cosX;           float vY2 = speedTarget*cosY;           float vE2 = spe
 2383              		.loc 1 236 0 is_stmt 1
 2384 0324 1A9F     		ldr	r7, [sp, #104]	@ float
 2385              	.LVL409:
 2386 0326 3946     		mov	r1, r7
 2387 0328 1098     		ldr	r0, [sp, #64]	@ float
 2388 032a FFF7FEFF 		bl	__aeabi_fmul
 2389              	.LVL410:
 2390 032e FFF7FEFF 		bl	lroundf
 2391              	.LVL411:
 2392 0332 0446     		mov	r4, r0
 2393              	.LVL412:
 2394 0334 3946     		mov	r1, r7
 2395 0336 0E98     		ldr	r0, [sp, #56]	@ float
 2396              	.LVL413:
 2397 0338 FFF7FEFF 		bl	__aeabi_fmul
 2398              	.LVL414:
 2399 033c FFF7FEFF 		bl	lroundf
 2400              	.LVL415:
 2401 0340 0546     		mov	r5, r0
 2402              	.LVL416:
 2403 0342 3946     		mov	r1, r7
 2404 0344 0D98     		ldr	r0, [sp, #52]	@ float
 2405              	.LVL417:
 2406 0346 FFF7FEFF 		bl	__aeabi_fmul
 2407              	.LVL418:
 2408 034a FFF7FEFF 		bl	lroundf
 2409              	.LVL419:
 2410 034e 0746     		mov	r7, r0
 2411              	.LVL420:
 2412 0350 1998     		ldr	r0, [sp, #100]	@ float
 2413              	.LVL421:
 2414 0352 FFF7FEFF 		bl	lroundf
ARM GAS  /tmp/cckOLbKl.s 			page 55


 2415              	.LVL422:
 2416 0356 40B9     		cbnz	r0, .L129
 236:Src/Gcode/Buffer_Gcode.c ****     float vX2 = speedTarget*cosX;           float vY2 = speedTarget*cosY;           float vE2 = spe
 2417              		.loc 1 236 0 is_stmt 0 discriminator 1
 2418 0358 129B     		ldr	r3, [sp, #72]
 2419 035a AAEB0304 		sub	r4, r10, r3
 2420              	.LVL423:
 2421 035e 0F9B     		ldr	r3, [sp, #60]
 2422 0360 149A     		ldr	r2, [sp, #80]
 2423 0362 9D1A     		subs	r5, r3, r2
 2424              	.LVL424:
 2425 0364 169B     		ldr	r3, [sp, #88]
 2426 0366 ABEB0307 		sub	r7, fp, r3
 2427              	.LVL425:
 2428              	.L129:
 237:Src/Gcode/Buffer_Gcode.c ****     float aX2 = 0;                          float aY2 = 0;                          float aE2 = 0;
 2429              		.loc 1 237 0 is_stmt 1
 2430 036a 1099     		ldr	r1, [sp, #64]	@ float
 2431 036c 3046     		mov	r0, r6
 2432 036e FFF7FEFF 		bl	__aeabi_fmul
 2433              	.LVL426:
 2434 0372 1190     		str	r0, [sp, #68]	@ float
 2435              	.LVL427:
 2436 0374 0E99     		ldr	r1, [sp, #56]	@ float
 2437 0376 3046     		mov	r0, r6
 2438              	.LVL428:
 2439 0378 FFF7FEFF 		bl	__aeabi_fmul
 2440              	.LVL429:
 2441 037c 1990     		str	r0, [sp, #100]	@ float
 2442              	.LVL430:
 2443 037e 0D99     		ldr	r1, [sp, #52]	@ float
 2444 0380 3046     		mov	r0, r6
 2445              	.LVL431:
 2446 0382 FFF7FEFF 		bl	__aeabi_fmul
 2447              	.LVL432:
 239:Src/Gcode/Buffer_Gcode.c ****     long x3 = Xn - x1 - x2;                 long y3 = Yn - y2 - y1;                 long e3 = En - 
 2448              		.loc 1 239 0
 2449 0386 4FF00109 		mov	r9, #1
 2450              	.LVL433:
 2451 038a 8DF8D093 		strb	r9, [sp, #976]
 2452 038e F594     		str	r4, [sp, #980]
 2453 0390 F695     		str	r5, [sp, #984]
 2454 0392 4FF00008 		mov	r8, #0
 2455              	.LVL434:
 2456 0396 CDF8DC83 		str	r8, [sp, #988]
 2457 039a F897     		str	r7, [sp, #992]
 2458 039c 119B     		ldr	r3, [sp, #68]	@ float
 2459 039e F993     		str	r3, [sp, #996]	@ float
 2460 03a0 199A     		ldr	r2, [sp, #100]	@ float
 2461 03a2 FA92     		str	r2, [sp, #1000]	@ float
 2462 03a4 0026     		movs	r6, #0
 2463              	.LVL435:
 2464 03a6 FB96     		str	r6, [sp, #1004]	@ float
 2465 03a8 1A90     		str	r0, [sp, #104]	@ float
 2466              	.LVL436:
 2467 03aa FC90     		str	r0, [sp, #1008]	@ float
 2468 03ac FD96     		str	r6, [sp, #1012]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 56


 2469 03ae FE96     		str	r6, [sp, #1016]	@ float
 2470 03b0 FF96     		str	r6, [sp, #1020]	@ float
 2471 03b2 CDF80064 		str	r6, [sp, #1024]	@ float
 2472 03b6 CDF80464 		str	r6, [sp, #1028]	@ float
 2473 03ba CDF80864 		str	r6, [sp, #1032]	@ float
 2474 03be EC46     		mov	ip, sp
 2475 03c0 0DF5787E 		add	lr, sp, #992
 2476 03c4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2477              	.LVL437:
 2478 03c8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2479 03cc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2480 03d0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2481 03d4 9EE80700 		ldm	lr, {r0, r1, r2}
 2482 03d8 8CE80700 		stm	ip, {r0, r1, r2}
 2483 03dc F4AB     		add	r3, sp, #976
 2484 03de 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2485 03e0 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 2486              	.LVL438:
 240:Src/Gcode/Buffer_Gcode.c ****     float vX3 = speedTarget*cosX;           float vY3 = speedTarget*cosY;           float vE3 = spe
 2487              		.loc 1 240 0
 2488 03e4 129B     		ldr	r3, [sp, #72]
 2489 03e6 AAEB030A 		sub	r10, r10, r3
 2490              	.LVL439:
 2491 03ea AAEB0404 		sub	r4, r10, r4
 2492              	.LVL440:
 2493 03ee 0F9B     		ldr	r3, [sp, #60]
 2494 03f0 5D1B     		subs	r5, r3, r5
 2495              	.LVL441:
 2496 03f2 149B     		ldr	r3, [sp, #80]
 2497 03f4 ED1A     		subs	r5, r5, r3
 2498              	.LVL442:
 2499 03f6 ABEB0707 		sub	r7, fp, r7
 2500              	.LVL443:
 2501 03fa 169B     		ldr	r3, [sp, #88]
 2502 03fc FF1A     		subs	r7, r7, r3
 2503              	.LVL444:
 242:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command3 = {MOVE_COMMAND, x3, y3, 0, e3,    vX3, vY3, 0, vE3,    aX3, aY3, 0, aE3
 2504              		.loc 1 242 0
 2505 03fe DDF860A0 		ldr	r10, [sp, #96]	@ float
 2506 0402 5146     		mov	r1, r10
 2507 0404 1098     		ldr	r0, [sp, #64]	@ float
 2508 0406 FFF7FEFF 		bl	__aeabi_fmul
 2509              	.LVL445:
 2510 040a 8346     		mov	fp, r0
 2511              	.LVL446:
 2512 040c CDF860A0 		str	r10, [sp, #96]	@ float
 2513              	.LVL447:
 2514 0410 5146     		mov	r1, r10
 2515 0412 0E98     		ldr	r0, [sp, #56]	@ float
 2516              	.LVL448:
 2517 0414 FFF7FEFF 		bl	__aeabi_fmul
 2518              	.LVL449:
 2519 0418 8246     		mov	r10, r0
 2520              	.LVL450:
 2521 041a 1899     		ldr	r1, [sp, #96]	@ float
 2522 041c 0D98     		ldr	r0, [sp, #52]	@ float
 2523              	.LVL451:
ARM GAS  /tmp/cckOLbKl.s 			page 57


 2524 041e FFF7FEFF 		bl	__aeabi_fmul
 2525              	.LVL452:
 243:Src/Gcode/Buffer_Gcode.c **** }
 2526              		.loc 1 243 0
 2527 0422 8DF89493 		strb	r9, [sp, #916]
 2528 0426 E694     		str	r4, [sp, #920]
 2529 0428 E795     		str	r5, [sp, #924]
 2530 042a CDF8A083 		str	r8, [sp, #928]
 2531 042e E997     		str	r7, [sp, #932]
 2532 0430 119B     		ldr	r3, [sp, #68]	@ float
 2533 0432 EA93     		str	r3, [sp, #936]	@ float
 2534 0434 199A     		ldr	r2, [sp, #100]	@ float
 2535 0436 EB92     		str	r2, [sp, #940]	@ float
 2536 0438 EC96     		str	r6, [sp, #944]	@ float
 2537 043a 1A99     		ldr	r1, [sp, #104]	@ float
 2538 043c ED91     		str	r1, [sp, #948]	@ float
 2539 043e CDF8B8B3 		str	fp, [sp, #952]	@ float
 2540 0442 CDF8BCA3 		str	r10, [sp, #956]	@ float
 2541 0446 F096     		str	r6, [sp, #960]	@ float
 2542 0448 F190     		str	r0, [sp, #964]	@ float
 2543 044a F296     		str	r6, [sp, #968]	@ float
 2544 044c F396     		str	r6, [sp, #972]	@ float
 2545 044e 04B9     		cbnz	r4, .L130
 243:Src/Gcode/Buffer_Gcode.c **** }
 2546              		.loc 1 243 0 is_stmt 0 discriminator 2
 2547 0450 6DB1     		cbz	r5, .L115
 2548              	.L130:
 243:Src/Gcode/Buffer_Gcode.c **** }
 2549              		.loc 1 243 0 discriminator 3
 2550 0452 6C46     		mov	r4, sp
 2551              	.LVL453:
 2552 0454 E9AD     		add	r5, sp, #932
 2553              	.LVL454:
 2554 0456 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2555              	.LVL455:
 2556 0458 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2557 045a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2558 045c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2559 045e 95E80700 		ldm	r5, {r0, r1, r2}
 2560 0462 84E80700 		stm	r4, {r0, r1, r2}
 2561 0466 E5AB     		add	r3, sp, #916
 2562 0468 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2563 046a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 2564              	.LVL456:
 2565              	.L115:
 244:Src/Gcode/Buffer_Gcode.c **** 
 2566              		.loc 1 244 0 is_stmt 1
 2567 046e 0DF24C4D 		addw	sp, sp, #1100
 2568              	.LCFI34:
 2569              		.cfi_remember_state
 2570              		.cfi_def_cfa_offset 36
 2571              		@ sp needed
 2572 0472 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2573              	.LVL457:
 2574              	.L139:
 2575              	.LCFI35:
 2576              		.cfi_restore_state
ARM GAS  /tmp/cckOLbKl.s 			page 58


 198:Src/Gcode/Buffer_Gcode.c ****     float speedFinish = 0;                                              if ( conserveSpeedFinish(Xn
 2577              		.loc 1 198 0 discriminator 1
 2578 0476 8BA8     		add	r0, sp, #556
 2579 0478 FFF7FEFF 		bl	lastCommand
 2580              	.LVL458:
 2581 047c 8C9C     		ldr	r4, [sp, #560]
 2582 047e 6400     		lsls	r4, r4, #1
 2583 0480 9AA8     		add	r0, sp, #616
 2584 0482 FFF7FEFF 		bl	lastCommand
 2585              	.LVL459:
 2586 0486 A39D     		ldr	r5, [sp, #652]	@ float
 2587 0488 2046     		mov	r0, r4
 2588 048a FFF7FEFF 		bl	__aeabi_i2f
 2589              	.LVL460:
 2590 048e 2946     		mov	r1, r5
 2591 0490 FFF7FEFF 		bl	__aeabi_fmul
 2592              	.LVL461:
 2593 0494 0546     		mov	r5, r0
 2594 0496 A9A8     		add	r0, sp, #676
 2595 0498 FFF7FEFF 		bl	lastCommand
 2596              	.LVL462:
 2597 049c AB9C     		ldr	r4, [sp, #684]
 2598 049e 6400     		lsls	r4, r4, #1
 2599 04a0 B8A8     		add	r0, sp, #736
 2600 04a2 FFF7FEFF 		bl	lastCommand
 2601              	.LVL463:
 2602 04a6 DDF80883 		ldr	r8, [sp, #776]	@ float
 2603 04aa 2046     		mov	r0, r4
 2604 04ac FFF7FEFF 		bl	__aeabi_i2f
 2605              	.LVL464:
 2606 04b0 4146     		mov	r1, r8
 2607 04b2 FFF7FEFF 		bl	__aeabi_fmul
 2608              	.LVL465:
 2609 04b6 0146     		mov	r1, r0
 2610 04b8 2846     		mov	r0, r5
 2611 04ba FFF7FEFF 		bl	__aeabi_fadd
 2612              	.LVL466:
 2613 04be FFF7FEFF 		bl	__aeabi_f2d
 2614              	.LVL467:
 2615 04c2 8046     		mov	r8, r0
 2616 04c4 8946     		mov	r9, r1
 2617 04c6 C7A8     		add	r0, sp, #796
 2618 04c8 FFF7FEFF 		bl	lastCommand
 2619              	.LVL468:
 2620 04cc 0024     		movs	r4, #0
 2621 04ce 4FF08045 		mov	r5, #1073741824
 2622 04d2 CC98     		ldr	r0, [sp, #816]	@ float
 2623 04d4 FFF7FEFF 		bl	__aeabi_f2d
 2624              	.LVL469:
 2625 04d8 2246     		mov	r2, r4
 2626 04da 2B46     		mov	r3, r5
 2627 04dc FFF7FEFF 		bl	pow
 2628              	.LVL470:
 2629 04e0 0246     		mov	r2, r0
 2630 04e2 0B46     		mov	r3, r1
 2631 04e4 4046     		mov	r0, r8
 2632 04e6 4946     		mov	r1, r9
ARM GAS  /tmp/cckOLbKl.s 			page 59


 2633 04e8 FFF7FEFF 		bl	__aeabi_dadd
 2634              	.LVL471:
 2635 04ec 8046     		mov	r8, r0
 2636 04ee 8946     		mov	r9, r1
 2637 04f0 D6A8     		add	r0, sp, #856
 2638 04f2 FFF7FEFF 		bl	lastCommand
 2639              	.LVL472:
 2640 04f6 DC98     		ldr	r0, [sp, #880]	@ float
 2641 04f8 FFF7FEFF 		bl	__aeabi_f2d
 2642              	.LVL473:
 2643 04fc 2246     		mov	r2, r4
 2644 04fe 2B46     		mov	r3, r5
 2645 0500 FFF7FEFF 		bl	pow
 2646              	.LVL474:
 2647 0504 0246     		mov	r2, r0
 2648 0506 0B46     		mov	r3, r1
 2649 0508 4046     		mov	r0, r8
 2650 050a 4946     		mov	r1, r9
 2651 050c FFF7FEFF 		bl	__aeabi_dadd
 2652              	.LVL475:
 2653 0510 FFF7FEFF 		bl	__aeabi_d2f
 2654              	.LVL476:
 2655 0514 FFF7FEFF 		bl	sqrtf
 2656              	.LVL477:
 2657 0518 0446     		mov	r4, r0
 2658              	.LVL478:
 2659 051a 01E6     		b	.L119
 2660              	.LVL479:
 2661              	.L134:
 199:Src/Gcode/Buffer_Gcode.c ****     float accelerationStart = ACCELERATION_XY_STEPS_PER_SS*sign(speedTarget-speedStart);
 2662              		.loc 1 199 0
 2663 051c 3546     		mov	r5, r6
 2664 051e 08E6     		b	.L120
 2665              	.LVL480:
 2666              	.L140:
 2667              	.LBB3:
 207:Src/Gcode/Buffer_Gcode.c ****         {
 2668              		.loc 1 207 0
 2669 0520 0022     		movs	r2, #0
 2670 0522 DDF83C90 		ldr	r9, [sp, #60]
 2671 0526 4946     		mov	r1, r9
 2672 0528 5046     		mov	r0, r10
 2673 052a FFF7FEFF 		bl	conserveSpeedFinish
 2674              	.LVL481:
 2675 052e 0028     		cmp	r0, #0
 2676 0530 51D0     		beq	.L123
 2677              	.LVL482:
 2678              	.LBB4:
 210:Src/Gcode/Buffer_Gcode.c ****             float aX1 = accelerationStart*cosX;     float aY1 = accelerationStart*cosY;     float a
 2679              		.loc 1 210 0
 2680 0532 109D     		ldr	r5, [sp, #64]	@ float
 2681              	.LVL483:
 2682 0534 2946     		mov	r1, r5
 2683 0536 2046     		mov	r0, r4
 2684 0538 FFF7FEFF 		bl	__aeabi_fmul
 2685              	.LVL484:
 2686 053c 0746     		mov	r7, r0
ARM GAS  /tmp/cckOLbKl.s 			page 60


 2687              	.LVL485:
 2688 053e 0E99     		ldr	r1, [sp, #56]	@ float
 2689 0540 2046     		mov	r0, r4
 2690              	.LVL486:
 2691 0542 FFF7FEFF 		bl	__aeabi_fmul
 2692              	.LVL487:
 2693 0546 0646     		mov	r6, r0
 2694              	.LVL488:
 2695 0548 0D99     		ldr	r1, [sp, #52]	@ float
 2696 054a 2046     		mov	r0, r4
 2697              	.LVL489:
 2698 054c FFF7FEFF 		bl	__aeabi_fmul
 2699              	.LVL490:
 2700 0550 8046     		mov	r8, r0
 2701              	.LVL491:
 211:Src/Gcode/Buffer_Gcode.c ****             command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1
 2702              		.loc 1 211 0
 2703 0552 119C     		ldr	r4, [sp, #68]	@ float
 2704              	.LVL492:
 2705 0554 2146     		mov	r1, r4
 2706 0556 2846     		mov	r0, r5
 2707              	.LVL493:
 2708 0558 FFF7FEFF 		bl	__aeabi_fmul
 2709              	.LVL494:
 2710 055c 0546     		mov	r5, r0
 2711              	.LVL495:
 2712 055e 1194     		str	r4, [sp, #68]	@ float
 2713              	.LVL496:
 2714 0560 2146     		mov	r1, r4
 2715 0562 0E98     		ldr	r0, [sp, #56]	@ float
 2716              	.LVL497:
 2717 0564 FFF7FEFF 		bl	__aeabi_fmul
 2718              	.LVL498:
 2719 0568 0446     		mov	r4, r0
 2720              	.LVL499:
 2721 056a 1199     		ldr	r1, [sp, #68]	@ float
 2722 056c 0D98     		ldr	r0, [sp, #52]	@ float
 2723              	.LVL500:
 2724 056e FFF7FEFF 		bl	__aeabi_fmul
 2725              	.LVL501:
 212:Src/Gcode/Buffer_Gcode.c ****         }
 2726              		.loc 1 212 0
 2727 0572 0DF5F87C 		add	ip, sp, #496
 2728 0576 0123     		movs	r3, #1
 2729 0578 8CF80030 		strb	r3, [ip]
 2730 057c CCF804A0 		str	r10, [ip, #4]
 2731 0580 CCF80890 		str	r9, [ip, #8]
 2732 0584 0023     		movs	r3, #0
 2733 0586 CCF80C30 		str	r3, [ip, #12]
 2734 058a CCF810B0 		str	fp, [ip, #16]
 2735 058e CCF81470 		str	r7, [ip, #20]	@ float
 2736 0592 CCF81860 		str	r6, [ip, #24]	@ float
 2737 0596 0023     		movs	r3, #0
 2738 0598 CCF81C30 		str	r3, [ip, #28]	@ float
 2739 059c CCF82080 		str	r8, [ip, #32]	@ float
 2740 05a0 CCF82450 		str	r5, [ip, #36]	@ float
 2741 05a4 CCF82840 		str	r4, [ip, #40]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 61


 2742 05a8 CCF82C30 		str	r3, [ip, #44]	@ float
 2743 05ac CCF83000 		str	r0, [ip, #48]	@ float
 2744 05b0 CCF83430 		str	r3, [ip, #52]	@ float
 2745 05b4 CCF83830 		str	r3, [ip, #56]	@ float
 2746 05b8 6C46     		mov	r4, sp
 2747              	.LVL502:
 2748 05ba 80AD     		add	r5, sp, #512
 2749              	.LVL503:
 2750 05bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2751              	.LVL504:
 2752 05be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2753 05c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2754 05c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2755 05c4 95E80700 		ldm	r5, {r0, r1, r2}
 2756 05c8 84E80700 		stm	r4, {r0, r1, r2}
 2757 05cc 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 2758 05d0 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 2759              	.LVL505:
 2760 05d4 4BE7     		b	.L115
 2761              	.LVL506:
 2762              	.L123:
 2763              	.LBE4:
 214:Src/Gcode/Buffer_Gcode.c ****         {
 2764              		.loc 1 214 0
 2765 05d6 0022     		movs	r2, #0
 2766 05d8 DDF83C90 		ldr	r9, [sp, #60]
 2767 05dc 4946     		mov	r1, r9
 2768 05de 5046     		mov	r0, r10
 2769 05e0 FFF7FEFF 		bl	conserveSpeedStart
 2770              	.LVL507:
 2771 05e4 0028     		cmp	r0, #0
 2772 05e6 51D0     		beq	.L125
 2773              	.LVL508:
 2774              	.LBB5:
 217:Src/Gcode/Buffer_Gcode.c ****             float aX1 = accelerationFinish*cosX;    float aY1 = accelerationFinish*cosY;    float a
 2775              		.loc 1 217 0
 2776 05e8 109D     		ldr	r5, [sp, #64]	@ float
 2777              	.LVL509:
 2778 05ea 2946     		mov	r1, r5
 2779 05ec 2046     		mov	r0, r4
 2780 05ee FFF7FEFF 		bl	__aeabi_fmul
 2781              	.LVL510:
 2782 05f2 0746     		mov	r7, r0
 2783              	.LVL511:
 2784 05f4 0E99     		ldr	r1, [sp, #56]	@ float
 2785 05f6 2046     		mov	r0, r4
 2786              	.LVL512:
 2787 05f8 FFF7FEFF 		bl	__aeabi_fmul
 2788              	.LVL513:
 2789 05fc 0646     		mov	r6, r0
 2790              	.LVL514:
 2791 05fe 0D99     		ldr	r1, [sp, #52]	@ float
 2792 0600 2046     		mov	r0, r4
 2793              	.LVL515:
 2794 0602 FFF7FEFF 		bl	__aeabi_fmul
 2795              	.LVL516:
 2796 0606 8046     		mov	r8, r0
ARM GAS  /tmp/cckOLbKl.s 			page 62


 2797              	.LVL517:
 218:Src/Gcode/Buffer_Gcode.c ****             command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1
 2798              		.loc 1 218 0
 2799 0608 189C     		ldr	r4, [sp, #96]	@ float
 2800              	.LVL518:
 2801 060a 2146     		mov	r1, r4
 2802 060c 2846     		mov	r0, r5
 2803              	.LVL519:
 2804 060e FFF7FEFF 		bl	__aeabi_fmul
 2805              	.LVL520:
 2806 0612 0546     		mov	r5, r0
 2807              	.LVL521:
 2808 0614 1894     		str	r4, [sp, #96]	@ float
 2809              	.LVL522:
 2810 0616 2146     		mov	r1, r4
 2811 0618 0E98     		ldr	r0, [sp, #56]	@ float
 2812              	.LVL523:
 2813 061a FFF7FEFF 		bl	__aeabi_fmul
 2814              	.LVL524:
 2815 061e 0446     		mov	r4, r0
 2816              	.LVL525:
 2817 0620 1899     		ldr	r1, [sp, #96]	@ float
 2818 0622 0D98     		ldr	r0, [sp, #52]	@ float
 2819              	.LVL526:
 2820 0624 FFF7FEFF 		bl	__aeabi_fmul
 2821              	.LVL527:
 219:Src/Gcode/Buffer_Gcode.c ****         }
 2822              		.loc 1 219 0
 2823 0628 0DF5F87C 		add	ip, sp, #496
 2824 062c 0123     		movs	r3, #1
 2825 062e 8CF80030 		strb	r3, [ip]
 2826 0632 CCF804A0 		str	r10, [ip, #4]
 2827 0636 CCF80890 		str	r9, [ip, #8]
 2828 063a 0023     		movs	r3, #0
 2829 063c CCF80C30 		str	r3, [ip, #12]
 2830 0640 CCF810B0 		str	fp, [ip, #16]
 2831 0644 CCF81470 		str	r7, [ip, #20]	@ float
 2832 0648 CCF81860 		str	r6, [ip, #24]	@ float
 2833 064c 0023     		movs	r3, #0
 2834 064e CCF81C30 		str	r3, [ip, #28]	@ float
 2835 0652 CCF82080 		str	r8, [ip, #32]	@ float
 2836 0656 CCF82450 		str	r5, [ip, #36]	@ float
 2837 065a CCF82840 		str	r4, [ip, #40]	@ float
 2838 065e CCF82C30 		str	r3, [ip, #44]	@ float
 2839 0662 CCF83000 		str	r0, [ip, #48]	@ float
 2840 0666 CCF83430 		str	r3, [ip, #52]	@ float
 2841 066a CCF83830 		str	r3, [ip, #56]	@ float
 2842 066e 6C46     		mov	r4, sp
 2843              	.LVL528:
 2844 0670 80AD     		add	r5, sp, #512
 2845              	.LVL529:
 2846 0672 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2847              	.LVL530:
 2848 0674 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2849 0676 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2850 0678 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2851 067a 95E80700 		ldm	r5, {r0, r1, r2}
ARM GAS  /tmp/cckOLbKl.s 			page 63


 2852 067e 84E80700 		stm	r4, {r0, r1, r2}
 2853 0682 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 2854 0686 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 2855              	.LVL531:
 2856 068a F0E6     		b	.L115
 2857              	.LVL532:
 2858              	.L125:
 2859              	.LBE5:
 221:Src/Gcode/Buffer_Gcode.c ****         float speed_XY_buffer = speedMaxFastMove(distance_XY, speedStart, speedFinish, acceleration
 2860              		.loc 1 221 0
 2861 068c DDF86080 		ldr	r8, [sp, #96]	@ float
 2862              	.LVL533:
 2863 0690 CDF80080 		str	r8, [sp]	@ float
 2864 0694 DDF84490 		ldr	r9, [sp, #68]	@ float
 2865 0698 4B46     		mov	r3, r9
 2866 069a 2A46     		mov	r2, r5
 2867 069c 2146     		mov	r1, r4
 2868 069e 3846     		mov	r0, r7
 2869 06a0 FFF7FEFF 		bl	distanceStartFastMove
 2870              	.LVL534:
 2871 06a4 0646     		mov	r6, r0
 2872              	.LVL535:
 222:Src/Gcode/Buffer_Gcode.c ****         long x1 = lroundf(distance_XY_buffer*cosX); long y1 = lroundf(distance_XY_buffer*cosY);    
 2873              		.loc 1 222 0
 2874 06a6 CDF86080 		str	r8, [sp, #96]	@ float
 2875              	.LVL536:
 2876 06aa CDF80080 		str	r8, [sp]	@ float
 2877 06ae CDF84490 		str	r9, [sp, #68]	@ float
 2878              	.LVL537:
 2879 06b2 4B46     		mov	r3, r9
 2880 06b4 2A46     		mov	r2, r5
 2881 06b6 2146     		mov	r1, r4
 2882 06b8 3846     		mov	r0, r7
 2883              	.LVL538:
 2884 06ba FFF7FEFF 		bl	speedMaxFastMove
 2885              	.LVL539:
 2886 06be 1690     		str	r0, [sp, #88]	@ float
 2887              	.LVL540:
 223:Src/Gcode/Buffer_Gcode.c ****         float vX1 = speedStart*cosX;                float vY1 = speedStart*cosY;                   
 2888              		.loc 1 223 0
 2889 06c0 3146     		mov	r1, r6
 2890 06c2 DDF84080 		ldr	r8, [sp, #64]	@ float
 2891 06c6 4046     		mov	r0, r8
 2892              	.LVL541:
 2893 06c8 FFF7FEFF 		bl	__aeabi_fmul
 2894              	.LVL542:
 2895 06cc FFF7FEFF 		bl	lroundf
 2896              	.LVL543:
 2897 06d0 1290     		str	r0, [sp, #72]
 2898              	.LVL544:
 2899 06d2 3146     		mov	r1, r6
 2900 06d4 0E9F     		ldr	r7, [sp, #56]	@ float
 2901              	.LVL545:
 2902 06d6 3846     		mov	r0, r7
 2903              	.LVL546:
 2904 06d8 FFF7FEFF 		bl	__aeabi_fmul
 2905              	.LVL547:
ARM GAS  /tmp/cckOLbKl.s 			page 64


 2906 06dc FFF7FEFF 		bl	lroundf
 2907              	.LVL548:
 2908 06e0 1490     		str	r0, [sp, #80]
 2909              	.LVL549:
 2910 06e2 3146     		mov	r1, r6
 2911 06e4 0D9D     		ldr	r5, [sp, #52]	@ float
 2912              	.LVL550:
 2913 06e6 2846     		mov	r0, r5
 2914              	.LVL551:
 2915 06e8 FFF7FEFF 		bl	__aeabi_fmul
 2916              	.LVL552:
 2917 06ec FFF7FEFF 		bl	lroundf
 2918              	.LVL553:
 2919 06f0 8146     		mov	r9, r0
 2920              	.LVL554:
 224:Src/Gcode/Buffer_Gcode.c ****         float aX1 = accelerationStart*cosX;         float aY1 = accelerationStart*cosY;            
 2921              		.loc 1 224 0
 2922 06f2 4146     		mov	r1, r8
 2923 06f4 2046     		mov	r0, r4
 2924              	.LVL555:
 2925 06f6 FFF7FEFF 		bl	__aeabi_fmul
 2926              	.LVL556:
 2927 06fa 1990     		str	r0, [sp, #100]	@ float
 2928              	.LVL557:
 2929 06fc 3E46     		mov	r6, r7
 2930              	.LVL558:
 2931 06fe 3946     		mov	r1, r7
 2932 0700 2046     		mov	r0, r4
 2933              	.LVL559:
 2934 0702 FFF7FEFF 		bl	__aeabi_fmul
 2935              	.LVL560:
 2936 0706 1A90     		str	r0, [sp, #104]	@ float
 2937              	.LVL561:
 2938 0708 2946     		mov	r1, r5
 2939 070a 2046     		mov	r0, r4
 2940              	.LVL562:
 2941 070c FFF7FEFF 		bl	__aeabi_fmul
 2942              	.LVL563:
 2943 0710 1B90     		str	r0, [sp, #108]	@ float
 2944              	.LVL564:
 225:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command1 = {MOVE_COMMAND, x1, y1, 0, e1,    vX1, vY1, 0, vE1,    aX1, aY1, 0,
 2945              		.loc 1 225 0
 2946 0712 119C     		ldr	r4, [sp, #68]	@ float
 2947              	.LVL565:
 2948 0714 2146     		mov	r1, r4
 2949 0716 CDF84080 		str	r8, [sp, #64]	@ float
 2950              	.LVL566:
 2951 071a 4046     		mov	r0, r8
 2952              	.LVL567:
 2953 071c FFF7FEFF 		bl	__aeabi_fmul
 2954              	.LVL568:
 2955 0720 0746     		mov	r7, r0
 2956              	.LVL569:
 2957 0722 2146     		mov	r1, r4
 2958 0724 0E96     		str	r6, [sp, #56]	@ float
 2959              	.LVL570:
 2960 0726 3046     		mov	r0, r6
ARM GAS  /tmp/cckOLbKl.s 			page 65


 2961              	.LVL571:
 2962 0728 FFF7FEFF 		bl	__aeabi_fmul
 2963              	.LVL572:
 2964 072c 0646     		mov	r6, r0
 2965              	.LVL573:
 2966 072e 2146     		mov	r1, r4
 2967 0730 0D95     		str	r5, [sp, #52]	@ float
 2968              	.LVL574:
 2969 0732 2846     		mov	r0, r5
 2970              	.LVL575:
 2971 0734 FFF7FEFF 		bl	__aeabi_fmul
 2972              	.LVL576:
 226:Src/Gcode/Buffer_Gcode.c ****         long x2 = Xn - x1;                          long y2 = Yn - y1;                             
 2973              		.loc 1 226 0
 2974 0738 6DAD     		add	r5, sp, #436
 2975 073a 4FF00108 		mov	r8, #1
 2976 073e 85F80080 		strb	r8, [r5]
 2977 0742 129B     		ldr	r3, [sp, #72]
 2978 0744 6B60     		str	r3, [r5, #4]
 2979 0746 149A     		ldr	r2, [sp, #80]
 2980 0748 AA60     		str	r2, [r5, #8]
 2981 074a 0021     		movs	r1, #0
 2982 074c E960     		str	r1, [r5, #12]
 2983 074e C5F81090 		str	r9, [r5, #16]
 2984 0752 1999     		ldr	r1, [sp, #100]	@ float
 2985 0754 6961     		str	r1, [r5, #20]	@ float
 2986 0756 1A99     		ldr	r1, [sp, #104]	@ float
 2987 0758 A961     		str	r1, [r5, #24]	@ float
 2988 075a 0024     		movs	r4, #0
 2989 075c EC61     		str	r4, [r5, #28]	@ float
 2990 075e 1B99     		ldr	r1, [sp, #108]	@ float
 2991 0760 2962     		str	r1, [r5, #32]	@ float
 2992 0762 6F62     		str	r7, [r5, #36]	@ float
 2993 0764 AE62     		str	r6, [r5, #40]	@ float
 2994 0766 EC62     		str	r4, [r5, #44]	@ float
 2995 0768 2863     		str	r0, [r5, #48]	@ float
 2996 076a 6C63     		str	r4, [r5, #52]	@ float
 2997 076c AC63     		str	r4, [r5, #56]	@ float
 2998 076e 6E46     		mov	r6, sp
 2999              	.LVL577:
 3000 0770 71AF     		add	r7, sp, #452
 3001              	.LVL578:
 3002 0772 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 3003              	.LVL579:
 3004 0774 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3005 0776 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 3006 0778 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3007 077a 97E80700 		ldm	r7, {r0, r1, r2}
 3008 077e 86E80700 		stm	r6, {r0, r1, r2}
 3009 0782 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3010 0786 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3011              	.LVL580:
 227:Src/Gcode/Buffer_Gcode.c ****         float vX2 = speed_XY_buffer*cosX;           float vY2 = speed_XY_buffer*cosY;              
 3012              		.loc 1 227 0
 3013 078a 129B     		ldr	r3, [sp, #72]
 3014 078c AAEB0306 		sub	r6, r10, r3
 3015              	.LVL581:
ARM GAS  /tmp/cckOLbKl.s 			page 66


 3016 0790 0F9B     		ldr	r3, [sp, #60]
 3017 0792 149A     		ldr	r2, [sp, #80]
 3018 0794 9D1A     		subs	r5, r3, r2
 3019              	.LVL582:
 3020 0796 ABEB0907 		sub	r7, fp, r9
 3021              	.LVL583:
 228:Src/Gcode/Buffer_Gcode.c ****         float aX2 = accelerationFinish*cosX;        float aY2 = accelerationFinish*cosY;           
 3022              		.loc 1 228 0
 3023 079a DDF858A0 		ldr	r10, [sp, #88]	@ float
 3024              	.LVL584:
 3025 079e 5146     		mov	r1, r10
 3026 07a0 DDF84090 		ldr	r9, [sp, #64]	@ float
 3027              	.LVL585:
 3028 07a4 4846     		mov	r0, r9
 3029 07a6 FFF7FEFF 		bl	__aeabi_fmul
 3030              	.LVL586:
 3031 07aa 0F90     		str	r0, [sp, #60]	@ float
 3032              	.LVL587:
 3033 07ac 5146     		mov	r1, r10
 3034 07ae 0E98     		ldr	r0, [sp, #56]	@ float
 3035              	.LVL588:
 3036 07b0 FFF7FEFF 		bl	__aeabi_fmul
 3037              	.LVL589:
 3038 07b4 8346     		mov	fp, r0
 3039              	.LVL590:
 3040 07b6 5146     		mov	r1, r10
 3041 07b8 0D98     		ldr	r0, [sp, #52]	@ float
 3042              	.LVL591:
 3043 07ba FFF7FEFF 		bl	__aeabi_fmul
 3044              	.LVL592:
 3045 07be 8246     		mov	r10, r0
 3046              	.LVL593:
 229:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command2 = {MOVE_COMMAND, x2, y2, 0, e2,    vX2, vY2, 0, vE2,    aX2, aY2, 0,
 3047              		.loc 1 229 0
 3048 07c0 1899     		ldr	r1, [sp, #96]	@ float
 3049 07c2 4846     		mov	r0, r9
 3050              	.LVL594:
 3051 07c4 FFF7FEFF 		bl	__aeabi_fmul
 3052              	.LVL595:
 3053 07c8 8146     		mov	r9, r0
 3054              	.LVL596:
 3055 07ca 1899     		ldr	r1, [sp, #96]	@ float
 3056 07cc 0E98     		ldr	r0, [sp, #56]	@ float
 3057              	.LVL597:
 3058 07ce FFF7FEFF 		bl	__aeabi_fmul
 3059              	.LVL598:
 3060 07d2 0E90     		str	r0, [sp, #56]	@ float
 3061              	.LVL599:
 3062 07d4 1899     		ldr	r1, [sp, #96]	@ float
 3063 07d6 0D98     		ldr	r0, [sp, #52]	@ float
 3064              	.LVL600:
 3065 07d8 FFF7FEFF 		bl	__aeabi_fmul
 3066              	.LVL601:
 230:Src/Gcode/Buffer_Gcode.c ****     }
 3067              		.loc 1 230 0
 3068 07dc 0DF5F87C 		add	ip, sp, #496
 3069 07e0 8CF80080 		strb	r8, [ip]
ARM GAS  /tmp/cckOLbKl.s 			page 67


 3070 07e4 CCF80460 		str	r6, [ip, #4]
 3071 07e8 CCF80850 		str	r5, [ip, #8]
 3072 07ec 0023     		movs	r3, #0
 3073 07ee CCF80C30 		str	r3, [ip, #12]
 3074 07f2 CCF81070 		str	r7, [ip, #16]
 3075 07f6 0F9B     		ldr	r3, [sp, #60]	@ float
 3076 07f8 CCF81430 		str	r3, [ip, #20]	@ float
 3077 07fc CCF818B0 		str	fp, [ip, #24]	@ float
 3078 0800 CCF81C40 		str	r4, [ip, #28]	@ float
 3079 0804 CCF820A0 		str	r10, [ip, #32]	@ float
 3080 0808 CCF82490 		str	r9, [ip, #36]	@ float
 3081 080c 0E9B     		ldr	r3, [sp, #56]	@ float
 3082 080e CCF82830 		str	r3, [ip, #40]	@ float
 3083 0812 CCF82C40 		str	r4, [ip, #44]	@ float
 3084 0816 CCF83000 		str	r0, [ip, #48]	@ float
 3085 081a CCF83440 		str	r4, [ip, #52]	@ float
 3086 081e CCF83840 		str	r4, [ip, #56]	@ float
 3087 0822 6C46     		mov	r4, sp
 3088 0824 80AD     		add	r5, sp, #512
 3089              	.LVL602:
 3090 0826 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3091              	.LVL603:
 3092 0828 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3093 082a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3094 082c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3095 082e 95E80700 		ldm	r5, {r0, r1, r2}
 3096 0832 84E80700 		stm	r4, {r0, r1, r2}
 3097 0836 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 3098 083a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3099              	.LVL604:
 3100 083e 16E6     		b	.L115
 3101              	.LBE3:
 3102              		.cfi_endproc
 3103              	.LFE18:
 3105              		.section	.text.MoveE_Analyser,"ax",%progbits
 3106              		.align	1
 3107              		.syntax unified
 3108              		.thumb
 3109              		.thumb_func
 3110              		.fpu softvfp
 3112              	MoveE_Analyser:
 3113              	.LFB19:
 247:Src/Gcode/Buffer_Gcode.c ****     long En = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(1
 3114              		.loc 1 247 0
 3115              		.cfi_startproc
 3116              		@ args = 0, pretend = 0, frame = 224
 3117              		@ frame_needed = 0, uses_anonymous_args = 0
 3118 0000 70B5     		push	{r4, r5, r6, lr}
 3119              	.LCFI36:
 3120              		.cfi_def_cfa_offset 16
 3121              		.cfi_offset 4, -16
 3122              		.cfi_offset 5, -12
 3123              		.cfi_offset 6, -8
 3124              		.cfi_offset 14, -4
 3125 0002 C4B0     		sub	sp, sp, #272
 3126              	.LCFI37:
 3127              		.cfi_def_cfa_offset 288
ARM GAS  /tmp/cckOLbKl.s 			page 68


 248:Src/Gcode/Buffer_Gcode.c ****     float speedTarget = sign(En)*getDescreteCommandBufferElement_Gcode(2).FnE;
 3128              		.loc 1 248 0
 3129 0004 0221     		movs	r1, #2
 3130 0006 0DA8     		add	r0, sp, #52
 3131 0008 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3132              	.LVL605:
 3133 000c 119C     		ldr	r4, [sp, #68]
 3134 000e 0121     		movs	r1, #1
 3135 0010 17A8     		add	r0, sp, #92
 3136 0012 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3137              	.LVL606:
 3138 0016 1B9B     		ldr	r3, [sp, #108]
 3139 0018 E41A     		subs	r4, r4, r3
 3140              	.LVL607:
 249:Src/Gcode/Buffer_Gcode.c ****     if (getDescreteCommandBufferElement_Gcode(2).FnE > MAX_SPEED_E_STEPS_PER_SECOND) speedTarget = 
 3141              		.loc 1 249 0
 3142 001a 2046     		mov	r0, r4
 3143 001c FFF7FEFF 		bl	__aeabi_i2f
 3144              	.LVL608:
 3145 0020 FFF7FEFF 		bl	sign
 3146              	.LVL609:
 3147 0024 FFF7FEFF 		bl	__aeabi_i2f
 3148              	.LVL610:
 3149 0028 0646     		mov	r6, r0
 3150 002a 0221     		movs	r1, #2
 3151 002c 21A8     		add	r0, sp, #132
 3152 002e FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3153              	.LVL611:
 3154 0032 2899     		ldr	r1, [sp, #160]	@ float
 3155 0034 3046     		mov	r0, r6
 3156 0036 FFF7FEFF 		bl	__aeabi_fmul
 3157              	.LVL612:
 3158 003a 0546     		mov	r5, r0
 3159              	.LVL613:
 250:Src/Gcode/Buffer_Gcode.c ****     long e1 = En;
 3160              		.loc 1 250 0
 3161 003c 0221     		movs	r1, #2
 3162 003e 2BA8     		add	r0, sp, #172
 3163              	.LVL614:
 3164 0040 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3165              	.LVL615:
 3166 0044 1249     		ldr	r1, .L149
 3167 0046 3298     		ldr	r0, [sp, #200]	@ float
 3168 0048 FFF7FEFF 		bl	__aeabi_fcmpgt
 3169              	.LVL616:
 3170 004c 20B1     		cbz	r0, .L145
 250:Src/Gcode/Buffer_Gcode.c ****     long e1 = En;
 3171              		.loc 1 250 0 is_stmt 0 discriminator 1
 3172 004e 1049     		ldr	r1, .L149
 3173 0050 3046     		mov	r0, r6
 3174 0052 FFF7FEFF 		bl	__aeabi_fmul
 3175              	.LVL617:
 3176 0056 0546     		mov	r5, r0
 3177              	.LVL618:
 3178              	.L145:
 253:Src/Gcode/Buffer_Gcode.c **** }
 3179              		.loc 1 253 0 is_stmt 1
ARM GAS  /tmp/cckOLbKl.s 			page 69


 3180 0058 35AE     		add	r6, sp, #212
 3181 005a 3C22     		movs	r2, #60
 3182 005c 0021     		movs	r1, #0
 3183 005e 3046     		mov	r0, r6
 3184 0060 FFF7FEFF 		bl	memset
 3185              	.LVL619:
 3186 0064 0123     		movs	r3, #1
 3187 0066 8DF8D430 		strb	r3, [sp, #212]
 3188 006a 3994     		str	r4, [sp, #228]
 3189 006c 3D95     		str	r5, [sp, #244]	@ float
 3190 006e 6C46     		mov	r4, sp
 3191              	.LVL620:
 3192 0070 39AD     		add	r5, sp, #228
 3193              	.LVL621:
 3194 0072 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3195              	.LVL622:
 3196 0074 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3197 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3198              	.LVL623:
 3199 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3200 007a 95E80700 		ldm	r5, {r0, r1, r2}
 3201 007e 84E80700 		stm	r4, {r0, r1, r2}
 3202 0082 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 3203 0086 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3204              	.LVL624:
 254:Src/Gcode/Buffer_Gcode.c **** 
 3205              		.loc 1 254 0
 3206 008a 44B0     		add	sp, sp, #272
 3207              	.LCFI38:
 3208              		.cfi_def_cfa_offset 16
 3209              		@ sp needed
 3210 008c 70BD     		pop	{r4, r5, r6, pc}
 3211              	.LVL625:
 3212              	.L150:
 3213 008e 00BF     		.align	2
 3214              	.L149:
 3215 0090 ABAA2646 		.word	1176939179
 3216              		.cfi_endproc
 3217              	.LFE19:
 3219              		.section	.text.HomeX_Analyser,"ax",%progbits
 3220              		.align	1
 3221              		.syntax unified
 3222              		.thumb
 3223              		.thumb_func
 3224              		.fpu softvfp
 3226              	HomeX_Analyser:
 3227              	.LFB21:
 305:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn;
 3228              		.loc 1 305 0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 520
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
 3232 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3233              	.LCFI39:
 3234              		.cfi_def_cfa_offset 36
 3235              		.cfi_offset 4, -36
 3236              		.cfi_offset 5, -32
ARM GAS  /tmp/cckOLbKl.s 			page 70


 3237              		.cfi_offset 6, -28
 3238              		.cfi_offset 7, -24
 3239              		.cfi_offset 8, -20
 3240              		.cfi_offset 9, -16
 3241              		.cfi_offset 10, -12
 3242              		.cfi_offset 11, -8
 3243              		.cfi_offset 14, -4
 3244 0004 ADF50F7D 		sub	sp, sp, #572
 3245              	.LCFI40:
 3246              		.cfi_def_cfa_offset 608
 306:Src/Gcode/Buffer_Gcode.c ****     long x; float v; float a;
 3247              		.loc 1 306 0
 3248 0008 0221     		movs	r1, #2
 3249 000a 0CA8     		add	r0, sp, #48
 3250 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3251              	.LVL626:
 3252 0010 0D9F     		ldr	r7, [sp, #52]
 3253              	.LVL627:
 312:Src/Gcode/Buffer_Gcode.c ****     x = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 3254              		.loc 1 312 0
 3255 0012 4FF00309 		mov	r9, #3
 3256 0016 8DF8FC91 		strb	r9, [sp, #508]
 3257 001a 4FF00008 		mov	r8, #0
 3258 001e CDF80082 		str	r8, [sp, #512]
 3259 0022 CDF80482 		str	r8, [sp, #516]
 3260 0026 CDF80882 		str	r8, [sp, #520]
 3261 002a CDF80C82 		str	r8, [sp, #524]
 3262 002e A34B     		ldr	r3, .L156
 3263 0030 8493     		str	r3, [sp, #528]	@ float
 3264 0032 0024     		movs	r4, #0
 3265 0034 8594     		str	r4, [sp, #532]	@ float
 3266 0036 8694     		str	r4, [sp, #536]	@ float
 3267 0038 8794     		str	r4, [sp, #540]	@ float
 3268 003a 8894     		str	r4, [sp, #544]	@ float
 3269 003c 8994     		str	r4, [sp, #548]	@ float
 3270 003e 8A94     		str	r4, [sp, #552]	@ float
 3271 0040 8B94     		str	r4, [sp, #556]	@ float
 3272 0042 8C94     		str	r4, [sp, #560]	@ float
 3273 0044 8D94     		str	r4, [sp, #564]	@ float
 3274 0046 6D46     		mov	r5, sp
 3275 0048 83AE     		add	r6, sp, #524
 3276 004a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3277 004c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3278 004e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3279 0050 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3280 0052 96E80700 		ldm	r6, {r0, r1, r2}
 3281 0056 85E80700 		stm	r5, {r0, r1, r2}
 3282 005a 7FAB     		add	r3, sp, #508
 3283 005c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3284 005e FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3285              	.LVL628:
 314:Src/Gcode/Buffer_Gcode.c ****     x = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_SECOND;           a = 0;
 3286              		.loc 1 314 0
 3287 0062 0123     		movs	r3, #1
 3288 0064 8DF8C031 		strb	r3, [sp, #448]
 3289 0068 4FF4C873 		mov	r3, #400
 3290 006c 7193     		str	r3, [sp, #452]
ARM GAS  /tmp/cckOLbKl.s 			page 71


 3291 006e CDF8C881 		str	r8, [sp, #456]
 3292 0072 CDF8CC81 		str	r8, [sp, #460]
 3293 0076 CDF8D081 		str	r8, [sp, #464]
 3294 007a 914B     		ldr	r3, .L156+4
 3295 007c 7593     		str	r3, [sp, #468]	@ float
 3296 007e 7694     		str	r4, [sp, #472]	@ float
 3297 0080 7794     		str	r4, [sp, #476]	@ float
 3298 0082 7894     		str	r4, [sp, #480]	@ float
 3299 0084 7994     		str	r4, [sp, #484]	@ float
 3300 0086 7A94     		str	r4, [sp, #488]	@ float
 3301 0088 7B94     		str	r4, [sp, #492]	@ float
 3302 008a 7C94     		str	r4, [sp, #496]	@ float
 3303 008c 7D94     		str	r4, [sp, #500]	@ float
 3304 008e 7E94     		str	r4, [sp, #504]	@ float
 3305 0090 6D46     		mov	r5, sp
 3306 0092 74AE     		add	r6, sp, #464
 3307 0094 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3308 0096 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3309 0098 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3310 009a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3311 009c 96E80700 		ldm	r6, {r0, r1, r2}
 3312 00a0 85E80700 		stm	r5, {r0, r1, r2}
 3313 00a4 70AB     		add	r3, sp, #448
 3314 00a6 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3315 00a8 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3316              	.LVL629:
 316:Src/Gcode/Buffer_Gcode.c ****     if (dXn <= 0)
 3317              		.loc 1 316 0
 3318 00ac 8DF88491 		strb	r9, [sp, #388]
 3319 00b0 CDF88881 		str	r8, [sp, #392]
 3320 00b4 CDF88C81 		str	r8, [sp, #396]
 3321 00b8 CDF89081 		str	r8, [sp, #400]
 3322 00bc CDF89481 		str	r8, [sp, #404]
 3323 00c0 804B     		ldr	r3, .L156+8
 3324 00c2 6693     		str	r3, [sp, #408]	@ float
 3325 00c4 6794     		str	r4, [sp, #412]	@ float
 3326 00c6 6894     		str	r4, [sp, #416]	@ float
 3327 00c8 6994     		str	r4, [sp, #420]	@ float
 3328 00ca 6A94     		str	r4, [sp, #424]	@ float
 3329 00cc 6B94     		str	r4, [sp, #428]	@ float
 3330 00ce 6C94     		str	r4, [sp, #432]	@ float
 3331 00d0 6D94     		str	r4, [sp, #436]	@ float
 3332 00d2 6E94     		str	r4, [sp, #440]	@ float
 3333 00d4 6F94     		str	r4, [sp, #444]	@ float
 3334 00d6 6C46     		mov	r4, sp
 3335 00d8 65AD     		add	r5, sp, #404
 3336 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3337 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3338 00de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3339 00e0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3340 00e2 95E80700 		ldm	r5, {r0, r1, r2}
 3341 00e6 84E80700 		stm	r4, {r0, r1, r2}
 3342 00ea 61AB     		add	r3, sp, #388
 3343 00ec 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3344 00ee FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3345              	.LVL630:
 317:Src/Gcode/Buffer_Gcode.c ****         return;
ARM GAS  /tmp/cckOLbKl.s 			page 72


 3346              		.loc 1 317 0
 3347 00f2 4745     		cmp	r7, r8
 3348 00f4 69DD     		ble	.L151
 320:Src/Gcode/Buffer_Gcode.c ****     {
 3349              		.loc 1 320 0
 3350 00f6 41F2D543 		movw	r3, #5333
 3351 00fa 9F42     		cmp	r7, r3
 3352 00fc 69DC     		bgt	.L153
 3353              	.LBB6:
 322:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_XY_STEPS_PER_SS*xStar);
 3354              		.loc 1 322 0
 3355 00fe 3846     		mov	r0, r7
 3356 0100 FFF7FEFF 		bl	__aeabi_i2f
 3357              	.LVL631:
 3358 0104 4FF07C51 		mov	r1, #1056964608
 3359 0108 FFF7FEFF 		bl	__aeabi_fmul
 3360              	.LVL632:
 3361 010c 4FF07A51 		mov	r1, #1048576000
 3362 0110 FFF7FEFF 		bl	__aeabi_fadd
 3363              	.LVL633:
 3364 0114 FFF7FEFF 		bl	lroundf
 3365              	.LVL634:
 3366 0118 8346     		mov	fp, r0
 3367              	.LVL635:
 323:Src/Gcode/Buffer_Gcode.c ****         x = xStar;                  v = 0;                                              a = ACCELER
 3368              		.loc 1 323 0
 3369 011a FFF7FEFF 		bl	__aeabi_i2f
 3370              	.LVL636:
 3371 011e 6849     		ldr	r1, .L156+4
 3372 0120 FFF7FEFF 		bl	__aeabi_fmul
 3373              	.LVL637:
 3374 0124 FFF7FEFF 		bl	sqrtf
 3375              	.LVL638:
 3376 0128 8246     		mov	r10, r0
 3377              	.LVL639:
 325:Src/Gcode/Buffer_Gcode.c ****         x = dXn-xStar;              v = vStar;                                          a = -ACCELE
 3378              		.loc 1 325 0
 3379 012a 16AC     		add	r4, sp, #88
 3380 012c 4FF00109 		mov	r9, #1
 3381 0130 84F80090 		strb	r9, [r4]
 3382 0134 C4F804B0 		str	fp, [r4, #4]
 3383 0138 C4F80880 		str	r8, [r4, #8]
 3384 013c C4F80C80 		str	r8, [r4, #12]
 3385 0140 C4F81080 		str	r8, [r4, #16]
 3386 0144 0025     		movs	r5, #0
 3387 0146 6561     		str	r5, [r4, #20]	@ float
 3388 0148 A561     		str	r5, [r4, #24]	@ float
 3389 014a E561     		str	r5, [r4, #28]	@ float
 3390 014c 2562     		str	r5, [r4, #32]	@ float
 3391 014e 5E4B     		ldr	r3, .L156+12
 3392 0150 6362     		str	r3, [r4, #36]	@ float
 3393 0152 A562     		str	r5, [r4, #40]	@ float
 3394 0154 E562     		str	r5, [r4, #44]	@ float
 3395 0156 2563     		str	r5, [r4, #48]	@ float
 3396 0158 6563     		str	r5, [r4, #52]	@ float
 3397 015a A563     		str	r5, [r4, #56]	@ float
 3398 015c 6E46     		mov	r6, sp
ARM GAS  /tmp/cckOLbKl.s 			page 73


 3399 015e 0DF1680C 		add	ip, sp, #104
 3400 0162 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3401              	.LVL640:
 3402 0166 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3403 0168 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3404 016c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3405 016e 9CE80700 		ldm	ip, {r0, r1, r2}
 3406 0172 86E80700 		stm	r6, {r0, r1, r2}
 3407 0176 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 3408 017a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3409              	.LVL641:
 326:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0,
 3410              		.loc 1 326 0
 3411 017e A7EB0B07 		sub	r7, r7, fp
 3412              	.LVL642:
 327:Src/Gcode/Buffer_Gcode.c ****         return;
 3413              		.loc 1 327 0
 3414 0182 25AC     		add	r4, sp, #148
 3415 0184 84F80090 		strb	r9, [r4]
 3416 0188 6760     		str	r7, [r4, #4]
 3417 018a C4F80880 		str	r8, [r4, #8]
 3418 018e C4F80C80 		str	r8, [r4, #12]
 3419 0192 C4F81080 		str	r8, [r4, #16]
 3420 0196 C4F814A0 		str	r10, [r4, #20]	@ float
 3421 019a A561     		str	r5, [r4, #24]	@ float
 3422 019c E561     		str	r5, [r4, #28]	@ float
 3423 019e 2562     		str	r5, [r4, #32]	@ float
 3424 01a0 4A4B     		ldr	r3, .L156+16
 3425 01a2 6362     		str	r3, [r4, #36]	@ float
 3426 01a4 A562     		str	r5, [r4, #40]	@ float
 3427 01a6 E562     		str	r5, [r4, #44]	@ float
 3428 01a8 2563     		str	r5, [r4, #48]	@ float
 3429 01aa 6563     		str	r5, [r4, #52]	@ float
 3430 01ac A563     		str	r5, [r4, #56]	@ float
 3431 01ae 6D46     		mov	r5, sp
 3432 01b0 29AE     		add	r6, sp, #164
 3433 01b2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3434 01b4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3435 01b6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3436 01b8 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3437 01ba 96E80700 		ldm	r6, {r0, r1, r2}
 3438 01be 85E80700 		stm	r5, {r0, r1, r2}
 3439 01c2 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 3440 01c6 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3441              	.LVL643:
 3442              	.L151:
 3443              	.LBE6:
 337:Src/Gcode/Buffer_Gcode.c **** 
 3444              		.loc 1 337 0
 3445 01ca 0DF50F7D 		add	sp, sp, #572
 3446              	.LCFI41:
 3447              		.cfi_remember_state
 3448              		.cfi_def_cfa_offset 36
 3449              		@ sp needed
 3450 01ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3451              	.LVL644:
 3452              	.L153:
ARM GAS  /tmp/cckOLbKl.s 			page 74


 3453              	.LCFI42:
 3454              		.cfi_restore_state
 332:Src/Gcode/Buffer_Gcode.c ****     x = dXn-2*L_HOME_XY;        v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 3455              		.loc 1 332 0
 3456 01d2 4FF00108 		mov	r8, #1
 3457 01d6 8DF84881 		strb	r8, [sp, #328]
 3458 01da 40F66B29 		movw	r9, #2667
 3459 01de CDF84C91 		str	r9, [sp, #332]
 3460 01e2 0026     		movs	r6, #0
 3461 01e4 5496     		str	r6, [sp, #336]
 3462 01e6 5596     		str	r6, [sp, #340]
 3463 01e8 5696     		str	r6, [sp, #344]
 3464 01ea 0024     		movs	r4, #0
 3465 01ec 5794     		str	r4, [sp, #348]	@ float
 3466 01ee 5894     		str	r4, [sp, #352]	@ float
 3467 01f0 5994     		str	r4, [sp, #356]	@ float
 3468 01f2 5A94     		str	r4, [sp, #360]	@ float
 3469 01f4 344B     		ldr	r3, .L156+12
 3470 01f6 5B93     		str	r3, [sp, #364]	@ float
 3471 01f8 5C94     		str	r4, [sp, #368]	@ float
 3472 01fa 5D94     		str	r4, [sp, #372]	@ float
 3473 01fc 5E94     		str	r4, [sp, #376]	@ float
 3474 01fe 5F94     		str	r4, [sp, #380]	@ float
 3475 0200 6094     		str	r4, [sp, #384]	@ float
 3476 0202 6D46     		mov	r5, sp
 3477 0204 0DF5AC7C 		add	ip, sp, #344
 3478 0208 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3479 020c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3480 020e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3481 0212 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3482 0214 9CE80700 		ldm	ip, {r0, r1, r2}
 3483 0218 85E80700 		stm	r5, {r0, r1, r2}
 3484 021c 52AB     		add	r3, sp, #328
 3485 021e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3486 0220 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3487              	.LVL645:
 333:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      x, 0, 0, 0,    v, 0, 0, 0,    a, 0, 0, 0,   0, 0};
 3488              		.loc 1 333 0
 3489 0224 A7F5A657 		sub	r7, r7, #5312
 3490              	.LVL646:
 3491 0228 163F     		subs	r7, r7, #22
 3492              	.LVL647:
 334:Src/Gcode/Buffer_Gcode.c ****     x = L_HOME_XY;              v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = -ACCELERATI
 3493              		.loc 1 334 0
 3494 022a 43AD     		add	r5, sp, #268
 3495 022c 85F80080 		strb	r8, [r5]
 3496 0230 6F60     		str	r7, [r5, #4]
 3497 0232 AE60     		str	r6, [r5, #8]
 3498 0234 EE60     		str	r6, [r5, #12]
 3499 0236 2E61     		str	r6, [r5, #16]
 3500 0238 DFF884A0 		ldr	r10, .L156+4
 3501 023c C5F814A0 		str	r10, [r5, #20]	@ float
 3502 0240 AC61     		str	r4, [r5, #24]	@ float
 3503 0242 EC61     		str	r4, [r5, #28]	@ float
 3504 0244 2C62     		str	r4, [r5, #32]	@ float
 3505 0246 6C62     		str	r4, [r5, #36]	@ float
 3506 0248 AC62     		str	r4, [r5, #40]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 75


 3507 024a EC62     		str	r4, [r5, #44]	@ float
 3508 024c 2C63     		str	r4, [r5, #48]	@ float
 3509 024e 6C63     		str	r4, [r5, #52]	@ float
 3510 0250 AC63     		str	r4, [r5, #56]	@ float
 3511 0252 6F46     		mov	r7, sp
 3512              	.LVL648:
 3513 0254 0DF58E7C 		add	ip, sp, #284
 3514 0258 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3515 025c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 3516 025e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3517 0262 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 3518 0264 9CE80700 		ldm	ip, {r0, r1, r2}
 3519 0268 87E80700 		stm	r7, {r0, r1, r2}
 3520 026c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3521 0270 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3522              	.LVL649:
 336:Src/Gcode/Buffer_Gcode.c **** }
 3523              		.loc 1 336 0
 3524 0274 34AD     		add	r5, sp, #208
 3525 0276 85F80080 		strb	r8, [r5]
 3526 027a C5F80490 		str	r9, [r5, #4]
 3527 027e AE60     		str	r6, [r5, #8]
 3528 0280 EE60     		str	r6, [r5, #12]
 3529 0282 2E61     		str	r6, [r5, #16]
 3530 0284 C5F814A0 		str	r10, [r5, #20]	@ float
 3531 0288 AC61     		str	r4, [r5, #24]	@ float
 3532 028a EC61     		str	r4, [r5, #28]	@ float
 3533 028c 2C62     		str	r4, [r5, #32]	@ float
 3534 028e 0F4B     		ldr	r3, .L156+16
 3535 0290 6B62     		str	r3, [r5, #36]	@ float
 3536 0292 AC62     		str	r4, [r5, #40]	@ float
 3537 0294 EC62     		str	r4, [r5, #44]	@ float
 3538 0296 2C63     		str	r4, [r5, #48]	@ float
 3539 0298 6C63     		str	r4, [r5, #52]	@ float
 3540 029a AC63     		str	r4, [r5, #56]	@ float
 3541 029c 6C46     		mov	r4, sp
 3542 029e 38AE     		add	r6, sp, #224
 3543 02a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3544 02a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3545 02a4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3546 02a6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3547 02a8 96E80700 		ldm	r6, {r0, r1, r2}
 3548 02ac 84E80700 		stm	r4, {r0, r1, r2}
 3549 02b0 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3550 02b4 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3551              	.LVL650:
 3552 02b8 87E7     		b	.L151
 3553              	.L157:
 3554 02ba 00BF     		.align	2
 3555              	.L156:
 3556 02bc ABAA26C5 		.word	-987321685
 3557 02c0 ABAA2645 		.word	1160161963
 3558 02c4 ABAA26C4 		.word	-1004098901
 3559 02c8 ABAAA644 		.word	1151773355
 3560 02cc ABAAA6C4 		.word	-995710293
 3561              		.cfi_endproc
 3562              	.LFE21:
ARM GAS  /tmp/cckOLbKl.s 			page 76


 3564              		.section	.text.HomeY_Analyser,"ax",%progbits
 3565              		.align	1
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3569              		.fpu softvfp
 3571              	HomeY_Analyser:
 3572              	.LFB22:
 340:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn;
 3573              		.loc 1 340 0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 520
 3576              		@ frame_needed = 0, uses_anonymous_args = 0
 3577 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3578              	.LCFI43:
 3579              		.cfi_def_cfa_offset 36
 3580              		.cfi_offset 4, -36
 3581              		.cfi_offset 5, -32
 3582              		.cfi_offset 6, -28
 3583              		.cfi_offset 7, -24
 3584              		.cfi_offset 8, -20
 3585              		.cfi_offset 9, -16
 3586              		.cfi_offset 10, -12
 3587              		.cfi_offset 11, -8
 3588              		.cfi_offset 14, -4
 3589 0004 ADF50F7D 		sub	sp, sp, #572
 3590              	.LCFI44:
 3591              		.cfi_def_cfa_offset 608
 341:Src/Gcode/Buffer_Gcode.c ****     long y; float v; float a;
 3592              		.loc 1 341 0
 3593 0008 0221     		movs	r1, #2
 3594 000a 0CA8     		add	r0, sp, #48
 3595 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3596              	.LVL651:
 3597 0010 0E9F     		ldr	r7, [sp, #56]
 3598              	.LVL652:
 347:Src/Gcode/Buffer_Gcode.c ****     y = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 3599              		.loc 1 347 0
 3600 0012 4FF00409 		mov	r9, #4
 3601 0016 8DF8FC91 		strb	r9, [sp, #508]
 3602 001a 4FF00008 		mov	r8, #0
 3603 001e CDF80082 		str	r8, [sp, #512]
 3604 0022 CDF80482 		str	r8, [sp, #516]
 3605 0026 CDF80882 		str	r8, [sp, #520]
 3606 002a CDF80C82 		str	r8, [sp, #524]
 3607 002e 0024     		movs	r4, #0
 3608 0030 8494     		str	r4, [sp, #528]	@ float
 3609 0032 A24B     		ldr	r3, .L163
 3610 0034 8593     		str	r3, [sp, #532]	@ float
 3611 0036 8694     		str	r4, [sp, #536]	@ float
 3612 0038 8794     		str	r4, [sp, #540]	@ float
 3613 003a 8894     		str	r4, [sp, #544]	@ float
 3614 003c 8994     		str	r4, [sp, #548]	@ float
 3615 003e 8A94     		str	r4, [sp, #552]	@ float
 3616 0040 8B94     		str	r4, [sp, #556]	@ float
 3617 0042 8C94     		str	r4, [sp, #560]	@ float
 3618 0044 8D94     		str	r4, [sp, #564]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 77


 3619 0046 6D46     		mov	r5, sp
 3620 0048 83AE     		add	r6, sp, #524
 3621 004a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3622 004c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3623 004e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3624 0050 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3625 0052 96E80700 		ldm	r6, {r0, r1, r2}
 3626 0056 85E80700 		stm	r5, {r0, r1, r2}
 3627 005a 7FAB     		add	r3, sp, #508
 3628 005c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3629 005e FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3630              	.LVL653:
 349:Src/Gcode/Buffer_Gcode.c ****     y = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_SECOND;           a = 0;
 3631              		.loc 1 349 0
 3632 0062 0123     		movs	r3, #1
 3633 0064 8DF8C031 		strb	r3, [sp, #448]
 3634 0068 CDF8C481 		str	r8, [sp, #452]
 3635 006c 4FF4C873 		mov	r3, #400
 3636 0070 7293     		str	r3, [sp, #456]
 3637 0072 CDF8CC81 		str	r8, [sp, #460]
 3638 0076 CDF8D081 		str	r8, [sp, #464]
 3639 007a 7594     		str	r4, [sp, #468]	@ float
 3640 007c 904B     		ldr	r3, .L163+4
 3641 007e 7693     		str	r3, [sp, #472]	@ float
 3642 0080 7794     		str	r4, [sp, #476]	@ float
 3643 0082 7894     		str	r4, [sp, #480]	@ float
 3644 0084 7994     		str	r4, [sp, #484]	@ float
 3645 0086 7A94     		str	r4, [sp, #488]	@ float
 3646 0088 7B94     		str	r4, [sp, #492]	@ float
 3647 008a 7C94     		str	r4, [sp, #496]	@ float
 3648 008c 7D94     		str	r4, [sp, #500]	@ float
 3649 008e 7E94     		str	r4, [sp, #504]	@ float
 3650 0090 6D46     		mov	r5, sp
 3651 0092 74AE     		add	r6, sp, #464
 3652 0094 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3653 0096 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3654 0098 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3655 009a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3656 009c 96E80700 		ldm	r6, {r0, r1, r2}
 3657 00a0 85E80700 		stm	r5, {r0, r1, r2}
 3658 00a4 70AB     		add	r3, sp, #448
 3659 00a6 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3660 00a8 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3661              	.LVL654:
 351:Src/Gcode/Buffer_Gcode.c ****     if (dYn <= 0)
 3662              		.loc 1 351 0
 3663 00ac 8DF88491 		strb	r9, [sp, #388]
 3664 00b0 CDF88881 		str	r8, [sp, #392]
 3665 00b4 CDF88C81 		str	r8, [sp, #396]
 3666 00b8 CDF89081 		str	r8, [sp, #400]
 3667 00bc CDF89481 		str	r8, [sp, #404]
 3668 00c0 6694     		str	r4, [sp, #408]	@ float
 3669 00c2 804B     		ldr	r3, .L163+8
 3670 00c4 6793     		str	r3, [sp, #412]	@ float
 3671 00c6 6894     		str	r4, [sp, #416]	@ float
 3672 00c8 6994     		str	r4, [sp, #420]	@ float
 3673 00ca 6A94     		str	r4, [sp, #424]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 78


 3674 00cc 6B94     		str	r4, [sp, #428]	@ float
 3675 00ce 6C94     		str	r4, [sp, #432]	@ float
 3676 00d0 6D94     		str	r4, [sp, #436]	@ float
 3677 00d2 6E94     		str	r4, [sp, #440]	@ float
 3678 00d4 6F94     		str	r4, [sp, #444]	@ float
 3679 00d6 6C46     		mov	r4, sp
 3680 00d8 65AD     		add	r5, sp, #404
 3681 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3682 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3683 00de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3684 00e0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3685 00e2 95E80700 		ldm	r5, {r0, r1, r2}
 3686 00e6 84E80700 		stm	r4, {r0, r1, r2}
 3687 00ea 61AB     		add	r3, sp, #388
 3688 00ec 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3689 00ee FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3690              	.LVL655:
 352:Src/Gcode/Buffer_Gcode.c ****         return;
 3691              		.loc 1 352 0
 3692 00f2 4745     		cmp	r7, r8
 3693 00f4 69DD     		ble	.L158
 355:Src/Gcode/Buffer_Gcode.c ****     {
 3694              		.loc 1 355 0
 3695 00f6 41F2D543 		movw	r3, #5333
 3696 00fa 9F42     		cmp	r7, r3
 3697 00fc 69DC     		bgt	.L160
 3698              	.LBB7:
 357:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_XY_STEPS_PER_SS*yStar);
 3699              		.loc 1 357 0
 3700 00fe 3846     		mov	r0, r7
 3701 0100 FFF7FEFF 		bl	__aeabi_i2f
 3702              	.LVL656:
 3703 0104 4FF07C51 		mov	r1, #1056964608
 3704 0108 FFF7FEFF 		bl	__aeabi_fmul
 3705              	.LVL657:
 3706 010c 4FF07A51 		mov	r1, #1048576000
 3707 0110 FFF7FEFF 		bl	__aeabi_fadd
 3708              	.LVL658:
 3709 0114 FFF7FEFF 		bl	lroundf
 3710              	.LVL659:
 3711 0118 8346     		mov	fp, r0
 3712              	.LVL660:
 358:Src/Gcode/Buffer_Gcode.c ****         y = yStar;                  v = 0;                                              a = ACCELER
 3713              		.loc 1 358 0
 3714 011a FFF7FEFF 		bl	__aeabi_i2f
 3715              	.LVL661:
 3716 011e 6849     		ldr	r1, .L163+4
 3717 0120 FFF7FEFF 		bl	__aeabi_fmul
 3718              	.LVL662:
 3719 0124 FFF7FEFF 		bl	sqrtf
 3720              	.LVL663:
 3721 0128 8246     		mov	r10, r0
 3722              	.LVL664:
 360:Src/Gcode/Buffer_Gcode.c ****         y = dYn-yStar;              v = vStar;                                          a = -ACCELE
 3723              		.loc 1 360 0
 3724 012a 16AC     		add	r4, sp, #88
 3725 012c 4FF00109 		mov	r9, #1
ARM GAS  /tmp/cckOLbKl.s 			page 79


 3726 0130 84F80090 		strb	r9, [r4]
 3727 0134 C4F80480 		str	r8, [r4, #4]
 3728 0138 C4F808B0 		str	fp, [r4, #8]
 3729 013c C4F80C80 		str	r8, [r4, #12]
 3730 0140 C4F81080 		str	r8, [r4, #16]
 3731 0144 0025     		movs	r5, #0
 3732 0146 6561     		str	r5, [r4, #20]	@ float
 3733 0148 A561     		str	r5, [r4, #24]	@ float
 3734 014a E561     		str	r5, [r4, #28]	@ float
 3735 014c 2562     		str	r5, [r4, #32]	@ float
 3736 014e 6562     		str	r5, [r4, #36]	@ float
 3737 0150 5D4B     		ldr	r3, .L163+12
 3738 0152 A362     		str	r3, [r4, #40]	@ float
 3739 0154 E562     		str	r5, [r4, #44]	@ float
 3740 0156 2563     		str	r5, [r4, #48]	@ float
 3741 0158 6563     		str	r5, [r4, #52]	@ float
 3742 015a A563     		str	r5, [r4, #56]	@ float
 3743 015c 6E46     		mov	r6, sp
 3744 015e 0DF1680C 		add	ip, sp, #104
 3745 0162 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3746              	.LVL665:
 3747 0166 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3748 0168 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3749 016c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3750 016e 9CE80700 		ldm	ip, {r0, r1, r2}
 3751 0172 86E80700 		stm	r6, {r0, r1, r2}
 3752 0176 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 3753 017a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3754              	.LVL666:
 361:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0,
 3755              		.loc 1 361 0
 3756 017e A7EB0B07 		sub	r7, r7, fp
 3757              	.LVL667:
 362:Src/Gcode/Buffer_Gcode.c ****         return;
 3758              		.loc 1 362 0
 3759 0182 25AC     		add	r4, sp, #148
 3760 0184 84F80090 		strb	r9, [r4]
 3761 0188 C4F80480 		str	r8, [r4, #4]
 3762 018c A760     		str	r7, [r4, #8]
 3763 018e C4F80C80 		str	r8, [r4, #12]
 3764 0192 C4F81080 		str	r8, [r4, #16]
 3765 0196 6561     		str	r5, [r4, #20]	@ float
 3766 0198 C4F818A0 		str	r10, [r4, #24]	@ float
 3767 019c E561     		str	r5, [r4, #28]	@ float
 3768 019e 2562     		str	r5, [r4, #32]	@ float
 3769 01a0 6562     		str	r5, [r4, #36]	@ float
 3770 01a2 4A4B     		ldr	r3, .L163+16
 3771 01a4 A362     		str	r3, [r4, #40]	@ float
 3772 01a6 E562     		str	r5, [r4, #44]	@ float
 3773 01a8 2563     		str	r5, [r4, #48]	@ float
 3774 01aa 6563     		str	r5, [r4, #52]	@ float
 3775 01ac A563     		str	r5, [r4, #56]	@ float
 3776 01ae 6D46     		mov	r5, sp
 3777 01b0 29AE     		add	r6, sp, #164
 3778 01b2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3779 01b4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3780 01b6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  /tmp/cckOLbKl.s 			page 80


 3781 01b8 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3782 01ba 96E80700 		ldm	r6, {r0, r1, r2}
 3783 01be 85E80700 		stm	r5, {r0, r1, r2}
 3784 01c2 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 3785 01c6 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3786              	.LVL668:
 3787              	.L158:
 3788              	.LBE7:
 372:Src/Gcode/Buffer_Gcode.c **** 
 3789              		.loc 1 372 0
 3790 01ca 0DF50F7D 		add	sp, sp, #572
 3791              	.LCFI45:
 3792              		.cfi_remember_state
 3793              		.cfi_def_cfa_offset 36
 3794              		@ sp needed
 3795 01ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3796              	.LVL669:
 3797              	.L160:
 3798              	.LCFI46:
 3799              		.cfi_restore_state
 367:Src/Gcode/Buffer_Gcode.c ****     y = dYn-2*L_HOME_XY;        v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = 0;
 3800              		.loc 1 367 0
 3801 01d2 4FF00108 		mov	r8, #1
 3802 01d6 8DF84881 		strb	r8, [sp, #328]
 3803 01da 0026     		movs	r6, #0
 3804 01dc 5396     		str	r6, [sp, #332]
 3805 01de 40F66B29 		movw	r9, #2667
 3806 01e2 CDF85091 		str	r9, [sp, #336]
 3807 01e6 5596     		str	r6, [sp, #340]
 3808 01e8 5696     		str	r6, [sp, #344]
 3809 01ea 0024     		movs	r4, #0
 3810 01ec 5794     		str	r4, [sp, #348]	@ float
 3811 01ee 5894     		str	r4, [sp, #352]	@ float
 3812 01f0 5994     		str	r4, [sp, #356]	@ float
 3813 01f2 5A94     		str	r4, [sp, #360]	@ float
 3814 01f4 5B94     		str	r4, [sp, #364]	@ float
 3815 01f6 344B     		ldr	r3, .L163+12
 3816 01f8 5C93     		str	r3, [sp, #368]	@ float
 3817 01fa 5D94     		str	r4, [sp, #372]	@ float
 3818 01fc 5E94     		str	r4, [sp, #376]	@ float
 3819 01fe 5F94     		str	r4, [sp, #380]	@ float
 3820 0200 6094     		str	r4, [sp, #384]	@ float
 3821 0202 6D46     		mov	r5, sp
 3822 0204 0DF5AC7C 		add	ip, sp, #344
 3823 0208 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3824 020c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3825 020e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3826 0212 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3827 0214 9CE80700 		ldm	ip, {r0, r1, r2}
 3828 0218 85E80700 		stm	r5, {r0, r1, r2}
 3829 021c 52AB     		add	r3, sp, #328
 3830 021e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3831 0220 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3832              	.LVL670:
 368:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      0, y, 0, 0,    0, v, 0, 0,    0, a, 0, 0,   0, 0};
 3833              		.loc 1 368 0
 3834 0224 A7F5A657 		sub	r7, r7, #5312
ARM GAS  /tmp/cckOLbKl.s 			page 81


 3835              	.LVL671:
 3836 0228 163F     		subs	r7, r7, #22
 3837              	.LVL672:
 369:Src/Gcode/Buffer_Gcode.c ****     y = L_HOME_XY;              v = HOME_COARSE_SPEED_XY_STEPS_PER_SECOND;          a = -ACCELERATI
 3838              		.loc 1 369 0
 3839 022a 43AD     		add	r5, sp, #268
 3840 022c 85F80080 		strb	r8, [r5]
 3841 0230 6E60     		str	r6, [r5, #4]
 3842 0232 AF60     		str	r7, [r5, #8]
 3843 0234 EE60     		str	r6, [r5, #12]
 3844 0236 2E61     		str	r6, [r5, #16]
 3845 0238 6C61     		str	r4, [r5, #20]	@ float
 3846 023a DFF884A0 		ldr	r10, .L163+4
 3847 023e C5F818A0 		str	r10, [r5, #24]	@ float
 3848 0242 EC61     		str	r4, [r5, #28]	@ float
 3849 0244 2C62     		str	r4, [r5, #32]	@ float
 3850 0246 6C62     		str	r4, [r5, #36]	@ float
 3851 0248 AC62     		str	r4, [r5, #40]	@ float
 3852 024a EC62     		str	r4, [r5, #44]	@ float
 3853 024c 2C63     		str	r4, [r5, #48]	@ float
 3854 024e 6C63     		str	r4, [r5, #52]	@ float
 3855 0250 AC63     		str	r4, [r5, #56]	@ float
 3856 0252 6F46     		mov	r7, sp
 3857              	.LVL673:
 3858 0254 0DF58E7C 		add	ip, sp, #284
 3859 0258 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3860 025c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 3861 025e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3862 0262 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 3863 0264 9CE80700 		ldm	ip, {r0, r1, r2}
 3864 0268 87E80700 		stm	r7, {r0, r1, r2}
 3865 026c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3866 0270 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3867              	.LVL674:
 371:Src/Gcode/Buffer_Gcode.c **** }
 3868              		.loc 1 371 0
 3869 0274 34AD     		add	r5, sp, #208
 3870 0276 85F80080 		strb	r8, [r5]
 3871 027a 6E60     		str	r6, [r5, #4]
 3872 027c C5F80890 		str	r9, [r5, #8]
 3873 0280 EE60     		str	r6, [r5, #12]
 3874 0282 2E61     		str	r6, [r5, #16]
 3875 0284 6C61     		str	r4, [r5, #20]	@ float
 3876 0286 C5F818A0 		str	r10, [r5, #24]	@ float
 3877 028a EC61     		str	r4, [r5, #28]	@ float
 3878 028c 2C62     		str	r4, [r5, #32]	@ float
 3879 028e 6C62     		str	r4, [r5, #36]	@ float
 3880 0290 0E4B     		ldr	r3, .L163+16
 3881 0292 AB62     		str	r3, [r5, #40]	@ float
 3882 0294 EC62     		str	r4, [r5, #44]	@ float
 3883 0296 2C63     		str	r4, [r5, #48]	@ float
 3884 0298 6C63     		str	r4, [r5, #52]	@ float
 3885 029a AC63     		str	r4, [r5, #56]	@ float
 3886 029c 6C46     		mov	r4, sp
 3887 029e 38AE     		add	r6, sp, #224
 3888 02a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3889 02a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/cckOLbKl.s 			page 82


 3890 02a4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3891 02a6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3892 02a8 96E80700 		ldm	r6, {r0, r1, r2}
 3893 02ac 84E80700 		stm	r4, {r0, r1, r2}
 3894 02b0 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3895 02b4 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3896              	.LVL675:
 3897 02b8 87E7     		b	.L158
 3898              	.L164:
 3899 02ba 00BF     		.align	2
 3900              	.L163:
 3901 02bc ABAA26C5 		.word	-987321685
 3902 02c0 ABAA2645 		.word	1160161963
 3903 02c4 ABAA26C4 		.word	-1004098901
 3904 02c8 ABAAA644 		.word	1151773355
 3905 02cc ABAAA6C4 		.word	-995710293
 3906              		.cfi_endproc
 3907              	.LFE22:
 3909              		.section	.text.HomeZ_Analyser,"ax",%progbits
 3910              		.align	1
 3911              		.syntax unified
 3912              		.thumb
 3913              		.thumb_func
 3914              		.fpu softvfp
 3916              	HomeZ_Analyser:
 3917              	.LFB23:
 375:Src/Gcode/Buffer_Gcode.c ****     long dZn = getDescreteCommandBufferElement_Gcode(2).Zn;
 3918              		.loc 1 375 0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 520
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
 3922 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3923              	.LCFI47:
 3924              		.cfi_def_cfa_offset 36
 3925              		.cfi_offset 4, -36
 3926              		.cfi_offset 5, -32
 3927              		.cfi_offset 6, -28
 3928              		.cfi_offset 7, -24
 3929              		.cfi_offset 8, -20
 3930              		.cfi_offset 9, -16
 3931              		.cfi_offset 10, -12
 3932              		.cfi_offset 11, -8
 3933              		.cfi_offset 14, -4
 3934 0004 ADF50F7D 		sub	sp, sp, #572
 3935              	.LCFI48:
 3936              		.cfi_def_cfa_offset 608
 376:Src/Gcode/Buffer_Gcode.c ****     long z; float v; float a;
 3937              		.loc 1 376 0
 3938 0008 0221     		movs	r1, #2
 3939 000a 0CA8     		add	r0, sp, #48
 3940 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 3941              	.LVL676:
 3942 0010 0F9F     		ldr	r7, [sp, #60]
 3943              	.LVL677:
 382:Src/Gcode/Buffer_Gcode.c ****     z = -HOME_FINE_STEPS_Z;         v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = 0;
 3944              		.loc 1 382 0
 3945 0012 4FF00509 		mov	r9, #5
ARM GAS  /tmp/cckOLbKl.s 			page 83


 3946 0016 8DF8FC91 		strb	r9, [sp, #508]
 3947 001a 4FF00008 		mov	r8, #0
 3948 001e CDF80082 		str	r8, [sp, #512]
 3949 0022 CDF80482 		str	r8, [sp, #516]
 3950 0026 CDF80882 		str	r8, [sp, #520]
 3951 002a CDF80C82 		str	r8, [sp, #524]
 3952 002e 0024     		movs	r4, #0
 3953 0030 8494     		str	r4, [sp, #528]	@ float
 3954 0032 8594     		str	r4, [sp, #532]	@ float
 3955 0034 A64B     		ldr	r3, .L171
 3956 0036 8693     		str	r3, [sp, #536]	@ float
 3957 0038 8794     		str	r4, [sp, #540]	@ float
 3958 003a 8894     		str	r4, [sp, #544]	@ float
 3959 003c 8994     		str	r4, [sp, #548]	@ float
 3960 003e 8A94     		str	r4, [sp, #552]	@ float
 3961 0040 8B94     		str	r4, [sp, #556]	@ float
 3962 0042 8C94     		str	r4, [sp, #560]	@ float
 3963 0044 8D94     		str	r4, [sp, #564]	@ float
 3964 0046 6D46     		mov	r5, sp
 3965 0048 83AE     		add	r6, sp, #524
 3966 004a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3967 004c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3968 004e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3969 0050 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3970 0052 96E80700 		ldm	r6, {r0, r1, r2}
 3971 0056 85E80700 		stm	r5, {r0, r1, r2}
 3972 005a 7FAB     		add	r3, sp, #508
 3973 005c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3974 005e FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 3975              	.LVL678:
 384:Src/Gcode/Buffer_Gcode.c ****     z = 0;                          v = HOME_FINE_SPEED_Z_STEPS_PER_SECOND;             a = 0;
 3976              		.loc 1 384 0
 3977 0062 0123     		movs	r3, #1
 3978 0064 8DF8C031 		strb	r3, [sp, #448]
 3979 0068 CDF8C481 		str	r8, [sp, #452]
 3980 006c CDF8C881 		str	r8, [sp, #456]
 3981 0070 A3F2D173 		subw	r3, r3, #2001
 3982 0074 7393     		str	r3, [sp, #460]
 3983 0076 CDF8D081 		str	r8, [sp, #464]
 3984 007a 7594     		str	r4, [sp, #468]	@ float
 3985 007c 7694     		str	r4, [sp, #472]	@ float
 3986 007e 954B     		ldr	r3, .L171+4
 3987 0080 7793     		str	r3, [sp, #476]	@ float
 3988 0082 7894     		str	r4, [sp, #480]	@ float
 3989 0084 7994     		str	r4, [sp, #484]	@ float
 3990 0086 7A94     		str	r4, [sp, #488]	@ float
 3991 0088 7B94     		str	r4, [sp, #492]	@ float
 3992 008a 7C94     		str	r4, [sp, #496]	@ float
 3993 008c 7D94     		str	r4, [sp, #500]	@ float
 3994 008e 7E94     		str	r4, [sp, #504]	@ float
 3995 0090 6D46     		mov	r5, sp
 3996 0092 74AE     		add	r6, sp, #464
 3997 0094 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3998 0096 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3999 0098 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4000 009a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4001 009c 96E80700 		ldm	r6, {r0, r1, r2}
ARM GAS  /tmp/cckOLbKl.s 			page 84


 4002 00a0 85E80700 		stm	r5, {r0, r1, r2}
 4003 00a4 70AB     		add	r3, sp, #448
 4004 00a6 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4005 00a8 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4006              	.LVL679:
 386:Src/Gcode/Buffer_Gcode.c ****     if (dZn >= 0)
 4007              		.loc 1 386 0
 4008 00ac 8DF88491 		strb	r9, [sp, #388]
 4009 00b0 CDF88881 		str	r8, [sp, #392]
 4010 00b4 CDF88C81 		str	r8, [sp, #396]
 4011 00b8 CDF89081 		str	r8, [sp, #400]
 4012 00bc CDF89481 		str	r8, [sp, #404]
 4013 00c0 6694     		str	r4, [sp, #408]	@ float
 4014 00c2 6794     		str	r4, [sp, #412]	@ float
 4015 00c4 844B     		ldr	r3, .L171+8
 4016 00c6 6893     		str	r3, [sp, #416]	@ float
 4017 00c8 6994     		str	r4, [sp, #420]	@ float
 4018 00ca 6A94     		str	r4, [sp, #424]	@ float
 4019 00cc 6B94     		str	r4, [sp, #428]	@ float
 4020 00ce 6C94     		str	r4, [sp, #432]	@ float
 4021 00d0 6D94     		str	r4, [sp, #436]	@ float
 4022 00d2 6E94     		str	r4, [sp, #440]	@ float
 4023 00d4 6F94     		str	r4, [sp, #444]	@ float
 4024 00d6 6C46     		mov	r4, sp
 4025 00d8 65AD     		add	r5, sp, #404
 4026 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4027 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4028 00de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4029 00e0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4030 00e2 95E80700 		ldm	r5, {r0, r1, r2}
 4031 00e6 84E80700 		stm	r4, {r0, r1, r2}
 4032 00ea 61AB     		add	r3, sp, #388
 4033 00ec 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4034 00ee FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4035              	.LVL680:
 387:Src/Gcode/Buffer_Gcode.c ****         return;
 4036              		.loc 1 387 0
 4037 00f2 4745     		cmp	r7, r8
 4038 00f4 03DB     		blt	.L170
 4039              	.LVL681:
 4040              	.L165:
 407:Src/Gcode/Buffer_Gcode.c **** 
 4041              		.loc 1 407 0
 4042 00f6 0DF50F7D 		add	sp, sp, #572
 4043              	.LCFI49:
 4044              		.cfi_remember_state
 4045              		.cfi_def_cfa_offset 36
 4046              		@ sp needed
 4047 00fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4048              	.LVL682:
 4049              	.L170:
 4050              	.LCFI50:
 4051              		.cfi_restore_state
 390:Src/Gcode/Buffer_Gcode.c ****     {
 4052              		.loc 1 390 0
 4053 00fe 87EAE772 		eor	r2, r7, r7, asr #31
 4054 0102 A2EBE772 		sub	r2, r2, r7, asr #31
ARM GAS  /tmp/cckOLbKl.s 			page 85


 4055 0106 46F62903 		movw	r3, #26665
 4056 010a 9A42     		cmp	r2, r3
 4057 010c 6CDC     		bgt	.L167
 4058              	.LBB8:
 392:Src/Gcode/Buffer_Gcode.c ****         float vStar = sqrtf(2*ACCELERATION_Z_STEPS_PER_SS*zStar);
 4059              		.loc 1 392 0
 4060 010e 3846     		mov	r0, r7
 4061 0110 FFF7FEFF 		bl	__aeabi_i2f
 4062              	.LVL683:
 4063 0114 4FF07C51 		mov	r1, #1056964608
 4064 0118 FFF7FEFF 		bl	__aeabi_fmul
 4065              	.LVL684:
 4066 011c 4FF07A51 		mov	r1, #1048576000
 4067 0120 FFF7FEFF 		bl	__aeabi_fsub
 4068              	.LVL685:
 4069 0124 FFF7FEFF 		bl	lroundf
 4070              	.LVL686:
 4071 0128 80EAE079 		eor	r9, r0, r0, asr #31
 4072 012c A9EBE079 		sub	r9, r9, r0, asr #31
 4073              	.LVL687:
 393:Src/Gcode/Buffer_Gcode.c ****         z = -zStar;                 v = 0;                                              a = -ACCELE
 4074              		.loc 1 393 0
 4075 0130 4846     		mov	r0, r9
 4076 0132 FFF7FEFF 		bl	__aeabi_i2f
 4077              	.LVL688:
 4078 0136 6649     		ldr	r1, .L171
 4079 0138 FFF7FEFF 		bl	__aeabi_fmul
 4080              	.LVL689:
 4081 013c FFF7FEFF 		bl	sqrtf
 4082              	.LVL690:
 4083 0140 8346     		mov	fp, r0
 4084              	.LVL691:
 394:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command4 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0,
 4085              		.loc 1 394 0
 4086 0142 C9F10003 		rsb	r3, r9, #0
 4087              	.LVL692:
 395:Src/Gcode/Buffer_Gcode.c ****         z = dZn+zStar;              v = -vStar;                                         a = ACCELER
 4088              		.loc 1 395 0
 4089 0146 16AC     		add	r4, sp, #88
 4090 0148 4FF0010A 		mov	r10, #1
 4091 014c 84F800A0 		strb	r10, [r4]
 4092 0150 C4F80480 		str	r8, [r4, #4]
 4093 0154 C4F80880 		str	r8, [r4, #8]
 4094 0158 E360     		str	r3, [r4, #12]
 4095 015a C4F81080 		str	r8, [r4, #16]
 4096 015e 0025     		movs	r5, #0
 4097 0160 6561     		str	r5, [r4, #20]	@ float
 4098 0162 A561     		str	r5, [r4, #24]	@ float
 4099 0164 E561     		str	r5, [r4, #28]	@ float
 4100 0166 2562     		str	r5, [r4, #32]	@ float
 4101 0168 6562     		str	r5, [r4, #36]	@ float
 4102 016a A562     		str	r5, [r4, #40]	@ float
 4103 016c 5B4B     		ldr	r3, .L171+12
 4104              	.LVL693:
 4105 016e E362     		str	r3, [r4, #44]	@ float
 4106 0170 2563     		str	r5, [r4, #48]	@ float
 4107 0172 6563     		str	r5, [r4, #52]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 86


 4108 0174 A563     		str	r5, [r4, #56]	@ float
 4109 0176 6E46     		mov	r6, sp
 4110 0178 0DF1680C 		add	ip, sp, #104
 4111 017c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4112              	.LVL694:
 4113 0180 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 4114 0182 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4115 0186 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 4116 0188 9CE80700 		ldm	ip, {r0, r1, r2}
 4117 018c 86E80700 		stm	r6, {r0, r1, r2}
 4118 0190 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 4119 0194 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4120              	.LVL695:
 396:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0,
 4121              		.loc 1 396 0
 4122 0198 4F44     		add	r7, r7, r9
 4123              	.LVL696:
 4124 019a 0BF1004B 		add	fp, fp, #-2147483648
 4125              	.LVL697:
 397:Src/Gcode/Buffer_Gcode.c ****         return;
 4126              		.loc 1 397 0
 4127 019e 25AC     		add	r4, sp, #148
 4128 01a0 84F800A0 		strb	r10, [r4]
 4129 01a4 C4F80480 		str	r8, [r4, #4]
 4130 01a8 C4F80880 		str	r8, [r4, #8]
 4131 01ac E760     		str	r7, [r4, #12]
 4132 01ae C4F81080 		str	r8, [r4, #16]
 4133 01b2 6561     		str	r5, [r4, #20]	@ float
 4134 01b4 A561     		str	r5, [r4, #24]	@ float
 4135 01b6 C4F81CB0 		str	fp, [r4, #28]	@ float
 4136 01ba 2562     		str	r5, [r4, #32]	@ float
 4137 01bc 6562     		str	r5, [r4, #36]	@ float
 4138 01be A562     		str	r5, [r4, #40]	@ float
 4139 01c0 474B     		ldr	r3, .L171+16
 4140 01c2 E362     		str	r3, [r4, #44]	@ float
 4141 01c4 2563     		str	r5, [r4, #48]	@ float
 4142 01c6 6563     		str	r5, [r4, #52]	@ float
 4143 01c8 A563     		str	r5, [r4, #56]	@ float
 4144 01ca 6D46     		mov	r5, sp
 4145 01cc 29AE     		add	r6, sp, #164
 4146 01ce 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4147 01d0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4148 01d2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4149 01d4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4150 01d6 96E80700 		ldm	r6, {r0, r1, r2}
 4151 01da 85E80700 		stm	r5, {r0, r1, r2}
 4152 01de 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 4153 01e2 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4154              	.LVL698:
 4155 01e6 86E7     		b	.L165
 4156              	.LVL699:
 4157              	.L167:
 4158              	.LBE8:
 402:Src/Gcode/Buffer_Gcode.c ****     z = dZn+2*L_HOME_Z;         v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = 0;
 4159              		.loc 1 402 0
 4160 01e8 4FF00108 		mov	r8, #1
 4161 01ec 8DF84881 		strb	r8, [sp, #328]
ARM GAS  /tmp/cckOLbKl.s 			page 87


 4162 01f0 0026     		movs	r6, #0
 4163 01f2 5396     		str	r6, [sp, #332]
 4164 01f4 5496     		str	r6, [sp, #336]
 4165 01f6 DFF8EC90 		ldr	r9, .L171+20
 4166 01fa CDF85491 		str	r9, [sp, #340]
 4167 01fe 5696     		str	r6, [sp, #344]
 4168 0200 0024     		movs	r4, #0
 4169 0202 5794     		str	r4, [sp, #348]	@ float
 4170 0204 5894     		str	r4, [sp, #352]	@ float
 4171 0206 5994     		str	r4, [sp, #356]	@ float
 4172 0208 5A94     		str	r4, [sp, #360]	@ float
 4173 020a 5B94     		str	r4, [sp, #364]	@ float
 4174 020c 5C94     		str	r4, [sp, #368]	@ float
 4175 020e 334B     		ldr	r3, .L171+12
 4176 0210 5D93     		str	r3, [sp, #372]	@ float
 4177 0212 5E94     		str	r4, [sp, #376]	@ float
 4178 0214 5F94     		str	r4, [sp, #380]	@ float
 4179 0216 6094     		str	r4, [sp, #384]	@ float
 4180 0218 6D46     		mov	r5, sp
 4181 021a 0DF5AC7C 		add	ip, sp, #344
 4182 021e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4183 0222 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4184 0224 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4185 0228 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4186 022a 9CE80700 		ldm	ip, {r0, r1, r2}
 4187 022e 85E80700 		stm	r5, {r0, r1, r2}
 4188 0232 52AB     		add	r3, sp, #328
 4189 0234 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4190 0236 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4191              	.LVL700:
 403:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      0, 0, z, 0,    0, 0, v, 0,    0, 0, a, 0,   0, 0};
 4192              		.loc 1 403 0
 4193 023a 07F5D047 		add	r7, r7, #26624
 4194              	.LVL701:
 4195 023e 2A37     		adds	r7, r7, #42
 4196              	.LVL702:
 404:Src/Gcode/Buffer_Gcode.c ****     z = -L_HOME_Z;              v = -HOME_COARSE_SPEED_Z_STEPS_PER_SECOND;          a = ACCELERATIO
 4197              		.loc 1 404 0
 4198 0240 43AD     		add	r5, sp, #268
 4199 0242 85F80080 		strb	r8, [r5]
 4200 0246 6E60     		str	r6, [r5, #4]
 4201 0248 AE60     		str	r6, [r5, #8]
 4202 024a EF60     		str	r7, [r5, #12]
 4203 024c 2E61     		str	r6, [r5, #16]
 4204 024e 6C61     		str	r4, [r5, #20]	@ float
 4205 0250 AC61     		str	r4, [r5, #24]	@ float
 4206 0252 DFF880A0 		ldr	r10, .L171+4
 4207 0256 C5F81CA0 		str	r10, [r5, #28]	@ float
 4208 025a 2C62     		str	r4, [r5, #32]	@ float
 4209 025c 6C62     		str	r4, [r5, #36]	@ float
 4210 025e AC62     		str	r4, [r5, #40]	@ float
 4211 0260 EC62     		str	r4, [r5, #44]	@ float
 4212 0262 2C63     		str	r4, [r5, #48]	@ float
 4213 0264 6C63     		str	r4, [r5, #52]	@ float
 4214 0266 AC63     		str	r4, [r5, #56]	@ float
 4215 0268 6F46     		mov	r7, sp
 4216              	.LVL703:
ARM GAS  /tmp/cckOLbKl.s 			page 88


 4217 026a 0DF58E7C 		add	ip, sp, #284
 4218 026e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4219 0272 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4220 0274 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4221 0278 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4222 027a 9CE80700 		ldm	ip, {r0, r1, r2}
 4223 027e 87E80700 		stm	r7, {r0, r1, r2}
 4224 0282 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 4225 0286 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4226              	.LVL704:
 406:Src/Gcode/Buffer_Gcode.c **** }
 4227              		.loc 1 406 0
 4228 028a 34AD     		add	r5, sp, #208
 4229 028c 85F80080 		strb	r8, [r5]
 4230 0290 6E60     		str	r6, [r5, #4]
 4231 0292 AE60     		str	r6, [r5, #8]
 4232 0294 C5F80C90 		str	r9, [r5, #12]
 4233 0298 2E61     		str	r6, [r5, #16]
 4234 029a 6C61     		str	r4, [r5, #20]	@ float
 4235 029c AC61     		str	r4, [r5, #24]	@ float
 4236 029e C5F81CA0 		str	r10, [r5, #28]	@ float
 4237 02a2 2C62     		str	r4, [r5, #32]	@ float
 4238 02a4 6C62     		str	r4, [r5, #36]	@ float
 4239 02a6 AC62     		str	r4, [r5, #40]	@ float
 4240 02a8 0D4B     		ldr	r3, .L171+16
 4241 02aa EB62     		str	r3, [r5, #44]	@ float
 4242 02ac 2C63     		str	r4, [r5, #48]	@ float
 4243 02ae 6C63     		str	r4, [r5, #52]	@ float
 4244 02b0 AC63     		str	r4, [r5, #56]	@ float
 4245 02b2 6C46     		mov	r4, sp
 4246 02b4 38AE     		add	r6, sp, #224
 4247 02b6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4248 02b8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4249 02ba 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4250 02bc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4251 02be 96E80700 		ldm	r6, {r0, r1, r2}
 4252 02c2 84E80700 		stm	r4, {r0, r1, r2}
 4253 02c6 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 4254 02ca FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4255              	.LVL705:
 4256 02ce 12E7     		b	.L165
 4257              	.L172:
 4258              		.align	2
 4259              	.L171:
 4260 02d0 55555046 		.word	1179669845
 4261 02d4 555550C6 		.word	-967813803
 4262 02d8 55555045 		.word	1162892629
 4263 02dc 5555D0C5 		.word	-976202411
 4264 02e0 5555D045 		.word	1171281237
 4265 02e4 EBCBFFFF 		.word	-13333
 4266              		.cfi_endproc
 4267              	.LFE23:
 4269              		.section	.text.HomeXY_Analyser,"ax",%progbits
 4270              		.align	1
 4271              		.syntax unified
 4272              		.thumb
 4273              		.thumb_func
ARM GAS  /tmp/cckOLbKl.s 			page 89


 4274              		.fpu softvfp
 4276              	HomeXY_Analyser:
 4277              	.LFB24:
 410:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn;
 4278              		.loc 1 410 0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 584
 4281              		@ frame_needed = 0, uses_anonymous_args = 0
 4282 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4283              	.LCFI51:
 4284              		.cfi_def_cfa_offset 36
 4285              		.cfi_offset 4, -36
 4286              		.cfi_offset 5, -32
 4287              		.cfi_offset 6, -28
 4288              		.cfi_offset 7, -24
 4289              		.cfi_offset 8, -20
 4290              		.cfi_offset 9, -16
 4291              		.cfi_offset 10, -12
 4292              		.cfi_offset 11, -8
 4293              		.cfi_offset 14, -4
 4294 0004 ADF51F7D 		sub	sp, sp, #636
 4295              	.LCFI52:
 4296              		.cfi_def_cfa_offset 672
 411:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn;
 4297              		.loc 1 411 0
 4298 0008 0221     		movs	r1, #2
 4299 000a 12A8     		add	r0, sp, #72
 4300 000c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4301              	.LVL706:
 4302 0010 139C     		ldr	r4, [sp, #76]
 4303              	.LVL707:
 412:Src/Gcode/Buffer_Gcode.c **** 
 4304              		.loc 1 412 0
 4305 0012 0221     		movs	r1, #2
 4306 0014 1CA8     		add	r0, sp, #112
 4307 0016 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4308              	.LVL708:
 4309 001a 1E9D     		ldr	r5, [sp, #120]
 4310              	.LVL709:
 417:Src/Gcode/Buffer_Gcode.c ****     x = HOME_FINE_STEPS_XY;     y = HOME_FINE_STEPS_XY;         v = HOME_COARSE_SPEED_XY_STEPS_PER_
 4311              		.loc 1 417 0
 4312 001c 4FF00609 		mov	r9, #6
 4313 0020 8DF83C92 		strb	r9, [sp, #572]
 4314 0024 4FF00008 		mov	r8, #0
 4315 0028 CDF84082 		str	r8, [sp, #576]
 4316 002c CDF84482 		str	r8, [sp, #580]
 4317 0030 CDF84882 		str	r8, [sp, #584]
 4318 0034 CDF84C82 		str	r8, [sp, #588]
 4319 0038 A44B     		ldr	r3, .L183
 4320 003a 9493     		str	r3, [sp, #592]	@ float
 4321 003c 9593     		str	r3, [sp, #596]	@ float
 4322 003e 0026     		movs	r6, #0
 4323 0040 9696     		str	r6, [sp, #600]	@ float
 4324 0042 9796     		str	r6, [sp, #604]	@ float
 4325 0044 9896     		str	r6, [sp, #608]	@ float
 4326 0046 9996     		str	r6, [sp, #612]	@ float
 4327 0048 9A96     		str	r6, [sp, #616]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 90


 4328 004a 9B96     		str	r6, [sp, #620]	@ float
 4329 004c 9C96     		str	r6, [sp, #624]	@ float
 4330 004e 9D96     		str	r6, [sp, #628]	@ float
 4331 0050 6F46     		mov	r7, sp
 4332 0052 0DF5137C 		add	ip, sp, #588
 4333 0056 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4334 005a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4335 005c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4336 0060 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4337 0062 9CE80700 		ldm	ip, {r0, r1, r2}
 4338 0066 87E80700 		stm	r7, {r0, r1, r2}
 4339 006a 8FAB     		add	r3, sp, #572
 4340 006c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4341 006e FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4342              	.LVL710:
 419:Src/Gcode/Buffer_Gcode.c ****     x = 0;                      y = 0;                          v = -HOME_FINE_SPEED_XY_STEPS_PER_S
 4343              		.loc 1 419 0
 4344 0072 0123     		movs	r3, #1
 4345 0074 8DF80032 		strb	r3, [sp, #512]
 4346 0078 4FF4C873 		mov	r3, #400
 4347 007c 8193     		str	r3, [sp, #516]
 4348 007e 8293     		str	r3, [sp, #520]
 4349 0080 CDF80C82 		str	r8, [sp, #524]
 4350 0084 CDF81082 		str	r8, [sp, #528]
 4351 0088 914B     		ldr	r3, .L183+4
 4352 008a 8593     		str	r3, [sp, #532]	@ float
 4353 008c 8693     		str	r3, [sp, #536]	@ float
 4354 008e 8796     		str	r6, [sp, #540]	@ float
 4355 0090 8896     		str	r6, [sp, #544]	@ float
 4356 0092 8996     		str	r6, [sp, #548]	@ float
 4357 0094 8A96     		str	r6, [sp, #552]	@ float
 4358 0096 8B96     		str	r6, [sp, #556]	@ float
 4359 0098 8C96     		str	r6, [sp, #560]	@ float
 4360 009a 8D96     		str	r6, [sp, #564]	@ float
 4361 009c 8E96     		str	r6, [sp, #568]	@ float
 4362 009e 6F46     		mov	r7, sp
 4363 00a0 0DF5047C 		add	ip, sp, #528
 4364 00a4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4365 00a8 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4366 00aa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4367 00ae 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 4368 00b0 9CE80700 		ldm	ip, {r0, r1, r2}
 4369 00b4 87E80700 		stm	r7, {r0, r1, r2}
 4370 00b8 80AB     		add	r3, sp, #512
 4371 00ba 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4372 00bc FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4373              	.LVL711:
 421:Src/Gcode/Buffer_Gcode.c **** 
 4374              		.loc 1 421 0
 4375 00c0 8DF8C491 		strb	r9, [sp, #452]
 4376 00c4 CDF8C881 		str	r8, [sp, #456]
 4377 00c8 CDF8CC81 		str	r8, [sp, #460]
 4378 00cc CDF8D081 		str	r8, [sp, #464]
 4379 00d0 CDF8D481 		str	r8, [sp, #468]
 4380 00d4 7F4B     		ldr	r3, .L183+8
 4381 00d6 7693     		str	r3, [sp, #472]	@ float
 4382 00d8 7793     		str	r3, [sp, #476]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 91


 4383 00da 7896     		str	r6, [sp, #480]	@ float
 4384 00dc 7996     		str	r6, [sp, #484]	@ float
 4385 00de 7A96     		str	r6, [sp, #488]	@ float
 4386 00e0 7B96     		str	r6, [sp, #492]	@ float
 4387 00e2 7C96     		str	r6, [sp, #496]	@ float
 4388 00e4 7D96     		str	r6, [sp, #500]	@ float
 4389 00e6 7E96     		str	r6, [sp, #504]	@ float
 4390 00e8 7F96     		str	r6, [sp, #508]	@ float
 4391 00ea 6E46     		mov	r6, sp
 4392 00ec 75AF     		add	r7, sp, #468
 4393 00ee 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 4394 00f0 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 4395 00f2 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 4396 00f4 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 4397 00f6 97E80700 		ldm	r7, {r0, r1, r2}
 4398 00fa 86E80700 		stm	r6, {r0, r1, r2}
 4399 00fe 71AB     		add	r3, sp, #452
 4400 0100 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4401 0102 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4402              	.LVL712:
 423:Src/Gcode/Buffer_Gcode.c ****     if (dXn <  0 || dYn <  0) return;
 4403              		.loc 1 423 0
 4404 0106 04B9     		cbnz	r4, .L174
 423:Src/Gcode/Buffer_Gcode.c ****     if (dXn <  0 || dYn <  0) return;
 4405              		.loc 1 423 0 is_stmt 0 discriminator 1
 4406 0108 1DB1     		cbz	r5, .L173
 4407              	.L174:
 424:Src/Gcode/Buffer_Gcode.c **** 
 4408              		.loc 1 424 0 is_stmt 1
 4409 010a 002C     		cmp	r4, #0
 4410 010c 01DB     		blt	.L173
 424:Src/Gcode/Buffer_Gcode.c **** 
 4411              		.loc 1 424 0 is_stmt 0 discriminator 1
 4412 010e 002D     		cmp	r5, #0
 4413 0110 03DA     		bge	.L182
 4414              	.LVL713:
 4415              	.L173:
 449:Src/Gcode/Buffer_Gcode.c **** 
 4416              		.loc 1 449 0 is_stmt 1
 4417 0112 0DF51F7D 		add	sp, sp, #636
 4418              	.LCFI53:
 4419              		.cfi_remember_state
 4420              		.cfi_def_cfa_offset 36
 4421              		@ sp needed
 4422 0116 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4423              	.LVL714:
 4424              	.L182:
 4425              	.LCFI54:
 4426              		.cfi_restore_state
 426:Src/Gcode/Buffer_Gcode.c ****     float cosX = (float)dXn/distance_XY;    float targetSpeedX = HOME_COARSE_SPEED_XY_STEPS_PER_SEC
 4427              		.loc 1 426 0
 4428 011a 0026     		movs	r6, #0
 4429 011c 4FF08047 		mov	r7, #1073741824
 4430 0120 2046     		mov	r0, r4
 4431 0122 FFF7FEFF 		bl	__aeabi_i2d
 4432              	.LVL715:
 4433 0126 3246     		mov	r2, r6
ARM GAS  /tmp/cckOLbKl.s 			page 92


 4434 0128 3B46     		mov	r3, r7
 4435 012a FFF7FEFF 		bl	pow
 4436              	.LVL716:
 4437 012e 8046     		mov	r8, r0
 4438 0130 8946     		mov	r9, r1
 4439 0132 2846     		mov	r0, r5
 4440 0134 FFF7FEFF 		bl	__aeabi_i2d
 4441              	.LVL717:
 4442 0138 3246     		mov	r2, r6
 4443 013a 3B46     		mov	r3, r7
 4444 013c FFF7FEFF 		bl	pow
 4445              	.LVL718:
 4446 0140 0246     		mov	r2, r0
 4447 0142 0B46     		mov	r3, r1
 4448 0144 4046     		mov	r0, r8
 4449 0146 4946     		mov	r1, r9
 4450 0148 FFF7FEFF 		bl	__aeabi_dadd
 4451              	.LVL719:
 4452 014c FFF7FEFF 		bl	__aeabi_d2f
 4453              	.LVL720:
 4454 0150 FFF7FEFF 		bl	sqrtf
 4455              	.LVL721:
 4456 0154 0646     		mov	r6, r0
 4457              	.LVL722:
 427:Src/Gcode/Buffer_Gcode.c ****     float cosY = (float)dYn/distance_XY;    float targetSpeedY = HOME_COARSE_SPEED_XY_STEPS_PER_SEC
 4458              		.loc 1 427 0
 4459 0156 2046     		mov	r0, r4
 4460              	.LVL723:
 4461 0158 FFF7FEFF 		bl	__aeabi_i2f
 4462              	.LVL724:
 4463 015c 8246     		mov	r10, r0
 4464 015e 3146     		mov	r1, r6
 4465 0160 FFF7FEFF 		bl	__aeabi_fdiv
 4466              	.LVL725:
 4467 0164 0746     		mov	r7, r0
 4468              	.LVL726:
 4469 0166 5A49     		ldr	r1, .L183+4
 4470 0168 FFF7FEFF 		bl	__aeabi_fmul
 4471              	.LVL727:
 4472 016c 8346     		mov	fp, r0
 4473              	.LVL728:
 4474 016e 5A49     		ldr	r1, .L183+12
 4475 0170 1197     		str	r7, [sp, #68]	@ float
 4476 0172 3846     		mov	r0, r7
 4477              	.LVL729:
 4478 0174 FFF7FEFF 		bl	__aeabi_fmul
 4479              	.LVL730:
 4480 0178 0D90     		str	r0, [sp, #52]	@ float
 4481              	.LVL731:
 428:Src/Gcode/Buffer_Gcode.c ****     float startDistance_XY = pow(HOME_COARSE_SPEED_XY_STEPS_PER_SECOND,2)/(2*ACCELERATION_XY_STEPS_
 4482              		.loc 1 428 0
 4483 017a 2846     		mov	r0, r5
 4484              	.LVL732:
 4485 017c FFF7FEFF 		bl	__aeabi_i2f
 4486              	.LVL733:
 4487 0180 1090     		str	r0, [sp, #64]	@ float
 4488 0182 3146     		mov	r1, r6
ARM GAS  /tmp/cckOLbKl.s 			page 93


 4489 0184 FFF7FEFF 		bl	__aeabi_fdiv
 4490              	.LVL734:
 4491 0188 0746     		mov	r7, r0
 4492              	.LVL735:
 4493 018a 5149     		ldr	r1, .L183+4
 4494 018c FFF7FEFF 		bl	__aeabi_fmul
 4495              	.LVL736:
 4496 0190 8046     		mov	r8, r0
 4497 0192 0F90     		str	r0, [sp, #60]	@ float
 4498              	.LVL737:
 4499 0194 5049     		ldr	r1, .L183+12
 4500 0196 3846     		mov	r0, r7
 4501              	.LVL738:
 4502 0198 FFF7FEFF 		bl	__aeabi_fmul
 4503              	.LVL739:
 4504 019c 0E90     		str	r0, [sp, #56]	@ float
 4505              	.LVL740:
 430:Src/Gcode/Buffer_Gcode.c **** 
 4506              		.loc 1 430 0
 4507 019e 5846     		mov	r0, fp
 4508              	.LVL741:
 4509 01a0 FFF7FEFF 		bl	lroundf
 4510              	.LVL742:
 4511 01a4 8146     		mov	r9, r0
 4512              	.LVL743:
 4513 01a6 4046     		mov	r0, r8
 4514              	.LVL744:
 4515 01a8 FFF7FEFF 		bl	lroundf
 4516              	.LVL745:
 4517 01ac 8046     		mov	r8, r0
 4518              	.LVL746:
 432:Src/Gcode/Buffer_Gcode.c ****     {
 4519              		.loc 1 432 0
 4520 01ae 4B49     		ldr	r1, .L183+16
 4521 01b0 3046     		mov	r0, r6
 4522              	.LVL747:
 4523 01b2 FFF7FEFF 		bl	__aeabi_fcmplt
 4524              	.LVL748:
 4525 01b6 0028     		cmp	r0, #0
 4526 01b8 00F09280 		beq	.L180
 4527              	.LBB9:
 434:Src/Gcode/Buffer_Gcode.c ****         long yStar = lroundf(0.25+(float)dYn/2);   float vStarY = cosY*sqrtf(2*ACCELERATION_XY_STEP
 4528              		.loc 1 434 0
 4529 01bc 4FF07C51 		mov	r1, #1056964608
 4530 01c0 5046     		mov	r0, r10
 4531 01c2 FFF7FEFF 		bl	__aeabi_fmul
 4532              	.LVL749:
 4533 01c6 4FF07A51 		mov	r1, #1048576000
 4534 01ca FFF7FEFF 		bl	__aeabi_fadd
 4535              	.LVL750:
 4536 01ce FFF7FEFF 		bl	lroundf
 4537              	.LVL751:
 4538 01d2 8246     		mov	r10, r0
 4539              	.LVL752:
 4540 01d4 3E49     		ldr	r1, .L183+4
 4541 01d6 3046     		mov	r0, r6
 4542              	.LVL753:
ARM GAS  /tmp/cckOLbKl.s 			page 94


 4543 01d8 FFF7FEFF 		bl	__aeabi_fmul
 4544              	.LVL754:
 4545 01dc 0646     		mov	r6, r0
 4546              	.LVL755:
 4547 01de FFF7FEFF 		bl	sqrtf
 4548              	.LVL756:
 4549 01e2 1199     		ldr	r1, [sp, #68]	@ float
 4550 01e4 FFF7FEFF 		bl	__aeabi_fmul
 4551              	.LVL757:
 4552 01e8 0F90     		str	r0, [sp, #60]	@ float
 4553              	.LVL758:
 435:Src/Gcode/Buffer_Gcode.c ****         x = xStar;              y = yStar;              vX = 0;                vY = 0;             
 4554              		.loc 1 435 0
 4555 01ea 4FF07C51 		mov	r1, #1056964608
 4556 01ee 1098     		ldr	r0, [sp, #64]	@ float
 4557              	.LVL759:
 4558 01f0 FFF7FEFF 		bl	__aeabi_fmul
 4559              	.LVL760:
 4560 01f4 4FF07A51 		mov	r1, #1048576000
 4561 01f8 FFF7FEFF 		bl	__aeabi_fadd
 4562              	.LVL761:
 4563 01fc FFF7FEFF 		bl	lroundf
 4564              	.LVL762:
 4565 0200 8146     		mov	r9, r0
 4566              	.LVL763:
 4567 0202 3046     		mov	r0, r6
 4568              	.LVL764:
 4569 0204 FFF7FEFF 		bl	sqrtf
 4570              	.LVL765:
 4571 0208 3946     		mov	r1, r7
 4572 020a FFF7FEFF 		bl	__aeabi_fmul
 4573              	.LVL766:
 4574 020e 1090     		str	r0, [sp, #64]	@ float
 4575              	.LVL767:
 437:Src/Gcode/Buffer_Gcode.c ****         x = dXn-xStar;          y = dYn-yStar;          vX = vStarX;           vY = vStarY;        
 4576              		.loc 1 437 0
 4577 0210 26AE     		add	r6, sp, #152
 4578 0212 4FF0010B 		mov	fp, #1
 4579              	.LVL768:
 4580 0216 86F800B0 		strb	fp, [r6]
 4581 021a C6F804A0 		str	r10, [r6, #4]
 4582 021e C6F80890 		str	r9, [r6, #8]
 4583 0222 4FF00008 		mov	r8, #0
 4584              	.LVL769:
 4585 0226 C6F80C80 		str	r8, [r6, #12]
 4586 022a C6F81080 		str	r8, [r6, #16]
 4587 022e 0027     		movs	r7, #0
 4588              	.LVL770:
 4589 0230 7761     		str	r7, [r6, #20]	@ float
 4590 0232 B761     		str	r7, [r6, #24]	@ float
 4591 0234 F761     		str	r7, [r6, #28]	@ float
 4592 0236 3762     		str	r7, [r6, #32]	@ float
 4593 0238 0D9B     		ldr	r3, [sp, #52]	@ float
 4594 023a 7362     		str	r3, [r6, #36]	@ float
 4595 023c 0E9A     		ldr	r2, [sp, #56]	@ float
 4596 023e B262     		str	r2, [r6, #40]	@ float
 4597 0240 F762     		str	r7, [r6, #44]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 95


 4598 0242 3763     		str	r7, [r6, #48]	@ float
 4599 0244 7763     		str	r7, [r6, #52]	@ float
 4600 0246 B763     		str	r7, [r6, #56]	@ float
 4601 0248 EC46     		mov	ip, sp
 4602 024a 0DF1A80E 		add	lr, sp, #168
 4603 024e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4604              	.LVL771:
 4605 0252 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4606 0256 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4607 025a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4608 025e 9EE80700 		ldm	lr, {r0, r1, r2}
 4609 0262 8CE80700 		stm	ip, {r0, r1, r2}
 4610 0266 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 4611 026a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4612              	.LVL772:
 438:Src/Gcode/Buffer_Gcode.c ****         command_Gcode command5 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0, 
 4613              		.loc 1 438 0
 4614 026e A4EB0A04 		sub	r4, r4, r10
 4615              	.LVL773:
 4616 0272 A5EB0905 		sub	r5, r5, r9
 4617              	.LVL774:
 4618 0276 0D9B     		ldr	r3, [sp, #52]
 4619 0278 03F10042 		add	r2, r3, #-2147483648
 4620              	.LVL775:
 4621 027c 0E9B     		ldr	r3, [sp, #56]
 4622 027e 03F10043 		add	r3, r3, #-2147483648
 4623              	.LVL776:
 439:Src/Gcode/Buffer_Gcode.c ****         return;
 4624              		.loc 1 439 0
 4625 0282 35AE     		add	r6, sp, #212
 4626 0284 86F800B0 		strb	fp, [r6]
 4627 0288 7460     		str	r4, [r6, #4]
 4628 028a B560     		str	r5, [r6, #8]
 4629 028c C6F80C80 		str	r8, [r6, #12]
 4630 0290 C6F81080 		str	r8, [r6, #16]
 4631 0294 0F99     		ldr	r1, [sp, #60]	@ float
 4632 0296 7161     		str	r1, [r6, #20]	@ float
 4633 0298 1099     		ldr	r1, [sp, #64]	@ float
 4634 029a B161     		str	r1, [r6, #24]	@ float
 4635 029c F761     		str	r7, [r6, #28]	@ float
 4636 029e 3762     		str	r7, [r6, #32]	@ float
 4637 02a0 7262     		str	r2, [r6, #36]	@ float
 4638 02a2 B362     		str	r3, [r6, #40]	@ float
 4639 02a4 F762     		str	r7, [r6, #44]	@ float
 4640 02a6 3763     		str	r7, [r6, #48]	@ float
 4641 02a8 7763     		str	r7, [r6, #52]	@ float
 4642 02aa B763     		str	r7, [r6, #56]	@ float
 4643 02ac 6C46     		mov	r4, sp
 4644              	.LVL777:
 4645 02ae 39AD     		add	r5, sp, #228
 4646              	.LVL778:
 4647 02b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4648              	.LVL779:
 4649 02b2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4650 02b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4651 02b6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4652 02b8 95E80700 		ldm	r5, {r0, r1, r2}
ARM GAS  /tmp/cckOLbKl.s 			page 96


 4653 02bc 84E80700 		stm	r4, {r0, r1, r2}
 4654 02c0 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 4655 02c4 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4656              	.LVL780:
 4657 02c8 23E7     		b	.L173
 4658              	.L184:
 4659 02ca 00BF     		.align	2
 4660              	.L183:
 4661 02cc ABAA26C5 		.word	-987321685
 4662 02d0 ABAA2645 		.word	1160161963
 4663 02d4 ABAA26C4 		.word	-1004098901
 4664 02d8 ABAAA644 		.word	1151773355
 4665 02dc ABAAA645 		.word	1168550571
 4666              	.LVL781:
 4667              	.L180:
 4668              	.LBE9:
 444:Src/Gcode/Buffer_Gcode.c ****     x = dXn-2*l_HOME_X;     y = dYn-2*l_HOME_Y;     vX = targetSpeedX;     vY = targetSpeedY;     a
 4669              		.loc 1 444 0
 4670 02e0 4FF0010A 		mov	r10, #1
 4671 02e4 8DF888A1 		strb	r10, [sp, #392]
 4672 02e8 CDF88C91 		str	r9, [sp, #396]
 4673 02ec CDF89081 		str	r8, [sp, #400]
 4674 02f0 0027     		movs	r7, #0
 4675              	.LVL782:
 4676 02f2 6597     		str	r7, [sp, #404]
 4677 02f4 6697     		str	r7, [sp, #408]
 4678 02f6 0026     		movs	r6, #0
 4679              	.LVL783:
 4680 02f8 6796     		str	r6, [sp, #412]	@ float
 4681 02fa 6896     		str	r6, [sp, #416]	@ float
 4682 02fc 6996     		str	r6, [sp, #420]	@ float
 4683 02fe 6A96     		str	r6, [sp, #424]	@ float
 4684 0300 0D9B     		ldr	r3, [sp, #52]	@ float
 4685 0302 6B93     		str	r3, [sp, #428]	@ float
 4686 0304 0E9A     		ldr	r2, [sp, #56]	@ float
 4687 0306 6C92     		str	r2, [sp, #432]	@ float
 4688 0308 6D96     		str	r6, [sp, #436]	@ float
 4689 030a 6E96     		str	r6, [sp, #440]	@ float
 4690 030c 6F96     		str	r6, [sp, #444]	@ float
 4691 030e 7096     		str	r6, [sp, #448]	@ float
 4692 0310 EC46     		mov	ip, sp
 4693 0312 0DF5CC7E 		add	lr, sp, #408
 4694 0316 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4695 031a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4696 031e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4697 0322 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4698 0326 9EE80700 		ldm	lr, {r0, r1, r2}
 4699 032a 8CE80700 		stm	ip, {r0, r1, r2}
 4700 032e 62AB     		add	r3, sp, #392
 4701 0330 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4702 0332 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4703              	.LVL784:
 445:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command5 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0,   0,
 4704              		.loc 1 445 0
 4705 0336 A4EB4904 		sub	r4, r4, r9, lsl #1
 4706              	.LVL785:
 4707 033a A5EB4805 		sub	r5, r5, r8, lsl #1
ARM GAS  /tmp/cckOLbKl.s 			page 97


 4708              	.LVL786:
 446:Src/Gcode/Buffer_Gcode.c ****     x = l_HOME_X;           y = l_HOME_Y;           vX = targetSpeedX;     vY = targetSpeedY;     a
 4709              		.loc 1 446 0
 4710 033e 0DF5A67C 		add	ip, sp, #332
 4711 0342 8CF800A0 		strb	r10, [ip]
 4712 0346 CCF80440 		str	r4, [ip, #4]
 4713 034a CCF80850 		str	r5, [ip, #8]
 4714 034e CCF80C70 		str	r7, [ip, #12]
 4715 0352 CCF81070 		str	r7, [ip, #16]
 4716 0356 CCF814B0 		str	fp, [ip, #20]	@ float
 4717 035a 0F99     		ldr	r1, [sp, #60]	@ float
 4718 035c CCF81810 		str	r1, [ip, #24]	@ float
 4719 0360 CCF81C60 		str	r6, [ip, #28]	@ float
 4720 0364 CCF82060 		str	r6, [ip, #32]	@ float
 4721 0368 CCF82460 		str	r6, [ip, #36]	@ float
 4722 036c CCF82860 		str	r6, [ip, #40]	@ float
 4723 0370 CCF82C60 		str	r6, [ip, #44]	@ float
 4724 0374 CCF83060 		str	r6, [ip, #48]	@ float
 4725 0378 CCF83460 		str	r6, [ip, #52]	@ float
 4726 037c CCF83860 		str	r6, [ip, #56]	@ float
 4727 0380 6C46     		mov	r4, sp
 4728              	.LVL787:
 4729 0382 57AD     		add	r5, sp, #348
 4730              	.LVL788:
 4731 0384 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4732 0386 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4733 0388 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4734 038a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4735 038c 95E80700 		ldm	r5, {r0, r1, r2}
 4736 0390 84E80700 		stm	r4, {r0, r1, r2}
 4737 0394 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 4738 0398 FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4739              	.LVL789:
 447:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command6 = {MOVE_COMMAND,      x, y, 0, 0,    vX, vY, 0, 0,    aX, aY, 0, 0,   0,
 4740              		.loc 1 447 0
 4741 039c 0D9B     		ldr	r3, [sp, #52]
 4742 039e 03F10042 		add	r2, r3, #-2147483648
 4743              	.LVL790:
 4744 03a2 0E9B     		ldr	r3, [sp, #56]
 4745 03a4 03F10043 		add	r3, r3, #-2147483648
 4746              	.LVL791:
 448:Src/Gcode/Buffer_Gcode.c **** }
 4747              		.loc 1 448 0
 4748 03a8 44AC     		add	r4, sp, #272
 4749 03aa 84F800A0 		strb	r10, [r4]
 4750 03ae C4F80490 		str	r9, [r4, #4]
 4751 03b2 C4F80880 		str	r8, [r4, #8]
 4752 03b6 E760     		str	r7, [r4, #12]
 4753 03b8 2761     		str	r7, [r4, #16]
 4754 03ba C4F814B0 		str	fp, [r4, #20]	@ float
 4755 03be 0F99     		ldr	r1, [sp, #60]	@ float
 4756 03c0 A161     		str	r1, [r4, #24]	@ float
 4757 03c2 E661     		str	r6, [r4, #28]	@ float
 4758 03c4 2662     		str	r6, [r4, #32]	@ float
 4759 03c6 6262     		str	r2, [r4, #36]	@ float
 4760 03c8 A362     		str	r3, [r4, #40]	@ float
 4761 03ca E662     		str	r6, [r4, #44]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 98


 4762 03cc 2663     		str	r6, [r4, #48]	@ float
 4763 03ce 6663     		str	r6, [r4, #52]	@ float
 4764 03d0 A663     		str	r6, [r4, #56]	@ float
 4765 03d2 6D46     		mov	r5, sp
 4766 03d4 48AE     		add	r6, sp, #288
 4767 03d6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4768              	.LVL792:
 4769 03d8 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4770 03da 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4771 03dc 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4772 03de 96E80700 		ldm	r6, {r0, r1, r2}
 4773 03e2 85E80700 		stm	r5, {r0, r1, r2}
 4774 03e6 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 4775 03ea FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4776              	.LVL793:
 4777 03ee 90E6     		b	.L173
 4778              		.cfi_endproc
 4779              	.LFE24:
 4781              		.section	.text.SetExtrTemp_Analyser,"ax",%progbits
 4782              		.align	1
 4783              		.syntax unified
 4784              		.thumb
 4785              		.thumb_func
 4786              		.fpu softvfp
 4788              	SetExtrTemp_Analyser:
 4789              	.LFB25:
 452:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).extrT;
 4790              		.loc 1 452 0
 4791              		.cfi_startproc
 4792              		@ args = 0, pretend = 0, frame = 104
 4793              		@ frame_needed = 0, uses_anonymous_args = 0
 4794 0000 70B5     		push	{r4, r5, r6, lr}
 4795              	.LCFI55:
 4796              		.cfi_def_cfa_offset 16
 4797              		.cfi_offset 4, -16
 4798              		.cfi_offset 5, -12
 4799              		.cfi_offset 6, -8
 4800              		.cfi_offset 14, -4
 4801 0002 A6B0     		sub	sp, sp, #152
 4802              	.LCFI56:
 4803              		.cfi_def_cfa_offset 168
 453:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {HEAT_EXTRUDER_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   t, 0
 4804              		.loc 1 453 0
 4805 0004 0221     		movs	r1, #2
 4806 0006 0DA8     		add	r0, sp, #52
 4807 0008 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4808              	.LVL794:
 4809 000c 159C     		ldr	r4, [sp, #84]	@ float
 4810              	.LVL795:
 454:Src/Gcode/Buffer_Gcode.c **** }
 4811              		.loc 1 454 0
 4812 000e 17AE     		add	r6, sp, #92
 4813 0010 3C22     		movs	r2, #60
 4814 0012 0021     		movs	r1, #0
 4815 0014 3046     		mov	r0, r6
 4816 0016 FFF7FEFF 		bl	memset
 4817              	.LVL796:
ARM GAS  /tmp/cckOLbKl.s 			page 99


 4818 001a 0A23     		movs	r3, #10
 4819 001c 8DF85C30 		strb	r3, [sp, #92]
 4820 0020 2494     		str	r4, [sp, #144]	@ float
 4821 0022 6C46     		mov	r4, sp
 4822              	.LVL797:
 4823 0024 1BAD     		add	r5, sp, #108
 4824 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4825 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4826 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4827 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4828 002e 95E80700 		ldm	r5, {r0, r1, r2}
 4829 0032 84E80700 		stm	r4, {r0, r1, r2}
 4830 0036 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 4831 003a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4832              	.LVL798:
 455:Src/Gcode/Buffer_Gcode.c **** 
 4833              		.loc 1 455 0
 4834 003e 26B0     		add	sp, sp, #152
 4835              	.LCFI57:
 4836              		.cfi_def_cfa_offset 16
 4837              		@ sp needed
 4838 0040 70BD     		pop	{r4, r5, r6, pc}
 4839              		.cfi_endproc
 4840              	.LFE25:
 4842              		.section	.text.SetBedTemp_Analyser,"ax",%progbits
 4843              		.align	1
 4844              		.syntax unified
 4845              		.thumb
 4846              		.thumb_func
 4847              		.fpu softvfp
 4849              	SetBedTemp_Analyser:
 4850              	.LFB26:
 458:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).bedT;
 4851              		.loc 1 458 0
 4852              		.cfi_startproc
 4853              		@ args = 0, pretend = 0, frame = 104
 4854              		@ frame_needed = 0, uses_anonymous_args = 0
 4855 0000 70B5     		push	{r4, r5, r6, lr}
 4856              	.LCFI58:
 4857              		.cfi_def_cfa_offset 16
 4858              		.cfi_offset 4, -16
 4859              		.cfi_offset 5, -12
 4860              		.cfi_offset 6, -8
 4861              		.cfi_offset 14, -4
 4862 0002 A6B0     		sub	sp, sp, #152
 4863              	.LCFI59:
 4864              		.cfi_def_cfa_offset 168
 459:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {HEAT_BED_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   0, t};   
 4865              		.loc 1 459 0
 4866 0004 0221     		movs	r1, #2
 4867 0006 0DA8     		add	r0, sp, #52
 4868 0008 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4869              	.LVL799:
 4870 000c 169C     		ldr	r4, [sp, #88]	@ float
 4871              	.LVL800:
 460:Src/Gcode/Buffer_Gcode.c **** }
 4872              		.loc 1 460 0
ARM GAS  /tmp/cckOLbKl.s 			page 100


 4873 000e 17AE     		add	r6, sp, #92
 4874 0010 3822     		movs	r2, #56
 4875 0012 0021     		movs	r1, #0
 4876 0014 3046     		mov	r0, r6
 4877 0016 FFF7FEFF 		bl	memset
 4878              	.LVL801:
 4879 001a 0B23     		movs	r3, #11
 4880 001c 8DF85C30 		strb	r3, [sp, #92]
 4881 0020 2594     		str	r4, [sp, #148]	@ float
 4882 0022 6C46     		mov	r4, sp
 4883              	.LVL802:
 4884 0024 1BAD     		add	r5, sp, #108
 4885 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4886 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4887 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4888 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4889 002e 95E80700 		ldm	r5, {r0, r1, r2}
 4890 0032 84E80700 		stm	r4, {r0, r1, r2}
 4891 0036 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 4892 003a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4893              	.LVL803:
 461:Src/Gcode/Buffer_Gcode.c **** 
 4894              		.loc 1 461 0
 4895 003e 26B0     		add	sp, sp, #152
 4896              	.LCFI60:
 4897              		.cfi_def_cfa_offset 16
 4898              		@ sp needed
 4899 0040 70BD     		pop	{r4, r5, r6, pc}
 4900              		.cfi_endproc
 4901              	.LFE26:
 4903              		.section	.text.WaitExtrTemp_Analyser,"ax",%progbits
 4904              		.align	1
 4905              		.syntax unified
 4906              		.thumb
 4907              		.thumb_func
 4908              		.fpu softvfp
 4910              	WaitExtrTemp_Analyser:
 4911              	.LFB27:
 464:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).extrT;
 4912              		.loc 1 464 0
 4913              		.cfi_startproc
 4914              		@ args = 0, pretend = 0, frame = 104
 4915              		@ frame_needed = 0, uses_anonymous_args = 0
 4916 0000 70B5     		push	{r4, r5, r6, lr}
 4917              	.LCFI61:
 4918              		.cfi_def_cfa_offset 16
 4919              		.cfi_offset 4, -16
 4920              		.cfi_offset 5, -12
 4921              		.cfi_offset 6, -8
 4922              		.cfi_offset 14, -4
 4923 0002 A6B0     		sub	sp, sp, #152
 4924              	.LCFI62:
 4925              		.cfi_def_cfa_offset 168
 465:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {WAIT_HEAT_EXTRUDER_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,  
 4926              		.loc 1 465 0
 4927 0004 0221     		movs	r1, #2
 4928 0006 0DA8     		add	r0, sp, #52
ARM GAS  /tmp/cckOLbKl.s 			page 101


 4929 0008 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4930              	.LVL804:
 4931 000c 159C     		ldr	r4, [sp, #84]	@ float
 4932              	.LVL805:
 466:Src/Gcode/Buffer_Gcode.c **** }
 4933              		.loc 1 466 0
 4934 000e 17AE     		add	r6, sp, #92
 4935 0010 3C22     		movs	r2, #60
 4936 0012 0021     		movs	r1, #0
 4937 0014 3046     		mov	r0, r6
 4938 0016 FFF7FEFF 		bl	memset
 4939              	.LVL806:
 4940 001a 0C23     		movs	r3, #12
 4941 001c 8DF85C30 		strb	r3, [sp, #92]
 4942 0020 2494     		str	r4, [sp, #144]	@ float
 4943 0022 6C46     		mov	r4, sp
 4944              	.LVL807:
 4945 0024 1BAD     		add	r5, sp, #108
 4946 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4947 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4948 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4949 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4950 002e 95E80700 		ldm	r5, {r0, r1, r2}
 4951 0032 84E80700 		stm	r4, {r0, r1, r2}
 4952 0036 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 4953 003a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 4954              	.LVL808:
 467:Src/Gcode/Buffer_Gcode.c **** 
 4955              		.loc 1 467 0
 4956 003e 26B0     		add	sp, sp, #152
 4957              	.LCFI63:
 4958              		.cfi_def_cfa_offset 16
 4959              		@ sp needed
 4960 0040 70BD     		pop	{r4, r5, r6, pc}
 4961              		.cfi_endproc
 4962              	.LFE27:
 4964              		.section	.text.WaitBedTemp_Analyser,"ax",%progbits
 4965              		.align	1
 4966              		.syntax unified
 4967              		.thumb
 4968              		.thumb_func
 4969              		.fpu softvfp
 4971              	WaitBedTemp_Analyser:
 4972              	.LFB28:
 470:Src/Gcode/Buffer_Gcode.c ****     float t  = getDescreteCommandBufferElement_Gcode(2).bedT;
 4973              		.loc 1 470 0
 4974              		.cfi_startproc
 4975              		@ args = 0, pretend = 0, frame = 104
 4976              		@ frame_needed = 0, uses_anonymous_args = 0
 4977 0000 70B5     		push	{r4, r5, r6, lr}
 4978              	.LCFI64:
 4979              		.cfi_def_cfa_offset 16
 4980              		.cfi_offset 4, -16
 4981              		.cfi_offset 5, -12
 4982              		.cfi_offset 6, -8
 4983              		.cfi_offset 14, -4
 4984 0002 A6B0     		sub	sp, sp, #152
ARM GAS  /tmp/cckOLbKl.s 			page 102


 4985              	.LCFI65:
 4986              		.cfi_def_cfa_offset 168
 471:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = {WAIT_HEAT_BED_COMMAND, 0, 0, 0, 0,   0, 0, 0, 0,    0, 0, 0, 0,   0, t
 4987              		.loc 1 471 0
 4988 0004 0221     		movs	r1, #2
 4989 0006 0DA8     		add	r0, sp, #52
 4990 0008 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 4991              	.LVL809:
 4992 000c 169C     		ldr	r4, [sp, #88]	@ float
 4993              	.LVL810:
 472:Src/Gcode/Buffer_Gcode.c **** }
 4994              		.loc 1 472 0
 4995 000e 17AE     		add	r6, sp, #92
 4996 0010 3822     		movs	r2, #56
 4997 0012 0021     		movs	r1, #0
 4998 0014 3046     		mov	r0, r6
 4999 0016 FFF7FEFF 		bl	memset
 5000              	.LVL811:
 5001 001a 0D23     		movs	r3, #13
 5002 001c 8DF85C30 		strb	r3, [sp, #92]
 5003 0020 2594     		str	r4, [sp, #148]	@ float
 5004 0022 6C46     		mov	r4, sp
 5005              	.LVL812:
 5006 0024 1BAD     		add	r5, sp, #108
 5007 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5008 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5009 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5010 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5011 002e 95E80700 		ldm	r5, {r0, r1, r2}
 5012 0032 84E80700 		stm	r4, {r0, r1, r2}
 5013 0036 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 5014 003a FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 5015              	.LVL813:
 473:Src/Gcode/Buffer_Gcode.c **** 
 5016              		.loc 1 473 0
 5017 003e 26B0     		add	sp, sp, #152
 5018              	.LCFI66:
 5019              		.cfi_def_cfa_offset 16
 5020              		@ sp needed
 5021 0040 70BD     		pop	{r4, r5, r6, pc}
 5022              		.cfi_endproc
 5023              	.LFE28:
 5025              		.section	.text.shiftRightAllTheCommandsTillThis,"ax",%progbits
 5026              		.align	1
 5027              		.syntax unified
 5028              		.thumb
 5029              		.thumb_func
 5030              		.fpu softvfp
 5032              	shiftRightAllTheCommandsTillThis:
 5033              	.LFB34:
 542:Src/Gcode/Buffer_Gcode.c ****     int currentCommandNumber = lastCommandNumber();
 5034              		.loc 1 542 0
 5035              		.cfi_startproc
 5036              		@ args = 0, pretend = 0, frame = 64
 5037              		@ frame_needed = 0, uses_anonymous_args = 0
 5038              	.LVL814:
 5039 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/cckOLbKl.s 			page 103


 5040              	.LCFI67:
 5041              		.cfi_def_cfa_offset 24
 5042              		.cfi_offset 4, -24
 5043              		.cfi_offset 5, -20
 5044              		.cfi_offset 6, -16
 5045              		.cfi_offset 7, -12
 5046              		.cfi_offset 8, -8
 5047              		.cfi_offset 14, -4
 5048 0004 9CB0     		sub	sp, sp, #112
 5049              	.LCFI68:
 5050              		.cfi_def_cfa_offset 136
 5051 0006 8046     		mov	r8, r0
 543:Src/Gcode/Buffer_Gcode.c ****     firstInCommandBuffer_Gcode(lastCommand());
 5052              		.loc 1 543 0
 5053 0008 FFF7FEFF 		bl	lastCommandNumber
 5054              	.LVL815:
 5055 000c 0446     		mov	r4, r0
 5056              	.LVL816:
 544:Src/Gcode/Buffer_Gcode.c ****     while ((currentCommandNumber != commandNumber))
 5057              		.loc 1 544 0
 5058 000e 0DAF     		add	r7, sp, #52
 5059 0010 3846     		mov	r0, r7
 5060              	.LVL817:
 5061 0012 FFF7FEFF 		bl	lastCommand
 5062              	.LVL818:
 5063 0016 6D46     		mov	r5, sp
 5064 0018 11AE     		add	r6, sp, #68
 5065 001a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 5066 001c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5067 001e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 5068 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5069 0022 96E80700 		ldm	r6, {r0, r1, r2}
 5070 0026 85E80700 		stm	r5, {r0, r1, r2}
 5071 002a 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 5072 002e FFF7FEFF 		bl	firstInCommandBuffer_Gcode
 5073              	.LVL819:
 545:Src/Gcode/Buffer_Gcode.c ****     {
 5074              		.loc 1 545 0
 5075 0032 1DE0     		b	.L194
 5076              	.L195:
 547:Src/Gcode/Buffer_Gcode.c ****         currentCommandNumber = prevoiusCommandNumber(currentCommandNumber);
 5077              		.loc 1 547 0
 5078 0034 2046     		mov	r0, r4
 5079 0036 FFF7FEFF 		bl	prevoiusCommandNumber
 5080              	.LVL820:
 5081 003a 0746     		mov	r7, r0
 5082 003c FFF7FEFF 		bl	number
 5083              	.LVL821:
 5084 0040 0646     		mov	r6, r0
 5085 0042 2046     		mov	r0, r4
 5086 0044 FFF7FEFF 		bl	number
 5087              	.LVL822:
 5088 0048 0C4D     		ldr	r5, .L197
 5089 004a C0EB0010 		rsb	r0, r0, r0, lsl #4
 5090 004e 8400     		lsls	r4, r0, #2
 5091              	.LVL823:
 5092 0050 C6EB0616 		rsb	r6, r6, r6, lsl #4
ARM GAS  /tmp/cckOLbKl.s 			page 104


 5093 0054 B300     		lsls	r3, r6, #2
 5094 0056 2C44     		add	r4, r4, r5
 5095 0058 1D44     		add	r5, r5, r3
 5096 005a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5097 005c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5098 005e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5099 0060 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5100 0062 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5101 0064 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5102 0066 95E80700 		ldm	r5, {r0, r1, r2}
 5103 006a 84E80700 		stm	r4, {r0, r1, r2}
 5104              	.LVL824:
 548:Src/Gcode/Buffer_Gcode.c ****     }
 5105              		.loc 1 548 0
 5106 006e 3C46     		mov	r4, r7
 5107              	.LVL825:
 5108              	.L194:
 545:Src/Gcode/Buffer_Gcode.c ****     {
 5109              		.loc 1 545 0
 5110 0070 4445     		cmp	r4, r8
 5111 0072 DFD1     		bne	.L195
 550:Src/Gcode/Buffer_Gcode.c **** 
 5112              		.loc 1 550 0
 5113 0074 1CB0     		add	sp, sp, #112
 5114              	.LCFI69:
 5115              		.cfi_def_cfa_offset 24
 5116              		@ sp needed
 5117 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5118              	.LVL826:
 5119              	.L198:
 5120 007a 00BF     		.align	2
 5121              	.L197:
 5122 007c 00000000 		.word	.LANCHOR2
 5123              		.cfi_endproc
 5124              	.LFE34:
 5126              		.section	.text.firstOutCommandBuffer_Gcode,"ax",%progbits
 5127              		.align	1
 5128              		.global	firstOutCommandBuffer_Gcode
 5129              		.syntax unified
 5130              		.thumb
 5131              		.thumb_func
 5132              		.fpu softvfp
 5134              	firstOutCommandBuffer_Gcode:
 5135              	.LFB8:
  82:Src/Gcode/Buffer_Gcode.c ****     return commandBuffer[number(firstOccupedElementCommandBuffer)];
 5136              		.loc 1 82 0
 5137              		.cfi_startproc
 5138              		@ args = 0, pretend = 0, frame = 0
 5139              		@ frame_needed = 0, uses_anonymous_args = 0
 5140              	.LVL827:
 5141 0000 70B5     		push	{r4, r5, r6, lr}
 5142              	.LCFI70:
 5143              		.cfi_def_cfa_offset 16
 5144              		.cfi_offset 4, -16
 5145              		.cfi_offset 5, -12
 5146              		.cfi_offset 6, -8
 5147              		.cfi_offset 14, -4
ARM GAS  /tmp/cckOLbKl.s 			page 105


 5148 0002 0646     		mov	r6, r0
  83:Src/Gcode/Buffer_Gcode.c **** }
 5149              		.loc 1 83 0
 5150 0004 0A4B     		ldr	r3, .L201
 5151 0006 1868     		ldr	r0, [r3]
 5152              	.LVL828:
 5153 0008 FFF7FEFF 		bl	number
 5154              	.LVL829:
 5155 000c C0EB0010 		rsb	r0, r0, r0, lsl #4
 5156 0010 8300     		lsls	r3, r0, #2
 5157 0012 3546     		mov	r5, r6
 5158 0014 074C     		ldr	r4, .L201+4
 5159 0016 1C44     		add	r4, r4, r3
 5160 0018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5161 001a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5162 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5163 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5164 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5165 0022 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5166 0024 94E80700 		ldm	r4, {r0, r1, r2}
 5167 0028 85E80700 		stm	r5, {r0, r1, r2}
  84:Src/Gcode/Buffer_Gcode.c **** 
 5168              		.loc 1 84 0
 5169 002c 3046     		mov	r0, r6
 5170 002e 70BD     		pop	{r4, r5, r6, pc}
 5171              	.LVL830:
 5172              	.L202:
 5173              		.align	2
 5174              	.L201:
 5175 0030 00000000 		.word	.LANCHOR3
 5176 0034 00000000 		.word	.LANCHOR2
 5177              		.cfi_endproc
 5178              	.LFE8:
 5180              		.section	.text.eraseFirstCommandBuffer_Gcode,"ax",%progbits
 5181              		.align	1
 5182              		.global	eraseFirstCommandBuffer_Gcode
 5183              		.syntax unified
 5184              		.thumb
 5185              		.thumb_func
 5186              		.fpu softvfp
 5188              	eraseFirstCommandBuffer_Gcode:
 5189              	.LFB9:
  87:Src/Gcode/Buffer_Gcode.c ****     if (firstOccupedElementCommandBuffer == firstFreeElementCommandBuffer)
 5190              		.loc 1 87 0
 5191              		.cfi_startproc
 5192              		@ args = 0, pretend = 0, frame = 0
 5193              		@ frame_needed = 0, uses_anonymous_args = 0
 5194 0000 10B5     		push	{r4, lr}
 5195              	.LCFI71:
 5196              		.cfi_def_cfa_offset 8
 5197              		.cfi_offset 4, -8
 5198              		.cfi_offset 14, -4
  88:Src/Gcode/Buffer_Gcode.c ****         if (!commandBufferIsFull)
 5199              		.loc 1 88 0
 5200 0002 124B     		ldr	r3, .L210
 5201 0004 1C68     		ldr	r4, [r3]
 5202 0006 124B     		ldr	r3, .L210+4
ARM GAS  /tmp/cckOLbKl.s 			page 106


 5203 0008 1B68     		ldr	r3, [r3]
 5204 000a 9C42     		cmp	r4, r3
 5205 000c 15D0     		beq	.L208
 5206              	.L204:
  92:Src/Gcode/Buffer_Gcode.c **** 
 5207              		.loc 1 92 0
 5208 000e 2046     		mov	r0, r4
 5209 0010 FFF7FEFF 		bl	number
 5210              	.LVL831:
 5211 0014 C0EB0010 		rsb	r0, r0, r0, lsl #4
 5212 0018 8300     		lsls	r3, r0, #2
 5213 001a 3C22     		movs	r2, #60
 5214 001c 0021     		movs	r1, #0
 5215 001e 0D48     		ldr	r0, .L210+8
 5216 0020 1844     		add	r0, r0, r3
 5217 0022 FFF7FEFF 		bl	memset
 5218              	.LVL832:
  94:Src/Gcode/Buffer_Gcode.c ****         firstOccupedElementCommandBuffer = firstOccupedElementCommandBuffer - COMMAND_BUFFER_LENGTH
 5219              		.loc 1 94 0
 5220 0026 322C     		cmp	r4, #50
 5221 0028 0CD0     		beq	.L209
 5222              	.L206:
  96:Src/Gcode/Buffer_Gcode.c ****     commandBufferIsFull = false;
 5223              		.loc 1 96 0
 5224 002a 084A     		ldr	r2, .L210
 5225 002c 1368     		ldr	r3, [r2]
 5226 002e 0133     		adds	r3, r3, #1
 5227 0030 1360     		str	r3, [r2]
  97:Src/Gcode/Buffer_Gcode.c **** }
 5228              		.loc 1 97 0
 5229 0032 094B     		ldr	r3, .L210+12
 5230 0034 0022     		movs	r2, #0
 5231 0036 1A70     		strb	r2, [r3]
 5232              	.L203:
  98:Src/Gcode/Buffer_Gcode.c **** 
 5233              		.loc 1 98 0
 5234 0038 10BD     		pop	{r4, pc}
 5235              	.L208:
  89:Src/Gcode/Buffer_Gcode.c ****             return;
 5236              		.loc 1 89 0
 5237 003a 074B     		ldr	r3, .L210+12
 5238 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5239 003e 002B     		cmp	r3, #0
 5240 0040 E5D1     		bne	.L204
 5241 0042 F9E7     		b	.L203
 5242              	.L209:
  95:Src/Gcode/Buffer_Gcode.c ****     firstOccupedElementCommandBuffer++;
 5243              		.loc 1 95 0
 5244 0044 323C     		subs	r4, r4, #50
 5245 0046 014B     		ldr	r3, .L210
 5246 0048 1C60     		str	r4, [r3]
 5247 004a EEE7     		b	.L206
 5248              	.L211:
 5249              		.align	2
 5250              	.L210:
 5251 004c 00000000 		.word	.LANCHOR3
 5252 0050 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cckOLbKl.s 			page 107


 5253 0054 00000000 		.word	.LANCHOR2
 5254 0058 00000000 		.word	.LANCHOR4
 5255              		.cfi_endproc
 5256              	.LFE9:
 5258              		.section	.text.checkFreeSpaceCommandBuffer_Gcode,"ax",%progbits
 5259              		.align	1
 5260              		.global	checkFreeSpaceCommandBuffer_Gcode
 5261              		.syntax unified
 5262              		.thumb
 5263              		.thumb_func
 5264              		.fpu softvfp
 5266              	checkFreeSpaceCommandBuffer_Gcode:
 5267              	.LFB10:
 101:Src/Gcode/Buffer_Gcode.c ****     if (firstFreeElementCommandBuffer == firstOccupedElementCommandBuffer)
 5268              		.loc 1 101 0
 5269              		.cfi_startproc
 5270              		@ args = 0, pretend = 0, frame = 0
 5271              		@ frame_needed = 0, uses_anonymous_args = 0
 5272              		@ link register save eliminated.
 102:Src/Gcode/Buffer_Gcode.c ****         if (commandBufferIsFull)
 5273              		.loc 1 102 0
 5274 0000 094B     		ldr	r3, .L219
 5275 0002 1868     		ldr	r0, [r3]
 5276 0004 094B     		ldr	r3, .L219+4
 5277 0006 1B68     		ldr	r3, [r3]
 5278 0008 9842     		cmp	r0, r3
 5279 000a 04D0     		beq	.L217
 5280              	.L213:
 5281              	.LVL833:
 107:Src/Gcode/Buffer_Gcode.c ****         occupedSpace = occupedSpace + COMMAND_BUFFER_LENGTH;
 5282              		.loc 1 107 0
 5283 000c C01A     		subs	r0, r0, r3
 5284              	.LVL834:
 5285 000e 08D4     		bmi	.L218
 5286              	.LVL835:
 5287              	.L215:
 109:Src/Gcode/Buffer_Gcode.c ****     return freeSpace;
 5288              		.loc 1 109 0
 5289 0010 C0F13200 		rsb	r0, r0, #50
 5290              	.LVL836:
 110:Src/Gcode/Buffer_Gcode.c **** }
 5291              		.loc 1 110 0
 5292 0014 7047     		bx	lr
 5293              	.LVL837:
 5294              	.L217:
 103:Src/Gcode/Buffer_Gcode.c ****             return 0;
 5295              		.loc 1 103 0
 5296 0016 064A     		ldr	r2, .L219+8
 5297 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5298 001a 002A     		cmp	r2, #0
 5299 001c F6D0     		beq	.L213
 104:Src/Gcode/Buffer_Gcode.c **** 
 5300              		.loc 1 104 0
 5301 001e 0020     		movs	r0, #0
 111:Src/Gcode/Buffer_Gcode.c **** 
 5302              		.loc 1 111 0
 5303 0020 7047     		bx	lr
ARM GAS  /tmp/cckOLbKl.s 			page 108


 5304              	.LVL838:
 5305              	.L218:
 108:Src/Gcode/Buffer_Gcode.c ****     int freeSpace = COMMAND_BUFFER_LENGTH - occupedSpace;
 5306              		.loc 1 108 0
 5307 0022 3230     		adds	r0, r0, #50
 5308              	.LVL839:
 5309 0024 F4E7     		b	.L215
 5310              	.L220:
 5311 0026 00BF     		.align	2
 5312              	.L219:
 5313 0028 00000000 		.word	.LANCHOR0
 5314 002c 00000000 		.word	.LANCHOR3
 5315 0030 00000000 		.word	.LANCHOR4
 5316              		.cfi_endproc
 5317              	.LFE10:
 5319              		.section	.text.enoghSpaceIsReservedCommandBuffer_Gcode,"ax",%progbits
 5320              		.align	1
 5321              		.global	enoghSpaceIsReservedCommandBuffer_Gcode
 5322              		.syntax unified
 5323              		.thumb
 5324              		.thumb_func
 5325              		.fpu softvfp
 5327              	enoghSpaceIsReservedCommandBuffer_Gcode:
 5328              	.LFB11:
 114:Src/Gcode/Buffer_Gcode.c ****     return checkFreeSpaceCommandBuffer_Gcode() > RESERVE_LENGTH;
 5329              		.loc 1 114 0
 5330              		.cfi_startproc
 5331              		@ args = 0, pretend = 0, frame = 0
 5332              		@ frame_needed = 0, uses_anonymous_args = 0
 5333 0000 08B5     		push	{r3, lr}
 5334              	.LCFI72:
 5335              		.cfi_def_cfa_offset 8
 5336              		.cfi_offset 3, -8
 5337              		.cfi_offset 14, -4
 115:Src/Gcode/Buffer_Gcode.c **** }
 5338              		.loc 1 115 0
 5339 0002 FFF7FEFF 		bl	checkFreeSpaceCommandBuffer_Gcode
 5340              	.LVL840:
 116:Src/Gcode/Buffer_Gcode.c **** 
 5341              		.loc 1 116 0
 5342 0006 0A28     		cmp	r0, #10
 5343 0008 D4BF     		ite	le
 5344 000a 0020     		movle	r0, #0
 5345 000c 0120     		movgt	r0, #1
 5346 000e 08BD     		pop	{r3, pc}
 5347              		.cfi_endproc
 5348              	.LFE11:
 5350              		.section	.text.descreteCommandAnalyser_Gcode,"ax",%progbits
 5351              		.align	1
 5352              		.global	descreteCommandAnalyser_Gcode
 5353              		.syntax unified
 5354              		.thumb
 5355              		.thumb_func
 5356              		.fpu softvfp
 5358              	descreteCommandAnalyser_Gcode:
 5359              	.LFB29:
 476:Src/Gcode/Buffer_Gcode.c ****     commandType_Gcode typeOfCommand = getDescreteCommandBufferElement_Gcode(2).type;
ARM GAS  /tmp/cckOLbKl.s 			page 109


 5360              		.loc 1 476 0
 5361              		.cfi_startproc
 5362              		@ args = 0, pretend = 0, frame = 368
 5363              		@ frame_needed = 0, uses_anonymous_args = 0
 5364 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5365              	.LCFI73:
 5366              		.cfi_def_cfa_offset 36
 5367              		.cfi_offset 4, -36
 5368              		.cfi_offset 5, -32
 5369              		.cfi_offset 6, -28
 5370              		.cfi_offset 7, -24
 5371              		.cfi_offset 8, -20
 5372              		.cfi_offset 9, -16
 5373              		.cfi_offset 10, -12
 5374              		.cfi_offset 11, -8
 5375              		.cfi_offset 14, -4
 5376 0004 DDB0     		sub	sp, sp, #372
 5377              	.LCFI74:
 5378              		.cfi_def_cfa_offset 408
 477:Src/Gcode/Buffer_Gcode.c ****     long dXn = getDescreteCommandBufferElement_Gcode(2).Xn - getDescreteCommandBufferElement_Gcode(
 5379              		.loc 1 477 0
 5380 0006 0221     		movs	r1, #2
 5381 0008 02A8     		add	r0, sp, #8
 5382 000a FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5383              	.LVL841:
 5384 000e 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
 5385              	.LVL842:
 478:Src/Gcode/Buffer_Gcode.c ****     long dYn = getDescreteCommandBufferElement_Gcode(2).Yn - getDescreteCommandBufferElement_Gcode(
 5386              		.loc 1 478 0
 5387 0012 0221     		movs	r1, #2
 5388 0014 0CA8     		add	r0, sp, #48
 5389 0016 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5390              	.LVL843:
 5391 001a DDF834A0 		ldr	r10, [sp, #52]
 5392 001e 0121     		movs	r1, #1
 5393 0020 16A8     		add	r0, sp, #88
 5394 0022 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5395              	.LVL844:
 5396 0026 179D     		ldr	r5, [sp, #92]
 5397              	.LVL845:
 479:Src/Gcode/Buffer_Gcode.c ****     long dZn = getDescreteCommandBufferElement_Gcode(2).Zn - getDescreteCommandBufferElement_Gcode(
 5398              		.loc 1 479 0
 5399 0028 0221     		movs	r1, #2
 5400 002a 20A8     		add	r0, sp, #128
 5401 002c FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5402              	.LVL846:
 5403 0030 DDF88890 		ldr	r9, [sp, #136]
 5404 0034 0121     		movs	r1, #1
 5405 0036 2AA8     		add	r0, sp, #168
 5406 0038 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5407              	.LVL847:
 5408 003c DDF8B080 		ldr	r8, [sp, #176]
 5409              	.LVL848:
 480:Src/Gcode/Buffer_Gcode.c ****     long dEn = getDescreteCommandBufferElement_Gcode(2).En - getDescreteCommandBufferElement_Gcode(
 5410              		.loc 1 480 0
 5411 0040 0221     		movs	r1, #2
 5412 0042 34A8     		add	r0, sp, #208
ARM GAS  /tmp/cckOLbKl.s 			page 110


 5413 0044 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5414              	.LVL849:
 5415 0048 379F     		ldr	r7, [sp, #220]
 5416 004a 0121     		movs	r1, #1
 5417 004c 3EA8     		add	r0, sp, #248
 5418 004e FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5419              	.LVL850:
 5420 0052 419E     		ldr	r6, [sp, #260]
 5421              	.LVL851:
 481:Src/Gcode/Buffer_Gcode.c **** 
 5422              		.loc 1 481 0
 5423 0054 0221     		movs	r1, #2
 5424 0056 48A8     		add	r0, sp, #288
 5425 0058 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5426              	.LVL852:
 5427 005c DDF830B1 		ldr	fp, [sp, #304]
 5428 0060 0121     		movs	r1, #1
 5429 0062 52A8     		add	r0, sp, #328
 5430 0064 FFF7FEFF 		bl	getDescreteCommandBufferElement_Gcode
 5431              	.LVL853:
 5432 0068 569B     		ldr	r3, [sp, #344]
 5433 006a 0193     		str	r3, [sp, #4]
 5434              	.LVL854:
 483:Src/Gcode/Buffer_Gcode.c ****     {
 5435              		.loc 1 483 0
 5436 006c 012C     		cmp	r4, #1
 5437 006e 18D0     		beq	.L240
 497:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Y_COMMAND)   {HomeY_Analyser();  return;}
 5438              		.loc 1 497 0
 5439 0070 032C     		cmp	r4, #3
 5440 0072 2AD0     		beq	.L241
 498:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Z_COMMAND)   {HomeZ_Analyser();  return;}
 5441              		.loc 1 498 0
 5442 0074 042C     		cmp	r4, #4
 5443 0076 2BD0     		beq	.L242
 499:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XY_COMMAND)  {HomeXY_Analyser(); return;}
 5444              		.loc 1 499 0
 5445 0078 052C     		cmp	r4, #5
 5446 007a 2CD0     		beq	.L243
 500:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XZ_COMMAND)  {HomeZ_Analyser();  HomeX_Analyser();  return;}
 5447              		.loc 1 500 0
 5448 007c 062C     		cmp	r4, #6
 5449 007e 2DD0     		beq	.L244
 501:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_YZ_COMMAND)  {HomeZ_Analyser();  HomeY_Analyser();  return;}
 5450              		.loc 1 501 0
 5451 0080 072C     		cmp	r4, #7
 5452 0082 2ED0     		beq	.L245
 502:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XYZ_COMMAND) {HomeZ_Analyser();  HomeXY_Analyser(); return;}
 5453              		.loc 1 502 0
 5454 0084 082C     		cmp	r4, #8
 5455 0086 31D0     		beq	.L246
 503:Src/Gcode/Buffer_Gcode.c **** 
 5456              		.loc 1 503 0
 5457 0088 092C     		cmp	r4, #9
 5458 008a 34D0     		beq	.L247
 505:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == HEAT_BED_COMMAND)        {SetBedTemp_Analyser();   return;}
 5459              		.loc 1 505 0
ARM GAS  /tmp/cckOLbKl.s 			page 111


 5460 008c 0A2C     		cmp	r4, #10
 5461 008e 37D0     		beq	.L248
 506:Src/Gcode/Buffer_Gcode.c **** 
 5462              		.loc 1 506 0
 5463 0090 0B2C     		cmp	r4, #11
 5464 0092 38D0     		beq	.L249
 508:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == WAIT_HEAT_BED_COMMAND)        {WaitBedTemp_Analyser();   return;}
 5465              		.loc 1 508 0
 5466 0094 0C2C     		cmp	r4, #12
 5467 0096 39D0     		beq	.L250
 509:Src/Gcode/Buffer_Gcode.c **** }
 5468              		.loc 1 509 0
 5469 0098 0D2C     		cmp	r4, #13
 5470 009a 0AD1     		bne	.L223
 509:Src/Gcode/Buffer_Gcode.c **** }
 5471              		.loc 1 509 0 is_stmt 0 discriminator 1
 5472 009c FFF7FEFF 		bl	WaitBedTemp_Analyser
 5473              	.LVL855:
 5474 00a0 07E0     		b	.L223
 5475              	.LVL856:
 5476              	.L240:
 485:Src/Gcode/Buffer_Gcode.c ****             MoveZ_Analyser();
 5477              		.loc 1 485 0 is_stmt 1
 5478 00a2 B742     		cmp	r7, r6
 5479 00a4 08D1     		bne	.L251
 5480              	.LVL857:
 5481              	.L225:
 487:Src/Gcode/Buffer_Gcode.c ****         {
 5482              		.loc 1 487 0
 5483 00a6 AA45     		cmp	r10, r5
 5484 00a8 01D1     		bne	.L226
 487:Src/Gcode/Buffer_Gcode.c ****         {
 5485              		.loc 1 487 0 is_stmt 0 discriminator 1
 5486 00aa C145     		cmp	r9, r8
 5487 00ac 07D0     		beq	.L227
 5488              	.L226:
 489:Src/Gcode/Buffer_Gcode.c ****             return;
 5489              		.loc 1 489 0 is_stmt 1
 5490 00ae FFF7FEFF 		bl	MoveXY_Analyser
 5491              	.LVL858:
 5492              	.L223:
 510:Src/Gcode/Buffer_Gcode.c **** 
 5493              		.loc 1 510 0
 5494 00b2 5DB0     		add	sp, sp, #372
 5495              	.LCFI75:
 5496              		.cfi_remember_state
 5497              		.cfi_def_cfa_offset 36
 5498              		@ sp needed
 5499 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5500              	.LVL859:
 5501              	.L251:
 5502              	.LCFI76:
 5503              		.cfi_restore_state
 486:Src/Gcode/Buffer_Gcode.c ****         if (dXn != 0 || dYn != 0)
 5504              		.loc 1 486 0
 5505 00b8 FFF7FEFF 		bl	MoveZ_Analyser
 5506              	.LVL860:
ARM GAS  /tmp/cckOLbKl.s 			page 112


 5507 00bc F3E7     		b	.L225
 5508              	.L227:
 492:Src/Gcode/Buffer_Gcode.c ****             MoveE_Analyser();
 5509              		.loc 1 492 0
 5510 00be 019B     		ldr	r3, [sp, #4]
 5511 00c0 9B45     		cmp	fp, r3
 5512 00c2 F6D0     		beq	.L223
 493:Src/Gcode/Buffer_Gcode.c ****         return;
 5513              		.loc 1 493 0
 5514 00c4 FFF7FEFF 		bl	MoveE_Analyser
 5515              	.LVL861:
 5516 00c8 F3E7     		b	.L223
 5517              	.LVL862:
 5518              	.L241:
 497:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Y_COMMAND)   {HomeY_Analyser();  return;}
 5519              		.loc 1 497 0 discriminator 1
 5520 00ca FFF7FEFF 		bl	HomeX_Analyser
 5521              	.LVL863:
 5522 00ce F0E7     		b	.L223
 5523              	.LVL864:
 5524              	.L242:
 498:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_Z_COMMAND)   {HomeZ_Analyser();  return;}
 5525              		.loc 1 498 0 discriminator 1
 5526 00d0 FFF7FEFF 		bl	HomeY_Analyser
 5527              	.LVL865:
 5528 00d4 EDE7     		b	.L223
 5529              	.LVL866:
 5530              	.L243:
 499:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XY_COMMAND)  {HomeXY_Analyser(); return;}
 5531              		.loc 1 499 0 discriminator 1
 5532 00d6 FFF7FEFF 		bl	HomeZ_Analyser
 5533              	.LVL867:
 5534 00da EAE7     		b	.L223
 5535              	.LVL868:
 5536              	.L244:
 500:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XZ_COMMAND)  {HomeZ_Analyser();  HomeX_Analyser();  return;}
 5537              		.loc 1 500 0 discriminator 1
 5538 00dc FFF7FEFF 		bl	HomeXY_Analyser
 5539              	.LVL869:
 5540 00e0 E7E7     		b	.L223
 5541              	.LVL870:
 5542              	.L245:
 501:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_YZ_COMMAND)  {HomeZ_Analyser();  HomeY_Analyser();  return;}
 5543              		.loc 1 501 0 discriminator 1
 5544 00e2 FFF7FEFF 		bl	HomeZ_Analyser
 5545              	.LVL871:
 5546 00e6 FFF7FEFF 		bl	HomeX_Analyser
 5547              	.LVL872:
 5548 00ea E2E7     		b	.L223
 5549              	.LVL873:
 5550              	.L246:
 502:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == GO_HOME_XYZ_COMMAND) {HomeZ_Analyser();  HomeXY_Analyser(); return;}
 5551              		.loc 1 502 0 discriminator 1
 5552 00ec FFF7FEFF 		bl	HomeZ_Analyser
 5553              	.LVL874:
 5554 00f0 FFF7FEFF 		bl	HomeY_Analyser
 5555              	.LVL875:
ARM GAS  /tmp/cckOLbKl.s 			page 113


 5556 00f4 DDE7     		b	.L223
 5557              	.LVL876:
 5558              	.L247:
 503:Src/Gcode/Buffer_Gcode.c **** 
 5559              		.loc 1 503 0 discriminator 1
 5560 00f6 FFF7FEFF 		bl	HomeZ_Analyser
 5561              	.LVL877:
 5562 00fa FFF7FEFF 		bl	HomeXY_Analyser
 5563              	.LVL878:
 5564 00fe D8E7     		b	.L223
 5565              	.LVL879:
 5566              	.L248:
 505:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == HEAT_BED_COMMAND)        {SetBedTemp_Analyser();   return;}
 5567              		.loc 1 505 0 discriminator 1
 5568 0100 FFF7FEFF 		bl	SetExtrTemp_Analyser
 5569              	.LVL880:
 5570 0104 D5E7     		b	.L223
 5571              	.LVL881:
 5572              	.L249:
 506:Src/Gcode/Buffer_Gcode.c **** 
 5573              		.loc 1 506 0 discriminator 1
 5574 0106 FFF7FEFF 		bl	SetBedTemp_Analyser
 5575              	.LVL882:
 5576 010a D2E7     		b	.L223
 5577              	.LVL883:
 5578              	.L250:
 508:Src/Gcode/Buffer_Gcode.c ****     if (typeOfCommand == WAIT_HEAT_BED_COMMAND)        {WaitBedTemp_Analyser();   return;}
 5579              		.loc 1 508 0 discriminator 1
 5580 010c FFF7FEFF 		bl	WaitExtrTemp_Analyser
 5581              	.LVL884:
 5582 0110 CFE7     		b	.L223
 5583              		.cfi_endproc
 5584              	.LFE29:
 5586              		.global	__aeabi_dcmpgt
 5587              		.global	__aeabi_dcmplt
 5588              		.section	.text.smoothStop_Gcode,"ax",%progbits
 5589              		.align	1
 5590              		.global	smoothStop_Gcode
 5591              		.syntax unified
 5592              		.thumb
 5593              		.thumb_func
 5594              		.fpu softvfp
 5596              	smoothStop_Gcode:
 5597              	.LFB36:
 557:Src/Gcode/Buffer_Gcode.c **** 
 558:Src/Gcode/Buffer_Gcode.c **** void smoothStop_Gcode(void)
 559:Src/Gcode/Buffer_Gcode.c **** {
 5598              		.loc 1 559 0
 5599              		.cfi_startproc
 5600              		@ args = 0, pretend = 0, frame = 112
 5601              		@ frame_needed = 0, uses_anonymous_args = 0
 5602 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5603              	.LCFI77:
 5604              		.cfi_def_cfa_offset 36
 5605              		.cfi_offset 4, -36
 5606              		.cfi_offset 5, -32
 5607              		.cfi_offset 6, -28
ARM GAS  /tmp/cckOLbKl.s 			page 114


 5608              		.cfi_offset 7, -24
 5609              		.cfi_offset 8, -20
 5610              		.cfi_offset 9, -16
 5611              		.cfi_offset 10, -12
 5612              		.cfi_offset 11, -8
 5613              		.cfi_offset 14, -4
 5614 0004 9DB0     		sub	sp, sp, #116
 5615              	.LCFI78:
 5616              		.cfi_def_cfa_offset 152
 560:Src/Gcode/Buffer_Gcode.c ****     int currentCommandNumber = lastCommandNumber();
 5617              		.loc 1 560 0
 5618 0006 FFF7FEFF 		bl	lastCommandNumber
 5619              	.LVL885:
 5620 000a 0A90     		str	r0, [sp, #40]
 5621              	.LVL886:
 561:Src/Gcode/Buffer_Gcode.c ****     command_Gcode command = commandBuffer[number(currentCommandNumber)];
 5622              		.loc 1 561 0
 5623 000c FFF7FEFF 		bl	number
 5624              	.LVL887:
 5625 0010 C0EB0010 		rsb	r0, r0, r0, lsl #4
 5626 0014 8300     		lsls	r3, r0, #2
 5627 0016 0DAD     		add	r5, sp, #52
 5628 0018 404C     		ldr	r4, .L259
 5629 001a 1C44     		add	r4, r4, r3
 5630 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5631 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5632 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5633 0022 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5634 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5635 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 5636 0028 94E80700 		ldm	r4, {r0, r1, r2}
 5637 002c 85E80700 		stm	r5, {r0, r1, r2}
 562:Src/Gcode/Buffer_Gcode.c **** 
 563:Src/Gcode/Buffer_Gcode.c ****     if (!smoothable(command.type)) return;
 5638              		.loc 1 563 0
 5639 0030 9DF83400 		ldrb	r0, [sp, #52]	@ zero_extendqisi2
 5640 0034 FFF7FEFF 		bl	smoothable
 5641              	.LVL888:
 5642 0038 10B9     		cbnz	r0, .L258
 5643              	.LVL889:
 5644              	.L252:
 564:Src/Gcode/Buffer_Gcode.c **** 
 565:Src/Gcode/Buffer_Gcode.c ****     float speedAtTheEnd = 0;
 566:Src/Gcode/Buffer_Gcode.c ****     float speedAtTheStart = sqrtf(pow(command.FnX,2)+pow(command.FnY,2));
 567:Src/Gcode/Buffer_Gcode.c ****     float acceleration = ACCELERATION_XY_STEPS_PER_SS;
 568:Src/Gcode/Buffer_Gcode.c ****     float allowedDistance = sqrtf( pow(command.dXn,2) + pow(command.dYn,2) );
 569:Src/Gcode/Buffer_Gcode.c ****     float cosX = (float)command.dXn/allowedDistance;
 570:Src/Gcode/Buffer_Gcode.c ****     float cosY = (float)command.dYn/allowedDistance;
 571:Src/Gcode/Buffer_Gcode.c ****     float cosE = (float)command.dEn/allowedDistance;
 572:Src/Gcode/Buffer_Gcode.c **** 
 573:Src/Gcode/Buffer_Gcode.c ****     if    (allowedDistance + 0.5 > distanceRequired(speedAtTheStart, speedAtTheEnd, acceleration)) 
 574:Src/Gcode/Buffer_Gcode.c ****     while (allowedDistance + 0.5 < distanceRequired(speedAtTheStart, speedAtTheEnd, acceleration))
 575:Src/Gcode/Buffer_Gcode.c ****     {
 576:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].FnX = cosX*sqrtf(pow(speedAtTheEnd,2)+2*acceler
 577:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].FnY = cosY*sqrtf(pow(speedAtTheEnd,2)+2*acceler
 578:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].FnE = cosE*sqrtf(pow(speedAtTheEnd,2)+2*acceler
 579:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnX = -cosX*acceleration;
ARM GAS  /tmp/cckOLbKl.s 			page 115


 580:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnY = -cosY*acceleration;
 581:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnE = -cosE*acceleration;
 582:Src/Gcode/Buffer_Gcode.c **** 
 583:Src/Gcode/Buffer_Gcode.c ****         currentCommandNumber = prevoiusCommandNumber(currentCommandNumber);
 584:Src/Gcode/Buffer_Gcode.c ****         command = commandBuffer[number(currentCommandNumber)];
 585:Src/Gcode/Buffer_Gcode.c **** 
 586:Src/Gcode/Buffer_Gcode.c ****         speedAtTheEnd = sqrtf( pow(commandBuffer[number(nextCommandNumber(currentCommandNumber))].F
 587:Src/Gcode/Buffer_Gcode.c ****         speedAtTheStart = sqrtf(pow(command.FnX,2)+pow(command.FnY,2));
 588:Src/Gcode/Buffer_Gcode.c ****         acceleration = ACCELERATION_XY_STEPS_PER_SS;
 589:Src/Gcode/Buffer_Gcode.c ****         allowedDistance = sqrtf( pow(command.dXn,2) + pow(command.dYn,2) );
 590:Src/Gcode/Buffer_Gcode.c ****         cosX = (float)command.dXn/allowedDistance;
 591:Src/Gcode/Buffer_Gcode.c ****         cosY = (float)command.dYn/allowedDistance;
 592:Src/Gcode/Buffer_Gcode.c ****         cosE = (float)command.dEn/allowedDistance;
 593:Src/Gcode/Buffer_Gcode.c ****     }
 594:Src/Gcode/Buffer_Gcode.c **** 
 595:Src/Gcode/Buffer_Gcode.c ****     shiftRightAllTheCommandsTillThis(currentCommandNumber);
 596:Src/Gcode/Buffer_Gcode.c **** 
 597:Src/Gcode/Buffer_Gcode.c ****     float aStar = sqrtf(pow(command.AnX,2)+pow(command.AnY,2));
 598:Src/Gcode/Buffer_Gcode.c ****     float lStar = acceleration*allowedDistance/(acceleration+aStar) + ( pow(speedAtTheEnd,2) - pow(
 599:Src/Gcode/Buffer_Gcode.c ****     float vStar = sqrtf( pow(speedAtTheStart,2) + 2*aStar*lStar );
 600:Src/Gcode/Buffer_Gcode.c **** 
 601:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].dXn = lroundf(lStar*cosX);              commandBuff
 602:Src/Gcode/Buffer_Gcode.c **** 
 603:Src/Gcode/Buffer_Gcode.c ****     currentCommandNumber = nextCommandNumber(currentCommandNumber);
 604:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].dXn = command.dXn-lroundf(lStar*cosX);  commandBuff
 605:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].FnX = vStar*cosX;                       commandBuff
 606:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].AnX = -acceleration*cosX;               commandBuff
 607:Src/Gcode/Buffer_Gcode.c **** }
 5645              		.loc 1 607 0
 5646 003a 1DB0     		add	sp, sp, #116
 5647              	.LCFI79:
 5648              		.cfi_remember_state
 5649              		.cfi_def_cfa_offset 36
 5650              		@ sp needed
 5651 003c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5652              	.LVL890:
 5653              	.L258:
 5654              	.LCFI80:
 5655              		.cfi_restore_state
 566:Src/Gcode/Buffer_Gcode.c ****     float acceleration = ACCELERATION_XY_STEPS_PER_SS;
 5656              		.loc 1 566 0
 5657 0040 0024     		movs	r4, #0
 5658 0042 4FF08045 		mov	r5, #1073741824
 5659 0046 1298     		ldr	r0, [sp, #72]	@ float
 5660 0048 FFF7FEFF 		bl	__aeabi_f2d
 5661              	.LVL891:
 5662 004c 2246     		mov	r2, r4
 5663 004e 2B46     		mov	r3, r5
 5664 0050 FFF7FEFF 		bl	pow
 5665              	.LVL892:
 5666 0054 0646     		mov	r6, r0
 5667 0056 0F46     		mov	r7, r1
 5668 0058 1398     		ldr	r0, [sp, #76]	@ float
 5669 005a FFF7FEFF 		bl	__aeabi_f2d
 5670              	.LVL893:
 5671 005e 2246     		mov	r2, r4
 5672 0060 2B46     		mov	r3, r5
ARM GAS  /tmp/cckOLbKl.s 			page 116


 5673 0062 FFF7FEFF 		bl	pow
 5674              	.LVL894:
 5675 0066 0246     		mov	r2, r0
 5676 0068 0B46     		mov	r3, r1
 5677 006a 3046     		mov	r0, r6
 5678 006c 3946     		mov	r1, r7
 5679 006e FFF7FEFF 		bl	__aeabi_dadd
 5680              	.LVL895:
 5681 0072 FFF7FEFF 		bl	__aeabi_d2f
 5682              	.LVL896:
 5683 0076 FFF7FEFF 		bl	sqrtf
 5684              	.LVL897:
 5685 007a 8346     		mov	fp, r0
 5686              	.LVL898:
 568:Src/Gcode/Buffer_Gcode.c ****     float cosX = (float)command.dXn/allowedDistance;
 5687              		.loc 1 568 0
 5688 007c DDF838A0 		ldr	r10, [sp, #56]
 5689 0080 5046     		mov	r0, r10
 5690              	.LVL899:
 5691 0082 FFF7FEFF 		bl	__aeabi_i2d
 5692              	.LVL900:
 5693 0086 2246     		mov	r2, r4
 5694 0088 2B46     		mov	r3, r5
 5695 008a FFF7FEFF 		bl	pow
 5696              	.LVL901:
 5697 008e 0646     		mov	r6, r0
 5698 0090 0F46     		mov	r7, r1
 5699 0092 DDF83C90 		ldr	r9, [sp, #60]
 5700 0096 4846     		mov	r0, r9
 5701 0098 FFF7FEFF 		bl	__aeabi_i2d
 5702              	.LVL902:
 5703 009c 2246     		mov	r2, r4
 5704 009e 2B46     		mov	r3, r5
 5705 00a0 FFF7FEFF 		bl	pow
 5706              	.LVL903:
 5707 00a4 0246     		mov	r2, r0
 5708 00a6 0B46     		mov	r3, r1
 5709 00a8 3046     		mov	r0, r6
 5710 00aa 3946     		mov	r1, r7
 5711 00ac FFF7FEFF 		bl	__aeabi_dadd
 5712              	.LVL904:
 5713 00b0 FFF7FEFF 		bl	__aeabi_d2f
 5714              	.LVL905:
 5715 00b4 FFF7FEFF 		bl	sqrtf
 5716              	.LVL906:
 5717 00b8 8046     		mov	r8, r0
 5718              	.LVL907:
 569:Src/Gcode/Buffer_Gcode.c ****     float cosY = (float)command.dYn/allowedDistance;
 5719              		.loc 1 569 0
 5720 00ba 5046     		mov	r0, r10
 5721              	.LVL908:
 5722 00bc FFF7FEFF 		bl	__aeabi_i2f
 5723              	.LVL909:
 5724 00c0 4146     		mov	r1, r8
 5725 00c2 FFF7FEFF 		bl	__aeabi_fdiv
 5726              	.LVL910:
 5727 00c6 0646     		mov	r6, r0
ARM GAS  /tmp/cckOLbKl.s 			page 117


 5728              	.LVL911:
 570:Src/Gcode/Buffer_Gcode.c ****     float cosE = (float)command.dEn/allowedDistance;
 5729              		.loc 1 570 0
 5730 00c8 4846     		mov	r0, r9
 5731              	.LVL912:
 5732 00ca FFF7FEFF 		bl	__aeabi_i2f
 5733              	.LVL913:
 5734 00ce 4146     		mov	r1, r8
 5735 00d0 FFF7FEFF 		bl	__aeabi_fdiv
 5736              	.LVL914:
 5737 00d4 0746     		mov	r7, r0
 5738              	.LVL915:
 571:Src/Gcode/Buffer_Gcode.c **** 
 5739              		.loc 1 571 0
 5740 00d6 1198     		ldr	r0, [sp, #68]
 5741              	.LVL916:
 5742 00d8 FFF7FEFF 		bl	__aeabi_i2f
 5743              	.LVL917:
 5744 00dc 4146     		mov	r1, r8
 5745 00de FFF7FEFF 		bl	__aeabi_fdiv
 5746              	.LVL918:
 5747 00e2 8146     		mov	r9, r0
 5748              	.LVL919:
 573:Src/Gcode/Buffer_Gcode.c ****     while (allowedDistance + 0.5 < distanceRequired(speedAtTheStart, speedAtTheEnd, acceleration))
 5749              		.loc 1 573 0
 5750 00e4 4046     		mov	r0, r8
 5751              	.LVL920:
 5752 00e6 FFF7FEFF 		bl	__aeabi_f2d
 5753              	.LVL921:
 5754 00ea 0022     		movs	r2, #0
 5755 00ec 0C4B     		ldr	r3, .L259+4
 5756 00ee FFF7FEFF 		bl	__aeabi_dadd
 5757              	.LVL922:
 5758 00f2 0446     		mov	r4, r0
 5759 00f4 0D46     		mov	r5, r1
 5760 00f6 0B4A     		ldr	r2, .L259+8
 5761 00f8 0021     		movs	r1, #0
 5762 00fa 5846     		mov	r0, fp
 5763 00fc FFF7FEFF 		bl	distanceRequired
 5764              	.LVL923:
 5765 0100 FFF7FEFF 		bl	__aeabi_i2d
 5766              	.LVL924:
 5767 0104 0246     		mov	r2, r0
 5768 0106 0B46     		mov	r3, r1
 5769 0108 2046     		mov	r0, r4
 5770 010a 2946     		mov	r1, r5
 5771 010c FFF7FEFF 		bl	__aeabi_dcmpgt
 5772              	.LVL925:
 5773 0110 0028     		cmp	r0, #0
 5774 0112 92D1     		bne	.L252
 565:Src/Gcode/Buffer_Gcode.c ****     float speedAtTheStart = sqrtf(pow(command.FnX,2)+pow(command.FnY,2));
 5775              		.loc 1 565 0
 5776 0114 0024     		movs	r4, #0
 5777 0116 5D46     		mov	r5, fp
 5778 0118 05E1     		b	.L254
 5779              	.L260:
 5780 011a 00BF     		.align	2
ARM GAS  /tmp/cckOLbKl.s 			page 118


 5781              	.L259:
 5782 011c 00000000 		.word	.LANCHOR2
 5783 0120 0000E03F 		.word	1071644672
 5784 0124 ABAAA644 		.word	1151773355
 5785              	.LVL926:
 5786              	.L255:
 576:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].FnY = cosY*sqrtf(pow(speedAtTheEnd,2)+2*acceler
 5787              		.loc 1 576 0
 5788 0128 2046     		mov	r0, r4
 5789 012a FFF7FEFF 		bl	__aeabi_f2d
 5790              	.LVL927:
 5791 012e CDE90001 		strd	r0, [sp]
 5792 0132 0022     		movs	r2, #0
 5793 0134 4FF08043 		mov	r3, #1073741824
 5794 0138 FFF7FEFF 		bl	pow
 5795              	.LVL928:
 5796 013c 0446     		mov	r4, r0
 5797              	.LVL929:
 5798 013e 0D46     		mov	r5, r1
 5799              	.LVL930:
 5800 0140 CA49     		ldr	r1, .L261
 5801 0142 4046     		mov	r0, r8
 5802 0144 FFF7FEFF 		bl	__aeabi_fmul
 5803              	.LVL931:
 5804 0148 FFF7FEFF 		bl	__aeabi_f2d
 5805              	.LVL932:
 5806 014c CDE90201 		strd	r0, [sp, #8]
 5807 0150 0246     		mov	r2, r0
 5808 0152 0B46     		mov	r3, r1
 5809 0154 2046     		mov	r0, r4
 5810 0156 2946     		mov	r1, r5
 5811 0158 FFF7FEFF 		bl	__aeabi_dadd
 5812              	.LVL933:
 5813 015c FFF7FEFF 		bl	__aeabi_d2f
 5814              	.LVL934:
 5815 0160 FFF7FEFF 		bl	sqrtf
 5816              	.LVL935:
 5817 0164 0446     		mov	r4, r0
 5818 0166 DDF828B0 		ldr	fp, [sp, #40]
 5819 016a 5846     		mov	r0, fp
 5820 016c FFF7FEFF 		bl	number
 5821              	.LVL936:
 5822 0170 8246     		mov	r10, r0
 5823 0172 3146     		mov	r1, r6
 5824 0174 2046     		mov	r0, r4
 5825 0176 FFF7FEFF 		bl	__aeabi_fmul
 5826              	.LVL937:
 5827 017a BD4D     		ldr	r5, .L261+4
 5828 017c 4FEA0A18 		lsl	r8, r10, #4
 5829              	.LVL938:
 5830 0180 A8EB0A03 		sub	r3, r8, r10
 5831 0184 9C00     		lsls	r4, r3, #2
 5832 0186 2C44     		add	r4, r4, r5
 5833 0188 6061     		str	r0, [r4, #20]	@ float
 577:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].FnE = cosE*sqrtf(pow(speedAtTheEnd,2)+2*acceler
 5834              		.loc 1 577 0
 5835 018a 0022     		movs	r2, #0
ARM GAS  /tmp/cckOLbKl.s 			page 119


 5836 018c 4FF08043 		mov	r3, #1073741824
 5837 0190 DDE90001 		ldrd	r0, [sp]
 5838 0194 FFF7FEFF 		bl	pow
 5839              	.LVL939:
 5840 0198 0246     		mov	r2, r0
 5841 019a 0B46     		mov	r3, r1
 5842 019c DDE90201 		ldrd	r0, [sp, #8]
 5843 01a0 FFF7FEFF 		bl	__aeabi_dadd
 5844              	.LVL940:
 5845 01a4 FFF7FEFF 		bl	__aeabi_d2f
 5846              	.LVL941:
 5847 01a8 FFF7FEFF 		bl	sqrtf
 5848              	.LVL942:
 5849 01ac 3946     		mov	r1, r7
 5850 01ae FFF7FEFF 		bl	__aeabi_fmul
 5851              	.LVL943:
 5852 01b2 A061     		str	r0, [r4, #24]	@ float
 578:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnX = -cosX*acceleration;
 5853              		.loc 1 578 0
 5854 01b4 0022     		movs	r2, #0
 5855 01b6 4FF08043 		mov	r3, #1073741824
 5856 01ba DDE90001 		ldrd	r0, [sp]
 5857 01be FFF7FEFF 		bl	pow
 5858              	.LVL944:
 5859 01c2 0246     		mov	r2, r0
 5860 01c4 0B46     		mov	r3, r1
 5861 01c6 DDE90201 		ldrd	r0, [sp, #8]
 5862 01ca FFF7FEFF 		bl	__aeabi_dadd
 5863              	.LVL945:
 5864 01ce FFF7FEFF 		bl	__aeabi_d2f
 5865              	.LVL946:
 5866 01d2 FFF7FEFF 		bl	sqrtf
 5867              	.LVL947:
 5868 01d6 4946     		mov	r1, r9
 5869 01d8 FFF7FEFF 		bl	__aeabi_fmul
 5870              	.LVL948:
 5871 01dc 2062     		str	r0, [r4, #32]	@ float
 579:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnY = -cosY*acceleration;
 5872              		.loc 1 579 0
 5873 01de 06F10040 		add	r0, r6, #-2147483648
 5874 01e2 A449     		ldr	r1, .L261+8
 5875 01e4 FFF7FEFF 		bl	__aeabi_fmul
 5876              	.LVL949:
 5877 01e8 6062     		str	r0, [r4, #36]	@ float
 580:Src/Gcode/Buffer_Gcode.c ****         commandBuffer[number(currentCommandNumber)].AnE = -cosE*acceleration;
 5878              		.loc 1 580 0
 5879 01ea 07F10040 		add	r0, r7, #-2147483648
 5880 01ee A149     		ldr	r1, .L261+8
 5881 01f0 FFF7FEFF 		bl	__aeabi_fmul
 5882              	.LVL950:
 5883 01f4 A062     		str	r0, [r4, #40]	@ float
 581:Src/Gcode/Buffer_Gcode.c **** 
 5884              		.loc 1 581 0
 5885 01f6 09F10040 		add	r0, r9, #-2147483648
 5886 01fa 9E49     		ldr	r1, .L261+8
 5887 01fc FFF7FEFF 		bl	__aeabi_fmul
 5888              	.LVL951:
ARM GAS  /tmp/cckOLbKl.s 			page 120


 5889 0200 2063     		str	r0, [r4, #48]	@ float
 583:Src/Gcode/Buffer_Gcode.c ****         command = commandBuffer[number(currentCommandNumber)];
 5890              		.loc 1 583 0
 5891 0202 5846     		mov	r0, fp
 5892 0204 FFF7FEFF 		bl	prevoiusCommandNumber
 5893              	.LVL952:
 5894 0208 0746     		mov	r7, r0
 5895              	.LVL953:
 5896 020a 0A90     		str	r0, [sp, #40]
 5897              	.LVL954:
 584:Src/Gcode/Buffer_Gcode.c **** 
 5898              		.loc 1 584 0
 5899 020c FFF7FEFF 		bl	number
 5900              	.LVL955:
 5901 0210 C0EB0010 		rsb	r0, r0, r0, lsl #4
 5902 0214 8400     		lsls	r4, r0, #2
 5903 0216 0DAE     		add	r6, sp, #52
 5904              	.LVL956:
 5905 0218 2C44     		add	r4, r4, r5
 5906 021a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5907 021c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 5908 021e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5909 0220 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 5910 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5911 0224 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 5912 0226 94E80700 		ldm	r4, {r0, r1, r2}
 5913 022a 86E80700 		stm	r6, {r0, r1, r2}
 586:Src/Gcode/Buffer_Gcode.c ****         speedAtTheStart = sqrtf(pow(command.FnX,2)+pow(command.FnY,2));
 5914              		.loc 1 586 0
 5915 022e 3846     		mov	r0, r7
 5916 0230 FFF7FEFF 		bl	nextCommandNumber
 5917              	.LVL957:
 5918 0234 FFF7FEFF 		bl	number
 5919              	.LVL958:
 5920 0238 8046     		mov	r8, r0
 5921 023a 0401     		lsls	r4, r0, #4
 5922 023c 221A     		subs	r2, r4, r0
 5923 023e 9300     		lsls	r3, r2, #2
 5924 0240 2B44     		add	r3, r3, r5
 5925 0242 5869     		ldr	r0, [r3, #20]	@ float
 5926 0244 FFF7FEFF 		bl	__aeabi_f2d
 5927              	.LVL959:
 5928 0248 0022     		movs	r2, #0
 5929 024a 4FF08043 		mov	r3, #1073741824
 5930 024e FFF7FEFF 		bl	pow
 5931              	.LVL960:
 5932 0252 0646     		mov	r6, r0
 5933 0254 0F46     		mov	r7, r1
 5934              	.LVL961:
 5935 0256 A4EB0804 		sub	r4, r4, r8
 5936 025a A300     		lsls	r3, r4, #2
 5937 025c 1D44     		add	r5, r5, r3
 5938 025e A869     		ldr	r0, [r5, #24]	@ float
 5939 0260 FFF7FEFF 		bl	__aeabi_f2d
 5940              	.LVL962:
 5941 0264 0022     		movs	r2, #0
 5942 0266 4FF08043 		mov	r3, #1073741824
ARM GAS  /tmp/cckOLbKl.s 			page 121


 5943 026a FFF7FEFF 		bl	pow
 5944              	.LVL963:
 5945 026e 0246     		mov	r2, r0
 5946 0270 0B46     		mov	r3, r1
 5947 0272 3046     		mov	r0, r6
 5948 0274 3946     		mov	r1, r7
 5949 0276 FFF7FEFF 		bl	__aeabi_dadd
 5950              	.LVL964:
 5951 027a FFF7FEFF 		bl	__aeabi_d2f
 5952              	.LVL965:
 5953 027e FFF7FEFF 		bl	sqrtf
 5954              	.LVL966:
 5955 0282 0446     		mov	r4, r0
 5956              	.LVL967:
 587:Src/Gcode/Buffer_Gcode.c ****         acceleration = ACCELERATION_XY_STEPS_PER_SS;
 5957              		.loc 1 587 0
 5958 0284 1298     		ldr	r0, [sp, #72]	@ float
 5959              	.LVL968:
 5960 0286 FFF7FEFF 		bl	__aeabi_f2d
 5961              	.LVL969:
 5962 028a 0022     		movs	r2, #0
 5963 028c 4FF08043 		mov	r3, #1073741824
 5964 0290 FFF7FEFF 		bl	pow
 5965              	.LVL970:
 5966 0294 0646     		mov	r6, r0
 5967 0296 0F46     		mov	r7, r1
 5968 0298 1398     		ldr	r0, [sp, #76]	@ float
 5969 029a FFF7FEFF 		bl	__aeabi_f2d
 5970              	.LVL971:
 5971 029e 0022     		movs	r2, #0
 5972 02a0 4FF08043 		mov	r3, #1073741824
 5973 02a4 FFF7FEFF 		bl	pow
 5974              	.LVL972:
 5975 02a8 0246     		mov	r2, r0
 5976 02aa 0B46     		mov	r3, r1
 5977 02ac 3046     		mov	r0, r6
 5978 02ae 3946     		mov	r1, r7
 5979 02b0 FFF7FEFF 		bl	__aeabi_dadd
 5980              	.LVL973:
 5981 02b4 FFF7FEFF 		bl	__aeabi_d2f
 5982              	.LVL974:
 5983 02b8 FFF7FEFF 		bl	sqrtf
 5984              	.LVL975:
 5985 02bc 0546     		mov	r5, r0
 5986              	.LVL976:
 589:Src/Gcode/Buffer_Gcode.c ****         cosX = (float)command.dXn/allowedDistance;
 5987              		.loc 1 589 0
 5988 02be 0E9E     		ldr	r6, [sp, #56]
 5989 02c0 3046     		mov	r0, r6
 5990              	.LVL977:
 5991 02c2 FFF7FEFF 		bl	__aeabi_i2d
 5992              	.LVL978:
 5993 02c6 0022     		movs	r2, #0
 5994 02c8 4FF08043 		mov	r3, #1073741824
 5995 02cc FFF7FEFF 		bl	pow
 5996              	.LVL979:
 5997 02d0 8046     		mov	r8, r0
ARM GAS  /tmp/cckOLbKl.s 			page 122


 5998 02d2 8946     		mov	r9, r1
 5999              	.LVL980:
 6000 02d4 0F9F     		ldr	r7, [sp, #60]
 6001 02d6 3846     		mov	r0, r7
 6002 02d8 FFF7FEFF 		bl	__aeabi_i2d
 6003              	.LVL981:
 6004 02dc 0022     		movs	r2, #0
 6005 02de 4FF08043 		mov	r3, #1073741824
 6006 02e2 FFF7FEFF 		bl	pow
 6007              	.LVL982:
 6008 02e6 0246     		mov	r2, r0
 6009 02e8 0B46     		mov	r3, r1
 6010 02ea 4046     		mov	r0, r8
 6011 02ec 4946     		mov	r1, r9
 6012 02ee FFF7FEFF 		bl	__aeabi_dadd
 6013              	.LVL983:
 6014 02f2 FFF7FEFF 		bl	__aeabi_d2f
 6015              	.LVL984:
 6016 02f6 FFF7FEFF 		bl	sqrtf
 6017              	.LVL985:
 6018 02fa 8046     		mov	r8, r0
 6019              	.LVL986:
 590:Src/Gcode/Buffer_Gcode.c ****         cosY = (float)command.dYn/allowedDistance;
 6020              		.loc 1 590 0
 6021 02fc 3046     		mov	r0, r6
 6022              	.LVL987:
 6023 02fe FFF7FEFF 		bl	__aeabi_i2f
 6024              	.LVL988:
 6025 0302 4146     		mov	r1, r8
 6026 0304 FFF7FEFF 		bl	__aeabi_fdiv
 6027              	.LVL989:
 6028 0308 0646     		mov	r6, r0
 6029              	.LVL990:
 591:Src/Gcode/Buffer_Gcode.c ****         cosE = (float)command.dEn/allowedDistance;
 6030              		.loc 1 591 0
 6031 030a 3846     		mov	r0, r7
 6032              	.LVL991:
 6033 030c FFF7FEFF 		bl	__aeabi_i2f
 6034              	.LVL992:
 6035 0310 4146     		mov	r1, r8
 6036 0312 FFF7FEFF 		bl	__aeabi_fdiv
 6037              	.LVL993:
 6038 0316 0746     		mov	r7, r0
 6039              	.LVL994:
 592:Src/Gcode/Buffer_Gcode.c ****     }
 6040              		.loc 1 592 0
 6041 0318 1198     		ldr	r0, [sp, #68]
 6042              	.LVL995:
 6043 031a FFF7FEFF 		bl	__aeabi_i2f
 6044              	.LVL996:
 6045 031e 4146     		mov	r1, r8
 6046 0320 FFF7FEFF 		bl	__aeabi_fdiv
 6047              	.LVL997:
 6048 0324 8146     		mov	r9, r0
 6049              	.LVL998:
 6050              	.L254:
 574:Src/Gcode/Buffer_Gcode.c ****     {
ARM GAS  /tmp/cckOLbKl.s 			page 123


 6051              		.loc 1 574 0
 6052 0326 4046     		mov	r0, r8
 6053 0328 FFF7FEFF 		bl	__aeabi_f2d
 6054              	.LVL999:
 6055 032c 0022     		movs	r2, #0
 6056 032e 524B     		ldr	r3, .L261+12
 6057 0330 FFF7FEFF 		bl	__aeabi_dadd
 6058              	.LVL1000:
 6059 0334 8246     		mov	r10, r0
 6060 0336 8B46     		mov	fp, r1
 6061 0338 4E4A     		ldr	r2, .L261+8
 6062 033a 2146     		mov	r1, r4
 6063 033c 2846     		mov	r0, r5
 6064 033e FFF7FEFF 		bl	distanceRequired
 6065              	.LVL1001:
 6066 0342 FFF7FEFF 		bl	__aeabi_i2d
 6067              	.LVL1002:
 6068 0346 0246     		mov	r2, r0
 6069 0348 0B46     		mov	r3, r1
 6070 034a 5046     		mov	r0, r10
 6071 034c 5946     		mov	r1, fp
 6072 034e FFF7FEFF 		bl	__aeabi_dcmplt
 6073              	.LVL1003:
 6074 0352 0028     		cmp	r0, #0
 6075 0354 7FF4E8AE 		bne	.L255
 6076 0358 AB46     		mov	fp, r5
 6077 035a 0096     		str	r6, [sp]	@ float
 6078 035c 0297     		str	r7, [sp, #8]	@ float
 595:Src/Gcode/Buffer_Gcode.c **** 
 6079              		.loc 1 595 0
 6080 035e 0A98     		ldr	r0, [sp, #40]
 6081 0360 FFF7FEFF 		bl	shiftRightAllTheCommandsTillThis
 6082              	.LVL1004:
 597:Src/Gcode/Buffer_Gcode.c ****     float lStar = acceleration*allowedDistance/(acceleration+aStar) + ( pow(speedAtTheEnd,2) - pow(
 6083              		.loc 1 597 0
 6084 0364 0026     		movs	r6, #0
 6085              	.LVL1005:
 6086 0366 4FF08047 		mov	r7, #1073741824
 6087              	.LVL1006:
 6088 036a 1698     		ldr	r0, [sp, #88]	@ float
 6089 036c FFF7FEFF 		bl	__aeabi_f2d
 6090              	.LVL1007:
 6091 0370 3246     		mov	r2, r6
 6092 0372 3B46     		mov	r3, r7
 6093 0374 FFF7FEFF 		bl	pow
 6094              	.LVL1008:
 6095 0378 CDE90401 		strd	r0, [sp, #16]
 6096 037c 1798     		ldr	r0, [sp, #92]	@ float
 6097 037e FFF7FEFF 		bl	__aeabi_f2d
 6098              	.LVL1009:
 6099 0382 3246     		mov	r2, r6
 6100 0384 3B46     		mov	r3, r7
 6101 0386 FFF7FEFF 		bl	pow
 6102              	.LVL1010:
 6103 038a 0246     		mov	r2, r0
 6104 038c 0B46     		mov	r3, r1
 6105 038e DDE90401 		ldrd	r0, [sp, #16]
ARM GAS  /tmp/cckOLbKl.s 			page 124


 6106 0392 FFF7FEFF 		bl	__aeabi_dadd
 6107              	.LVL1011:
 6108 0396 FFF7FEFF 		bl	__aeabi_d2f
 6109              	.LVL1012:
 6110 039a FFF7FEFF 		bl	sqrtf
 6111              	.LVL1013:
 6112 039e 0546     		mov	r5, r0
 6113              	.LVL1014:
 598:Src/Gcode/Buffer_Gcode.c ****     float vStar = sqrtf( pow(speedAtTheStart,2) + 2*aStar*lStar );
 6114              		.loc 1 598 0
 6115 03a0 3449     		ldr	r1, .L261+8
 6116 03a2 4046     		mov	r0, r8
 6117              	.LVL1015:
 6118 03a4 FFF7FEFF 		bl	__aeabi_fmul
 6119              	.LVL1016:
 6120 03a8 8046     		mov	r8, r0
 6121              	.LVL1017:
 6122 03aa 3249     		ldr	r1, .L261+8
 6123 03ac 0B95     		str	r5, [sp, #44]	@ float
 6124 03ae 2846     		mov	r0, r5
 6125 03b0 FFF7FEFF 		bl	__aeabi_fadd
 6126              	.LVL1018:
 6127 03b4 0546     		mov	r5, r0
 6128              	.LVL1019:
 6129 03b6 0146     		mov	r1, r0
 6130 03b8 4046     		mov	r0, r8
 6131 03ba FFF7FEFF 		bl	__aeabi_fdiv
 6132              	.LVL1020:
 6133 03be FFF7FEFF 		bl	__aeabi_f2d
 6134              	.LVL1021:
 6135 03c2 CDE90401 		strd	r0, [sp, #16]
 6136 03c6 2046     		mov	r0, r4
 6137 03c8 FFF7FEFF 		bl	__aeabi_f2d
 6138              	.LVL1022:
 6139 03cc 3246     		mov	r2, r6
 6140 03ce 3B46     		mov	r3, r7
 6141 03d0 FFF7FEFF 		bl	pow
 6142              	.LVL1023:
 6143 03d4 CDE90601 		strd	r0, [sp, #24]
 6144 03d8 5846     		mov	r0, fp
 6145 03da FFF7FEFF 		bl	__aeabi_f2d
 6146              	.LVL1024:
 6147 03de CDE90801 		strd	r0, [sp, #32]
 6148 03e2 3246     		mov	r2, r6
 6149 03e4 3B46     		mov	r3, r7
 6150 03e6 FFF7FEFF 		bl	pow
 6151              	.LVL1025:
 6152 03ea 0246     		mov	r2, r0
 6153 03ec 0B46     		mov	r3, r1
 6154 03ee DDE90601 		ldrd	r0, [sp, #24]
 6155 03f2 FFF7FEFF 		bl	__aeabi_dsub
 6156              	.LVL1026:
 6157 03f6 0022     		movs	r2, #0
 6158 03f8 1F4B     		ldr	r3, .L261+12
 6159 03fa FFF7FEFF 		bl	__aeabi_dmul
 6160              	.LVL1027:
 6161 03fe 8246     		mov	r10, r0
ARM GAS  /tmp/cckOLbKl.s 			page 125


 6162 0400 8B46     		mov	fp, r1
 6163              	.LVL1028:
 6164 0402 2846     		mov	r0, r5
 6165 0404 FFF7FEFF 		bl	__aeabi_f2d
 6166              	.LVL1029:
 6167 0408 0246     		mov	r2, r0
 6168 040a 0B46     		mov	r3, r1
 6169 040c 5046     		mov	r0, r10
 6170 040e 5946     		mov	r1, fp
 6171 0410 FFF7FEFF 		bl	__aeabi_ddiv
 6172              	.LVL1030:
 6173 0414 0246     		mov	r2, r0
 6174 0416 0B46     		mov	r3, r1
 6175 0418 DDE90401 		ldrd	r0, [sp, #16]
 6176 041c FFF7FEFF 		bl	__aeabi_dadd
 6177              	.LVL1031:
 6178 0420 FFF7FEFF 		bl	__aeabi_d2f
 6179              	.LVL1032:
 6180 0424 8246     		mov	r10, r0
 6181              	.LVL1033:
 599:Src/Gcode/Buffer_Gcode.c **** 
 6182              		.loc 1 599 0
 6183 0426 3246     		mov	r2, r6
 6184 0428 3B46     		mov	r3, r7
 6185 042a DDE90801 		ldrd	r0, [sp, #32]
 6186              	.LVL1034:
 6187 042e FFF7FEFF 		bl	pow
 6188              	.LVL1035:
 6189 0432 0446     		mov	r4, r0
 6190              	.LVL1036:
 6191 0434 0D46     		mov	r5, r1
 6192 0436 0B98     		ldr	r0, [sp, #44]	@ float
 6193 0438 0146     		mov	r1, r0
 6194 043a FFF7FEFF 		bl	__aeabi_fadd
 6195              	.LVL1037:
 6196 043e 5146     		mov	r1, r10
 6197 0440 FFF7FEFF 		bl	__aeabi_fmul
 6198              	.LVL1038:
 6199 0444 FFF7FEFF 		bl	__aeabi_f2d
 6200              	.LVL1039:
 6201 0448 0246     		mov	r2, r0
 6202 044a 0B46     		mov	r3, r1
 6203 044c 2046     		mov	r0, r4
 6204 044e 2946     		mov	r1, r5
 6205 0450 FFF7FEFF 		bl	__aeabi_dadd
 6206              	.LVL1040:
 6207 0454 FFF7FEFF 		bl	__aeabi_d2f
 6208              	.LVL1041:
 6209 0458 FFF7FEFF 		bl	sqrtf
 6210              	.LVL1042:
 6211 045c 0746     		mov	r7, r0
 6212              	.LVL1043:
 601:Src/Gcode/Buffer_Gcode.c **** 
 6213              		.loc 1 601 0
 6214 045e 5146     		mov	r1, r10
 6215 0460 0098     		ldr	r0, [sp]	@ float
 6216              	.LVL1044:
ARM GAS  /tmp/cckOLbKl.s 			page 126


 6217 0462 FFF7FEFF 		bl	__aeabi_fmul
 6218              	.LVL1045:
 6219 0466 8346     		mov	fp, r0
 6220 0468 0A98     		ldr	r0, [sp, #40]
 6221 046a 07E0     		b	.L262
 6222              	.L263:
 6223              		.align	2
 6224              	.L261:
 6225 046c ABAA2645 		.word	1160161963
 6226 0470 00000000 		.word	.LANCHOR2
 6227 0474 ABAAA644 		.word	1151773355
 6228 0478 0000E03F 		.word	1071644672
 6229              	.L262:
 6230 047c FFF7FEFF 		bl	number
 6231              	.LVL1046:
 6232 0480 8046     		mov	r8, r0
 6233 0482 5846     		mov	r0, fp
 6234 0484 FFF7FEFF 		bl	lroundf
 6235              	.LVL1047:
 6236 0488 2E4D     		ldr	r5, .L264
 6237 048a 4FEA0814 		lsl	r4, r8, #4
 6238 048e A4EB0803 		sub	r3, r4, r8
 6239 0492 9E00     		lsls	r6, r3, #2
 6240 0494 2E44     		add	r6, r6, r5
 6241 0496 7060     		str	r0, [r6, #4]
 6242 0498 5146     		mov	r1, r10
 6243 049a 0298     		ldr	r0, [sp, #8]	@ float
 6244 049c FFF7FEFF 		bl	__aeabi_fmul
 6245              	.LVL1048:
 6246 04a0 0490     		str	r0, [sp, #16]	@ float
 6247 04a2 FFF7FEFF 		bl	lroundf
 6248              	.LVL1049:
 6249 04a6 B060     		str	r0, [r6, #8]
 6250 04a8 5146     		mov	r1, r10
 6251 04aa 4846     		mov	r0, r9
 6252 04ac FFF7FEFF 		bl	__aeabi_fmul
 6253              	.LVL1050:
 6254 04b0 8246     		mov	r10, r0
 6255              	.LVL1051:
 6256 04b2 FFF7FEFF 		bl	lroundf
 6257              	.LVL1052:
 6258 04b6 3061     		str	r0, [r6, #16]
 603:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].dXn = command.dXn-lroundf(lStar*cosX);  commandBuff
 6259              		.loc 1 603 0
 6260 04b8 0A98     		ldr	r0, [sp, #40]
 6261 04ba FFF7FEFF 		bl	nextCommandNumber
 6262              	.LVL1053:
 6263 04be 8046     		mov	r8, r0
 6264              	.LVL1054:
 604:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].FnX = vStar*cosX;                       commandBuff
 6265              		.loc 1 604 0
 6266 04c0 0E9C     		ldr	r4, [sp, #56]
 6267 04c2 5846     		mov	r0, fp
 6268              	.LVL1055:
 6269 04c4 FFF7FEFF 		bl	lroundf
 6270              	.LVL1056:
 6271 04c8 0646     		mov	r6, r0
ARM GAS  /tmp/cckOLbKl.s 			page 127


 6272 04ca 4046     		mov	r0, r8
 6273 04cc FFF7FEFF 		bl	number
 6274              	.LVL1057:
 6275 04d0 A31B     		subs	r3, r4, r6
 6276 04d2 0601     		lsls	r6, r0, #4
 6277 04d4 321A     		subs	r2, r6, r0
 6278 04d6 9400     		lsls	r4, r2, #2
 6279 04d8 2C44     		add	r4, r4, r5
 6280 04da 6360     		str	r3, [r4, #4]
 6281 04dc DDF83CB0 		ldr	fp, [sp, #60]
 6282 04e0 0498     		ldr	r0, [sp, #16]	@ float
 6283 04e2 FFF7FEFF 		bl	lroundf
 6284              	.LVL1058:
 6285 04e6 ABEB0000 		sub	r0, fp, r0
 6286 04ea A060     		str	r0, [r4, #8]
 6287 04ec DDF844B0 		ldr	fp, [sp, #68]
 6288 04f0 5046     		mov	r0, r10
 6289 04f2 FFF7FEFF 		bl	lroundf
 6290              	.LVL1059:
 6291 04f6 ABEB0000 		sub	r0, fp, r0
 6292 04fa 2061     		str	r0, [r4, #16]
 605:Src/Gcode/Buffer_Gcode.c ****     commandBuffer[number(currentCommandNumber)].AnX = -acceleration*cosX;               commandBuff
 6293              		.loc 1 605 0
 6294 04fc 3946     		mov	r1, r7
 6295 04fe DDF800B0 		ldr	fp, [sp]	@ float
 6296 0502 5846     		mov	r0, fp
 6297 0504 FFF7FEFF 		bl	__aeabi_fmul
 6298              	.LVL1060:
 6299 0508 6061     		str	r0, [r4, #20]	@ float
 6300 050a 3946     		mov	r1, r7
 6301 050c DDF808A0 		ldr	r10, [sp, #8]	@ float
 6302 0510 5046     		mov	r0, r10
 6303 0512 FFF7FEFF 		bl	__aeabi_fmul
 6304              	.LVL1061:
 6305 0516 A061     		str	r0, [r4, #24]	@ float
 6306 0518 3946     		mov	r1, r7
 6307 051a 4846     		mov	r0, r9
 6308 051c FFF7FEFF 		bl	__aeabi_fmul
 6309              	.LVL1062:
 6310 0520 2062     		str	r0, [r4, #32]	@ float
 606:Src/Gcode/Buffer_Gcode.c **** }
 6311              		.loc 1 606 0
 6312 0522 0949     		ldr	r1, .L264+4
 6313 0524 5846     		mov	r0, fp
 6314 0526 FFF7FEFF 		bl	__aeabi_fmul
 6315              	.LVL1063:
 6316 052a 6062     		str	r0, [r4, #36]	@ float
 6317 052c 0649     		ldr	r1, .L264+4
 6318 052e 5046     		mov	r0, r10
 6319 0530 FFF7FEFF 		bl	__aeabi_fmul
 6320              	.LVL1064:
 6321 0534 A062     		str	r0, [r4, #40]	@ float
 6322 0536 0449     		ldr	r1, .L264+4
 6323 0538 4846     		mov	r0, r9
 6324 053a FFF7FEFF 		bl	__aeabi_fmul
 6325              	.LVL1065:
 6326 053e 2063     		str	r0, [r4, #48]	@ float
ARM GAS  /tmp/cckOLbKl.s 			page 128


 6327 0540 7BE5     		b	.L252
 6328              	.L265:
 6329 0542 00BF     		.align	2
 6330              	.L264:
 6331 0544 00000000 		.word	.LANCHOR2
 6332 0548 ABAAA6C4 		.word	-995710293
 6333              		.cfi_endproc
 6334              	.LFE36:
 6336              		.global	defaultCommand
 6337              		.global	defaultDescreteCommand
 6338              		.section	.bss.commandBuffer,"aw",%nobits
 6339              		.align	2
 6340              		.set	.LANCHOR2,. + 0
 6343              	commandBuffer:
 6344 0000 00000000 		.space	3000
 6344      00000000 
 6344      00000000 
 6344      00000000 
 6344      00000000 
 6345              		.section	.bss.commandBufferIsFull,"aw",%nobits
 6346              		.set	.LANCHOR4,. + 0
 6349              	commandBufferIsFull:
 6350 0000 00       		.space	1
 6351              		.section	.bss.descreteBuffer,"aw",%nobits
 6352              		.align	2
 6353              		.set	.LANCHOR1,. + 0
 6356              	descreteBuffer:
 6357 0000 00000000 		.space	120
 6357      00000000 
 6357      00000000 
 6357      00000000 
 6357      00000000 
 6358              		.section	.bss.firstFreeElementCommandBuffer,"aw",%nobits
 6359              		.align	2
 6360              		.set	.LANCHOR0,. + 0
 6363              	firstFreeElementCommandBuffer:
 6364 0000 00000000 		.space	4
 6365              		.section	.bss.firstOccupedElementCommandBuffer,"aw",%nobits
 6366              		.align	2
 6367              		.set	.LANCHOR3,. + 0
 6370              	firstOccupedElementCommandBuffer:
 6371 0000 00000000 		.space	4
 6372              		.section	.rodata.defaultCommand,"a",%progbits
 6373              		.align	2
 6376              	defaultCommand:
 6377 0000 00000000 		.space	60
 6377      00000000 
 6377      00000000 
 6377      00000000 
 6377      00000000 
 6378              		.section	.rodata.defaultDescreteCommand,"a",%progbits
 6379              		.align	2
 6382              	defaultDescreteCommand:
 6383 0000 00000000 		.space	40
 6383      00000000 
 6383      00000000 
 6383      00000000 
ARM GAS  /tmp/cckOLbKl.s 			page 129


 6383      00000000 
 6384              		.text
 6385              	.Letext0:
 6386              		.file 2 "Inc/Gcode/Config_Gcode.h"
 6387              		.file 3 "Inc/Gcode/GcodeConverter_Gcode.h"
 6388              		.file 4 "Inc/Gcode/Descritization_Gcode.h"
 6389              		.file 5 "Inc/Gcode/Buffer_Gcode.h"
 6390              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 6391              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 6392              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 6393              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 6394              		.file 10 "/usr/arm-none-eabi/include/math.h"
 6395              		.file 11 "/usr/arm-none-eabi/include/stdlib.h"
 6396              		.file 12 "<built-in>"
ARM GAS  /tmp/cckOLbKl.s 			page 130


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Buffer_Gcode.c
     /tmp/cckOLbKl.s:16     .text.number:0000000000000000 $t
     /tmp/cckOLbKl.s:22     .text.number:0000000000000000 number
     /tmp/cckOLbKl.s:40     .text.sign:0000000000000000 $t
     /tmp/cckOLbKl.s:46     .text.sign:0000000000000000 sign
     /tmp/cckOLbKl.s:80     .text.distanceStartFastMove:0000000000000000 $t
     /tmp/cckOLbKl.s:86     .text.distanceStartFastMove:0000000000000000 distanceStartFastMove
     /tmp/cckOLbKl.s:158    .text.lastCommandNumber:0000000000000000 $t
     /tmp/cckOLbKl.s:164    .text.lastCommandNumber:0000000000000000 lastCommandNumber
     /tmp/cckOLbKl.s:187    .text.lastCommandNumber:0000000000000010 $d
     /tmp/cckOLbKl.s:192    .text.prevoiusCommandNumber:0000000000000000 $t
     /tmp/cckOLbKl.s:198    .text.prevoiusCommandNumber:0000000000000000 prevoiusCommandNumber
     /tmp/cckOLbKl.s:224    .text.nextCommandNumber:0000000000000000 $t
     /tmp/cckOLbKl.s:230    .text.nextCommandNumber:0000000000000000 nextCommandNumber
     /tmp/cckOLbKl.s:256    .text.smoothable:0000000000000000 $t
     /tmp/cckOLbKl.s:262    .text.smoothable:0000000000000000 smoothable
     /tmp/cckOLbKl.s:287    .text.distanceRequired:0000000000000000 $t
     /tmp/cckOLbKl.s:293    .text.distanceRequired:0000000000000000 distanceRequired
     /tmp/cckOLbKl.s:366    .text.speedMaxFastMove:0000000000000000 $t
     /tmp/cckOLbKl.s:372    .text.speedMaxFastMove:0000000000000000 speedMaxFastMove
     /tmp/cckOLbKl.s:475    .text.createDescreteCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:482    .text.createDescreteCommandBuffer_Gcode:0000000000000000 createDescreteCommandBuffer_Gcode
     /tmp/cckOLbKl.s:535    .text.createDescreteCommandBuffer_Gcode:000000000000004c $d
     /tmp/cckOLbKl.s:540    .text.addElementToDescreteCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:547    .text.addElementToDescreteCommandBuffer_Gcode:0000000000000000 addElementToDescreteCommandBuffer_Gcode
     /tmp/cckOLbKl.s:635    .text.addElementToDescreteCommandBuffer_Gcode:0000000000000088 $d
     /tmp/cckOLbKl.s:640    .text.clearDescreteBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:647    .text.clearDescreteBuffer_Gcode:0000000000000000 clearDescreteBuffer_Gcode
     /tmp/cckOLbKl.s:700    .text.clearDescreteBuffer_Gcode:000000000000004c $d
     /tmp/cckOLbKl.s:705    .text.getDescreteCommandBufferElement_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:712    .text.getDescreteCommandBufferElement_Gcode:0000000000000000 getDescreteCommandBufferElement_Gcode
     /tmp/cckOLbKl.s:763    .text.getDescreteCommandBufferElement_Gcode:0000000000000038 $d
     /tmp/cckOLbKl.s:768    .text.conserveSpeedFinish:0000000000000000 $t
     /tmp/cckOLbKl.s:774    .text.conserveSpeedFinish:0000000000000000 conserveSpeedFinish
     /tmp/cckOLbKl.s:954    .text.conserveSpeedFinish:0000000000000100 $d
     /tmp/cckOLbKl.s:960    .text.createCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:967    .text.createCommandBuffer_Gcode:0000000000000000 createCommandBuffer_Gcode
     /tmp/cckOLbKl.s:1020   .text.createCommandBuffer_Gcode:0000000000000038 $d
     /tmp/cckOLbKl.s:1028   .text.getCommandBufferElement_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:1035   .text.getCommandBufferElement_Gcode:0000000000000000 getCommandBufferElement_Gcode
     /tmp/cckOLbKl.s:1088   .text.getCommandBufferElement_Gcode:000000000000003c $d
     /tmp/cckOLbKl.s:1093   .text.lastCommand:0000000000000000 $t
     /tmp/cckOLbKl.s:1099   .text.lastCommand:0000000000000000 lastCommand
     /tmp/cckOLbKl.s:1136   .text.lastCommand:0000000000000018 $d
     /tmp/cckOLbKl.s:1141   .text.conserveSpeedStart:0000000000000000 $t
     /tmp/cckOLbKl.s:1147   .text.conserveSpeedStart:0000000000000000 conserveSpeedStart
     /tmp/cckOLbKl.s:1333   .text.conserveSpeedStart:00000000000000f0 $d
     /tmp/cckOLbKl.s:1341   .text.firstInCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:1348   .text.firstInCommandBuffer_Gcode:0000000000000000 firstInCommandBuffer_Gcode
     /tmp/cckOLbKl.s:1435   .text.firstInCommandBuffer_Gcode:0000000000000064 $d
     /tmp/cckOLbKl.s:1444   .text.MoveZ_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:1450   .text.MoveZ_Analyser:0000000000000000 MoveZ_Analyser
     /tmp/cckOLbKl.s:1775   .text.MoveZ_Analyser:0000000000000240 $d
     /tmp/cckOLbKl.s:1784   .text.MoveZ_Analyser:000000000000024c $t
     /tmp/cckOLbKl.s:1920   .text.MoveXY_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:1926   .text.MoveXY_Analyser:0000000000000000 MoveXY_Analyser
ARM GAS  /tmp/cckOLbKl.s 			page 131


     /tmp/cckOLbKl.s:2360   .text.MoveXY_Analyser:00000000000002f4 $d
     /tmp/cckOLbKl.s:2367   .text.MoveXY_Analyser:0000000000000304 $t
     /tmp/cckOLbKl.s:3106   .text.MoveE_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:3112   .text.MoveE_Analyser:0000000000000000 MoveE_Analyser
     /tmp/cckOLbKl.s:3215   .text.MoveE_Analyser:0000000000000090 $d
     /tmp/cckOLbKl.s:3220   .text.HomeX_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:3226   .text.HomeX_Analyser:0000000000000000 HomeX_Analyser
     /tmp/cckOLbKl.s:3556   .text.HomeX_Analyser:00000000000002bc $d
     /tmp/cckOLbKl.s:3565   .text.HomeY_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:3571   .text.HomeY_Analyser:0000000000000000 HomeY_Analyser
     /tmp/cckOLbKl.s:3901   .text.HomeY_Analyser:00000000000002bc $d
     /tmp/cckOLbKl.s:3910   .text.HomeZ_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:3916   .text.HomeZ_Analyser:0000000000000000 HomeZ_Analyser
     /tmp/cckOLbKl.s:4260   .text.HomeZ_Analyser:00000000000002d0 $d
     /tmp/cckOLbKl.s:4270   .text.HomeXY_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:4276   .text.HomeXY_Analyser:0000000000000000 HomeXY_Analyser
     /tmp/cckOLbKl.s:4661   .text.HomeXY_Analyser:00000000000002cc $d
     /tmp/cckOLbKl.s:4670   .text.HomeXY_Analyser:00000000000002e0 $t
     /tmp/cckOLbKl.s:4782   .text.SetExtrTemp_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:4788   .text.SetExtrTemp_Analyser:0000000000000000 SetExtrTemp_Analyser
     /tmp/cckOLbKl.s:4843   .text.SetBedTemp_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:4849   .text.SetBedTemp_Analyser:0000000000000000 SetBedTemp_Analyser
     /tmp/cckOLbKl.s:4904   .text.WaitExtrTemp_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:4910   .text.WaitExtrTemp_Analyser:0000000000000000 WaitExtrTemp_Analyser
     /tmp/cckOLbKl.s:4965   .text.WaitBedTemp_Analyser:0000000000000000 $t
     /tmp/cckOLbKl.s:4971   .text.WaitBedTemp_Analyser:0000000000000000 WaitBedTemp_Analyser
     /tmp/cckOLbKl.s:5026   .text.shiftRightAllTheCommandsTillThis:0000000000000000 $t
     /tmp/cckOLbKl.s:5032   .text.shiftRightAllTheCommandsTillThis:0000000000000000 shiftRightAllTheCommandsTillThis
     /tmp/cckOLbKl.s:5122   .text.shiftRightAllTheCommandsTillThis:000000000000007c $d
     /tmp/cckOLbKl.s:5127   .text.firstOutCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5134   .text.firstOutCommandBuffer_Gcode:0000000000000000 firstOutCommandBuffer_Gcode
     /tmp/cckOLbKl.s:5175   .text.firstOutCommandBuffer_Gcode:0000000000000030 $d
     /tmp/cckOLbKl.s:5181   .text.eraseFirstCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5188   .text.eraseFirstCommandBuffer_Gcode:0000000000000000 eraseFirstCommandBuffer_Gcode
     /tmp/cckOLbKl.s:5251   .text.eraseFirstCommandBuffer_Gcode:000000000000004c $d
     /tmp/cckOLbKl.s:5259   .text.checkFreeSpaceCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5266   .text.checkFreeSpaceCommandBuffer_Gcode:0000000000000000 checkFreeSpaceCommandBuffer_Gcode
     /tmp/cckOLbKl.s:5313   .text.checkFreeSpaceCommandBuffer_Gcode:0000000000000028 $d
     /tmp/cckOLbKl.s:5320   .text.enoghSpaceIsReservedCommandBuffer_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5327   .text.enoghSpaceIsReservedCommandBuffer_Gcode:0000000000000000 enoghSpaceIsReservedCommandBuffer_Gcode
     /tmp/cckOLbKl.s:5351   .text.descreteCommandAnalyser_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5358   .text.descreteCommandAnalyser_Gcode:0000000000000000 descreteCommandAnalyser_Gcode
     /tmp/cckOLbKl.s:5589   .text.smoothStop_Gcode:0000000000000000 $t
     /tmp/cckOLbKl.s:5596   .text.smoothStop_Gcode:0000000000000000 smoothStop_Gcode
     /tmp/cckOLbKl.s:5782   .text.smoothStop_Gcode:000000000000011c $d
     /tmp/cckOLbKl.s:5788   .text.smoothStop_Gcode:0000000000000128 $t
     /tmp/cckOLbKl.s:6225   .text.smoothStop_Gcode:000000000000046c $d
     /tmp/cckOLbKl.s:6230   .text.smoothStop_Gcode:000000000000047c $t
     /tmp/cckOLbKl.s:6331   .text.smoothStop_Gcode:0000000000000544 $d
     /tmp/cckOLbKl.s:6376   .rodata.defaultCommand:0000000000000000 defaultCommand
     /tmp/cckOLbKl.s:6382   .rodata.defaultDescreteCommand:0000000000000000 defaultDescreteCommand
     /tmp/cckOLbKl.s:6339   .bss.commandBuffer:0000000000000000 $d
     /tmp/cckOLbKl.s:6343   .bss.commandBuffer:0000000000000000 commandBuffer
     /tmp/cckOLbKl.s:6349   .bss.commandBufferIsFull:0000000000000000 commandBufferIsFull
     /tmp/cckOLbKl.s:6350   .bss.commandBufferIsFull:0000000000000000 $d
     /tmp/cckOLbKl.s:6352   .bss.descreteBuffer:0000000000000000 $d
     /tmp/cckOLbKl.s:6356   .bss.descreteBuffer:0000000000000000 descreteBuffer
ARM GAS  /tmp/cckOLbKl.s 			page 132


     /tmp/cckOLbKl.s:6359   .bss.firstFreeElementCommandBuffer:0000000000000000 $d
     /tmp/cckOLbKl.s:6363   .bss.firstFreeElementCommandBuffer:0000000000000000 firstFreeElementCommandBuffer
     /tmp/cckOLbKl.s:6366   .bss.firstOccupedElementCommandBuffer:0000000000000000 $d
     /tmp/cckOLbKl.s:6370   .bss.firstOccupedElementCommandBuffer:0000000000000000 firstOccupedElementCommandBuffer
     /tmp/cckOLbKl.s:6373   .rodata.defaultCommand:0000000000000000 $d
     /tmp/cckOLbKl.s:6379   .rodata.defaultDescreteCommand:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_fcmplt
__aeabi_fsub
__aeabi_fdiv
__aeabi_fmul
__aeabi_fadd
__aeabi_f2d
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2f
pow
lroundf
__aeabi_i2f
__aeabi_dmul
sqrt
memset
sqrtf
__aeabi_fcmpgt
__aeabi_i2d
__aeabi_dadd
__aeabi_dcmpgt
__aeabi_dcmplt
