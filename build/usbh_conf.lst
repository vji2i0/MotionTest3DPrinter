ARM GAS  /tmp/cccK7QpC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbh_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_HCD_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_HCD_MspInit:
  24              	.LFB66:
  25              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /* USER CODE BEGIN Header */
   2:Src/usbh_conf.c **** /**
   3:Src/usbh_conf.c ****   ******************************************************************************
   4:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   5:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   6:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   7:Src/usbh_conf.c ****   ******************************************************************************
   8:Src/usbh_conf.c ****   * @attention
   9:Src/usbh_conf.c ****   *
  10:Src/usbh_conf.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbh_conf.c ****   * All rights reserved.</center></h2>
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbh_conf.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbh_conf.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbh_conf.c ****   *                             www.st.com/SLA0044
  17:Src/usbh_conf.c ****   *
  18:Src/usbh_conf.c ****   ******************************************************************************
  19:Src/usbh_conf.c ****   */
  20:Src/usbh_conf.c **** /* USER CODE END Header */
  21:Src/usbh_conf.c **** 
  22:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbh_conf.c **** #include "usbh_core.h"
  24:Src/usbh_conf.c **** #include "usbh_platform.h"
  25:Src/usbh_conf.c **** 
  26:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  27:Src/usbh_conf.c **** 
  28:Src/usbh_conf.c **** /* USER CODE END Includes */
  29:Src/usbh_conf.c **** 
  30:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
  32:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  33:Src/usbh_conf.c **** 
ARM GAS  /tmp/cccK7QpC.s 			page 2


  34:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  35:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  36:Src/usbh_conf.c **** 
  37:Src/usbh_conf.c **** /* USER CODE END PV */
  38:Src/usbh_conf.c **** 
  39:Src/usbh_conf.c **** HCD_HandleTypeDef hhcd_USB_OTG_FS;
  40:Src/usbh_conf.c **** void Error_Handler(void);
  41:Src/usbh_conf.c **** 
  42:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  43:Src/usbh_conf.c **** 
  44:Src/usbh_conf.c **** /* USER CODE END 0 */
  45:Src/usbh_conf.c **** 
  46:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  47:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status);
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* USER CODE END PFP */
  51:Src/usbh_conf.c **** 
  52:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  53:Src/usbh_conf.c **** 
  54:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  55:Src/usbh_conf.c **** 
  56:Src/usbh_conf.c **** /* USER CODE END 1 */
  57:Src/usbh_conf.c **** 
  58:Src/usbh_conf.c **** /*******************************************************************************
  59:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  60:Src/usbh_conf.c **** *******************************************************************************/
  61:Src/usbh_conf.c **** /* MSP Init */
  62:Src/usbh_conf.c **** 
  63:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  64:Src/usbh_conf.c **** {
  26              		.loc 1 64 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  65:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 65 0
  40 0004 0023     		movs	r3, #0
  41 0006 0293     		str	r3, [sp, #8]
  42 0008 0393     		str	r3, [sp, #12]
  43 000a 0493     		str	r3, [sp, #16]
  44 000c 0593     		str	r3, [sp, #20]
  66:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  45              		.loc 1 66 0
  46 000e 0368     		ldr	r3, [r0]
  47 0010 B3F1A04F 		cmp	r3, #1342177280
  48 0014 01D0     		beq	.L4
  49              	.LVL1:
ARM GAS  /tmp/cccK7QpC.s 			page 3


  50              	.L1:
  67:Src/usbh_conf.c ****   {
  68:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  69:Src/usbh_conf.c **** 
  70:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  71:Src/usbh_conf.c ****   
  72:Src/usbh_conf.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  73:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  74:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS 
  75:Src/usbh_conf.c ****     */
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  77:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  78:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  80:Src/usbh_conf.c **** 
  81:Src/usbh_conf.c ****     /* Peripheral clock enable */
  82:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  83:Src/usbh_conf.c **** 
  84:Src/usbh_conf.c ****     /* Peripheral interrupt init */
  85:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
  86:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  87:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
  88:Src/usbh_conf.c **** 
  89:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
  90:Src/usbh_conf.c ****   }
  91:Src/usbh_conf.c **** }
  51              		.loc 1 91 0
  52 0016 06B0     		add	sp, sp, #24
  53              	.LCFI2:
  54              		.cfi_remember_state
  55              		.cfi_def_cfa_offset 8
  56              		@ sp needed
  57 0018 10BD     		pop	{r4, pc}
  58              	.LVL2:
  59              	.L4:
  60              	.LCFI3:
  61              		.cfi_restore_state
  62              	.LBB2:
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  63              		.loc 1 72 0
  64 001a 124C     		ldr	r4, .L5
  65 001c A369     		ldr	r3, [r4, #24]
  66 001e 43F00403 		orr	r3, r3, #4
  67 0022 A361     		str	r3, [r4, #24]
  68 0024 A369     		ldr	r3, [r4, #24]
  69 0026 03F00403 		and	r3, r3, #4
  70 002a 0093     		str	r3, [sp]
  71 002c 009B     		ldr	r3, [sp]
  72              	.LBE2:
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  73              		.loc 1 76 0
  74 002e 06A9     		add	r1, sp, #24
  75 0030 4FF40073 		mov	r3, #512
  76 0034 41F8103D 		str	r3, [r1, #-16]!
  79:Src/usbh_conf.c **** 
  77              		.loc 1 79 0
  78 0038 0B48     		ldr	r0, .L5+4
ARM GAS  /tmp/cccK7QpC.s 			page 4


  79              	.LVL3:
  80 003a FFF7FEFF 		bl	HAL_GPIO_Init
  81              	.LVL4:
  82              	.LBB3:
  82:Src/usbh_conf.c **** 
  83              		.loc 1 82 0
  84 003e 6369     		ldr	r3, [r4, #20]
  85 0040 43F48053 		orr	r3, r3, #4096
  86 0044 6361     		str	r3, [r4, #20]
  87 0046 6369     		ldr	r3, [r4, #20]
  88 0048 03F48053 		and	r3, r3, #4096
  89 004c 0193     		str	r3, [sp, #4]
  90 004e 019B     		ldr	r3, [sp, #4]
  91              	.LBE3:
  85:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  92              		.loc 1 85 0
  93 0050 0022     		movs	r2, #0
  94 0052 1146     		mov	r1, r2
  95 0054 4320     		movs	r0, #67
  96 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  97              	.LVL5:
  86:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
  98              		.loc 1 86 0
  99 005a 4320     		movs	r0, #67
 100 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 101              	.LVL6:
 102              		.loc 1 91 0
 103 0060 D9E7     		b	.L1
 104              	.L6:
 105 0062 00BF     		.align	2
 106              	.L5:
 107 0064 00100240 		.word	1073876992
 108 0068 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE66:
 112              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 113              		.align	1
 114              		.global	HAL_HCD_MspDeInit
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	HAL_HCD_MspDeInit:
 121              	.LFB67:
  92:Src/usbh_conf.c **** 
  93:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
  94:Src/usbh_conf.c **** {
 122              		.loc 1 94 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL7:
 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI4:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
ARM GAS  /tmp/cccK7QpC.s 			page 5


  95:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 132              		.loc 1 95 0
 133 0002 0368     		ldr	r3, [r0]
 134 0004 B3F1A04F 		cmp	r3, #1342177280
 135 0008 00D0     		beq	.L10
 136              	.LVL8:
 137              	.L7:
  96:Src/usbh_conf.c ****   {
  97:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
  98:Src/usbh_conf.c **** 
  99:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 100:Src/usbh_conf.c ****     /* Peripheral clock disable */
 101:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 102:Src/usbh_conf.c ****   
 103:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 104:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS 
 105:Src/usbh_conf.c ****     */
 106:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9);
 107:Src/usbh_conf.c **** 
 108:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 109:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 110:Src/usbh_conf.c **** 
 111:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 112:Src/usbh_conf.c **** 
 113:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 114:Src/usbh_conf.c ****   }
 115:Src/usbh_conf.c **** }
 138              		.loc 1 115 0
 139 000a 08BD     		pop	{r3, pc}
 140              	.LVL9:
 141              	.L10:
 101:Src/usbh_conf.c ****   
 142              		.loc 1 101 0
 143 000c 064A     		ldr	r2, .L11
 144 000e 5369     		ldr	r3, [r2, #20]
 145 0010 23F48053 		bic	r3, r3, #4096
 146 0014 5361     		str	r3, [r2, #20]
 106:Src/usbh_conf.c **** 
 147              		.loc 1 106 0
 148 0016 4FF40071 		mov	r1, #512
 149 001a 0448     		ldr	r0, .L11+4
 150              	.LVL10:
 151 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 152              	.LVL11:
 109:Src/usbh_conf.c **** 
 153              		.loc 1 109 0
 154 0020 4320     		movs	r0, #67
 155 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 156              	.LVL12:
 157              		.loc 1 115 0
 158 0026 F0E7     		b	.L7
 159              	.L12:
 160              		.align	2
 161              	.L11:
 162 0028 00100240 		.word	1073876992
 163 002c 00080140 		.word	1073809408
 164              		.cfi_endproc
ARM GAS  /tmp/cccK7QpC.s 			page 6


 165              	.LFE67:
 167              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 168              		.align	1
 169              		.global	HAL_HCD_SOF_Callback
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu softvfp
 175              	HAL_HCD_SOF_Callback:
 176              	.LFB68:
 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c **** /**
 118:Src/usbh_conf.c ****   * @brief  SOF callback.
 119:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 120:Src/usbh_conf.c ****   * @retval None
 121:Src/usbh_conf.c ****   */
 122:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 123:Src/usbh_conf.c **** {
 177              		.loc 1 123 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              	.LVL13:
 182 0000 08B5     		push	{r3, lr}
 183              	.LCFI5:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
 124:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
 187              		.loc 1 124 0
 188 0002 D0F88002 		ldr	r0, [r0, #640]
 189              	.LVL14:
 190 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 191              	.LVL15:
 125:Src/usbh_conf.c **** }
 192              		.loc 1 125 0
 193 000a 08BD     		pop	{r3, pc}
 194              		.cfi_endproc
 195              	.LFE68:
 197              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_HCD_Connect_Callback
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	HAL_HCD_Connect_Callback:
 206              	.LFB69:
 126:Src/usbh_conf.c **** 
 127:Src/usbh_conf.c **** /**
 128:Src/usbh_conf.c ****   * @brief  SOF callback.
 129:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 130:Src/usbh_conf.c ****   * @retval None
 131:Src/usbh_conf.c ****   */
 132:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 133:Src/usbh_conf.c **** {
 207              		.loc 1 133 0
ARM GAS  /tmp/cccK7QpC.s 			page 7


 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL16:
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI6:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 134:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 217              		.loc 1 134 0
 218 0002 D0F88002 		ldr	r0, [r0, #640]
 219              	.LVL17:
 220 0006 FFF7FEFF 		bl	USBH_LL_Connect
 221              	.LVL18:
 135:Src/usbh_conf.c **** }
 222              		.loc 1 135 0
 223 000a 08BD     		pop	{r3, pc}
 224              		.cfi_endproc
 225              	.LFE69:
 227              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_HCD_Disconnect_Callback
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	HAL_HCD_Disconnect_Callback:
 236              	.LFB70:
 136:Src/usbh_conf.c **** 
 137:Src/usbh_conf.c **** /**
 138:Src/usbh_conf.c ****   * @brief  SOF callback.
 139:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 140:Src/usbh_conf.c ****   * @retval None
 141:Src/usbh_conf.c ****   */
 142:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 143:Src/usbh_conf.c **** {
 237              		.loc 1 143 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL19:
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI7:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 144:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 247              		.loc 1 144 0
 248 0002 D0F88002 		ldr	r0, [r0, #640]
 249              	.LVL20:
 250 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 251              	.LVL21:
 145:Src/usbh_conf.c **** }
 252              		.loc 1 145 0
 253 000a 08BD     		pop	{r3, pc}
 254              		.cfi_endproc
ARM GAS  /tmp/cccK7QpC.s 			page 8


 255              	.LFE70:
 257              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	HAL_HCD_HC_NotifyURBChange_Callback:
 266              	.LFB71:
 146:Src/usbh_conf.c **** 
 147:Src/usbh_conf.c **** /**
 148:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 149:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 150:Src/usbh_conf.c ****   * @param  chnum: channel number
 151:Src/usbh_conf.c ****   * @param  urb_state: state
 152:Src/usbh_conf.c ****   * @retval None
 153:Src/usbh_conf.c ****   */
 154:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 155:Src/usbh_conf.c **** {
 267              		.loc 1 155 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL22:
 156:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 157:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 158:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 159:Src/usbh_conf.c **** #endif
 160:Src/usbh_conf.c **** }
 273              		.loc 1 160 0
 274 0000 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE71:
 278              		.section	.text.USBH_LL_Init,"ax",%progbits
 279              		.align	1
 280              		.global	USBH_LL_Init
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu softvfp
 286              	USBH_LL_Init:
 287              	.LFB72:
 161:Src/usbh_conf.c **** 
 162:Src/usbh_conf.c **** /*******************************************************************************
 163:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 164:Src/usbh_conf.c **** *******************************************************************************/
 165:Src/usbh_conf.c **** 
 166:Src/usbh_conf.c **** /**
 167:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 168:Src/usbh_conf.c ****   * @param  phost: Host handle
 169:Src/usbh_conf.c ****   * @retval USBH status
 170:Src/usbh_conf.c ****   */
 171:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 172:Src/usbh_conf.c **** {
 288              		.loc 1 172 0
ARM GAS  /tmp/cccK7QpC.s 			page 9


 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              	.LVL23:
 173:Src/usbh_conf.c ****   /* Init USB_IP */
 174:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 293              		.loc 1 174 0
 294 0000 90F8BC33 		ldrb	r3, [r0, #956]	@ zero_extendqisi2
 295 0004 012B     		cmp	r3, #1
 296 0006 01D0     		beq	.L27
 175:Src/usbh_conf.c ****   /* Link the driver to the stack. */
 176:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 177:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 178:Src/usbh_conf.c **** 
 179:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 180:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 181:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 182:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 183:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 184:Src/usbh_conf.c ****   {
 185:Src/usbh_conf.c ****     Error_Handler( );
 186:Src/usbh_conf.c ****   }
 187:Src/usbh_conf.c **** 
 188:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 189:Src/usbh_conf.c ****   }
 190:Src/usbh_conf.c ****   return USBH_OK;
 191:Src/usbh_conf.c **** }
 297              		.loc 1 191 0
 298 0008 0020     		movs	r0, #0
 299              	.LVL24:
 300 000a 7047     		bx	lr
 301              	.LVL25:
 302              	.L27:
 172:Src/usbh_conf.c ****   /* Init USB_IP */
 303              		.loc 1 172 0
 304 000c 10B5     		push	{r4, lr}
 305              	.LCFI8:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 4, -8
 308              		.cfi_offset 14, -4
 309 000e 0446     		mov	r4, r0
 176:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 310              		.loc 1 176 0
 311 0010 0E48     		ldr	r0, .L29
 312              	.LVL26:
 313 0012 C0F88042 		str	r4, [r0, #640]
 177:Src/usbh_conf.c **** 
 314              		.loc 1 177 0
 315 0016 C4F8C003 		str	r0, [r4, #960]
 179:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 316              		.loc 1 179 0
 317 001a 4FF0A043 		mov	r3, #1342177280
 318 001e 0360     		str	r3, [r0]
 180:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 319              		.loc 1 180 0
 320 0020 0823     		movs	r3, #8
 321 0022 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/cccK7QpC.s 			page 10


 181:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 322              		.loc 1 181 0
 323 0024 0323     		movs	r3, #3
 324 0026 C360     		str	r3, [r0, #12]
 182:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 325              		.loc 1 182 0
 326 0028 0023     		movs	r3, #0
 327 002a 4361     		str	r3, [r0, #20]
 183:Src/usbh_conf.c ****   {
 328              		.loc 1 183 0
 329 002c FFF7FEFF 		bl	HAL_HCD_Init
 330              	.LVL27:
 331 0030 40B9     		cbnz	r0, .L28
 332              	.L22:
 188:Src/usbh_conf.c ****   }
 333              		.loc 1 188 0
 334 0032 0648     		ldr	r0, .L29
 335 0034 FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 336              	.LVL28:
 337 0038 0146     		mov	r1, r0
 338 003a 2046     		mov	r0, r4
 339 003c FFF7FEFF 		bl	USBH_LL_SetTimer
 340              	.LVL29:
 341              		.loc 1 191 0
 342 0040 0020     		movs	r0, #0
 343 0042 10BD     		pop	{r4, pc}
 344              	.LVL30:
 345              	.L28:
 185:Src/usbh_conf.c ****   }
 346              		.loc 1 185 0
 347 0044 FFF7FEFF 		bl	Error_Handler
 348              	.LVL31:
 349 0048 F3E7     		b	.L22
 350              	.L30:
 351 004a 00BF     		.align	2
 352              	.L29:
 353 004c 00000000 		.word	hhcd_USB_OTG_FS
 354              		.cfi_endproc
 355              	.LFE72:
 357              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 358              		.align	1
 359              		.global	USBH_LL_GetSpeed
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu softvfp
 365              	USBH_LL_GetSpeed:
 366              	.LFB76:
 192:Src/usbh_conf.c **** 
 193:Src/usbh_conf.c **** /**
 194:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 195:Src/usbh_conf.c ****   * @param  phost: Host handle
 196:Src/usbh_conf.c ****   * @retval USBH status
 197:Src/usbh_conf.c ****   */
 198:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 199:Src/usbh_conf.c **** {
 200:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
ARM GAS  /tmp/cccK7QpC.s 			page 11


 201:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 202:Src/usbh_conf.c **** 
 203:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 204:Src/usbh_conf.c ****   
 205:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 206:Src/usbh_conf.c ****   
 207:Src/usbh_conf.c ****   return usb_status;
 208:Src/usbh_conf.c **** }
 209:Src/usbh_conf.c **** 
 210:Src/usbh_conf.c **** /**
 211:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 212:Src/usbh_conf.c ****   * @param  phost: Host handle
 213:Src/usbh_conf.c ****   * @retval USBH status
 214:Src/usbh_conf.c ****   */
 215:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
 216:Src/usbh_conf.c **** {
 217:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 218:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 219:Src/usbh_conf.c **** 
 220:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 221:Src/usbh_conf.c **** 
 222:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 223:Src/usbh_conf.c ****   
 224:Src/usbh_conf.c ****   return usb_status;
 225:Src/usbh_conf.c **** }
 226:Src/usbh_conf.c **** 
 227:Src/usbh_conf.c **** /**
 228:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 229:Src/usbh_conf.c ****   * @param  phost: Host handle
 230:Src/usbh_conf.c ****   * @retval USBH status
 231:Src/usbh_conf.c ****   */
 232:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 233:Src/usbh_conf.c **** {
 234:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 235:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 236:Src/usbh_conf.c **** 
 237:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 238:Src/usbh_conf.c **** 
 239:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 240:Src/usbh_conf.c ****  
 241:Src/usbh_conf.c ****   return usb_status;
 242:Src/usbh_conf.c **** }
 243:Src/usbh_conf.c **** 
 244:Src/usbh_conf.c **** /**
 245:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 246:Src/usbh_conf.c ****   * @param  phost: Host handle
 247:Src/usbh_conf.c ****   * @retval USBH speeds
 248:Src/usbh_conf.c ****   */
 249:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 250:Src/usbh_conf.c **** {
 367              		.loc 1 250 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL32:
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI9:
ARM GAS  /tmp/cccK7QpC.s 			page 12


 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 377              	.LVL33:
 251:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 252:Src/usbh_conf.c **** 
 253:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 378              		.loc 1 253 0
 379 0002 D0F8C003 		ldr	r0, [r0, #960]
 380              	.LVL34:
 381 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 382              	.LVL35:
 383 000a 18B1     		cbz	r0, .L33
 384 000c 0228     		cmp	r0, #2
 385 000e 03D0     		beq	.L34
 254:Src/usbh_conf.c ****   {
 255:Src/usbh_conf.c ****   case 0 :
 256:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 257:Src/usbh_conf.c ****     break;
 258:Src/usbh_conf.c **** 
 259:Src/usbh_conf.c ****   case 1 :
 260:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 386              		.loc 1 260 0
 387 0010 0120     		movs	r0, #1
 388              	.LVL36:
 389              	.L32:
 261:Src/usbh_conf.c ****     break;
 262:Src/usbh_conf.c **** 
 263:Src/usbh_conf.c ****   case 2 :
 264:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 265:Src/usbh_conf.c ****     break;
 266:Src/usbh_conf.c **** 
 267:Src/usbh_conf.c ****   default:
 268:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 269:Src/usbh_conf.c ****     break;
 270:Src/usbh_conf.c ****   }
 271:Src/usbh_conf.c ****   return  speed;
 272:Src/usbh_conf.c **** }
 390              		.loc 1 272 0
 391 0012 08BD     		pop	{r3, pc}
 392              	.LVL37:
 393              	.L33:
 256:Src/usbh_conf.c ****     break;
 394              		.loc 1 256 0
 395 0014 0020     		movs	r0, #0
 396 0016 FCE7     		b	.L32
 397              	.L34:
 398              	.LVL38:
 264:Src/usbh_conf.c ****     break;
 399              		.loc 1 264 0
 400 0018 0220     		movs	r0, #2
 265:Src/usbh_conf.c **** 
 401              		.loc 1 265 0
 402 001a FAE7     		b	.L32
 403              		.cfi_endproc
 404              	.LFE76:
 406              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
ARM GAS  /tmp/cccK7QpC.s 			page 13


 407              		.align	1
 408              		.global	USBH_LL_GetLastXferSize
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu softvfp
 414              	USBH_LL_GetLastXferSize:
 415              	.LFB78:
 273:Src/usbh_conf.c **** 
 274:Src/usbh_conf.c **** /**
 275:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 276:Src/usbh_conf.c ****   * @param  phost: Host handle
 277:Src/usbh_conf.c ****   * @retval USBH status
 278:Src/usbh_conf.c ****   */
 279:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 280:Src/usbh_conf.c **** {
 281:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 282:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 283:Src/usbh_conf.c **** 
 284:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 285:Src/usbh_conf.c ****   
 286:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 287:Src/usbh_conf.c ****   
 288:Src/usbh_conf.c ****   return usb_status;
 289:Src/usbh_conf.c **** }
 290:Src/usbh_conf.c **** 
 291:Src/usbh_conf.c **** /**
 292:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 293:Src/usbh_conf.c ****   * @param  phost: Host handle
 294:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 295:Src/usbh_conf.c ****   * @retval Packet size
 296:Src/usbh_conf.c ****   */
 297:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 298:Src/usbh_conf.c **** {
 416              		.loc 1 298 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              	.LVL39:
 421 0000 08B5     		push	{r3, lr}
 422              	.LCFI10:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 299:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 426              		.loc 1 299 0
 427 0002 D0F8C003 		ldr	r0, [r0, #960]
 428              	.LVL40:
 429 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 430              	.LVL41:
 300:Src/usbh_conf.c **** }
 431              		.loc 1 300 0
 432 000a 08BD     		pop	{r3, pc}
 433              		.cfi_endproc
 434              	.LFE78:
 436              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 437              		.align	1
ARM GAS  /tmp/cccK7QpC.s 			page 14


 438              		.global	USBH_LL_GetURBState
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu softvfp
 444              	USBH_LL_GetURBState:
 445              	.LFB82:
 301:Src/usbh_conf.c **** 
 302:Src/usbh_conf.c **** /**
 303:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 304:Src/usbh_conf.c ****   * @param  phost: Host handle
 305:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 306:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 307:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 308:Src/usbh_conf.c ****   * @param  speed: Device Speed
 309:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 310:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 311:Src/usbh_conf.c ****   * @retval USBH status
 312:Src/usbh_conf.c ****   */
 313:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 314:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 315:Src/usbh_conf.c **** {
 316:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 317:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 318:Src/usbh_conf.c **** 
 319:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 320:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 321:Src/usbh_conf.c **** 
 322:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 323:Src/usbh_conf.c ****   
 324:Src/usbh_conf.c ****   return usb_status;
 325:Src/usbh_conf.c **** }
 326:Src/usbh_conf.c **** 
 327:Src/usbh_conf.c **** /**
 328:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 329:Src/usbh_conf.c ****   * @param  phost: Host handle
 330:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 331:Src/usbh_conf.c ****   * @retval USBH status
 332:Src/usbh_conf.c ****   */
 333:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 334:Src/usbh_conf.c **** {
 335:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 336:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 337:Src/usbh_conf.c **** 
 338:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 339:Src/usbh_conf.c **** 
 340:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 341:Src/usbh_conf.c ****   
 342:Src/usbh_conf.c ****   return usb_status;
 343:Src/usbh_conf.c **** }
 344:Src/usbh_conf.c **** 
 345:Src/usbh_conf.c **** /**
 346:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 347:Src/usbh_conf.c ****   * @param  phost: Host handle
 348:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 349:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 350:Src/usbh_conf.c ****   * @param  direction : Channel number
ARM GAS  /tmp/cccK7QpC.s 			page 15


 351:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 352:Src/usbh_conf.c ****   *           0 : Output
 353:Src/usbh_conf.c ****   *           1 : Input
 354:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 355:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 356:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 357:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 358:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 359:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 360:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 361:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 362:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 363:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 364:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 365:Src/usbh_conf.c ****   * @param  length : Length of URB data
 366:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 367:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 368:Src/usbh_conf.c ****   *           0 : do ping inactive
 369:Src/usbh_conf.c ****   *           1 : do ping active
 370:Src/usbh_conf.c ****   * @retval Status
 371:Src/usbh_conf.c ****   */
 372:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 373:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 374:Src/usbh_conf.c ****                                      uint8_t do_ping)
 375:Src/usbh_conf.c **** {
 376:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 377:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 378:Src/usbh_conf.c **** 
 379:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 380:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 381:Src/usbh_conf.c ****                                         do_ping);
 382:Src/usbh_conf.c ****   usb_status =  USBH_Get_USB_Status(hal_status);
 383:Src/usbh_conf.c ****   
 384:Src/usbh_conf.c ****   return usb_status;
 385:Src/usbh_conf.c **** }
 386:Src/usbh_conf.c **** 
 387:Src/usbh_conf.c **** /**
 388:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 389:Src/usbh_conf.c ****   * @param  phost: Host handle
 390:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 391:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 392:Src/usbh_conf.c ****   * @retval URB state
 393:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 394:Src/usbh_conf.c ****   *            @arg URB_IDLE
 395:Src/usbh_conf.c ****   *            @arg URB_DONE
 396:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 397:Src/usbh_conf.c ****   *            @arg URB_NYET
 398:Src/usbh_conf.c ****   *            @arg URB_ERROR
 399:Src/usbh_conf.c ****   *            @arg URB_STALL
 400:Src/usbh_conf.c ****   */
 401:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 402:Src/usbh_conf.c **** {
 446              		.loc 1 402 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL42:
ARM GAS  /tmp/cccK7QpC.s 			page 16


 451 0000 08B5     		push	{r3, lr}
 452              	.LCFI11:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 403:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 456              		.loc 1 403 0
 457 0002 D0F8C003 		ldr	r0, [r0, #960]
 458              	.LVL43:
 459 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 460              	.LVL44:
 404:Src/usbh_conf.c **** }
 461              		.loc 1 404 0
 462 000a 08BD     		pop	{r3, pc}
 463              		.cfi_endproc
 464              	.LFE82:
 466              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 467              		.align	1
 468              		.global	USBH_LL_DriverVBUS
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	USBH_LL_DriverVBUS:
 475              	.LFB83:
 405:Src/usbh_conf.c **** 
 406:Src/usbh_conf.c **** /**
 407:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 408:Src/usbh_conf.c ****   * @param  phost: Host handle
 409:Src/usbh_conf.c ****   * @param  state : VBUS state
 410:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 411:Src/usbh_conf.c ****   *           0 : VBUS Active
 412:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 413:Src/usbh_conf.c ****   * @retval Status
 414:Src/usbh_conf.c ****   */
 415:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 416:Src/usbh_conf.c **** {
 476              		.loc 1 416 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              	.LVL45:
 481 0000 08B5     		push	{r3, lr}
 482              	.LCFI12:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 3, -8
 485              		.cfi_offset 14, -4
 417:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 486              		.loc 1 417 0
 487 0002 90F8BC33 		ldrb	r3, [r0, #956]	@ zero_extendqisi2
 488 0006 012B     		cmp	r3, #1
 489 0008 04D0     		beq	.L45
 490              	.LVL46:
 491              	.L43:
 418:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 419:Src/usbh_conf.c ****   }
 420:Src/usbh_conf.c **** 
ARM GAS  /tmp/cccK7QpC.s 			page 17


 421:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 422:Src/usbh_conf.c **** 
 423:Src/usbh_conf.c ****   /* USER CODE END 0*/
 424:Src/usbh_conf.c **** 
 425:Src/usbh_conf.c ****   HAL_Delay(200);
 492              		.loc 1 425 0
 493 000a C820     		movs	r0, #200
 494 000c FFF7FEFF 		bl	HAL_Delay
 495              	.LVL47:
 426:Src/usbh_conf.c ****   return USBH_OK;
 427:Src/usbh_conf.c **** }
 496              		.loc 1 427 0
 497 0010 0020     		movs	r0, #0
 498 0012 08BD     		pop	{r3, pc}
 499              	.LVL48:
 500              	.L45:
 418:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 501              		.loc 1 418 0
 502 0014 0846     		mov	r0, r1
 503              	.LVL49:
 504 0016 FFF7FEFF 		bl	MX_DriverVbusFS
 505              	.LVL50:
 506 001a F6E7     		b	.L43
 507              		.cfi_endproc
 508              	.LFE83:
 510              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 511              		.align	1
 512              		.global	USBH_LL_SetToggle
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu softvfp
 518              	USBH_LL_SetToggle:
 519              	.LFB84:
 428:Src/usbh_conf.c **** 
 429:Src/usbh_conf.c **** /**
 430:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 431:Src/usbh_conf.c ****   * @param  phost: Host handle
 432:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 433:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 434:Src/usbh_conf.c ****   * @retval Status
 435:Src/usbh_conf.c ****   */
 436:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 437:Src/usbh_conf.c **** {
 520              		.loc 1 437 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL51:
 526 0000 10B4     		push	{r4}
 527              	.LCFI13:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 4, -4
 438:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 439:Src/usbh_conf.c ****   pHandle = phost->pData;
 530              		.loc 1 439 0
ARM GAS  /tmp/cccK7QpC.s 			page 18


 531 0002 D0F8C033 		ldr	r3, [r0, #960]
 532              	.LVL52:
 440:Src/usbh_conf.c **** 
 441:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 533              		.loc 1 441 0
 534 0006 01EB8104 		add	r4, r1, r1, lsl #2
 535 000a E000     		lsls	r0, r4, #3
 536              	.LVL53:
 537 000c 0446     		mov	r4, r0
 538 000e 1844     		add	r0, r0, r3
 539 0010 90F82700 		ldrb	r0, [r0, #39]	@ zero_extendqisi2
 540 0014 40B9     		cbnz	r0, .L50
 442:Src/usbh_conf.c ****   {
 443:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 444:Src/usbh_conf.c ****   }
 445:Src/usbh_conf.c ****   else
 446:Src/usbh_conf.c ****   {
 447:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 541              		.loc 1 447 0
 542 0016 01EB8101 		add	r1, r1, r1, lsl #2
 543              	.LVL54:
 544 001a C800     		lsls	r0, r1, #3
 545 001c 0344     		add	r3, r3, r0
 546              	.LVL55:
 547 001e 83F83D20 		strb	r2, [r3, #61]
 548              	.LVL56:
 549              	.L48:
 448:Src/usbh_conf.c ****   }
 449:Src/usbh_conf.c **** 
 450:Src/usbh_conf.c ****   return USBH_OK;
 451:Src/usbh_conf.c **** }
 550              		.loc 1 451 0
 551 0022 0020     		movs	r0, #0
 552 0024 10BC     		pop	{r4}
 553              	.LCFI14:
 554              		.cfi_remember_state
 555              		.cfi_restore 4
 556              		.cfi_def_cfa_offset 0
 557 0026 7047     		bx	lr
 558              	.LVL57:
 559              	.L50:
 560              	.LCFI15:
 561              		.cfi_restore_state
 443:Src/usbh_conf.c ****   }
 562              		.loc 1 443 0
 563 0028 2344     		add	r3, r3, r4
 564              	.LVL58:
 565 002a 83F83C20 		strb	r2, [r3, #60]
 566              	.LVL59:
 567 002e F8E7     		b	.L48
 568              		.cfi_endproc
 569              	.LFE84:
 571              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 572              		.align	1
 573              		.global	USBH_LL_GetToggle
 574              		.syntax unified
 575              		.thumb
ARM GAS  /tmp/cccK7QpC.s 			page 19


 576              		.thumb_func
 577              		.fpu softvfp
 579              	USBH_LL_GetToggle:
 580              	.LFB85:
 452:Src/usbh_conf.c **** 
 453:Src/usbh_conf.c **** /**
 454:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 455:Src/usbh_conf.c ****   * @param  phost: Host handle
 456:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 457:Src/usbh_conf.c ****   * @retval toggle (0/1)
 458:Src/usbh_conf.c ****   */
 459:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 460:Src/usbh_conf.c **** {
 581              		.loc 1 460 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL60:
 461:Src/usbh_conf.c ****   uint8_t toggle = 0;
 462:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 463:Src/usbh_conf.c ****   pHandle = phost->pData;
 587              		.loc 1 463 0
 588 0000 D0F8C033 		ldr	r3, [r0, #960]
 589              	.LVL61:
 464:Src/usbh_conf.c **** 
 465:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 590              		.loc 1 465 0
 591 0004 01EB8100 		add	r0, r1, r1, lsl #2
 592              	.LVL62:
 593 0008 C200     		lsls	r2, r0, #3
 594 000a 1046     		mov	r0, r2
 595 000c 1A44     		add	r2, r2, r3
 596 000e 92F82720 		ldrb	r2, [r2, #39]	@ zero_extendqisi2
 597 0012 32B9     		cbnz	r2, .L54
 466:Src/usbh_conf.c ****   {
 467:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 468:Src/usbh_conf.c ****   }
 469:Src/usbh_conf.c ****   else
 470:Src/usbh_conf.c ****   {
 471:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 598              		.loc 1 471 0
 599 0014 01EB8101 		add	r1, r1, r1, lsl #2
 600              	.LVL63:
 601 0018 CA00     		lsls	r2, r1, #3
 602 001a 1344     		add	r3, r3, r2
 603              	.LVL64:
 604 001c 93F83D00 		ldrb	r0, [r3, #61]	@ zero_extendqisi2
 605              	.LVL65:
 472:Src/usbh_conf.c ****   }
 473:Src/usbh_conf.c ****   return toggle;
 474:Src/usbh_conf.c **** }
 606              		.loc 1 474 0
 607 0020 7047     		bx	lr
 608              	.LVL66:
 609              	.L54:
 467:Src/usbh_conf.c ****   }
ARM GAS  /tmp/cccK7QpC.s 			page 20


 610              		.loc 1 467 0
 611 0022 0344     		add	r3, r3, r0
 612              	.LVL67:
 613 0024 93F83C00 		ldrb	r0, [r3, #60]	@ zero_extendqisi2
 614              	.LVL68:
 615 0028 7047     		bx	lr
 616              		.cfi_endproc
 617              	.LFE85:
 619              		.section	.text.USBH_Delay,"ax",%progbits
 620              		.align	1
 621              		.global	USBH_Delay
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu softvfp
 627              	USBH_Delay:
 628              	.LFB86:
 475:Src/usbh_conf.c **** 
 476:Src/usbh_conf.c **** /**
 477:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 478:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 479:Src/usbh_conf.c ****   * @retval None
 480:Src/usbh_conf.c ****   */
 481:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
 482:Src/usbh_conf.c **** {
 629              		.loc 1 482 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              	.LVL69:
 634 0000 08B5     		push	{r3, lr}
 635              	.LCFI16:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 3, -8
 638              		.cfi_offset 14, -4
 483:Src/usbh_conf.c ****   HAL_Delay(Delay);
 639              		.loc 1 483 0
 640 0002 FFF7FEFF 		bl	HAL_Delay
 641              	.LVL70:
 484:Src/usbh_conf.c **** }
 642              		.loc 1 484 0
 643 0006 08BD     		pop	{r3, pc}
 644              		.cfi_endproc
 645              	.LFE86:
 647              		.section	.text.USBH_Get_USB_Status,"ax",%progbits
 648              		.align	1
 649              		.global	USBH_Get_USB_Status
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu softvfp
 655              	USBH_Get_USB_Status:
 656              	.LFB87:
 485:Src/usbh_conf.c **** 
 486:Src/usbh_conf.c **** /**
 487:Src/usbh_conf.c ****   * @brief  Retuns the USB status depending on the HAL status:
 488:Src/usbh_conf.c ****   * @param  hal_status: HAL status
ARM GAS  /tmp/cccK7QpC.s 			page 21


 489:Src/usbh_conf.c ****   * @retval USB status
 490:Src/usbh_conf.c ****   */
 491:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status)
 492:Src/usbh_conf.c **** {
 657              		.loc 1 492 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662              	.LVL71:
 493:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 494:Src/usbh_conf.c **** 
 495:Src/usbh_conf.c ****   switch (hal_status)
 663              		.loc 1 495 0
 664 0000 18B1     		cbz	r0, .L59
 665 0002 0228     		cmp	r0, #2
 666 0004 03D0     		beq	.L60
 496:Src/usbh_conf.c ****   {
 497:Src/usbh_conf.c ****     case HAL_OK :
 498:Src/usbh_conf.c ****       usb_status = USBH_OK;
 499:Src/usbh_conf.c ****     break;
 500:Src/usbh_conf.c ****     case HAL_ERROR :
 501:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 667              		.loc 1 501 0
 668 0006 0220     		movs	r0, #2
 669              	.LVL72:
 502:Src/usbh_conf.c ****     break;
 503:Src/usbh_conf.c ****     case HAL_BUSY :
 504:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 505:Src/usbh_conf.c ****     break;
 506:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 507:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 508:Src/usbh_conf.c ****     break;
 509:Src/usbh_conf.c ****     default :
 510:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 511:Src/usbh_conf.c ****     break;
 512:Src/usbh_conf.c ****   }
 513:Src/usbh_conf.c ****   return usb_status;
 514:Src/usbh_conf.c **** }
 670              		.loc 1 514 0
 671 0008 7047     		bx	lr
 672              	.LVL73:
 673              	.L59:
 498:Src/usbh_conf.c ****     break;
 674              		.loc 1 498 0
 675 000a 0020     		movs	r0, #0
 676              	.LVL74:
 677 000c 7047     		bx	lr
 678              	.LVL75:
 679              	.L60:
 504:Src/usbh_conf.c ****     break;
 680              		.loc 1 504 0
 681 000e 0120     		movs	r0, #1
 682              	.LVL76:
 505:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 683              		.loc 1 505 0
 684 0010 7047     		bx	lr
ARM GAS  /tmp/cccK7QpC.s 			page 22


 685              		.cfi_endproc
 686              	.LFE87:
 688              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 689              		.align	1
 690              		.global	USBH_LL_DeInit
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu softvfp
 696              	USBH_LL_DeInit:
 697              	.LFB73:
 199:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 698              		.loc 1 199 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              	.LVL77:
 703 0000 08B5     		push	{r3, lr}
 704              	.LCFI17:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 708              	.LVL78:
 203:Src/usbh_conf.c ****   
 709              		.loc 1 203 0
 710 0002 D0F8C003 		ldr	r0, [r0, #960]
 711              	.LVL79:
 712 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 713              	.LVL80:
 205:Src/usbh_conf.c ****   
 714              		.loc 1 205 0
 715 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 716              	.LVL81:
 208:Src/usbh_conf.c **** 
 717              		.loc 1 208 0
 718 000e 08BD     		pop	{r3, pc}
 719              		.cfi_endproc
 720              	.LFE73:
 722              		.section	.text.USBH_LL_Start,"ax",%progbits
 723              		.align	1
 724              		.global	USBH_LL_Start
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	USBH_LL_Start:
 731              	.LFB74:
 216:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 732              		.loc 1 216 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL82:
 737 0000 08B5     		push	{r3, lr}
 738              	.LCFI18:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 3, -8
ARM GAS  /tmp/cccK7QpC.s 			page 23


 741              		.cfi_offset 14, -4
 742              	.LVL83:
 220:Src/usbh_conf.c **** 
 743              		.loc 1 220 0
 744 0002 D0F8C003 		ldr	r0, [r0, #960]
 745              	.LVL84:
 746 0006 FFF7FEFF 		bl	HAL_HCD_Start
 747              	.LVL85:
 222:Src/usbh_conf.c ****   
 748              		.loc 1 222 0
 749 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 750              	.LVL86:
 225:Src/usbh_conf.c **** 
 751              		.loc 1 225 0
 752 000e 08BD     		pop	{r3, pc}
 753              		.cfi_endproc
 754              	.LFE74:
 756              		.section	.text.USBH_LL_Stop,"ax",%progbits
 757              		.align	1
 758              		.global	USBH_LL_Stop
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 762              		.fpu softvfp
 764              	USBH_LL_Stop:
 765              	.LFB75:
 233:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 766              		.loc 1 233 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL87:
 771 0000 08B5     		push	{r3, lr}
 772              	.LCFI19:
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 3, -8
 775              		.cfi_offset 14, -4
 776              	.LVL88:
 237:Src/usbh_conf.c **** 
 777              		.loc 1 237 0
 778 0002 D0F8C003 		ldr	r0, [r0, #960]
 779              	.LVL89:
 780 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 781              	.LVL90:
 239:Src/usbh_conf.c ****  
 782              		.loc 1 239 0
 783 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 784              	.LVL91:
 242:Src/usbh_conf.c **** 
 785              		.loc 1 242 0
 786 000e 08BD     		pop	{r3, pc}
 787              		.cfi_endproc
 788              	.LFE75:
 790              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 791              		.align	1
 792              		.global	USBH_LL_ResetPort
 793              		.syntax unified
ARM GAS  /tmp/cccK7QpC.s 			page 24


 794              		.thumb
 795              		.thumb_func
 796              		.fpu softvfp
 798              	USBH_LL_ResetPort:
 799              	.LFB77:
 280:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 800              		.loc 1 280 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL92:
 805 0000 08B5     		push	{r3, lr}
 806              	.LCFI20:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 3, -8
 809              		.cfi_offset 14, -4
 810              	.LVL93:
 284:Src/usbh_conf.c ****   
 811              		.loc 1 284 0
 812 0002 D0F8C003 		ldr	r0, [r0, #960]
 813              	.LVL94:
 814 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 815              	.LVL95:
 286:Src/usbh_conf.c ****   
 816              		.loc 1 286 0
 817 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 818              	.LVL96:
 289:Src/usbh_conf.c **** 
 819              		.loc 1 289 0
 820 000e 08BD     		pop	{r3, pc}
 821              		.cfi_endproc
 822              	.LFE77:
 824              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 825              		.align	1
 826              		.global	USBH_LL_OpenPipe
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 830              		.fpu softvfp
 832              	USBH_LL_OpenPipe:
 833              	.LFB79:
 315:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 834              		.loc 1 315 0
 835              		.cfi_startproc
 836              		@ args = 12, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              	.LVL97:
 839 0000 10B5     		push	{r4, lr}
 840              	.LCFI21:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 4, -8
 843              		.cfi_offset 14, -4
 844 0002 84B0     		sub	sp, sp, #16
 845              	.LCFI22:
 846              		.cfi_def_cfa_offset 24
 847              	.LVL98:
 319:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
ARM GAS  /tmp/cccK7QpC.s 			page 25


 848              		.loc 1 319 0
 849 0004 D0F8C003 		ldr	r0, [r0, #960]
 850              	.LVL99:
 851 0008 BDF82040 		ldrh	r4, [sp, #32]
 852 000c 0294     		str	r4, [sp, #8]
 853 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 854 0012 0194     		str	r4, [sp, #4]
 855 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 856 0018 0094     		str	r4, [sp]
 857 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 858              	.LVL100:
 322:Src/usbh_conf.c ****   
 859              		.loc 1 322 0
 860 001e FFF7FEFF 		bl	USBH_Get_USB_Status
 861              	.LVL101:
 325:Src/usbh_conf.c **** 
 862              		.loc 1 325 0
 863 0022 04B0     		add	sp, sp, #16
 864              	.LCFI23:
 865              		.cfi_def_cfa_offset 8
 866              		@ sp needed
 867 0024 10BD     		pop	{r4, pc}
 868              		.cfi_endproc
 869              	.LFE79:
 871              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 872              		.align	1
 873              		.global	USBH_LL_ClosePipe
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu softvfp
 879              	USBH_LL_ClosePipe:
 880              	.LFB80:
 334:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 881              		.loc 1 334 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL102:
 886 0000 08B5     		push	{r3, lr}
 887              	.LCFI24:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
 891              	.LVL103:
 338:Src/usbh_conf.c **** 
 892              		.loc 1 338 0
 893 0002 D0F8C003 		ldr	r0, [r0, #960]
 894              	.LVL104:
 895 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 896              	.LVL105:
 340:Src/usbh_conf.c ****   
 897              		.loc 1 340 0
 898 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 899              	.LVL106:
 343:Src/usbh_conf.c **** 
 900              		.loc 1 343 0
ARM GAS  /tmp/cccK7QpC.s 			page 26


 901 000e 08BD     		pop	{r3, pc}
 902              		.cfi_endproc
 903              	.LFE80:
 905              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 906              		.align	1
 907              		.global	USBH_LL_SubmitURB
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu softvfp
 913              	USBH_LL_SubmitURB:
 914              	.LFB81:
 375:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 915              		.loc 1 375 0
 916              		.cfi_startproc
 917              		@ args = 16, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              	.LVL107:
 920 0000 10B5     		push	{r4, lr}
 921              	.LCFI25:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 4, -8
 924              		.cfi_offset 14, -4
 925 0002 84B0     		sub	sp, sp, #16
 926              	.LCFI26:
 927              		.cfi_def_cfa_offset 24
 928              	.LVL108:
 379:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 929              		.loc 1 379 0
 930 0004 D0F8C003 		ldr	r0, [r0, #960]
 931              	.LVL109:
 932 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 933 000c 0394     		str	r4, [sp, #12]
 934 000e BDF82040 		ldrh	r4, [sp, #32]
 935 0012 0294     		str	r4, [sp, #8]
 936 0014 079C     		ldr	r4, [sp, #28]
 937 0016 0194     		str	r4, [sp, #4]
 938 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 939 001c 0094     		str	r4, [sp]
 940 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 941              	.LVL110:
 382:Src/usbh_conf.c ****   
 942              		.loc 1 382 0
 943 0022 FFF7FEFF 		bl	USBH_Get_USB_Status
 944              	.LVL111:
 385:Src/usbh_conf.c **** 
 945              		.loc 1 385 0
 946 0026 04B0     		add	sp, sp, #16
 947              	.LCFI27:
 948              		.cfi_def_cfa_offset 8
 949              		@ sp needed
 950 0028 10BD     		pop	{r4, pc}
 951              		.cfi_endproc
 952              	.LFE81:
 954              		.comm	hhcd_USB_OTG_FS,644,4
 955              		.text
 956              	.Letext0:
ARM GAS  /tmp/cccK7QpC.s 			page 27


 957              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 958              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 959              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 960              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 961              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 962              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 963              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 964              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 965              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 966              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 967              		.file 12 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 968              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 969              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 970              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 971              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_hcd.h"
 972              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 973              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 974              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 975              		.file 20 "Inc/usbh_platform.h"
 976              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 977              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cccK7QpC.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
     /tmp/cccK7QpC.s:16     .text.HAL_HCD_MspInit:0000000000000000 $t
     /tmp/cccK7QpC.s:23     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
     /tmp/cccK7QpC.s:107    .text.HAL_HCD_MspInit:0000000000000064 $d
     /tmp/cccK7QpC.s:113    .text.HAL_HCD_MspDeInit:0000000000000000 $t
     /tmp/cccK7QpC.s:120    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
     /tmp/cccK7QpC.s:162    .text.HAL_HCD_MspDeInit:0000000000000028 $d
     /tmp/cccK7QpC.s:168    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
     /tmp/cccK7QpC.s:175    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
     /tmp/cccK7QpC.s:198    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
     /tmp/cccK7QpC.s:205    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
     /tmp/cccK7QpC.s:228    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
     /tmp/cccK7QpC.s:235    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
     /tmp/cccK7QpC.s:258    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
     /tmp/cccK7QpC.s:265    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/cccK7QpC.s:279    .text.USBH_LL_Init:0000000000000000 $t
     /tmp/cccK7QpC.s:286    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
     /tmp/cccK7QpC.s:353    .text.USBH_LL_Init:000000000000004c $d
                            *COM*:0000000000000284 hhcd_USB_OTG_FS
     /tmp/cccK7QpC.s:358    .text.USBH_LL_GetSpeed:0000000000000000 $t
     /tmp/cccK7QpC.s:365    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
     /tmp/cccK7QpC.s:407    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
     /tmp/cccK7QpC.s:414    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
     /tmp/cccK7QpC.s:437    .text.USBH_LL_GetURBState:0000000000000000 $t
     /tmp/cccK7QpC.s:444    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
     /tmp/cccK7QpC.s:467    .text.USBH_LL_DriverVBUS:0000000000000000 $t
     /tmp/cccK7QpC.s:474    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
     /tmp/cccK7QpC.s:511    .text.USBH_LL_SetToggle:0000000000000000 $t
     /tmp/cccK7QpC.s:518    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
     /tmp/cccK7QpC.s:572    .text.USBH_LL_GetToggle:0000000000000000 $t
     /tmp/cccK7QpC.s:579    .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
     /tmp/cccK7QpC.s:620    .text.USBH_Delay:0000000000000000 $t
     /tmp/cccK7QpC.s:627    .text.USBH_Delay:0000000000000000 USBH_Delay
     /tmp/cccK7QpC.s:648    .text.USBH_Get_USB_Status:0000000000000000 $t
     /tmp/cccK7QpC.s:655    .text.USBH_Get_USB_Status:0000000000000000 USBH_Get_USB_Status
     /tmp/cccK7QpC.s:689    .text.USBH_LL_DeInit:0000000000000000 $t
     /tmp/cccK7QpC.s:696    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
     /tmp/cccK7QpC.s:723    .text.USBH_LL_Start:0000000000000000 $t
     /tmp/cccK7QpC.s:730    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
     /tmp/cccK7QpC.s:757    .text.USBH_LL_Stop:0000000000000000 $t
     /tmp/cccK7QpC.s:764    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
     /tmp/cccK7QpC.s:791    .text.USBH_LL_ResetPort:0000000000000000 $t
     /tmp/cccK7QpC.s:798    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
     /tmp/cccK7QpC.s:825    .text.USBH_LL_OpenPipe:0000000000000000 $t
     /tmp/cccK7QpC.s:832    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
     /tmp/cccK7QpC.s:872    .text.USBH_LL_ClosePipe:0000000000000000 $t
     /tmp/cccK7QpC.s:879    .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
     /tmp/cccK7QpC.s:906    .text.USBH_LL_SubmitURB:0000000000000000 $t
     /tmp/cccK7QpC.s:913    .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
ARM GAS  /tmp/cccK7QpC.s 			page 29


USBH_LL_IncTimer
USBH_LL_Connect
USBH_LL_Disconnect
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
Error_Handler
HAL_HCD_GetCurrentSpeed
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_GetURBState
HAL_Delay
MX_DriverVbusFS
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_ResetPort
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
