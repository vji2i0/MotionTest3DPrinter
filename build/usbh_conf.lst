ARM GAS  /tmp/ccjbVGi0.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbh_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_HCD_MspInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_HCD_MspInit:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /* USER CODE BEGIN Header */
   2:Src/usbh_conf.c **** /**
   3:Src/usbh_conf.c ****   ******************************************************************************
   4:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   5:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   6:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   7:Src/usbh_conf.c ****   ******************************************************************************
   8:Src/usbh_conf.c ****   * @attention
   9:Src/usbh_conf.c ****   *
  10:Src/usbh_conf.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbh_conf.c ****   * All rights reserved.</center></h2>
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbh_conf.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbh_conf.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbh_conf.c ****   *                             www.st.com/SLA0044
  17:Src/usbh_conf.c ****   *
  18:Src/usbh_conf.c ****   ******************************************************************************
  19:Src/usbh_conf.c ****   */
  20:Src/usbh_conf.c **** /* USER CODE END Header */
  21:Src/usbh_conf.c **** 
  22:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbh_conf.c **** #include "usbh_core.h"
  24:Src/usbh_conf.c **** #include "usbh_platform.h"
  25:Src/usbh_conf.c **** 
  26:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  27:Src/usbh_conf.c **** 
  28:Src/usbh_conf.c **** /* USER CODE END Includes */
  29:Src/usbh_conf.c **** 
  30:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccjbVGi0.s 			page 2


  32:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  33:Src/usbh_conf.c **** 
  34:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  35:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  36:Src/usbh_conf.c **** 
  37:Src/usbh_conf.c **** /* USER CODE END PV */
  38:Src/usbh_conf.c **** 
  39:Src/usbh_conf.c **** HCD_HandleTypeDef hhcd_USB_OTG_FS;
  40:Src/usbh_conf.c **** void Error_Handler(void);
  41:Src/usbh_conf.c **** 
  42:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  43:Src/usbh_conf.c **** 
  44:Src/usbh_conf.c **** /* USER CODE END 0 */
  45:Src/usbh_conf.c **** 
  46:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  47:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status);
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* USER CODE END PFP */
  51:Src/usbh_conf.c **** 
  52:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  53:Src/usbh_conf.c **** 
  54:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  55:Src/usbh_conf.c **** 
  56:Src/usbh_conf.c **** /* USER CODE END 1 */
  57:Src/usbh_conf.c **** 
  58:Src/usbh_conf.c **** /*******************************************************************************
  59:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  60:Src/usbh_conf.c **** *******************************************************************************/
  61:Src/usbh_conf.c **** /* MSP Init */
  62:Src/usbh_conf.c **** 
  63:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  64:Src/usbh_conf.c **** {
  28              		.loc 1 64 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 64 1 is_stmt 0 view .LVU1
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  65:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 65 3 is_stmt 1 view .LVU2
  43              		.loc 1 65 20 is_stmt 0 view .LVU3
  44 0004 0023     		movs	r3, #0
  45 0006 0293     		str	r3, [sp, #8]
  46 0008 0393     		str	r3, [sp, #12]
  47 000a 0493     		str	r3, [sp, #16]
  48 000c 0593     		str	r3, [sp, #20]
  66:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  49              		.loc 1 66 3 is_stmt 1 view .LVU4
ARM GAS  /tmp/ccjbVGi0.s 			page 3


  50              		.loc 1 66 15 is_stmt 0 view .LVU5
  51 000e 0368     		ldr	r3, [r0]
  52              		.loc 1 66 5 view .LVU6
  53 0010 B3F1A04F 		cmp	r3, #1342177280
  54 0014 01D0     		beq	.L4
  55              	.LVL1:
  56              	.L1:
  67:Src/usbh_conf.c ****   {
  68:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  69:Src/usbh_conf.c **** 
  70:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  71:Src/usbh_conf.c **** 
  72:Src/usbh_conf.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  73:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  74:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS
  75:Src/usbh_conf.c ****     */
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  77:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  78:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  80:Src/usbh_conf.c **** 
  81:Src/usbh_conf.c ****     /* Peripheral clock enable */
  82:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  83:Src/usbh_conf.c **** 
  84:Src/usbh_conf.c ****     /* Peripheral interrupt init */
  85:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
  86:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  87:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
  88:Src/usbh_conf.c **** 
  89:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
  90:Src/usbh_conf.c ****   }
  91:Src/usbh_conf.c **** }
  57              		.loc 1 91 1 view .LVU7
  58 0016 07B0     		add	sp, sp, #28
  59              	.LCFI2:
  60              		.cfi_remember_state
  61              		.cfi_def_cfa_offset 12
  62              		@ sp needed
  63 0018 30BD     		pop	{r4, r5, pc}
  64              	.LVL2:
  65              	.L4:
  66              	.LCFI3:
  67              		.cfi_restore_state
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  68              		.loc 1 72 5 is_stmt 1 view .LVU8
  69              	.LBB2:
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  70              		.loc 1 72 5 view .LVU9
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  71              		.loc 1 72 5 view .LVU10
  72 001a 134C     		ldr	r4, .L5
  73 001c A369     		ldr	r3, [r4, #24]
  74 001e 43F00403 		orr	r3, r3, #4
  75 0022 A361     		str	r3, [r4, #24]
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  76              		.loc 1 72 5 view .LVU11
  77 0024 A369     		ldr	r3, [r4, #24]
ARM GAS  /tmp/ccjbVGi0.s 			page 4


  78 0026 03F00403 		and	r3, r3, #4
  79 002a 0093     		str	r3, [sp]
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  80              		.loc 1 72 5 view .LVU12
  81 002c 009B     		ldr	r3, [sp]
  82              	.LBE2:
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
  83              		.loc 1 72 5 view .LVU13
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  84              		.loc 1 76 5 view .LVU14
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  85              		.loc 1 76 25 is_stmt 0 view .LVU15
  86 002e 4FF40073 		mov	r3, #512
  87 0032 0293     		str	r3, [sp, #8]
  77:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  88              		.loc 1 77 5 is_stmt 1 view .LVU16
  77:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  89              		.loc 1 77 26 is_stmt 0 view .LVU17
  90 0034 0025     		movs	r5, #0
  91 0036 0395     		str	r5, [sp, #12]
  78:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  92              		.loc 1 78 5 is_stmt 1 view .LVU18
  78:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  93              		.loc 1 78 26 is_stmt 0 view .LVU19
  94 0038 0495     		str	r5, [sp, #16]
  79:Src/usbh_conf.c **** 
  95              		.loc 1 79 5 is_stmt 1 view .LVU20
  96 003a 02A9     		add	r1, sp, #8
  97 003c 0B48     		ldr	r0, .L5+4
  98              	.LVL3:
  79:Src/usbh_conf.c **** 
  99              		.loc 1 79 5 is_stmt 0 view .LVU21
 100 003e FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL4:
  82:Src/usbh_conf.c **** 
 102              		.loc 1 82 5 is_stmt 1 view .LVU22
 103              	.LBB3:
  82:Src/usbh_conf.c **** 
 104              		.loc 1 82 5 view .LVU23
  82:Src/usbh_conf.c **** 
 105              		.loc 1 82 5 view .LVU24
 106 0042 6369     		ldr	r3, [r4, #20]
 107 0044 43F48053 		orr	r3, r3, #4096
 108 0048 6361     		str	r3, [r4, #20]
  82:Src/usbh_conf.c **** 
 109              		.loc 1 82 5 view .LVU25
 110 004a 6369     		ldr	r3, [r4, #20]
 111 004c 03F48053 		and	r3, r3, #4096
 112 0050 0193     		str	r3, [sp, #4]
  82:Src/usbh_conf.c **** 
 113              		.loc 1 82 5 view .LVU26
 114 0052 019B     		ldr	r3, [sp, #4]
 115              	.LBE3:
  82:Src/usbh_conf.c **** 
 116              		.loc 1 82 5 view .LVU27
  85:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 117              		.loc 1 85 5 view .LVU28
ARM GAS  /tmp/ccjbVGi0.s 			page 5


 118 0054 2A46     		mov	r2, r5
 119 0056 2946     		mov	r1, r5
 120 0058 4320     		movs	r0, #67
 121 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 122              	.LVL5:
  86:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 123              		.loc 1 86 5 view .LVU29
 124 005e 4320     		movs	r0, #67
 125 0060 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 126              	.LVL6:
 127              		.loc 1 91 1 is_stmt 0 view .LVU30
 128 0064 D7E7     		b	.L1
 129              	.L6:
 130 0066 00BF     		.align	2
 131              	.L5:
 132 0068 00100240 		.word	1073876992
 133 006c 00080140 		.word	1073809408
 134              		.cfi_endproc
 135              	.LFE68:
 137              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 138              		.align	1
 139              		.global	HAL_HCD_MspDeInit
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	HAL_HCD_MspDeInit:
 146              	.LVL7:
 147              	.LFB69:
  92:Src/usbh_conf.c **** 
  93:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
  94:Src/usbh_conf.c **** {
 148              		.loc 1 94 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 94 1 is_stmt 0 view .LVU32
 153 0000 08B5     		push	{r3, lr}
 154              	.LCFI4:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 3, -8
 157              		.cfi_offset 14, -4
  95:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 158              		.loc 1 95 3 is_stmt 1 view .LVU33
 159              		.loc 1 95 15 is_stmt 0 view .LVU34
 160 0002 0368     		ldr	r3, [r0]
 161              		.loc 1 95 5 view .LVU35
 162 0004 B3F1A04F 		cmp	r3, #1342177280
 163 0008 00D0     		beq	.L10
 164              	.LVL8:
 165              	.L7:
  96:Src/usbh_conf.c ****   {
  97:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
  98:Src/usbh_conf.c **** 
  99:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 100:Src/usbh_conf.c ****     /* Peripheral clock disable */
 101:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
ARM GAS  /tmp/ccjbVGi0.s 			page 6


 102:Src/usbh_conf.c **** 
 103:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration
 104:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS
 105:Src/usbh_conf.c ****     */
 106:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9);
 107:Src/usbh_conf.c **** 
 108:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 109:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 110:Src/usbh_conf.c **** 
 111:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 112:Src/usbh_conf.c **** 
 113:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 114:Src/usbh_conf.c ****   }
 115:Src/usbh_conf.c **** }
 166              		.loc 1 115 1 view .LVU36
 167 000a 08BD     		pop	{r3, pc}
 168              	.LVL9:
 169              	.L10:
 101:Src/usbh_conf.c **** 
 170              		.loc 1 101 5 is_stmt 1 view .LVU37
 171 000c 064A     		ldr	r2, .L11
 172 000e 5369     		ldr	r3, [r2, #20]
 173 0010 23F48053 		bic	r3, r3, #4096
 174 0014 5361     		str	r3, [r2, #20]
 106:Src/usbh_conf.c **** 
 175              		.loc 1 106 5 view .LVU38
 176 0016 4FF40071 		mov	r1, #512
 177 001a 0448     		ldr	r0, .L11+4
 178              	.LVL10:
 106:Src/usbh_conf.c **** 
 179              		.loc 1 106 5 is_stmt 0 view .LVU39
 180 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 181              	.LVL11:
 109:Src/usbh_conf.c **** 
 182              		.loc 1 109 5 is_stmt 1 view .LVU40
 183 0020 4320     		movs	r0, #67
 184 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 185              	.LVL12:
 186              		.loc 1 115 1 is_stmt 0 view .LVU41
 187 0026 F0E7     		b	.L7
 188              	.L12:
 189              		.align	2
 190              	.L11:
 191 0028 00100240 		.word	1073876992
 192 002c 00080140 		.word	1073809408
 193              		.cfi_endproc
 194              	.LFE69:
 196              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 197              		.align	1
 198              		.global	HAL_HCD_SOF_Callback
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu softvfp
 204              	HAL_HCD_SOF_Callback:
 205              	.LVL13:
 206              	.LFB70:
ARM GAS  /tmp/ccjbVGi0.s 			page 7


 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c **** /**
 118:Src/usbh_conf.c ****   * @brief  SOF callback.
 119:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 120:Src/usbh_conf.c ****   * @retval None
 121:Src/usbh_conf.c ****   */
 122:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 123:Src/usbh_conf.c **** {
 207              		.loc 1 123 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		.loc 1 123 1 is_stmt 0 view .LVU43
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI5:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 124:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
 217              		.loc 1 124 3 is_stmt 1 view .LVU44
 218 0002 D0F8C002 		ldr	r0, [r0, #704]
 219              	.LVL14:
 220              		.loc 1 124 3 is_stmt 0 view .LVU45
 221 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 222              	.LVL15:
 125:Src/usbh_conf.c **** }
 223              		.loc 1 125 1 view .LVU46
 224 000a 08BD     		pop	{r3, pc}
 225              		.cfi_endproc
 226              	.LFE70:
 228              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 229              		.align	1
 230              		.global	HAL_HCD_Connect_Callback
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	HAL_HCD_Connect_Callback:
 237              	.LVL16:
 238              	.LFB71:
 126:Src/usbh_conf.c **** 
 127:Src/usbh_conf.c **** /**
 128:Src/usbh_conf.c ****   * @brief  SOF callback.
 129:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 130:Src/usbh_conf.c ****   * @retval None
 131:Src/usbh_conf.c ****   */
 132:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 133:Src/usbh_conf.c **** {
 239              		.loc 1 133 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		.loc 1 133 1 is_stmt 0 view .LVU48
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI6:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
ARM GAS  /tmp/ccjbVGi0.s 			page 8


 248              		.cfi_offset 14, -4
 134:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 249              		.loc 1 134 3 is_stmt 1 view .LVU49
 250 0002 D0F8C002 		ldr	r0, [r0, #704]
 251              	.LVL17:
 252              		.loc 1 134 3 is_stmt 0 view .LVU50
 253 0006 FFF7FEFF 		bl	USBH_LL_Connect
 254              	.LVL18:
 135:Src/usbh_conf.c **** }
 255              		.loc 1 135 1 view .LVU51
 256 000a 08BD     		pop	{r3, pc}
 257              		.cfi_endproc
 258              	.LFE71:
 260              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 261              		.align	1
 262              		.global	HAL_HCD_Disconnect_Callback
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	HAL_HCD_Disconnect_Callback:
 269              	.LVL19:
 270              	.LFB72:
 136:Src/usbh_conf.c **** 
 137:Src/usbh_conf.c **** /**
 138:Src/usbh_conf.c ****   * @brief  SOF callback.
 139:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 140:Src/usbh_conf.c ****   * @retval None
 141:Src/usbh_conf.c ****   */
 142:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 143:Src/usbh_conf.c **** {
 271              		.loc 1 143 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		.loc 1 143 1 is_stmt 0 view .LVU53
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI7:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
 144:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 281              		.loc 1 144 3 is_stmt 1 view .LVU54
 282 0002 D0F8C002 		ldr	r0, [r0, #704]
 283              	.LVL20:
 284              		.loc 1 144 3 is_stmt 0 view .LVU55
 285 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 286              	.LVL21:
 145:Src/usbh_conf.c **** }
 287              		.loc 1 145 1 view .LVU56
 288 000a 08BD     		pop	{r3, pc}
 289              		.cfi_endproc
 290              	.LFE72:
 292              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 293              		.align	1
 294              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 295              		.syntax unified
ARM GAS  /tmp/ccjbVGi0.s 			page 9


 296              		.thumb
 297              		.thumb_func
 298              		.fpu softvfp
 300              	HAL_HCD_HC_NotifyURBChange_Callback:
 301              	.LVL22:
 302              	.LFB73:
 146:Src/usbh_conf.c **** 
 147:Src/usbh_conf.c **** /**
 148:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 149:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 150:Src/usbh_conf.c ****   * @param  chnum: channel number
 151:Src/usbh_conf.c ****   * @param  urb_state: state
 152:Src/usbh_conf.c ****   * @retval None
 153:Src/usbh_conf.c ****   */
 154:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 155:Src/usbh_conf.c **** {
 303              		.loc 1 155 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 156:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 157:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 158:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 159:Src/usbh_conf.c **** #endif
 160:Src/usbh_conf.c **** }
 308              		.loc 1 160 1 view .LVU58
 309 0000 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE73:
 313              		.section	.text.HAL_HCD_PortEnabled_Callback,"ax",%progbits
 314              		.align	1
 315              		.global	HAL_HCD_PortEnabled_Callback
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	HAL_HCD_PortEnabled_Callback:
 322              	.LVL23:
 323              	.LFB74:
 161:Src/usbh_conf.c **** /**
 162:Src/usbh_conf.c **** * @brief  Port Port Enabled callback.
 163:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 164:Src/usbh_conf.c ****   * @retval None
 165:Src/usbh_conf.c ****   */
 166:Src/usbh_conf.c **** void HAL_HCD_PortEnabled_Callback(HCD_HandleTypeDef *hhcd)
 167:Src/usbh_conf.c **** {
 324              		.loc 1 167 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		.loc 1 167 1 is_stmt 0 view .LVU60
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI8:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
ARM GAS  /tmp/ccjbVGi0.s 			page 10


 168:Src/usbh_conf.c ****   USBH_LL_PortEnabled(hhcd->pData);
 334              		.loc 1 168 3 is_stmt 1 view .LVU61
 335 0002 D0F8C002 		ldr	r0, [r0, #704]
 336              	.LVL24:
 337              		.loc 1 168 3 is_stmt 0 view .LVU62
 338 0006 FFF7FEFF 		bl	USBH_LL_PortEnabled
 339              	.LVL25:
 169:Src/usbh_conf.c **** }
 340              		.loc 1 169 1 view .LVU63
 341 000a 08BD     		pop	{r3, pc}
 342              		.cfi_endproc
 343              	.LFE74:
 345              		.section	.text.HAL_HCD_PortDisabled_Callback,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_HCD_PortDisabled_Callback
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	HAL_HCD_PortDisabled_Callback:
 354              	.LVL26:
 355              	.LFB75:
 170:Src/usbh_conf.c **** 
 171:Src/usbh_conf.c **** /**
 172:Src/usbh_conf.c ****   * @brief  Port Port Disabled callback.
 173:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 174:Src/usbh_conf.c ****   * @retval None
 175:Src/usbh_conf.c ****   */
 176:Src/usbh_conf.c **** void HAL_HCD_PortDisabled_Callback(HCD_HandleTypeDef *hhcd)
 177:Src/usbh_conf.c **** {
 356              		.loc 1 177 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		.loc 1 177 1 is_stmt 0 view .LVU65
 361 0000 08B5     		push	{r3, lr}
 362              	.LCFI9:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 3, -8
 365              		.cfi_offset 14, -4
 178:Src/usbh_conf.c ****   USBH_LL_PortDisabled(hhcd->pData);
 366              		.loc 1 178 3 is_stmt 1 view .LVU66
 367 0002 D0F8C002 		ldr	r0, [r0, #704]
 368              	.LVL27:
 369              		.loc 1 178 3 is_stmt 0 view .LVU67
 370 0006 FFF7FEFF 		bl	USBH_LL_PortDisabled
 371              	.LVL28:
 179:Src/usbh_conf.c **** }
 372              		.loc 1 179 1 view .LVU68
 373 000a 08BD     		pop	{r3, pc}
 374              		.cfi_endproc
 375              	.LFE75:
 377              		.section	.text.USBH_LL_Init,"ax",%progbits
 378              		.align	1
 379              		.global	USBH_LL_Init
 380              		.syntax unified
 381              		.thumb
ARM GAS  /tmp/ccjbVGi0.s 			page 11


 382              		.thumb_func
 383              		.fpu softvfp
 385              	USBH_LL_Init:
 386              	.LVL29:
 387              	.LFB76:
 180:Src/usbh_conf.c **** 
 181:Src/usbh_conf.c **** /*******************************************************************************
 182:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 183:Src/usbh_conf.c **** *******************************************************************************/
 184:Src/usbh_conf.c **** 
 185:Src/usbh_conf.c **** /**
 186:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 187:Src/usbh_conf.c ****   * @param  phost: Host handle
 188:Src/usbh_conf.c ****   * @retval USBH status
 189:Src/usbh_conf.c ****   */
 190:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 191:Src/usbh_conf.c **** {
 388              		.loc 1 191 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Src/usbh_conf.c ****   /* Init USB_IP */
 193:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 392              		.loc 1 193 3 view .LVU70
 393              		.loc 1 193 12 is_stmt 0 view .LVU71
 394 0000 90F8C433 		ldrb	r3, [r0, #964]	@ zero_extendqisi2
 395              		.loc 1 193 6 view .LVU72
 396 0004 012B     		cmp	r3, #1
 397 0006 01D0     		beq	.L31
 194:Src/usbh_conf.c ****   /* Link the driver to the stack. */
 195:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 196:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 197:Src/usbh_conf.c **** 
 198:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 199:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 200:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 201:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 202:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 203:Src/usbh_conf.c ****   {
 204:Src/usbh_conf.c ****     Error_Handler( );
 205:Src/usbh_conf.c ****   }
 206:Src/usbh_conf.c **** 
 207:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 208:Src/usbh_conf.c ****   }
 209:Src/usbh_conf.c ****   return USBH_OK;
 398              		.loc 1 209 3 is_stmt 1 view .LVU73
 210:Src/usbh_conf.c **** }
 399              		.loc 1 210 1 is_stmt 0 view .LVU74
 400 0008 0020     		movs	r0, #0
 401              	.LVL30:
 402              		.loc 1 210 1 view .LVU75
 403 000a 7047     		bx	lr
 404              	.LVL31:
 405              	.L31:
 191:Src/usbh_conf.c ****   /* Init USB_IP */
 406              		.loc 1 191 1 view .LVU76
 407 000c 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccjbVGi0.s 			page 12


 408              	.LCFI10:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 412 000e 0446     		mov	r4, r0
 195:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 413              		.loc 1 195 3 is_stmt 1 view .LVU77
 195:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 414              		.loc 1 195 25 is_stmt 0 view .LVU78
 415 0010 0E48     		ldr	r0, .L33
 416              	.LVL32:
 195:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 417              		.loc 1 195 25 view .LVU79
 418 0012 C0F8C042 		str	r4, [r0, #704]
 196:Src/usbh_conf.c **** 
 419              		.loc 1 196 3 is_stmt 1 view .LVU80
 196:Src/usbh_conf.c **** 
 420              		.loc 1 196 16 is_stmt 0 view .LVU81
 421 0016 C4F8C803 		str	r0, [r4, #968]
 198:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 422              		.loc 1 198 3 is_stmt 1 view .LVU82
 198:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 423              		.loc 1 198 28 is_stmt 0 view .LVU83
 424 001a 4FF0A043 		mov	r3, #1342177280
 425 001e 0360     		str	r3, [r0]
 199:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 426              		.loc 1 199 3 is_stmt 1 view .LVU84
 199:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 427              		.loc 1 199 38 is_stmt 0 view .LVU85
 428 0020 0823     		movs	r3, #8
 429 0022 8360     		str	r3, [r0, #8]
 200:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 430              		.loc 1 200 3 is_stmt 1 view .LVU86
 200:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 431              		.loc 1 200 30 is_stmt 0 view .LVU87
 432 0024 0123     		movs	r3, #1
 433 0026 C360     		str	r3, [r0, #12]
 201:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 434              		.loc 1 201 3 is_stmt 1 view .LVU88
 201:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 435              		.loc 1 201 35 is_stmt 0 view .LVU89
 436 0028 0023     		movs	r3, #0
 437 002a C361     		str	r3, [r0, #28]
 202:Src/usbh_conf.c ****   {
 438              		.loc 1 202 3 is_stmt 1 view .LVU90
 202:Src/usbh_conf.c ****   {
 439              		.loc 1 202 7 is_stmt 0 view .LVU91
 440 002c FFF7FEFF 		bl	HAL_HCD_Init
 441              	.LVL33:
 202:Src/usbh_conf.c ****   {
 442              		.loc 1 202 6 view .LVU92
 443 0030 40B9     		cbnz	r0, .L32
 444              	.L26:
 207:Src/usbh_conf.c ****   }
 445              		.loc 1 207 3 is_stmt 1 view .LVU93
 446 0032 0648     		ldr	r0, .L33
 447 0034 FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
ARM GAS  /tmp/ccjbVGi0.s 			page 13


 448              	.LVL34:
 449 0038 0146     		mov	r1, r0
 450 003a 2046     		mov	r0, r4
 451 003c FFF7FEFF 		bl	USBH_LL_SetTimer
 452              	.LVL35:
 209:Src/usbh_conf.c **** }
 453              		.loc 1 209 3 view .LVU94
 454              		.loc 1 210 1 is_stmt 0 view .LVU95
 455 0040 0020     		movs	r0, #0
 456 0042 10BD     		pop	{r4, pc}
 457              	.LVL36:
 458              	.L32:
 204:Src/usbh_conf.c ****   }
 459              		.loc 1 204 5 is_stmt 1 view .LVU96
 460 0044 FFF7FEFF 		bl	Error_Handler
 461              	.LVL37:
 462 0048 F3E7     		b	.L26
 463              	.L34:
 464 004a 00BF     		.align	2
 465              	.L33:
 466 004c 00000000 		.word	hhcd_USB_OTG_FS
 467              		.cfi_endproc
 468              	.LFE76:
 470              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 471              		.align	1
 472              		.global	USBH_LL_GetSpeed
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu softvfp
 478              	USBH_LL_GetSpeed:
 479              	.LVL38:
 480              	.LFB80:
 211:Src/usbh_conf.c **** 
 212:Src/usbh_conf.c **** /**
 213:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 214:Src/usbh_conf.c ****   * @param  phost: Host handle
 215:Src/usbh_conf.c ****   * @retval USBH status
 216:Src/usbh_conf.c ****   */
 217:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 218:Src/usbh_conf.c **** {
 219:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 220:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 221:Src/usbh_conf.c **** 
 222:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 223:Src/usbh_conf.c **** 
 224:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 225:Src/usbh_conf.c **** 
 226:Src/usbh_conf.c ****   return usb_status;
 227:Src/usbh_conf.c **** }
 228:Src/usbh_conf.c **** 
 229:Src/usbh_conf.c **** /**
 230:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 231:Src/usbh_conf.c ****   * @param  phost: Host handle
 232:Src/usbh_conf.c ****   * @retval USBH status
 233:Src/usbh_conf.c ****   */
 234:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
ARM GAS  /tmp/ccjbVGi0.s 			page 14


 235:Src/usbh_conf.c **** {
 236:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 237:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 238:Src/usbh_conf.c **** 
 239:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 240:Src/usbh_conf.c **** 
 241:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 242:Src/usbh_conf.c **** 
 243:Src/usbh_conf.c ****   return usb_status;
 244:Src/usbh_conf.c **** }
 245:Src/usbh_conf.c **** 
 246:Src/usbh_conf.c **** /**
 247:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 248:Src/usbh_conf.c ****   * @param  phost: Host handle
 249:Src/usbh_conf.c ****   * @retval USBH status
 250:Src/usbh_conf.c ****   */
 251:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 252:Src/usbh_conf.c **** {
 253:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 254:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 255:Src/usbh_conf.c **** 
 256:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 257:Src/usbh_conf.c **** 
 258:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 259:Src/usbh_conf.c **** 
 260:Src/usbh_conf.c ****   return usb_status;
 261:Src/usbh_conf.c **** }
 262:Src/usbh_conf.c **** 
 263:Src/usbh_conf.c **** /**
 264:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 265:Src/usbh_conf.c ****   * @param  phost: Host handle
 266:Src/usbh_conf.c ****   * @retval USBH speeds
 267:Src/usbh_conf.c ****   */
 268:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 269:Src/usbh_conf.c **** {
 481              		.loc 1 269 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		.loc 1 269 1 is_stmt 0 view .LVU98
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI11:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 270:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 491              		.loc 1 270 3 is_stmt 1 view .LVU99
 492              	.LVL39:
 271:Src/usbh_conf.c **** 
 272:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 493              		.loc 1 272 3 view .LVU100
 494              		.loc 1 272 11 is_stmt 0 view .LVU101
 495 0002 D0F8C803 		ldr	r0, [r0, #968]
 496              	.LVL40:
 497              		.loc 1 272 11 view .LVU102
 498 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 499              	.LVL41:
ARM GAS  /tmp/ccjbVGi0.s 			page 15


 500              		.loc 1 272 3 view .LVU103
 501 000a 0128     		cmp	r0, #1
 502 000c 04D0     		beq	.L37
 503 000e 0228     		cmp	r0, #2
 504 0010 04D0     		beq	.L38
 505 0012 00B1     		cbz	r0, .L36
 273:Src/usbh_conf.c ****   {
 274:Src/usbh_conf.c ****   case 0 :
 275:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 276:Src/usbh_conf.c ****     break;
 277:Src/usbh_conf.c **** 
 278:Src/usbh_conf.c ****   case 1 :
 279:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 280:Src/usbh_conf.c ****     break;
 281:Src/usbh_conf.c **** 
 282:Src/usbh_conf.c ****   case 2 :
 283:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 284:Src/usbh_conf.c ****     break;
 285:Src/usbh_conf.c **** 
 286:Src/usbh_conf.c ****   default:
 287:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 506              		.loc 1 287 10 view .LVU104
 507 0014 0120     		movs	r0, #1
 508              	.L36:
 509              	.LVL42:
 288:Src/usbh_conf.c ****     break;
 289:Src/usbh_conf.c ****   }
 290:Src/usbh_conf.c ****   return  speed;
 510              		.loc 1 290 3 is_stmt 1 view .LVU105
 291:Src/usbh_conf.c **** }
 511              		.loc 1 291 1 is_stmt 0 view .LVU106
 512 0016 08BD     		pop	{r3, pc}
 513              	.LVL43:
 514              	.L37:
 279:Src/usbh_conf.c ****     break;
 515              		.loc 1 279 11 view .LVU107
 516 0018 0120     		movs	r0, #1
 517 001a FCE7     		b	.L36
 518              	.L38:
 283:Src/usbh_conf.c ****     break;
 519              		.loc 1 283 11 view .LVU108
 520 001c 0220     		movs	r0, #2
 521 001e FAE7     		b	.L36
 522              		.cfi_endproc
 523              	.LFE80:
 525              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 526              		.align	1
 527              		.global	USBH_LL_GetLastXferSize
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu softvfp
 533              	USBH_LL_GetLastXferSize:
 534              	.LVL44:
 535              	.LFB82:
 292:Src/usbh_conf.c **** 
 293:Src/usbh_conf.c **** /**
ARM GAS  /tmp/ccjbVGi0.s 			page 16


 294:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 295:Src/usbh_conf.c ****   * @param  phost: Host handle
 296:Src/usbh_conf.c ****   * @retval USBH status
 297:Src/usbh_conf.c ****   */
 298:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 299:Src/usbh_conf.c **** {
 300:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 301:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 302:Src/usbh_conf.c **** 
 303:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 304:Src/usbh_conf.c **** 
 305:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 306:Src/usbh_conf.c **** 
 307:Src/usbh_conf.c ****   return usb_status;
 308:Src/usbh_conf.c **** }
 309:Src/usbh_conf.c **** 
 310:Src/usbh_conf.c **** /**
 311:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 312:Src/usbh_conf.c ****   * @param  phost: Host handle
 313:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 314:Src/usbh_conf.c ****   * @retval Packet size
 315:Src/usbh_conf.c ****   */
 316:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 317:Src/usbh_conf.c **** {
 536              		.loc 1 317 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		.loc 1 317 1 is_stmt 0 view .LVU110
 541 0000 08B5     		push	{r3, lr}
 542              	.LCFI12:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 3, -8
 545              		.cfi_offset 14, -4
 318:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 546              		.loc 1 318 3 is_stmt 1 view .LVU111
 547              		.loc 1 318 10 is_stmt 0 view .LVU112
 548 0002 D0F8C803 		ldr	r0, [r0, #968]
 549              	.LVL45:
 550              		.loc 1 318 10 view .LVU113
 551 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 552              	.LVL46:
 319:Src/usbh_conf.c **** }
 553              		.loc 1 319 1 view .LVU114
 554 000a 08BD     		pop	{r3, pc}
 555              		.cfi_endproc
 556              	.LFE82:
 558              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 559              		.align	1
 560              		.global	USBH_LL_GetURBState
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	USBH_LL_GetURBState:
 567              	.LVL47:
 568              	.LFB86:
ARM GAS  /tmp/ccjbVGi0.s 			page 17


 320:Src/usbh_conf.c **** 
 321:Src/usbh_conf.c **** /**
 322:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 323:Src/usbh_conf.c ****   * @param  phost: Host handle
 324:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 325:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 326:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 327:Src/usbh_conf.c ****   * @param  speed: Device Speed
 328:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 329:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 330:Src/usbh_conf.c ****   * @retval USBH status
 331:Src/usbh_conf.c ****   */
 332:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 333:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 334:Src/usbh_conf.c **** {
 335:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 336:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 337:Src/usbh_conf.c **** 
 338:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 339:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 340:Src/usbh_conf.c **** 
 341:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 342:Src/usbh_conf.c **** 
 343:Src/usbh_conf.c ****   return usb_status;
 344:Src/usbh_conf.c **** }
 345:Src/usbh_conf.c **** 
 346:Src/usbh_conf.c **** /**
 347:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 348:Src/usbh_conf.c ****   * @param  phost: Host handle
 349:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 350:Src/usbh_conf.c ****   * @retval USBH status
 351:Src/usbh_conf.c ****   */
 352:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 353:Src/usbh_conf.c **** {
 354:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 355:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 356:Src/usbh_conf.c **** 
 357:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 358:Src/usbh_conf.c **** 
 359:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 360:Src/usbh_conf.c **** 
 361:Src/usbh_conf.c ****   return usb_status;
 362:Src/usbh_conf.c **** }
 363:Src/usbh_conf.c **** 
 364:Src/usbh_conf.c **** /**
 365:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 366:Src/usbh_conf.c ****   * @param  phost: Host handle
 367:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 368:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 369:Src/usbh_conf.c ****   * @param  direction : Channel number
 370:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 371:Src/usbh_conf.c ****   *           0 : Output
 372:Src/usbh_conf.c ****   *           1 : Input
 373:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 374:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 375:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 376:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
ARM GAS  /tmp/ccjbVGi0.s 			page 18


 377:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 378:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 379:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 380:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 381:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 382:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 383:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 384:Src/usbh_conf.c ****   * @param  length : Length of URB data
 385:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 386:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 387:Src/usbh_conf.c ****   *           0 : do ping inactive
 388:Src/usbh_conf.c ****   *           1 : do ping active
 389:Src/usbh_conf.c ****   * @retval Status
 390:Src/usbh_conf.c ****   */
 391:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 392:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 393:Src/usbh_conf.c ****                                      uint8_t do_ping)
 394:Src/usbh_conf.c **** {
 395:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 396:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 397:Src/usbh_conf.c **** 
 398:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 399:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 400:Src/usbh_conf.c ****                                         do_ping);
 401:Src/usbh_conf.c ****   usb_status =  USBH_Get_USB_Status(hal_status);
 402:Src/usbh_conf.c **** 
 403:Src/usbh_conf.c ****   return usb_status;
 404:Src/usbh_conf.c **** }
 405:Src/usbh_conf.c **** 
 406:Src/usbh_conf.c **** /**
 407:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 408:Src/usbh_conf.c ****   * @param  phost: Host handle
 409:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 410:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 411:Src/usbh_conf.c ****   * @retval URB state
 412:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 413:Src/usbh_conf.c ****   *            @arg URB_IDLE
 414:Src/usbh_conf.c ****   *            @arg URB_DONE
 415:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 416:Src/usbh_conf.c ****   *            @arg URB_NYET
 417:Src/usbh_conf.c ****   *            @arg URB_ERROR
 418:Src/usbh_conf.c ****   *            @arg URB_STALL
 419:Src/usbh_conf.c ****   */
 420:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 421:Src/usbh_conf.c **** {
 569              		.loc 1 421 1 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		.loc 1 421 1 is_stmt 0 view .LVU116
 574 0000 08B5     		push	{r3, lr}
 575              	.LCFI13:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 422:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 579              		.loc 1 422 3 is_stmt 1 view .LVU117
ARM GAS  /tmp/ccjbVGi0.s 			page 19


 580              		.loc 1 422 32 is_stmt 0 view .LVU118
 581 0002 D0F8C803 		ldr	r0, [r0, #968]
 582              	.LVL48:
 583              		.loc 1 422 32 view .LVU119
 584 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 585              	.LVL49:
 423:Src/usbh_conf.c **** }
 586              		.loc 1 423 1 view .LVU120
 587 000a 08BD     		pop	{r3, pc}
 588              		.cfi_endproc
 589              	.LFE86:
 591              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 592              		.align	1
 593              		.global	USBH_LL_DriverVBUS
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu softvfp
 599              	USBH_LL_DriverVBUS:
 600              	.LVL50:
 601              	.LFB87:
 424:Src/usbh_conf.c **** 
 425:Src/usbh_conf.c **** /**
 426:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 427:Src/usbh_conf.c ****   * @param  phost: Host handle
 428:Src/usbh_conf.c ****   * @param  state : VBUS state
 429:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 430:Src/usbh_conf.c ****   *           0 : VBUS Inactive
 431:Src/usbh_conf.c ****   *           1 : VBUS Active
 432:Src/usbh_conf.c ****   * @retval Status
 433:Src/usbh_conf.c ****   */
 434:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 435:Src/usbh_conf.c **** {
 602              		.loc 1 435 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		.loc 1 435 1 is_stmt 0 view .LVU122
 607 0000 08B5     		push	{r3, lr}
 608              	.LCFI14:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 3, -8
 611              		.cfi_offset 14, -4
 436:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 612              		.loc 1 436 3 is_stmt 1 view .LVU123
 613              		.loc 1 436 12 is_stmt 0 view .LVU124
 614 0002 90F8C433 		ldrb	r3, [r0, #964]	@ zero_extendqisi2
 615              		.loc 1 436 6 view .LVU125
 616 0006 012B     		cmp	r3, #1
 617 0008 04D0     		beq	.L48
 618              	.LVL51:
 619              	.L46:
 437:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 438:Src/usbh_conf.c ****   }
 439:Src/usbh_conf.c **** 
 440:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 441:Src/usbh_conf.c **** 
ARM GAS  /tmp/ccjbVGi0.s 			page 20


 442:Src/usbh_conf.c ****   /* USER CODE END 0*/
 443:Src/usbh_conf.c **** 
 444:Src/usbh_conf.c ****   HAL_Delay(200);
 620              		.loc 1 444 3 is_stmt 1 view .LVU126
 621 000a C820     		movs	r0, #200
 622 000c FFF7FEFF 		bl	HAL_Delay
 623              	.LVL52:
 445:Src/usbh_conf.c ****   return USBH_OK;
 624              		.loc 1 445 3 view .LVU127
 446:Src/usbh_conf.c **** }
 625              		.loc 1 446 1 is_stmt 0 view .LVU128
 626 0010 0020     		movs	r0, #0
 627 0012 08BD     		pop	{r3, pc}
 628              	.LVL53:
 629              	.L48:
 437:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 630              		.loc 1 437 5 is_stmt 1 view .LVU129
 631 0014 0846     		mov	r0, r1
 632              	.LVL54:
 437:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 633              		.loc 1 437 5 is_stmt 0 view .LVU130
 634 0016 FFF7FEFF 		bl	MX_DriverVbusFS
 635              	.LVL55:
 437:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 636              		.loc 1 437 5 view .LVU131
 637 001a F6E7     		b	.L46
 638              		.cfi_endproc
 639              	.LFE87:
 641              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 642              		.align	1
 643              		.global	USBH_LL_SetToggle
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu softvfp
 649              	USBH_LL_SetToggle:
 650              	.LVL56:
 651              	.LFB88:
 447:Src/usbh_conf.c **** 
 448:Src/usbh_conf.c **** /**
 449:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 450:Src/usbh_conf.c ****   * @param  phost: Host handle
 451:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 452:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 453:Src/usbh_conf.c ****   * @retval Status
 454:Src/usbh_conf.c ****   */
 455:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 456:Src/usbh_conf.c **** {
 652              		.loc 1 456 1 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 457:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 657              		.loc 1 457 3 view .LVU133
 458:Src/usbh_conf.c ****   pHandle = phost->pData;
 658              		.loc 1 458 3 view .LVU134
ARM GAS  /tmp/ccjbVGi0.s 			page 21


 659              		.loc 1 458 11 is_stmt 0 view .LVU135
 660 0000 D0F8C833 		ldr	r3, [r0, #968]
 661              	.LVL57:
 459:Src/usbh_conf.c **** 
 460:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 662              		.loc 1 460 3 is_stmt 1 view .LVU136
 663              		.loc 1 460 23 is_stmt 0 view .LVU137
 664 0004 01EB8100 		add	r0, r1, r1, lsl #2
 665              	.LVL58:
 666              		.loc 1 460 23 view .LVU138
 667 0008 03EBC000 		add	r0, r3, r0, lsl #3
 668 000c 90F83B00 		ldrb	r0, [r0, #59]	@ zero_extendqisi2
 669              		.loc 1 460 5 view .LVU139
 670 0010 38B1     		cbz	r0, .L50
 461:Src/usbh_conf.c ****   {
 462:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 671              		.loc 1 462 5 is_stmt 1 view .LVU140
 672              		.loc 1 462 33 is_stmt 0 view .LVU141
 673 0012 01EB8101 		add	r1, r1, r1, lsl #2
 674              	.LVL59:
 675              		.loc 1 462 33 view .LVU142
 676 0016 03EBC101 		add	r1, r3, r1, lsl #3
 677 001a 81F85020 		strb	r2, [r1, #80]
 678              	.L51:
 463:Src/usbh_conf.c ****   }
 464:Src/usbh_conf.c ****   else
 465:Src/usbh_conf.c ****   {
 466:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 467:Src/usbh_conf.c ****   }
 468:Src/usbh_conf.c **** 
 469:Src/usbh_conf.c ****   return USBH_OK;
 679              		.loc 1 469 3 is_stmt 1 view .LVU143
 470:Src/usbh_conf.c **** }
 680              		.loc 1 470 1 is_stmt 0 view .LVU144
 681 001e 0020     		movs	r0, #0
 682 0020 7047     		bx	lr
 683              	.LVL60:
 684              	.L50:
 466:Src/usbh_conf.c ****   }
 685              		.loc 1 466 5 is_stmt 1 view .LVU145
 466:Src/usbh_conf.c ****   }
 686              		.loc 1 466 34 is_stmt 0 view .LVU146
 687 0022 01EB8101 		add	r1, r1, r1, lsl #2
 688              	.LVL61:
 466:Src/usbh_conf.c ****   }
 689              		.loc 1 466 34 view .LVU147
 690 0026 03EBC101 		add	r1, r3, r1, lsl #3
 691 002a 81F85120 		strb	r2, [r1, #81]
 692 002e F6E7     		b	.L51
 693              		.cfi_endproc
 694              	.LFE88:
 696              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 697              		.align	1
 698              		.global	USBH_LL_GetToggle
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
ARM GAS  /tmp/ccjbVGi0.s 			page 22


 702              		.fpu softvfp
 704              	USBH_LL_GetToggle:
 705              	.LVL62:
 706              	.LFB89:
 471:Src/usbh_conf.c **** 
 472:Src/usbh_conf.c **** /**
 473:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 474:Src/usbh_conf.c ****   * @param  phost: Host handle
 475:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 476:Src/usbh_conf.c ****   * @retval toggle (0/1)
 477:Src/usbh_conf.c ****   */
 478:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 479:Src/usbh_conf.c **** {
 707              		.loc 1 479 1 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 480:Src/usbh_conf.c ****   uint8_t toggle = 0;
 712              		.loc 1 480 3 view .LVU149
 481:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 713              		.loc 1 481 3 view .LVU150
 482:Src/usbh_conf.c ****   pHandle = phost->pData;
 714              		.loc 1 482 3 view .LVU151
 715              		.loc 1 482 11 is_stmt 0 view .LVU152
 716 0000 D0F8C833 		ldr	r3, [r0, #968]
 717              	.LVL63:
 483:Src/usbh_conf.c **** 
 484:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 718              		.loc 1 484 3 is_stmt 1 view .LVU153
 719              		.loc 1 484 23 is_stmt 0 view .LVU154
 720 0004 01EB8102 		add	r2, r1, r1, lsl #2
 721 0008 03EBC202 		add	r2, r3, r2, lsl #3
 722 000c 92F83B20 		ldrb	r2, [r2, #59]	@ zero_extendqisi2
 723              		.loc 1 484 5 view .LVU155
 724 0010 32B1     		cbz	r2, .L53
 485:Src/usbh_conf.c ****   {
 486:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 725              		.loc 1 486 5 is_stmt 1 view .LVU156
 726              		.loc 1 486 12 is_stmt 0 view .LVU157
 727 0012 01EB8101 		add	r1, r1, r1, lsl #2
 728              	.LVL64:
 729              		.loc 1 486 12 view .LVU158
 730 0016 03EBC101 		add	r1, r3, r1, lsl #3
 731 001a 91F85000 		ldrb	r0, [r1, #80]	@ zero_extendqisi2
 732              	.LVL65:
 733              		.loc 1 486 12 view .LVU159
 734 001e 7047     		bx	lr
 735              	.LVL66:
 736              	.L53:
 487:Src/usbh_conf.c ****   }
 488:Src/usbh_conf.c ****   else
 489:Src/usbh_conf.c ****   {
 490:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 737              		.loc 1 490 5 is_stmt 1 view .LVU160
 738              		.loc 1 490 12 is_stmt 0 view .LVU161
 739 0020 01EB8101 		add	r1, r1, r1, lsl #2
ARM GAS  /tmp/ccjbVGi0.s 			page 23


 740              	.LVL67:
 741              		.loc 1 490 12 view .LVU162
 742 0024 03EBC101 		add	r1, r3, r1, lsl #3
 743 0028 91F85100 		ldrb	r0, [r1, #81]	@ zero_extendqisi2
 744              	.LVL68:
 491:Src/usbh_conf.c ****   }
 492:Src/usbh_conf.c ****   return toggle;
 745              		.loc 1 492 3 is_stmt 1 view .LVU163
 493:Src/usbh_conf.c **** }
 746              		.loc 1 493 1 is_stmt 0 view .LVU164
 747 002c 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE89:
 751              		.section	.text.USBH_Delay,"ax",%progbits
 752              		.align	1
 753              		.global	USBH_Delay
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu softvfp
 759              	USBH_Delay:
 760              	.LVL69:
 761              	.LFB90:
 494:Src/usbh_conf.c **** 
 495:Src/usbh_conf.c **** /**
 496:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 497:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 498:Src/usbh_conf.c ****   * @retval None
 499:Src/usbh_conf.c ****   */
 500:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
 501:Src/usbh_conf.c **** {
 762              		.loc 1 501 1 is_stmt 1 view -0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		.loc 1 501 1 is_stmt 0 view .LVU166
 767 0000 08B5     		push	{r3, lr}
 768              	.LCFI15:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 3, -8
 771              		.cfi_offset 14, -4
 502:Src/usbh_conf.c ****   HAL_Delay(Delay);
 772              		.loc 1 502 3 is_stmt 1 view .LVU167
 773 0002 FFF7FEFF 		bl	HAL_Delay
 774              	.LVL70:
 503:Src/usbh_conf.c **** }
 775              		.loc 1 503 1 is_stmt 0 view .LVU168
 776 0006 08BD     		pop	{r3, pc}
 777              		.cfi_endproc
 778              	.LFE90:
 780              		.section	.text.USBH_Get_USB_Status,"ax",%progbits
 781              		.align	1
 782              		.global	USBH_Get_USB_Status
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu softvfp
ARM GAS  /tmp/ccjbVGi0.s 			page 24


 788              	USBH_Get_USB_Status:
 789              	.LVL71:
 790              	.LFB91:
 504:Src/usbh_conf.c **** 
 505:Src/usbh_conf.c **** /**
 506:Src/usbh_conf.c ****   * @brief  Retuns the USB status depending on the HAL status:
 507:Src/usbh_conf.c ****   * @param  hal_status: HAL status
 508:Src/usbh_conf.c ****   * @retval USB status
 509:Src/usbh_conf.c ****   */
 510:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status)
 511:Src/usbh_conf.c **** {
 791              		.loc 1 511 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 512:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 796              		.loc 1 512 3 view .LVU170
 513:Src/usbh_conf.c **** 
 514:Src/usbh_conf.c ****   switch (hal_status)
 797              		.loc 1 514 3 view .LVU171
 798 0000 0228     		cmp	r0, #2
 799 0002 05D8     		bhi	.L62
 800 0004 DFE800F0 		tbb	[pc, r0]
 801              	.L60:
 802 0008 05       		.byte	(.L58-.L60)/2
 803 0009 04       		.byte	(.L62-.L60)/2
 804 000a 02       		.byte	(.L59-.L60)/2
 805 000b 00       		.p2align 1
 806              	.L59:
 515:Src/usbh_conf.c ****   {
 516:Src/usbh_conf.c ****     case HAL_OK :
 517:Src/usbh_conf.c ****       usb_status = USBH_OK;
 518:Src/usbh_conf.c ****     break;
 519:Src/usbh_conf.c ****     case HAL_ERROR :
 520:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 521:Src/usbh_conf.c ****     break;
 522:Src/usbh_conf.c ****     case HAL_BUSY :
 523:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 807              		.loc 1 523 7 view .LVU172
 808              	.LVL72:
 524:Src/usbh_conf.c ****     break;
 809              		.loc 1 524 5 view .LVU173
 523:Src/usbh_conf.c ****     break;
 810              		.loc 1 523 18 is_stmt 0 view .LVU174
 811 000c 0120     		movs	r0, #1
 812              	.LVL73:
 813              		.loc 1 524 5 view .LVU175
 814 000e 7047     		bx	lr
 815              	.LVL74:
 816              	.L62:
 520:Src/usbh_conf.c ****     break;
 817              		.loc 1 520 18 view .LVU176
 818 0010 0220     		movs	r0, #2
 819              	.LVL75:
 820              	.L58:
 525:Src/usbh_conf.c ****     case HAL_TIMEOUT :
ARM GAS  /tmp/ccjbVGi0.s 			page 25


 526:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 527:Src/usbh_conf.c ****     break;
 528:Src/usbh_conf.c ****     default :
 529:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 530:Src/usbh_conf.c ****     break;
 531:Src/usbh_conf.c ****   }
 532:Src/usbh_conf.c ****   return usb_status;
 821              		.loc 1 532 3 is_stmt 1 view .LVU177
 533:Src/usbh_conf.c **** }
 822              		.loc 1 533 1 is_stmt 0 view .LVU178
 823 0012 7047     		bx	lr
 824              		.cfi_endproc
 825              	.LFE91:
 827              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 828              		.align	1
 829              		.global	USBH_LL_DeInit
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu softvfp
 835              	USBH_LL_DeInit:
 836              	.LVL76:
 837              	.LFB77:
 218:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 838              		.loc 1 218 1 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 842              		.loc 1 218 1 is_stmt 0 view .LVU180
 843 0000 08B5     		push	{r3, lr}
 844              	.LCFI16:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 3, -8
 847              		.cfi_offset 14, -4
 219:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 848              		.loc 1 219 3 is_stmt 1 view .LVU181
 849              	.LVL77:
 220:Src/usbh_conf.c **** 
 850              		.loc 1 220 3 view .LVU182
 222:Src/usbh_conf.c **** 
 851              		.loc 1 222 3 view .LVU183
 222:Src/usbh_conf.c **** 
 852              		.loc 1 222 16 is_stmt 0 view .LVU184
 853 0002 D0F8C803 		ldr	r0, [r0, #968]
 854              	.LVL78:
 222:Src/usbh_conf.c **** 
 855              		.loc 1 222 16 view .LVU185
 856 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 857              	.LVL79:
 224:Src/usbh_conf.c **** 
 858              		.loc 1 224 3 is_stmt 1 view .LVU186
 224:Src/usbh_conf.c **** 
 859              		.loc 1 224 16 is_stmt 0 view .LVU187
 860 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 861              	.LVL80:
 226:Src/usbh_conf.c **** }
ARM GAS  /tmp/ccjbVGi0.s 			page 26


 862              		.loc 1 226 3 is_stmt 1 view .LVU188
 227:Src/usbh_conf.c **** 
 863              		.loc 1 227 1 is_stmt 0 view .LVU189
 864 000e 08BD     		pop	{r3, pc}
 865              		.cfi_endproc
 866              	.LFE77:
 868              		.section	.text.USBH_LL_Start,"ax",%progbits
 869              		.align	1
 870              		.global	USBH_LL_Start
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu softvfp
 876              	USBH_LL_Start:
 877              	.LVL81:
 878              	.LFB78:
 235:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 879              		.loc 1 235 1 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 235:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 883              		.loc 1 235 1 is_stmt 0 view .LVU191
 884 0000 08B5     		push	{r3, lr}
 885              	.LCFI17:
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 3, -8
 888              		.cfi_offset 14, -4
 236:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 889              		.loc 1 236 3 is_stmt 1 view .LVU192
 890              	.LVL82:
 237:Src/usbh_conf.c **** 
 891              		.loc 1 237 3 view .LVU193
 239:Src/usbh_conf.c **** 
 892              		.loc 1 239 3 view .LVU194
 239:Src/usbh_conf.c **** 
 893              		.loc 1 239 16 is_stmt 0 view .LVU195
 894 0002 D0F8C803 		ldr	r0, [r0, #968]
 895              	.LVL83:
 239:Src/usbh_conf.c **** 
 896              		.loc 1 239 16 view .LVU196
 897 0006 FFF7FEFF 		bl	HAL_HCD_Start
 898              	.LVL84:
 241:Src/usbh_conf.c **** 
 899              		.loc 1 241 3 is_stmt 1 view .LVU197
 241:Src/usbh_conf.c **** 
 900              		.loc 1 241 16 is_stmt 0 view .LVU198
 901 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 902              	.LVL85:
 243:Src/usbh_conf.c **** }
 903              		.loc 1 243 3 is_stmt 1 view .LVU199
 244:Src/usbh_conf.c **** 
 904              		.loc 1 244 1 is_stmt 0 view .LVU200
 905 000e 08BD     		pop	{r3, pc}
 906              		.cfi_endproc
 907              	.LFE78:
 909              		.section	.text.USBH_LL_Stop,"ax",%progbits
ARM GAS  /tmp/ccjbVGi0.s 			page 27


 910              		.align	1
 911              		.global	USBH_LL_Stop
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu softvfp
 917              	USBH_LL_Stop:
 918              	.LVL86:
 919              	.LFB79:
 252:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 920              		.loc 1 252 1 is_stmt 1 view -0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 924              		.loc 1 252 1 is_stmt 0 view .LVU202
 925 0000 08B5     		push	{r3, lr}
 926              	.LCFI18:
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 3, -8
 929              		.cfi_offset 14, -4
 253:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 930              		.loc 1 253 3 is_stmt 1 view .LVU203
 931              	.LVL87:
 254:Src/usbh_conf.c **** 
 932              		.loc 1 254 3 view .LVU204
 256:Src/usbh_conf.c **** 
 933              		.loc 1 256 3 view .LVU205
 256:Src/usbh_conf.c **** 
 934              		.loc 1 256 16 is_stmt 0 view .LVU206
 935 0002 D0F8C803 		ldr	r0, [r0, #968]
 936              	.LVL88:
 256:Src/usbh_conf.c **** 
 937              		.loc 1 256 16 view .LVU207
 938 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 939              	.LVL89:
 258:Src/usbh_conf.c **** 
 940              		.loc 1 258 3 is_stmt 1 view .LVU208
 258:Src/usbh_conf.c **** 
 941              		.loc 1 258 16 is_stmt 0 view .LVU209
 942 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 943              	.LVL90:
 260:Src/usbh_conf.c **** }
 944              		.loc 1 260 3 is_stmt 1 view .LVU210
 261:Src/usbh_conf.c **** 
 945              		.loc 1 261 1 is_stmt 0 view .LVU211
 946 000e 08BD     		pop	{r3, pc}
 947              		.cfi_endproc
 948              	.LFE79:
 950              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 951              		.align	1
 952              		.global	USBH_LL_ResetPort
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu softvfp
 958              	USBH_LL_ResetPort:
ARM GAS  /tmp/ccjbVGi0.s 			page 28


 959              	.LVL91:
 960              	.LFB81:
 299:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 961              		.loc 1 299 1 is_stmt 1 view -0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 299:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 965              		.loc 1 299 1 is_stmt 0 view .LVU213
 966 0000 08B5     		push	{r3, lr}
 967              	.LCFI19:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 3, -8
 970              		.cfi_offset 14, -4
 300:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 971              		.loc 1 300 3 is_stmt 1 view .LVU214
 972              	.LVL92:
 301:Src/usbh_conf.c **** 
 973              		.loc 1 301 3 view .LVU215
 303:Src/usbh_conf.c **** 
 974              		.loc 1 303 3 view .LVU216
 303:Src/usbh_conf.c **** 
 975              		.loc 1 303 16 is_stmt 0 view .LVU217
 976 0002 D0F8C803 		ldr	r0, [r0, #968]
 977              	.LVL93:
 303:Src/usbh_conf.c **** 
 978              		.loc 1 303 16 view .LVU218
 979 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 980              	.LVL94:
 305:Src/usbh_conf.c **** 
 981              		.loc 1 305 3 is_stmt 1 view .LVU219
 305:Src/usbh_conf.c **** 
 982              		.loc 1 305 16 is_stmt 0 view .LVU220
 983 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 984              	.LVL95:
 307:Src/usbh_conf.c **** }
 985              		.loc 1 307 3 is_stmt 1 view .LVU221
 308:Src/usbh_conf.c **** 
 986              		.loc 1 308 1 is_stmt 0 view .LVU222
 987 000e 08BD     		pop	{r3, pc}
 988              		.cfi_endproc
 989              	.LFE81:
 991              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 992              		.align	1
 993              		.global	USBH_LL_OpenPipe
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu softvfp
 999              	USBH_LL_OpenPipe:
 1000              	.LVL96:
 1001              	.LFB83:
 334:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1002              		.loc 1 334 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 12, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccjbVGi0.s 			page 29


 334:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1006              		.loc 1 334 1 is_stmt 0 view .LVU224
 1007 0000 10B5     		push	{r4, lr}
 1008              	.LCFI20:
 1009              		.cfi_def_cfa_offset 8
 1010              		.cfi_offset 4, -8
 1011              		.cfi_offset 14, -4
 1012 0002 84B0     		sub	sp, sp, #16
 1013              	.LCFI21:
 1014              		.cfi_def_cfa_offset 24
 335:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 1015              		.loc 1 335 3 is_stmt 1 view .LVU225
 1016              	.LVL97:
 336:Src/usbh_conf.c **** 
 1017              		.loc 1 336 3 view .LVU226
 338:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 1018              		.loc 1 338 3 view .LVU227
 338:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 1019              		.loc 1 338 37 is_stmt 0 view .LVU228
 1020 0004 D0F8C803 		ldr	r0, [r0, #968]
 1021              	.LVL98:
 338:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 1022              		.loc 1 338 16 view .LVU229
 1023 0008 BDF82040 		ldrh	r4, [sp, #32]
 1024 000c 0294     		str	r4, [sp, #8]
 1025 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 1026 0012 0194     		str	r4, [sp, #4]
 1027 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 1028 0018 0094     		str	r4, [sp]
 1029 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 1030              	.LVL99:
 341:Src/usbh_conf.c **** 
 1031              		.loc 1 341 3 is_stmt 1 view .LVU230
 341:Src/usbh_conf.c **** 
 1032              		.loc 1 341 16 is_stmt 0 view .LVU231
 1033 001e FFF7FEFF 		bl	USBH_Get_USB_Status
 1034              	.LVL100:
 343:Src/usbh_conf.c **** }
 1035              		.loc 1 343 3 is_stmt 1 view .LVU232
 344:Src/usbh_conf.c **** 
 1036              		.loc 1 344 1 is_stmt 0 view .LVU233
 1037 0022 04B0     		add	sp, sp, #16
 1038              	.LCFI22:
 1039              		.cfi_def_cfa_offset 8
 1040              		@ sp needed
 1041 0024 10BD     		pop	{r4, pc}
 344:Src/usbh_conf.c **** 
 1042              		.loc 1 344 1 view .LVU234
 1043              		.cfi_endproc
 1044              	.LFE83:
 1046              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 1047              		.align	1
 1048              		.global	USBH_LL_ClosePipe
 1049              		.syntax unified
 1050              		.thumb
 1051              		.thumb_func
 1052              		.fpu softvfp
ARM GAS  /tmp/ccjbVGi0.s 			page 30


 1054              	USBH_LL_ClosePipe:
 1055              	.LVL101:
 1056              	.LFB84:
 353:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1057              		.loc 1 353 1 is_stmt 1 view -0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 353:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1061              		.loc 1 353 1 is_stmt 0 view .LVU236
 1062 0000 08B5     		push	{r3, lr}
 1063              	.LCFI23:
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 3, -8
 1066              		.cfi_offset 14, -4
 354:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 1067              		.loc 1 354 3 is_stmt 1 view .LVU237
 1068              	.LVL102:
 355:Src/usbh_conf.c **** 
 1069              		.loc 1 355 3 view .LVU238
 357:Src/usbh_conf.c **** 
 1070              		.loc 1 357 3 view .LVU239
 357:Src/usbh_conf.c **** 
 1071              		.loc 1 357 16 is_stmt 0 view .LVU240
 1072 0002 D0F8C803 		ldr	r0, [r0, #968]
 1073              	.LVL103:
 357:Src/usbh_conf.c **** 
 1074              		.loc 1 357 16 view .LVU241
 1075 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 1076              	.LVL104:
 359:Src/usbh_conf.c **** 
 1077              		.loc 1 359 3 is_stmt 1 view .LVU242
 359:Src/usbh_conf.c **** 
 1078              		.loc 1 359 16 is_stmt 0 view .LVU243
 1079 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 1080              	.LVL105:
 361:Src/usbh_conf.c **** }
 1081              		.loc 1 361 3 is_stmt 1 view .LVU244
 362:Src/usbh_conf.c **** 
 1082              		.loc 1 362 1 is_stmt 0 view .LVU245
 1083 000e 08BD     		pop	{r3, pc}
 1084              		.cfi_endproc
 1085              	.LFE84:
 1087              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 1088              		.align	1
 1089              		.global	USBH_LL_SubmitURB
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu softvfp
 1095              	USBH_LL_SubmitURB:
 1096              	.LVL106:
 1097              	.LFB85:
 394:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1098              		.loc 1 394 1 is_stmt 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 16, pretend = 0, frame = 0
ARM GAS  /tmp/ccjbVGi0.s 			page 31


 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 394:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1102              		.loc 1 394 1 is_stmt 0 view .LVU247
 1103 0000 10B5     		push	{r4, lr}
 1104              	.LCFI24:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
 1108 0002 84B0     		sub	sp, sp, #16
 1109              	.LCFI25:
 1110              		.cfi_def_cfa_offset 24
 395:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 1111              		.loc 1 395 3 is_stmt 1 view .LVU248
 1112              	.LVL107:
 396:Src/usbh_conf.c **** 
 1113              		.loc 1 396 3 view .LVU249
 398:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 1114              		.loc 1 398 3 view .LVU250
 398:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 1115              		.loc 1 398 46 is_stmt 0 view .LVU251
 1116 0004 D0F8C803 		ldr	r0, [r0, #968]
 1117              	.LVL108:
 398:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 1118              		.loc 1 398 16 view .LVU252
 1119 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 1120 000c 0394     		str	r4, [sp, #12]
 1121 000e BDF82040 		ldrh	r4, [sp, #32]
 1122 0012 0294     		str	r4, [sp, #8]
 1123 0014 079C     		ldr	r4, [sp, #28]
 1124 0016 0194     		str	r4, [sp, #4]
 1125 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 1126 001c 0094     		str	r4, [sp]
 1127 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 1128              	.LVL109:
 401:Src/usbh_conf.c **** 
 1129              		.loc 1 401 3 is_stmt 1 view .LVU253
 401:Src/usbh_conf.c **** 
 1130              		.loc 1 401 17 is_stmt 0 view .LVU254
 1131 0022 FFF7FEFF 		bl	USBH_Get_USB_Status
 1132              	.LVL110:
 403:Src/usbh_conf.c **** }
 1133              		.loc 1 403 3 is_stmt 1 view .LVU255
 404:Src/usbh_conf.c **** 
 1134              		.loc 1 404 1 is_stmt 0 view .LVU256
 1135 0026 04B0     		add	sp, sp, #16
 1136              	.LCFI26:
 1137              		.cfi_def_cfa_offset 8
 1138              		@ sp needed
 1139 0028 10BD     		pop	{r4, pc}
 404:Src/usbh_conf.c **** 
 1140              		.loc 1 404 1 view .LVU257
 1141              		.cfi_endproc
 1142              	.LFE85:
 1144              		.comm	hhcd_USB_OTG_FS,708,4
 1145              		.text
 1146              	.Letext0:
 1147              		.file 2 "/usr/include/newlib/machine/_default_types.h"
ARM GAS  /tmp/ccjbVGi0.s 			page 32


 1148              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1149              		.file 4 "/usr/include/newlib/sys/_types.h"
 1150              		.file 5 "/usr/include/newlib/sys/reent.h"
 1151              		.file 6 "/usr/include/newlib/sys/lock.h"
 1152              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1153              		.file 8 "/usr/include/newlib/stdlib.h"
 1154              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 1155              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1156              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 1157              		.file 12 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1158              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1159              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1160              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1161              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_hcd.h"
 1162              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1163              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1164              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1165              		.file 20 "Inc/usbh_platform.h"
 1166              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1167              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccjbVGi0.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
     /tmp/ccjbVGi0.s:16     .text.HAL_HCD_MspInit:0000000000000000 $t
     /tmp/ccjbVGi0.s:24     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
     /tmp/ccjbVGi0.s:132    .text.HAL_HCD_MspInit:0000000000000068 $d
     /tmp/ccjbVGi0.s:138    .text.HAL_HCD_MspDeInit:0000000000000000 $t
     /tmp/ccjbVGi0.s:145    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
     /tmp/ccjbVGi0.s:191    .text.HAL_HCD_MspDeInit:0000000000000028 $d
     /tmp/ccjbVGi0.s:197    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:204    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
     /tmp/ccjbVGi0.s:229    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:236    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
     /tmp/ccjbVGi0.s:261    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:268    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
     /tmp/ccjbVGi0.s:293    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:300    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/ccjbVGi0.s:314    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:321    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 HAL_HCD_PortEnabled_Callback
     /tmp/ccjbVGi0.s:346    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 $t
     /tmp/ccjbVGi0.s:353    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 HAL_HCD_PortDisabled_Callback
     /tmp/ccjbVGi0.s:378    .text.USBH_LL_Init:0000000000000000 $t
     /tmp/ccjbVGi0.s:385    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
     /tmp/ccjbVGi0.s:466    .text.USBH_LL_Init:000000000000004c $d
                            *COM*:00000000000002c4 hhcd_USB_OTG_FS
     /tmp/ccjbVGi0.s:471    .text.USBH_LL_GetSpeed:0000000000000000 $t
     /tmp/ccjbVGi0.s:478    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
     /tmp/ccjbVGi0.s:526    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
     /tmp/ccjbVGi0.s:533    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
     /tmp/ccjbVGi0.s:559    .text.USBH_LL_GetURBState:0000000000000000 $t
     /tmp/ccjbVGi0.s:566    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
     /tmp/ccjbVGi0.s:592    .text.USBH_LL_DriverVBUS:0000000000000000 $t
     /tmp/ccjbVGi0.s:599    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
     /tmp/ccjbVGi0.s:642    .text.USBH_LL_SetToggle:0000000000000000 $t
     /tmp/ccjbVGi0.s:649    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
     /tmp/ccjbVGi0.s:697    .text.USBH_LL_GetToggle:0000000000000000 $t
     /tmp/ccjbVGi0.s:704    .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
     /tmp/ccjbVGi0.s:752    .text.USBH_Delay:0000000000000000 $t
     /tmp/ccjbVGi0.s:759    .text.USBH_Delay:0000000000000000 USBH_Delay
     /tmp/ccjbVGi0.s:781    .text.USBH_Get_USB_Status:0000000000000000 $t
     /tmp/ccjbVGi0.s:788    .text.USBH_Get_USB_Status:0000000000000000 USBH_Get_USB_Status
     /tmp/ccjbVGi0.s:802    .text.USBH_Get_USB_Status:0000000000000008 $d
     /tmp/ccjbVGi0.s:828    .text.USBH_LL_DeInit:0000000000000000 $t
     /tmp/ccjbVGi0.s:835    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
     /tmp/ccjbVGi0.s:869    .text.USBH_LL_Start:0000000000000000 $t
     /tmp/ccjbVGi0.s:876    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
     /tmp/ccjbVGi0.s:910    .text.USBH_LL_Stop:0000000000000000 $t
     /tmp/ccjbVGi0.s:917    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
     /tmp/ccjbVGi0.s:951    .text.USBH_LL_ResetPort:0000000000000000 $t
     /tmp/ccjbVGi0.s:958    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
     /tmp/ccjbVGi0.s:992    .text.USBH_LL_OpenPipe:0000000000000000 $t
     /tmp/ccjbVGi0.s:999    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
     /tmp/ccjbVGi0.s:1047   .text.USBH_LL_ClosePipe:0000000000000000 $t
     /tmp/ccjbVGi0.s:1054   .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
     /tmp/ccjbVGi0.s:1088   .text.USBH_LL_SubmitURB:0000000000000000 $t
     /tmp/ccjbVGi0.s:1095   .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB
     /tmp/ccjbVGi0.s:805    .text.USBH_Get_USB_Status:000000000000000b $d
     /tmp/ccjbVGi0.s:805    .text.USBH_Get_USB_Status:000000000000000c $t
ARM GAS  /tmp/ccjbVGi0.s 			page 34



UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBH_LL_IncTimer
USBH_LL_Connect
USBH_LL_Disconnect
USBH_LL_PortEnabled
USBH_LL_PortDisabled
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
Error_Handler
HAL_HCD_GetCurrentSpeed
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_GetURBState
HAL_Delay
MX_DriverVbusFS
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_ResetPort
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
