ARM GAS  /tmp/cceYe0mL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f1xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB65:
  26              		.file 1 "Src/system_stm32f1xx.c"
   1:Src/system_stm32f1xx.c **** /**
   2:Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f1xx.c ****   * @version V4.2.0
   6:Src/system_stm32f1xx.c ****   * @date    31-March-2017
   7:Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:Src/system_stm32f1xx.c ****   * 
   9:Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:Src/system_stm32f1xx.c ****   *     user application:
  11:Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  14:Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
  15:Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  16:Src/system_stm32f1xx.c ****   *
  17:Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  19:Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  20:Src/system_stm32f1xx.c ****   *                                     
  21:Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  23:Src/system_stm32f1xx.c ****   *                                 during program execution.
  24:Src/system_stm32f1xx.c ****   *
  25:Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  27:Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  28:Src/system_stm32f1xx.c ****   *
  29:Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  30:Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  31:Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  32:Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
ARM GAS  /tmp/cceYe0mL.s 			page 2


  33:Src/system_stm32f1xx.c ****   *    configuration.
  34:Src/system_stm32f1xx.c ****   *        
  35:Src/system_stm32f1xx.c ****   ******************************************************************************
  36:Src/system_stm32f1xx.c ****   * @attention
  37:Src/system_stm32f1xx.c ****   *
  38:Src/system_stm32f1xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  39:Src/system_stm32f1xx.c ****   *
  40:Src/system_stm32f1xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  41:Src/system_stm32f1xx.c ****   * are permitted provided that the following conditions are met:
  42:Src/system_stm32f1xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  43:Src/system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer.
  44:Src/system_stm32f1xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  45:Src/system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  46:Src/system_stm32f1xx.c ****   *      and/or other materials provided with the distribution.
  47:Src/system_stm32f1xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  48:Src/system_stm32f1xx.c ****   *      may be used to endorse or promote products derived from this software
  49:Src/system_stm32f1xx.c ****   *      without specific prior written permission.
  50:Src/system_stm32f1xx.c ****   *
  51:Src/system_stm32f1xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  52:Src/system_stm32f1xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  53:Src/system_stm32f1xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  54:Src/system_stm32f1xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  55:Src/system_stm32f1xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  56:Src/system_stm32f1xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  57:Src/system_stm32f1xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  58:Src/system_stm32f1xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  59:Src/system_stm32f1xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  60:Src/system_stm32f1xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  61:Src/system_stm32f1xx.c ****   *
  62:Src/system_stm32f1xx.c ****   ******************************************************************************
  63:Src/system_stm32f1xx.c ****   */
  64:Src/system_stm32f1xx.c **** 
  65:Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  66:Src/system_stm32f1xx.c ****   * @{
  67:Src/system_stm32f1xx.c ****   */
  68:Src/system_stm32f1xx.c **** 
  69:Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  70:Src/system_stm32f1xx.c ****   * @{
  71:Src/system_stm32f1xx.c ****   */  
  72:Src/system_stm32f1xx.c ****   
  73:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  74:Src/system_stm32f1xx.c ****   * @{
  75:Src/system_stm32f1xx.c ****   */
  76:Src/system_stm32f1xx.c **** 
  77:Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  78:Src/system_stm32f1xx.c **** 
  79:Src/system_stm32f1xx.c **** /**
  80:Src/system_stm32f1xx.c ****   * @}
  81:Src/system_stm32f1xx.c ****   */
  82:Src/system_stm32f1xx.c **** 
  83:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  84:Src/system_stm32f1xx.c ****   * @{
  85:Src/system_stm32f1xx.c ****   */
  86:Src/system_stm32f1xx.c **** 
  87:Src/system_stm32f1xx.c **** /**
  88:Src/system_stm32f1xx.c ****   * @}
  89:Src/system_stm32f1xx.c ****   */
ARM GAS  /tmp/cceYe0mL.s 			page 3


  90:Src/system_stm32f1xx.c **** 
  91:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  92:Src/system_stm32f1xx.c ****   * @{
  93:Src/system_stm32f1xx.c ****   */
  94:Src/system_stm32f1xx.c **** 
  95:Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  96:Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  97:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  98:Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  99:Src/system_stm32f1xx.c **** 
 100:Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
 101:Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
 102:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
 103:Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
 104:Src/system_stm32f1xx.c **** 
 105:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
 106:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 107:Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
 108:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 109:Src/system_stm32f1xx.c **** 
 110:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 111:Src/system_stm32f1xx.c ****      Internal SRAM. */ 
 112:Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 113:Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET  0x00000000U /*!< Vector Table base offset field. 
 114:Src/system_stm32f1xx.c ****                                   This value must be a multiple of 0x200. */
 115:Src/system_stm32f1xx.c **** 
 116:Src/system_stm32f1xx.c **** 
 117:Src/system_stm32f1xx.c **** /**
 118:Src/system_stm32f1xx.c ****   * @}
 119:Src/system_stm32f1xx.c ****   */
 120:Src/system_stm32f1xx.c **** 
 121:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 122:Src/system_stm32f1xx.c ****   * @{
 123:Src/system_stm32f1xx.c ****   */
 124:Src/system_stm32f1xx.c **** 
 125:Src/system_stm32f1xx.c **** /**
 126:Src/system_stm32f1xx.c ****   * @}
 127:Src/system_stm32f1xx.c ****   */
 128:Src/system_stm32f1xx.c **** 
 129:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 130:Src/system_stm32f1xx.c ****   * @{
 131:Src/system_stm32f1xx.c ****   */
 132:Src/system_stm32f1xx.c **** 
 133:Src/system_stm32f1xx.c **** /*******************************************************************************
 134:Src/system_stm32f1xx.c **** *  Clock Definitions
 135:Src/system_stm32f1xx.c **** *******************************************************************************/
 136:Src/system_stm32f1xx.c **** #if defined(STM32F100xB) ||defined(STM32F100xE)
 137:Src/system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 24000000U;        /*!< System Clock Frequency (Core Clock) */
 138:Src/system_stm32f1xx.c **** #else /*!< HSI Selected as System Clock source */
 139:Src/system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 72000000U;        /*!< System Clock Frequency (Core Clock) */
 140:Src/system_stm32f1xx.c **** #endif
 141:Src/system_stm32f1xx.c **** 
 142:Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 144:Src/system_stm32f1xx.c **** 
 145:Src/system_stm32f1xx.c **** /**
 146:Src/system_stm32f1xx.c ****   * @}
ARM GAS  /tmp/cceYe0mL.s 			page 4


 147:Src/system_stm32f1xx.c ****   */
 148:Src/system_stm32f1xx.c **** 
 149:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 150:Src/system_stm32f1xx.c ****   * @{
 151:Src/system_stm32f1xx.c ****   */
 152:Src/system_stm32f1xx.c **** 
 153:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 154:Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 155:Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 156:Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 157:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 158:Src/system_stm32f1xx.c **** 
 159:Src/system_stm32f1xx.c **** /**
 160:Src/system_stm32f1xx.c ****   * @}
 161:Src/system_stm32f1xx.c ****   */
 162:Src/system_stm32f1xx.c **** 
 163:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 164:Src/system_stm32f1xx.c ****   * @{
 165:Src/system_stm32f1xx.c ****   */
 166:Src/system_stm32f1xx.c **** 
 167:Src/system_stm32f1xx.c **** /**
 168:Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 169:Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 170:Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 171:Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 172:Src/system_stm32f1xx.c ****   * @param  None
 173:Src/system_stm32f1xx.c ****   * @retval None
 174:Src/system_stm32f1xx.c ****   */
 175:Src/system_stm32f1xx.c **** void SystemInit (void)
 176:Src/system_stm32f1xx.c **** {
  27              		.loc 1 176 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 177:Src/system_stm32f1xx.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 178:Src/system_stm32f1xx.c ****   /* Set HSION bit */
 179:Src/system_stm32f1xx.c ****   RCC->CR |= 0x00000001U;
  32              		.loc 1 179 3 view .LVU1
  33              		.loc 1 179 11 is_stmt 0 view .LVU2
  34 0000 124B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 42F00102 		orr	r2, r2, #1
  37 0008 1A60     		str	r2, [r3]
 180:Src/system_stm32f1xx.c **** 
 181:Src/system_stm32f1xx.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 182:Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)
 183:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF8FF0000U;
 184:Src/system_stm32f1xx.c **** #else
 185:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF0FF0000U;
  38              		.loc 1 185 3 is_stmt 1 view .LVU3
  39              		.loc 1 185 13 is_stmt 0 view .LVU4
  40 000a 5968     		ldr	r1, [r3, #4]
  41 000c 104A     		ldr	r2, .L2+4
  42 000e 0A40     		ands	r2, r2, r1
  43 0010 5A60     		str	r2, [r3, #4]
 186:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */   
ARM GAS  /tmp/cceYe0mL.s 			page 5


 187:Src/system_stm32f1xx.c ****   
 188:Src/system_stm32f1xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 189:Src/system_stm32f1xx.c ****   RCC->CR &= 0xFEF6FFFFU;
  44              		.loc 1 189 3 is_stmt 1 view .LVU5
  45              		.loc 1 189 11 is_stmt 0 view .LVU6
  46 0012 1A68     		ldr	r2, [r3]
  47 0014 22F08472 		bic	r2, r2, #17301504
  48 0018 22F48032 		bic	r2, r2, #65536
  49 001c 1A60     		str	r2, [r3]
 190:Src/system_stm32f1xx.c **** 
 191:Src/system_stm32f1xx.c ****   /* Reset HSEBYP bit */
 192:Src/system_stm32f1xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  50              		.loc 1 192 3 is_stmt 1 view .LVU7
  51              		.loc 1 192 11 is_stmt 0 view .LVU8
  52 001e 1A68     		ldr	r2, [r3]
  53 0020 22F48022 		bic	r2, r2, #262144
  54 0024 1A60     		str	r2, [r3]
 193:Src/system_stm32f1xx.c **** 
 194:Src/system_stm32f1xx.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 195:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xFF80FFFFU;
  55              		.loc 1 195 3 is_stmt 1 view .LVU9
  56              		.loc 1 195 13 is_stmt 0 view .LVU10
  57 0026 5A68     		ldr	r2, [r3, #4]
  58 0028 22F4FE02 		bic	r2, r2, #8323072
  59 002c 5A60     		str	r2, [r3, #4]
 196:Src/system_stm32f1xx.c **** 
 197:Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 198:Src/system_stm32f1xx.c ****   /* Reset PLL2ON and PLL3ON bits */
 199:Src/system_stm32f1xx.c ****   RCC->CR &= 0xEBFFFFFFU;
  60              		.loc 1 199 3 is_stmt 1 view .LVU11
  61              		.loc 1 199 11 is_stmt 0 view .LVU12
  62 002e 1A68     		ldr	r2, [r3]
  63 0030 22F0A052 		bic	r2, r2, #335544320
  64 0034 1A60     		str	r2, [r3]
 200:Src/system_stm32f1xx.c **** 
 201:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 202:Src/system_stm32f1xx.c ****   RCC->CIR = 0x00FF0000U;
  65              		.loc 1 202 3 is_stmt 1 view .LVU13
  66              		.loc 1 202 12 is_stmt 0 view .LVU14
  67 0036 4FF47F02 		mov	r2, #16711680
  68 003a 9A60     		str	r2, [r3, #8]
 203:Src/system_stm32f1xx.c **** 
 204:Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 205:Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;
  69              		.loc 1 205 3 is_stmt 1 view .LVU15
  70              		.loc 1 205 14 is_stmt 0 view .LVU16
  71 003c 0022     		movs	r2, #0
  72 003e DA62     		str	r2, [r3, #44]
 206:Src/system_stm32f1xx.c **** #elif defined(STM32F100xB) || defined(STM32F100xE)
 207:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 208:Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
 209:Src/system_stm32f1xx.c **** 
 210:Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 211:Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;      
 212:Src/system_stm32f1xx.c **** #else
 213:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 214:Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
ARM GAS  /tmp/cceYe0mL.s 			page 6


 215:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 216:Src/system_stm32f1xx.c ****     
 217:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 218:Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 219:Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 220:Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 221:Src/system_stm32f1xx.c **** #endif 
 222:Src/system_stm32f1xx.c **** 
 223:Src/system_stm32f1xx.c **** #ifdef VECT_TAB_SRAM
 224:Src/system_stm32f1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 225:Src/system_stm32f1xx.c **** #else
 226:Src/system_stm32f1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
  73              		.loc 1 226 3 is_stmt 1 view .LVU17
  74              		.loc 1 226 13 is_stmt 0 view .LVU18
  75 0040 044B     		ldr	r3, .L2+8
  76 0042 4FF00062 		mov	r2, #134217728
  77 0046 9A60     		str	r2, [r3, #8]
 227:Src/system_stm32f1xx.c **** #endif 
 228:Src/system_stm32f1xx.c **** }
  78              		.loc 1 228 1 view .LVU19
  79 0048 7047     		bx	lr
  80              	.L3:
  81 004a 00BF     		.align	2
  82              	.L2:
  83 004c 00100240 		.word	1073876992
  84 0050 0000FFF0 		.word	-251723776
  85 0054 00ED00E0 		.word	-536810240
  86              		.cfi_endproc
  87              	.LFE65:
  89              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  90              		.align	1
  91              		.global	SystemCoreClockUpdate
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	SystemCoreClockUpdate:
  98              	.LFB66:
 229:Src/system_stm32f1xx.c **** 
 230:Src/system_stm32f1xx.c **** /**
 231:Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:Src/system_stm32f1xx.c ****   *         other parameters.
 235:Src/system_stm32f1xx.c ****   *           
 236:Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 239:Src/system_stm32f1xx.c ****   *     
 240:Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 241:Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 242:Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 243:Src/system_stm32f1xx.c ****   *             
 244:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 245:Src/system_stm32f1xx.c ****   *                                              
 246:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 247:Src/system_stm32f1xx.c ****   *                          
ARM GAS  /tmp/cceYe0mL.s 			page 7


 248:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 249:Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 250:Src/system_stm32f1xx.c ****   *         
 251:Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 252:Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 253:Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 254:Src/system_stm32f1xx.c ****   *    
 255:Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 256:Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 257:Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 258:Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 259:Src/system_stm32f1xx.c ****   *                
 260:Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 261:Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 262:Src/system_stm32f1xx.c ****   * @param  None
 263:Src/system_stm32f1xx.c ****   * @retval None
 264:Src/system_stm32f1xx.c ****   */
 265:Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 266:Src/system_stm32f1xx.c **** {
  99              		.loc 1 266 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 10B4     		push	{r4}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 4, -4
 267:Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
 108              		.loc 1 267 3 view .LVU21
 109              	.LVL0:
 268:Src/system_stm32f1xx.c **** 
 269:Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 270:Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 110              		.loc 1 270 3 view .LVU22
 271:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 272:Src/system_stm32f1xx.c **** 
 273:Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 274:Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 275:Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 276:Src/system_stm32f1xx.c ****     
 277:Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 278:Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 111              		.loc 1 278 3 view .LVU23
 112              		.loc 1 278 12 is_stmt 0 view .LVU24
 113 0002 2C4B     		ldr	r3, .L15
 114 0004 5B68     		ldr	r3, [r3, #4]
 115              		.loc 1 278 7 view .LVU25
 116 0006 03F00C03 		and	r3, r3, #12
 117              	.LVL1:
 279:Src/system_stm32f1xx.c ****   
 280:Src/system_stm32f1xx.c ****   switch (tmp)
 118              		.loc 1 280 3 is_stmt 1 view .LVU26
 119 000a 042B     		cmp	r3, #4
 120 000c 15D0     		beq	.L5
 121 000e 082B     		cmp	r3, #8
 122 0010 17D0     		beq	.L6
ARM GAS  /tmp/cceYe0mL.s 			page 8


 123 0012 1BB1     		cbz	r3, .L14
 281:Src/system_stm32f1xx.c ****   {
 282:Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 283:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 284:Src/system_stm32f1xx.c ****       break;
 285:Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 286:Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 287:Src/system_stm32f1xx.c ****       break;
 288:Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 289:Src/system_stm32f1xx.c **** 
 290:Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 291:Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 292:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 293:Src/system_stm32f1xx.c ****       
 294:Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 295:Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 296:Src/system_stm32f1xx.c ****       
 297:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 298:Src/system_stm32f1xx.c ****       {
 299:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 300:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 301:Src/system_stm32f1xx.c ****       }
 302:Src/system_stm32f1xx.c ****       else
 303:Src/system_stm32f1xx.c ****       {
 304:Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 305:Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 306:Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 308:Src/system_stm32f1xx.c ****  #else
 309:Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 310:Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 311:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 312:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 313:Src/system_stm32f1xx.c ****         }
 314:Src/system_stm32f1xx.c ****         else
 315:Src/system_stm32f1xx.c ****         {
 316:Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 317:Src/system_stm32f1xx.c ****         }
 318:Src/system_stm32f1xx.c ****  #endif
 319:Src/system_stm32f1xx.c ****       }
 320:Src/system_stm32f1xx.c **** #else
 321:Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 322:Src/system_stm32f1xx.c ****       
 323:Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 324:Src/system_stm32f1xx.c ****       {
 325:Src/system_stm32f1xx.c ****          pllmull += 2U;
 326:Src/system_stm32f1xx.c ****       }
 327:Src/system_stm32f1xx.c ****       else
 328:Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 329:Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 330:Src/system_stm32f1xx.c ****       }
 331:Src/system_stm32f1xx.c ****             
 332:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 333:Src/system_stm32f1xx.c ****       {
 334:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 335:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 336:Src/system_stm32f1xx.c ****       }
ARM GAS  /tmp/cceYe0mL.s 			page 9


 337:Src/system_stm32f1xx.c ****       else
 338:Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 339:Src/system_stm32f1xx.c ****         
 340:Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 341:Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 342:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 343:Src/system_stm32f1xx.c ****         
 344:Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 345:Src/system_stm32f1xx.c ****         { 
 346:Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 347:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 348:Src/system_stm32f1xx.c ****         }
 349:Src/system_stm32f1xx.c ****         else
 350:Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 351:Src/system_stm32f1xx.c ****           
 352:Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 353:Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 354:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 355:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 356:Src/system_stm32f1xx.c ****         }
 357:Src/system_stm32f1xx.c ****       }
 358:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 359:Src/system_stm32f1xx.c ****       break;
 360:Src/system_stm32f1xx.c **** 
 361:Src/system_stm32f1xx.c ****     default:
 362:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 124              		.loc 1 362 7 view .LVU27
 125              		.loc 1 362 23 is_stmt 0 view .LVU28
 126 0014 284B     		ldr	r3, .L15+4
 127              	.LVL2:
 128              		.loc 1 362 23 view .LVU29
 129 0016 294A     		ldr	r2, .L15+8
 130 0018 1A60     		str	r2, [r3]
 363:Src/system_stm32f1xx.c ****       break;
 131              		.loc 1 363 7 is_stmt 1 view .LVU30
 132 001a 02E0     		b	.L8
 133              	.LVL3:
 134              	.L14:
 283:Src/system_stm32f1xx.c ****       break;
 135              		.loc 1 283 7 view .LVU31
 283:Src/system_stm32f1xx.c ****       break;
 136              		.loc 1 283 23 is_stmt 0 view .LVU32
 137 001c 264B     		ldr	r3, .L15+4
 138              	.LVL4:
 283:Src/system_stm32f1xx.c ****       break;
 139              		.loc 1 283 23 view .LVU33
 140 001e 274A     		ldr	r2, .L15+8
 141 0020 1A60     		str	r2, [r3]
 284:Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 142              		.loc 1 284 7 is_stmt 1 view .LVU34
 143              	.LVL5:
 144              	.L8:
 364:Src/system_stm32f1xx.c ****   }
 365:Src/system_stm32f1xx.c ****   
 366:Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 367:Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 368:Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
ARM GAS  /tmp/cceYe0mL.s 			page 10


 145              		.loc 1 368 3 view .LVU35
 146              		.loc 1 368 28 is_stmt 0 view .LVU36
 147 0022 244B     		ldr	r3, .L15
 148 0024 5B68     		ldr	r3, [r3, #4]
 149              		.loc 1 368 52 view .LVU37
 150 0026 C3F30313 		ubfx	r3, r3, #4, #4
 151              		.loc 1 368 22 view .LVU38
 152 002a 254A     		ldr	r2, .L15+12
 153 002c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 154              	.LVL6:
 369:Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 370:Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 155              		.loc 1 370 3 is_stmt 1 view .LVU39
 156              		.loc 1 370 19 is_stmt 0 view .LVU40
 157 002e 224A     		ldr	r2, .L15+4
 158 0030 1368     		ldr	r3, [r2]
 159 0032 CB40     		lsrs	r3, r3, r1
 160 0034 1360     		str	r3, [r2]
 371:Src/system_stm32f1xx.c **** }
 161              		.loc 1 371 1 view .LVU41
 162 0036 10BC     		pop	{r4}
 163              	.LCFI1:
 164              		.cfi_remember_state
 165              		.cfi_restore 4
 166              		.cfi_def_cfa_offset 0
 167 0038 7047     		bx	lr
 168              	.LVL7:
 169              	.L5:
 170              	.LCFI2:
 171              		.cfi_restore_state
 286:Src/system_stm32f1xx.c ****       break;
 172              		.loc 1 286 7 is_stmt 1 view .LVU42
 286:Src/system_stm32f1xx.c ****       break;
 173              		.loc 1 286 23 is_stmt 0 view .LVU43
 174 003a 1F4B     		ldr	r3, .L15+4
 175              	.LVL8:
 286:Src/system_stm32f1xx.c ****       break;
 176              		.loc 1 286 23 view .LVU44
 177 003c 1F4A     		ldr	r2, .L15+8
 178 003e 1A60     		str	r2, [r3]
 287:Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 179              		.loc 1 287 7 is_stmt 1 view .LVU45
 180 0040 EFE7     		b	.L8
 181              	.LVL9:
 182              	.L6:
 291:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 183              		.loc 1 291 7 view .LVU46
 291:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 184              		.loc 1 291 20 is_stmt 0 view .LVU47
 185 0042 1C4A     		ldr	r2, .L15
 186 0044 5368     		ldr	r3, [r2, #4]
 187              	.LVL10:
 292:Src/system_stm32f1xx.c ****       
 188              		.loc 1 292 7 is_stmt 1 view .LVU48
 292:Src/system_stm32f1xx.c ****       
 189              		.loc 1 292 22 is_stmt 0 view .LVU49
 190 0046 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/cceYe0mL.s 			page 11


 292:Src/system_stm32f1xx.c ****       
 191              		.loc 1 292 17 view .LVU50
 192 0048 02F48032 		and	r2, r2, #65536
 193              	.LVL11:
 321:Src/system_stm32f1xx.c ****       
 194              		.loc 1 321 7 is_stmt 1 view .LVU51
 321:Src/system_stm32f1xx.c ****       
 195              		.loc 1 321 15 is_stmt 0 view .LVU52
 196 004c C3F38343 		ubfx	r3, r3, #18, #4
 197              	.LVL12:
 323:Src/system_stm32f1xx.c ****       {
 198              		.loc 1 323 7 is_stmt 1 view .LVU53
 323:Src/system_stm32f1xx.c ****       {
 199              		.loc 1 323 10 is_stmt 0 view .LVU54
 200 0050 0D2B     		cmp	r3, #13
 201 0052 07D0     		beq	.L12
 325:Src/system_stm32f1xx.c ****       }
 202              		.loc 1 325 10 is_stmt 1 view .LVU55
 325:Src/system_stm32f1xx.c ****       }
 203              		.loc 1 325 18 is_stmt 0 view .LVU56
 204 0054 0233     		adds	r3, r3, #2
 205              	.LVL13:
 206              	.L9:
 332:Src/system_stm32f1xx.c ****       {
 207              		.loc 1 332 7 is_stmt 1 view .LVU57
 332:Src/system_stm32f1xx.c ****       {
 208              		.loc 1 332 10 is_stmt 0 view .LVU58
 209 0056 3AB9     		cbnz	r2, .L10
 335:Src/system_stm32f1xx.c ****       }
 210              		.loc 1 335 9 is_stmt 1 view .LVU59
 335:Src/system_stm32f1xx.c ****       }
 211              		.loc 1 335 45 is_stmt 0 view .LVU60
 212 0058 1A4A     		ldr	r2, .L15+16
 213              	.LVL14:
 335:Src/system_stm32f1xx.c ****       }
 214              		.loc 1 335 45 view .LVU61
 215 005a 02FB03F3 		mul	r3, r2, r3
 216              	.LVL15:
 335:Src/system_stm32f1xx.c ****       }
 217              		.loc 1 335 25 view .LVU62
 218 005e 164A     		ldr	r2, .L15+4
 219 0060 1360     		str	r3, [r2]
 220 0062 DEE7     		b	.L8
 221              	.LVL16:
 222              	.L12:
 329:Src/system_stm32f1xx.c ****       }
 223              		.loc 1 329 17 view .LVU63
 224 0064 0623     		movs	r3, #6
 225              	.LVL17:
 329:Src/system_stm32f1xx.c ****       }
 226              		.loc 1 329 17 view .LVU64
 227 0066 F6E7     		b	.L9
 228              	.LVL18:
 229              	.L10:
 341:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 230              		.loc 1 341 9 is_stmt 1 view .LVU65
 341:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
ARM GAS  /tmp/cceYe0mL.s 			page 12


 231              		.loc 1 341 28 is_stmt 0 view .LVU66
 232 0068 124A     		ldr	r2, .L15
 233              	.LVL19:
 341:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 234              		.loc 1 341 28 view .LVU67
 235 006a D16A     		ldr	r1, [r2, #44]
 236              	.LVL20:
 342:Src/system_stm32f1xx.c ****         
 237              		.loc 1 342 9 is_stmt 1 view .LVU68
 342:Src/system_stm32f1xx.c ****         
 238              		.loc 1 342 29 is_stmt 0 view .LVU69
 239 006c D26A     		ldr	r2, [r2, #44]
 342:Src/system_stm32f1xx.c ****         
 240              		.loc 1 342 37 view .LVU70
 241 006e 02F00F02 		and	r2, r2, #15
 342:Src/system_stm32f1xx.c ****         
 242              		.loc 1 342 23 view .LVU71
 243 0072 0132     		adds	r2, r2, #1
 244              	.LVL21:
 344:Src/system_stm32f1xx.c ****         { 
 245              		.loc 1 344 9 is_stmt 1 view .LVU72
 344:Src/system_stm32f1xx.c ****         { 
 246              		.loc 1 344 12 is_stmt 0 view .LVU73
 247 0074 11F4803F 		tst	r1, #65536
 248 0078 07D1     		bne	.L11
 347:Src/system_stm32f1xx.c ****         }
 249              		.loc 1 347 11 is_stmt 1 view .LVU74
 347:Src/system_stm32f1xx.c ****         }
 250              		.loc 1 347 40 is_stmt 0 view .LVU75
 251 007a 1049     		ldr	r1, .L15+8
 252              	.LVL22:
 347:Src/system_stm32f1xx.c ****         }
 253              		.loc 1 347 40 view .LVU76
 254 007c B1FBF2F2 		udiv	r2, r1, r2
 255              	.LVL23:
 347:Src/system_stm32f1xx.c ****         }
 256              		.loc 1 347 57 view .LVU77
 257 0080 03FB02F3 		mul	r3, r3, r2
 258              	.LVL24:
 347:Src/system_stm32f1xx.c ****         }
 259              		.loc 1 347 27 view .LVU78
 260 0084 0C4A     		ldr	r2, .L15+4
 261 0086 1360     		str	r3, [r2]
 262 0088 CBE7     		b	.L8
 263              	.LVL25:
 264              	.L11:
 353:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 265              		.loc 1 353 11 is_stmt 1 view .LVU79
 353:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 266              		.loc 1 353 32 is_stmt 0 view .LVU80
 267 008a 0A49     		ldr	r1, .L15
 268              	.LVL26:
 353:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 269              		.loc 1 353 32 view .LVU81
 270 008c C86A     		ldr	r0, [r1, #44]
 353:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 271              		.loc 1 353 61 view .LVU82
ARM GAS  /tmp/cceYe0mL.s 			page 13


 272 008e C0F30310 		ubfx	r0, r0, #4, #4
 353:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 273              		.loc 1 353 25 view .LVU83
 274 0092 0130     		adds	r0, r0, #1
 275              	.LVL27:
 354:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 276              		.loc 1 354 11 is_stmt 1 view .LVU84
 354:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 277              		.loc 1 354 27 is_stmt 0 view .LVU85
 278 0094 C96A     		ldr	r1, [r1, #44]
 354:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 279              		.loc 1 354 56 view .LVU86
 280 0096 C1F30321 		ubfx	r1, r1, #8, #4
 354:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 281              		.loc 1 354 20 view .LVU87
 282 009a 0231     		adds	r1, r1, #2
 283              	.LVL28:
 355:Src/system_stm32f1xx.c ****         }
 284              		.loc 1 355 11 is_stmt 1 view .LVU88
 355:Src/system_stm32f1xx.c ****         }
 285              		.loc 1 355 42 is_stmt 0 view .LVU89
 286 009c 074C     		ldr	r4, .L15+8
 287 009e B4FBF0F0 		udiv	r0, r4, r0
 288              	.LVL29:
 355:Src/system_stm32f1xx.c ****         }
 289              		.loc 1 355 59 view .LVU90
 290 00a2 01FB00F1 		mul	r1, r1, r0
 291              	.LVL30:
 355:Src/system_stm32f1xx.c ****         }
 292              		.loc 1 355 71 view .LVU91
 293 00a6 B1FBF2F2 		udiv	r2, r1, r2
 294              	.LVL31:
 355:Src/system_stm32f1xx.c ****         }
 295              		.loc 1 355 88 view .LVU92
 296 00aa 03FB02F3 		mul	r3, r3, r2
 297              	.LVL32:
 355:Src/system_stm32f1xx.c ****         }
 298              		.loc 1 355 27 view .LVU93
 299 00ae 024A     		ldr	r2, .L15+4
 300 00b0 1360     		str	r3, [r2]
 301 00b2 B6E7     		b	.L8
 302              	.L16:
 303              		.align	2
 304              	.L15:
 305 00b4 00100240 		.word	1073876992
 306 00b8 00000000 		.word	.LANCHOR0
 307 00bc 00127A00 		.word	8000000
 308 00c0 00000000 		.word	.LANCHOR1
 309 00c4 00093D00 		.word	4000000
 310              		.cfi_endproc
 311              	.LFE66:
 313              		.global	APBPrescTable
 314              		.global	AHBPrescTable
 315              		.global	SystemCoreClock
 316              		.section	.data.SystemCoreClock,"aw"
 317              		.align	2
 318              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/cceYe0mL.s 			page 14


 321              	SystemCoreClock:
 322 0000 00A24A04 		.word	72000000
 323              		.section	.rodata.AHBPrescTable,"a"
 324              		.align	2
 325              		.set	.LANCHOR1,. + 0
 328              	AHBPrescTable:
 329 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 329      00000000 
 329      01020304 
 329      06
 330 000d 070809   		.ascii	"\007\010\011"
 331              		.section	.rodata.APBPrescTable,"a"
 332              		.align	2
 335              	APBPrescTable:
 336 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 336      01020304 
 337              		.text
 338              	.Letext0:
 339              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 340              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 341              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 342              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 343              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cceYe0mL.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f1xx.c
     /tmp/cceYe0mL.s:16     .text.SystemInit:0000000000000000 $t
     /tmp/cceYe0mL.s:24     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cceYe0mL.s:83     .text.SystemInit:000000000000004c $d
     /tmp/cceYe0mL.s:90     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cceYe0mL.s:97     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cceYe0mL.s:305    .text.SystemCoreClockUpdate:00000000000000b4 $d
     /tmp/cceYe0mL.s:335    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/cceYe0mL.s:328    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cceYe0mL.s:321    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cceYe0mL.s:317    .data.SystemCoreClock:0000000000000000 $d
     /tmp/cceYe0mL.s:324    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/cceYe0mL.s:332    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
