ARM GAS  /tmp/ccMAol1x.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Driver_LCD.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.first_line_DDRAM_address,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	first_line_DDRAM_address:
  23              	.LFB5:
  24              		.file 1 "Src/LCD/Driver_LCD.c"
   1:Src/LCD/Driver_LCD.c **** #include "Driver_LCD.h"
   2:Src/LCD/Driver_LCD.c **** #include "stdbool.h"
   3:Src/LCD/Driver_LCD.c **** 
   4:Src/LCD/Driver_LCD.c **** /*
   5:Src/LCD/Driver_LCD.c **** void create_LCD(void)
   6:Src/LCD/Driver_LCD.c **** {
   7:Src/LCD/Driver_LCD.c **** 
   8:Src/LCD/Driver_LCD.c **** }
   9:Src/LCD/Driver_LCD.c **** */
  10:Src/LCD/Driver_LCD.c **** 
  11:Src/LCD/Driver_LCD.c **** void clear_display_LCD(void)
  12:Src/LCD/Driver_LCD.c **** {
  13:Src/LCD/Driver_LCD.c ****     int status_LCD;
  14:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
  15:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
  16:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  17:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  18:Src/LCD/Driver_LCD.c ****     E_high_LCD();
  19:Src/LCD/Driver_LCD.c ****     DB0_high_LCD();
  20:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
  21:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
  22:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
  23:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
  24:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
  25:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  26:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
  27:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  28:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  29:Src/LCD/Driver_LCD.c ****     E_low_LCD();
  30:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  31:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  32:Src/LCD/Driver_LCD.c **** }
  33:Src/LCD/Driver_LCD.c **** 
  34:Src/LCD/Driver_LCD.c **** void return_home_LCD(void)
ARM GAS  /tmp/ccMAol1x.s 			page 2


  35:Src/LCD/Driver_LCD.c **** {
  36:Src/LCD/Driver_LCD.c ****     int status_LCD;
  37:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
  38:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
  39:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  40:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  41:Src/LCD/Driver_LCD.c ****     E_high_LCD();
  42:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
  43:Src/LCD/Driver_LCD.c ****     DB1_high_LCD();
  44:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
  45:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
  46:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
  47:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
  48:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  49:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
  50:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  51:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  52:Src/LCD/Driver_LCD.c ****     E_low_LCD();
  53:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  54:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  55:Src/LCD/Driver_LCD.c **** }
  56:Src/LCD/Driver_LCD.c **** 
  57:Src/LCD/Driver_LCD.c **** void set_dataLenght_numberOfLines_fontType_LCD(void)
  58:Src/LCD/Driver_LCD.c **** {
  59:Src/LCD/Driver_LCD.c ****     int status_LCD;
  60:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
  61:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
  62:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  63:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  64:Src/LCD/Driver_LCD.c ****     E_high_LCD();
  65:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
  66:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
  67:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
  68:Src/LCD/Driver_LCD.c ****     DB3_high_LCD();
  69:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
  70:Src/LCD/Driver_LCD.c ****     DB5_high_LCD();
  71:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  72:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
  73:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  74:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  75:Src/LCD/Driver_LCD.c ****     E_low_LCD();
  76:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  77:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  78:Src/LCD/Driver_LCD.c **** }
  79:Src/LCD/Driver_LCD.c **** 
  80:Src/LCD/Driver_LCD.c **** void set_do_not_display_cursor_LCD(void)
  81:Src/LCD/Driver_LCD.c **** {
  82:Src/LCD/Driver_LCD.c ****     int status_LCD;
  83:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
  84:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
  85:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  86:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  87:Src/LCD/Driver_LCD.c ****     E_high_LCD();
  88:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
  89:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
  90:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
  91:Src/LCD/Driver_LCD.c ****     DB3_high_LCD();
ARM GAS  /tmp/ccMAol1x.s 			page 3


  92:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
  93:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
  94:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  95:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
  96:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
  97:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
  98:Src/LCD/Driver_LCD.c ****     E_low_LCD();
  99:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 100:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 101:Src/LCD/Driver_LCD.c **** }
 102:Src/LCD/Driver_LCD.c **** 
 103:Src/LCD/Driver_LCD.c **** void set_cursor_moving_to_the_right_LCD(void)
 104:Src/LCD/Driver_LCD.c **** {
 105:Src/LCD/Driver_LCD.c ****     int status_LCD;
 106:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
 107:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 108:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 109:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 110:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 111:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 112:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 113:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
 114:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 115:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
 116:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 117:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 118:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 119:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 120:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 121:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 122:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 123:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 124:Src/LCD/Driver_LCD.c **** }
 125:Src/LCD/Driver_LCD.c **** 
 126:Src/LCD/Driver_LCD.c **** static void first_line_DDRAM_address(void)
 127:Src/LCD/Driver_LCD.c **** {
  25              		.loc 1 127 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08B5     		push	{r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
 128:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
  34              		.loc 1 128 0
  35 0002 FFF7FEFF 		bl	DB0_low_LCD
  36              	.LVL0:
 129:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
  37              		.loc 1 129 0
  38 0006 FFF7FEFF 		bl	DB1_low_LCD
  39              	.LVL1:
 130:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
  40              		.loc 1 130 0
  41 000a FFF7FEFF 		bl	DB2_low_LCD
  42              	.LVL2:
ARM GAS  /tmp/ccMAol1x.s 			page 4


 131:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
  43              		.loc 1 131 0
  44 000e FFF7FEFF 		bl	DB3_low_LCD
  45              	.LVL3:
 132:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
  46              		.loc 1 132 0
  47 0012 FFF7FEFF 		bl	DB4_low_LCD
  48              	.LVL4:
 133:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
  49              		.loc 1 133 0
  50 0016 FFF7FEFF 		bl	DB5_low_LCD
  51              	.LVL5:
 134:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  52              		.loc 1 134 0
  53 001a FFF7FEFF 		bl	DB6_low_LCD
  54              	.LVL6:
 135:Src/LCD/Driver_LCD.c ****     DB7_high_LCD();
  55              		.loc 1 135 0
  56 001e FFF7FEFF 		bl	DB7_high_LCD
  57              	.LVL7:
 136:Src/LCD/Driver_LCD.c **** }
  58              		.loc 1 136 0
  59 0022 08BD     		pop	{r3, pc}
  60              		.cfi_endproc
  61              	.LFE5:
  63              		.section	.text.third_line_DDRAM_address,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	third_line_DDRAM_address:
  71              	.LFB7:
 137:Src/LCD/Driver_LCD.c **** 
 138:Src/LCD/Driver_LCD.c **** static void second_line_DDRAM_address(void)
 139:Src/LCD/Driver_LCD.c **** {
 140:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 141:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 142:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
 143:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 144:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
 145:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 146:Src/LCD/Driver_LCD.c ****     DB6_high_LCD();
 147:Src/LCD/Driver_LCD.c ****     DB7_high_LCD();
 148:Src/LCD/Driver_LCD.c **** }
 149:Src/LCD/Driver_LCD.c **** 
 150:Src/LCD/Driver_LCD.c **** static void third_line_DDRAM_address(void)
 151:Src/LCD/Driver_LCD.c **** {
  72              		.loc 1 151 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
ARM GAS  /tmp/ccMAol1x.s 			page 5


 152:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
  81              		.loc 1 152 0
  82 0002 FFF7FEFF 		bl	DB0_low_LCD
  83              	.LVL8:
 153:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
  84              		.loc 1 153 0
  85 0006 FFF7FEFF 		bl	DB1_low_LCD
  86              	.LVL9:
 154:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
  87              		.loc 1 154 0
  88 000a FFF7FEFF 		bl	DB2_high_LCD
  89              	.LVL10:
 155:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
  90              		.loc 1 155 0
  91 000e FFF7FEFF 		bl	DB3_low_LCD
  92              	.LVL11:
 156:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
  93              		.loc 1 156 0
  94 0012 FFF7FEFF 		bl	DB4_high_LCD
  95              	.LVL12:
 157:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
  96              		.loc 1 157 0
  97 0016 FFF7FEFF 		bl	DB5_low_LCD
  98              	.LVL13:
 158:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
  99              		.loc 1 158 0
 100 001a FFF7FEFF 		bl	DB6_low_LCD
 101              	.LVL14:
 159:Src/LCD/Driver_LCD.c ****     DB7_high_LCD();
 102              		.loc 1 159 0
 103 001e FFF7FEFF 		bl	DB7_high_LCD
 104              	.LVL15:
 160:Src/LCD/Driver_LCD.c **** }
 105              		.loc 1 160 0
 106 0022 08BD     		pop	{r3, pc}
 107              		.cfi_endproc
 108              	.LFE7:
 110              		.section	.text.second_line_DDRAM_address,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	second_line_DDRAM_address:
 118              	.LFB6:
 139:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 119              		.loc 1 139 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 08B5     		push	{r3, lr}
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
 140:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 128              		.loc 1 140 0
ARM GAS  /tmp/ccMAol1x.s 			page 6


 129 0002 FFF7FEFF 		bl	DB0_low_LCD
 130              	.LVL16:
 141:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
 131              		.loc 1 141 0
 132 0006 FFF7FEFF 		bl	DB1_low_LCD
 133              	.LVL17:
 142:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 134              		.loc 1 142 0
 135 000a FFF7FEFF 		bl	DB2_low_LCD
 136              	.LVL18:
 143:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
 137              		.loc 1 143 0
 138 000e FFF7FEFF 		bl	DB3_low_LCD
 139              	.LVL19:
 144:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 140              		.loc 1 144 0
 141 0012 FFF7FEFF 		bl	DB4_low_LCD
 142              	.LVL20:
 145:Src/LCD/Driver_LCD.c ****     DB6_high_LCD();
 143              		.loc 1 145 0
 144 0016 FFF7FEFF 		bl	DB5_low_LCD
 145              	.LVL21:
 146:Src/LCD/Driver_LCD.c ****     DB7_high_LCD();
 146              		.loc 1 146 0
 147 001a FFF7FEFF 		bl	DB6_high_LCD
 148              	.LVL22:
 147:Src/LCD/Driver_LCD.c **** }
 149              		.loc 1 147 0
 150 001e FFF7FEFF 		bl	DB7_high_LCD
 151              	.LVL23:
 148:Src/LCD/Driver_LCD.c **** 
 152              		.loc 1 148 0
 153 0022 08BD     		pop	{r3, pc}
 154              		.cfi_endproc
 155              	.LFE6:
 157              		.section	.text.fourth_line_DDRAM_address,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	fourth_line_DDRAM_address:
 165              	.LFB8:
 161:Src/LCD/Driver_LCD.c **** 
 162:Src/LCD/Driver_LCD.c **** static void fourth_line_DDRAM_address(void)
 163:Src/LCD/Driver_LCD.c **** {
 166              		.loc 1 163 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 164:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 175              		.loc 1 164 0
ARM GAS  /tmp/ccMAol1x.s 			page 7


 176 0002 FFF7FEFF 		bl	DB0_low_LCD
 177              	.LVL24:
 165:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 178              		.loc 1 165 0
 179 0006 FFF7FEFF 		bl	DB1_low_LCD
 180              	.LVL25:
 166:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
 181              		.loc 1 166 0
 182 000a FFF7FEFF 		bl	DB2_high_LCD
 183              	.LVL26:
 167:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 184              		.loc 1 167 0
 185 000e FFF7FEFF 		bl	DB3_low_LCD
 186              	.LVL27:
 168:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
 187              		.loc 1 168 0
 188 0012 FFF7FEFF 		bl	DB4_high_LCD
 189              	.LVL28:
 169:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 190              		.loc 1 169 0
 191 0016 FFF7FEFF 		bl	DB5_low_LCD
 192              	.LVL29:
 170:Src/LCD/Driver_LCD.c ****     DB6_high_LCD();
 193              		.loc 1 170 0
 194 001a FFF7FEFF 		bl	DB6_high_LCD
 195              	.LVL30:
 171:Src/LCD/Driver_LCD.c ****     DB7_high_LCD();
 196              		.loc 1 171 0
 197 001e FFF7FEFF 		bl	DB7_high_LCD
 198              	.LVL31:
 172:Src/LCD/Driver_LCD.c **** }
 199              		.loc 1 172 0
 200 0022 08BD     		pop	{r3, pc}
 201              		.cfi_endproc
 202              	.LFE8:
 204              		.section	.text.char_2_data_LCD,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	char_2_data_LCD:
 212              	.LFB10:
 173:Src/LCD/Driver_LCD.c **** 
 174:Src/LCD/Driver_LCD.c **** void move_to_line_LCD(int line)
 175:Src/LCD/Driver_LCD.c **** {
 176:Src/LCD/Driver_LCD.c ****     if (line < 1)
 177:Src/LCD/Driver_LCD.c ****         return;
 178:Src/LCD/Driver_LCD.c ****     if (line > NUMBEROFLINES_LCD)
 179:Src/LCD/Driver_LCD.c ****         return;
 180:Src/LCD/Driver_LCD.c **** 
 181:Src/LCD/Driver_LCD.c ****     int status_LCD;
 182:Src/LCD/Driver_LCD.c ****     RS_low_LCD();
 183:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 184:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 185:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 186:Src/LCD/Driver_LCD.c ****     E_high_LCD();
ARM GAS  /tmp/ccMAol1x.s 			page 8


 187:Src/LCD/Driver_LCD.c ****     if (line == 1) first_line_DDRAM_address();
 188:Src/LCD/Driver_LCD.c ****     if (line == 2) second_line_DDRAM_address();
 189:Src/LCD/Driver_LCD.c ****     if (line == 3) third_line_DDRAM_address();
 190:Src/LCD/Driver_LCD.c ****     if (line == 4) fourth_line_DDRAM_address();
 191:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 192:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 193:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 194:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 195:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 196:Src/LCD/Driver_LCD.c **** }
 197:Src/LCD/Driver_LCD.c **** 
 198:Src/LCD/Driver_LCD.c **** 
 199:Src/LCD/Driver_LCD.c **** static void char_2_data_LCD(const char c)
 200:Src/LCD/Driver_LCD.c **** {
 213              		.loc 1 200 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL32:
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 0446     		mov	r4, r0
 201:Src/LCD/Driver_LCD.c ****     if (c>>0 & 1) DB0_high_LCD(); else DB0_low_LCD();
 224              		.loc 1 201 0
 225 0004 10F0010F 		tst	r0, #1
 226 0008 24D0     		beq	.L10
 227              		.loc 1 201 0 is_stmt 0 discriminator 1
 228 000a FFF7FEFF 		bl	DB0_high_LCD
 229              	.LVL33:
 230              	.L11:
 202:Src/LCD/Driver_LCD.c ****     if (c>>1 & 1) DB1_high_LCD(); else DB1_low_LCD();
 231              		.loc 1 202 0 is_stmt 1
 232 000e 14F0020F 		tst	r4, #2
 233 0012 22D0     		beq	.L12
 234              		.loc 1 202 0 is_stmt 0 discriminator 1
 235 0014 FFF7FEFF 		bl	DB1_high_LCD
 236              	.LVL34:
 237              	.L13:
 203:Src/LCD/Driver_LCD.c ****     if (c>>2 & 1) DB2_high_LCD(); else DB2_low_LCD();
 238              		.loc 1 203 0 is_stmt 1
 239 0018 14F0040F 		tst	r4, #4
 240 001c 20D0     		beq	.L14
 241              		.loc 1 203 0 is_stmt 0 discriminator 1
 242 001e FFF7FEFF 		bl	DB2_high_LCD
 243              	.LVL35:
 244              	.L15:
 204:Src/LCD/Driver_LCD.c ****     if (c>>3 & 1) DB3_high_LCD(); else DB3_low_LCD();
 245              		.loc 1 204 0 is_stmt 1
 246 0022 14F0080F 		tst	r4, #8
 247 0026 1ED0     		beq	.L16
 248              		.loc 1 204 0 is_stmt 0 discriminator 1
 249 0028 FFF7FEFF 		bl	DB3_high_LCD
 250              	.LVL36:
 251              	.L17:
ARM GAS  /tmp/ccMAol1x.s 			page 9


 205:Src/LCD/Driver_LCD.c ****     if (c>>4 & 1) DB4_high_LCD(); else DB4_low_LCD();
 252              		.loc 1 205 0 is_stmt 1
 253 002c 14F0100F 		tst	r4, #16
 254 0030 1CD0     		beq	.L18
 255              		.loc 1 205 0 is_stmt 0 discriminator 1
 256 0032 FFF7FEFF 		bl	DB4_high_LCD
 257              	.LVL37:
 258              	.L19:
 206:Src/LCD/Driver_LCD.c ****     if (c>>5 & 1) DB5_high_LCD(); else DB5_low_LCD();
 259              		.loc 1 206 0 is_stmt 1
 260 0036 14F0200F 		tst	r4, #32
 261 003a 1AD0     		beq	.L20
 262              		.loc 1 206 0 is_stmt 0 discriminator 1
 263 003c FFF7FEFF 		bl	DB5_high_LCD
 264              	.LVL38:
 265              	.L21:
 207:Src/LCD/Driver_LCD.c ****     if (c>>6 & 1) DB6_high_LCD(); else DB6_low_LCD();
 266              		.loc 1 207 0 is_stmt 1
 267 0040 14F0400F 		tst	r4, #64
 268 0044 18D0     		beq	.L22
 269              		.loc 1 207 0 is_stmt 0 discriminator 1
 270 0046 FFF7FEFF 		bl	DB6_high_LCD
 271              	.LVL39:
 272              	.L23:
 208:Src/LCD/Driver_LCD.c ****     if (c>>7 & 1) DB7_high_LCD(); else DB7_low_LCD();
 273              		.loc 1 208 0 is_stmt 1
 274 004a E309     		lsrs	r3, r4, #7
 275 004c 17D1     		bne	.L27
 276              		.loc 1 208 0 is_stmt 0 discriminator 2
 277 004e FFF7FEFF 		bl	DB7_low_LCD
 278              	.LVL40:
 279              	.L9:
 209:Src/LCD/Driver_LCD.c **** }
 280              		.loc 1 209 0 is_stmt 1
 281 0052 10BD     		pop	{r4, pc}
 282              	.LVL41:
 283              	.L10:
 201:Src/LCD/Driver_LCD.c ****     if (c>>1 & 1) DB1_high_LCD(); else DB1_low_LCD();
 284              		.loc 1 201 0 discriminator 2
 285 0054 FFF7FEFF 		bl	DB0_low_LCD
 286              	.LVL42:
 287 0058 D9E7     		b	.L11
 288              	.L12:
 202:Src/LCD/Driver_LCD.c ****     if (c>>2 & 1) DB2_high_LCD(); else DB2_low_LCD();
 289              		.loc 1 202 0 discriminator 2
 290 005a FFF7FEFF 		bl	DB1_low_LCD
 291              	.LVL43:
 292 005e DBE7     		b	.L13
 293              	.L14:
 203:Src/LCD/Driver_LCD.c ****     if (c>>3 & 1) DB3_high_LCD(); else DB3_low_LCD();
 294              		.loc 1 203 0 discriminator 2
 295 0060 FFF7FEFF 		bl	DB2_low_LCD
 296              	.LVL44:
 297 0064 DDE7     		b	.L15
 298              	.L16:
 204:Src/LCD/Driver_LCD.c ****     if (c>>4 & 1) DB4_high_LCD(); else DB4_low_LCD();
 299              		.loc 1 204 0 discriminator 2
ARM GAS  /tmp/ccMAol1x.s 			page 10


 300 0066 FFF7FEFF 		bl	DB3_low_LCD
 301              	.LVL45:
 302 006a DFE7     		b	.L17
 303              	.L18:
 205:Src/LCD/Driver_LCD.c ****     if (c>>5 & 1) DB5_high_LCD(); else DB5_low_LCD();
 304              		.loc 1 205 0 discriminator 2
 305 006c FFF7FEFF 		bl	DB4_low_LCD
 306              	.LVL46:
 307 0070 E1E7     		b	.L19
 308              	.L20:
 206:Src/LCD/Driver_LCD.c ****     if (c>>6 & 1) DB6_high_LCD(); else DB6_low_LCD();
 309              		.loc 1 206 0 discriminator 2
 310 0072 FFF7FEFF 		bl	DB5_low_LCD
 311              	.LVL47:
 312 0076 E3E7     		b	.L21
 313              	.L22:
 207:Src/LCD/Driver_LCD.c ****     if (c>>7 & 1) DB7_high_LCD(); else DB7_low_LCD();
 314              		.loc 1 207 0 discriminator 2
 315 0078 FFF7FEFF 		bl	DB6_low_LCD
 316              	.LVL48:
 317 007c E5E7     		b	.L23
 318              	.L27:
 208:Src/LCD/Driver_LCD.c **** }
 319              		.loc 1 208 0 discriminator 1
 320 007e FFF7FEFF 		bl	DB7_high_LCD
 321              	.LVL49:
 322 0082 E6E7     		b	.L9
 323              		.cfi_endproc
 324              	.LFE10:
 326              		.section	.text.clear_display_LCD,"ax",%progbits
 327              		.align	1
 328              		.global	clear_display_LCD
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	clear_display_LCD:
 335              	.LFB0:
  12:Src/LCD/Driver_LCD.c ****     int status_LCD;
 336              		.loc 1 12 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              	.LCFI5:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
  14:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 345              		.loc 1 14 0
 346 0002 FFF7FEFF 		bl	RS_low_LCD
 347              	.LVL50:
  15:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 348              		.loc 1 15 0
 349 0006 FFF7FEFF 		bl	RW_low_LCD
 350              	.LVL51:
  16:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
ARM GAS  /tmp/ccMAol1x.s 			page 11


 351              		.loc 1 16 0
 352 000a 0020     		movs	r0, #0
  17:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 353              		.loc 1 17 0
 354 000c 01E0     		b	.L29
 355              	.LVL52:
 356              	.L30:
  17:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 357              		.loc 1 17 0 is_stmt 0 discriminator 2
 358 000e FFF7FEFF 		bl	Ready_LCD
 359              	.LVL53:
 360              	.L29:
  17:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 361              		.loc 1 17 0 discriminator 1
 362 0012 0128     		cmp	r0, #1
 363 0014 FBD1     		bne	.L30
  18:Src/LCD/Driver_LCD.c ****     DB0_high_LCD();
 364              		.loc 1 18 0 is_stmt 1
 365 0016 FFF7FEFF 		bl	E_high_LCD
 366              	.LVL54:
  19:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 367              		.loc 1 19 0
 368 001a FFF7FEFF 		bl	DB0_high_LCD
 369              	.LVL55:
  20:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
 370              		.loc 1 20 0
 371 001e FFF7FEFF 		bl	DB1_low_LCD
 372              	.LVL56:
  21:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 373              		.loc 1 21 0
 374 0022 FFF7FEFF 		bl	DB2_low_LCD
 375              	.LVL57:
  22:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
 376              		.loc 1 22 0
 377 0026 FFF7FEFF 		bl	DB3_low_LCD
 378              	.LVL58:
  23:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 379              		.loc 1 23 0
 380 002a FFF7FEFF 		bl	DB4_low_LCD
 381              	.LVL59:
  24:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 382              		.loc 1 24 0
 383 002e FFF7FEFF 		bl	DB5_low_LCD
 384              	.LVL60:
  25:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 385              		.loc 1 25 0
 386 0032 FFF7FEFF 		bl	DB6_low_LCD
 387              	.LVL61:
  26:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 388              		.loc 1 26 0
 389 0036 FFF7FEFF 		bl	DB7_low_LCD
 390              	.LVL62:
  27:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 391              		.loc 1 27 0
 392 003a 0020     		movs	r0, #0
  28:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 393              		.loc 1 28 0
ARM GAS  /tmp/ccMAol1x.s 			page 12


 394 003c 01E0     		b	.L31
 395              	.LVL63:
 396              	.L32:
  28:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 397              		.loc 1 28 0 is_stmt 0 discriminator 2
 398 003e FFF7FEFF 		bl	Ready_LCD
 399              	.LVL64:
 400              	.L31:
  28:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 401              		.loc 1 28 0 discriminator 1
 402 0042 0128     		cmp	r0, #1
 403 0044 FBD1     		bne	.L32
  29:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 404              		.loc 1 29 0 is_stmt 1
 405 0046 FFF7FEFF 		bl	E_low_LCD
 406              	.LVL65:
  30:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 407              		.loc 1 30 0
 408 004a 0020     		movs	r0, #0
  31:Src/LCD/Driver_LCD.c **** }
 409              		.loc 1 31 0
 410 004c 01E0     		b	.L33
 411              	.LVL66:
 412              	.L34:
  31:Src/LCD/Driver_LCD.c **** }
 413              		.loc 1 31 0 is_stmt 0 discriminator 2
 414 004e FFF7FEFF 		bl	Ready_LCD
 415              	.LVL67:
 416              	.L33:
  31:Src/LCD/Driver_LCD.c **** }
 417              		.loc 1 31 0 discriminator 1
 418 0052 0128     		cmp	r0, #1
 419 0054 FBD1     		bne	.L34
  32:Src/LCD/Driver_LCD.c **** 
 420              		.loc 1 32 0 is_stmt 1
 421 0056 08BD     		pop	{r3, pc}
 422              		.cfi_endproc
 423              	.LFE0:
 425              		.section	.text.return_home_LCD,"ax",%progbits
 426              		.align	1
 427              		.global	return_home_LCD
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	return_home_LCD:
 434              	.LFB1:
  35:Src/LCD/Driver_LCD.c ****     int status_LCD;
 435              		.loc 1 35 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 08B5     		push	{r3, lr}
 440              	.LCFI6:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 3, -8
 443              		.cfi_offset 14, -4
ARM GAS  /tmp/ccMAol1x.s 			page 13


  37:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 444              		.loc 1 37 0
 445 0002 FFF7FEFF 		bl	RS_low_LCD
 446              	.LVL68:
  38:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 447              		.loc 1 38 0
 448 0006 FFF7FEFF 		bl	RW_low_LCD
 449              	.LVL69:
  39:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 450              		.loc 1 39 0
 451 000a 0020     		movs	r0, #0
  40:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 452              		.loc 1 40 0
 453 000c 01E0     		b	.L37
 454              	.LVL70:
 455              	.L38:
  40:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 456              		.loc 1 40 0 is_stmt 0 discriminator 2
 457 000e FFF7FEFF 		bl	Ready_LCD
 458              	.LVL71:
 459              	.L37:
  40:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 460              		.loc 1 40 0 discriminator 1
 461 0012 0128     		cmp	r0, #1
 462 0014 FBD1     		bne	.L38
  41:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 463              		.loc 1 41 0 is_stmt 1
 464 0016 FFF7FEFF 		bl	E_high_LCD
 465              	.LVL72:
  42:Src/LCD/Driver_LCD.c ****     DB1_high_LCD();
 466              		.loc 1 42 0
 467 001a FFF7FEFF 		bl	DB0_low_LCD
 468              	.LVL73:
  43:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
 469              		.loc 1 43 0
 470 001e FFF7FEFF 		bl	DB1_high_LCD
 471              	.LVL74:
  44:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 472              		.loc 1 44 0
 473 0022 FFF7FEFF 		bl	DB2_low_LCD
 474              	.LVL75:
  45:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
 475              		.loc 1 45 0
 476 0026 FFF7FEFF 		bl	DB3_low_LCD
 477              	.LVL76:
  46:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 478              		.loc 1 46 0
 479 002a FFF7FEFF 		bl	DB4_low_LCD
 480              	.LVL77:
  47:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 481              		.loc 1 47 0
 482 002e FFF7FEFF 		bl	DB5_low_LCD
 483              	.LVL78:
  48:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 484              		.loc 1 48 0
 485 0032 FFF7FEFF 		bl	DB6_low_LCD
 486              	.LVL79:
ARM GAS  /tmp/ccMAol1x.s 			page 14


  49:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 487              		.loc 1 49 0
 488 0036 FFF7FEFF 		bl	DB7_low_LCD
 489              	.LVL80:
  50:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 490              		.loc 1 50 0
 491 003a 0020     		movs	r0, #0
  51:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 492              		.loc 1 51 0
 493 003c 01E0     		b	.L39
 494              	.LVL81:
 495              	.L40:
  51:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 496              		.loc 1 51 0 is_stmt 0 discriminator 2
 497 003e FFF7FEFF 		bl	Ready_LCD
 498              	.LVL82:
 499              	.L39:
  51:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 500              		.loc 1 51 0 discriminator 1
 501 0042 0128     		cmp	r0, #1
 502 0044 FBD1     		bne	.L40
  52:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 503              		.loc 1 52 0 is_stmt 1
 504 0046 FFF7FEFF 		bl	E_low_LCD
 505              	.LVL83:
  53:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 506              		.loc 1 53 0
 507 004a 0020     		movs	r0, #0
  54:Src/LCD/Driver_LCD.c **** }
 508              		.loc 1 54 0
 509 004c 01E0     		b	.L41
 510              	.LVL84:
 511              	.L42:
  54:Src/LCD/Driver_LCD.c **** }
 512              		.loc 1 54 0 is_stmt 0 discriminator 2
 513 004e FFF7FEFF 		bl	Ready_LCD
 514              	.LVL85:
 515              	.L41:
  54:Src/LCD/Driver_LCD.c **** }
 516              		.loc 1 54 0 discriminator 1
 517 0052 0128     		cmp	r0, #1
 518 0054 FBD1     		bne	.L42
  55:Src/LCD/Driver_LCD.c **** 
 519              		.loc 1 55 0 is_stmt 1
 520 0056 08BD     		pop	{r3, pc}
 521              		.cfi_endproc
 522              	.LFE1:
 524              		.section	.text.set_dataLenght_numberOfLines_fontType_LCD,"ax",%progbits
 525              		.align	1
 526              		.global	set_dataLenght_numberOfLines_fontType_LCD
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu softvfp
 532              	set_dataLenght_numberOfLines_fontType_LCD:
 533              	.LFB2:
  58:Src/LCD/Driver_LCD.c ****     int status_LCD;
ARM GAS  /tmp/ccMAol1x.s 			page 15


 534              		.loc 1 58 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 08B5     		push	{r3, lr}
 539              	.LCFI7:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
 542              		.cfi_offset 14, -4
  60:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 543              		.loc 1 60 0
 544 0002 FFF7FEFF 		bl	RS_low_LCD
 545              	.LVL86:
  61:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 546              		.loc 1 61 0
 547 0006 FFF7FEFF 		bl	RW_low_LCD
 548              	.LVL87:
  62:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 549              		.loc 1 62 0
 550 000a 0020     		movs	r0, #0
  63:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 551              		.loc 1 63 0
 552 000c 01E0     		b	.L45
 553              	.LVL88:
 554              	.L46:
  63:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 555              		.loc 1 63 0 is_stmt 0 discriminator 2
 556 000e FFF7FEFF 		bl	Ready_LCD
 557              	.LVL89:
 558              	.L45:
  63:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 559              		.loc 1 63 0 discriminator 1
 560 0012 0128     		cmp	r0, #1
 561 0014 FBD1     		bne	.L46
  64:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 562              		.loc 1 64 0 is_stmt 1
 563 0016 FFF7FEFF 		bl	E_high_LCD
 564              	.LVL90:
  65:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 565              		.loc 1 65 0
 566 001a FFF7FEFF 		bl	DB0_low_LCD
 567              	.LVL91:
  66:Src/LCD/Driver_LCD.c ****     DB2_low_LCD();
 568              		.loc 1 66 0
 569 001e FFF7FEFF 		bl	DB1_low_LCD
 570              	.LVL92:
  67:Src/LCD/Driver_LCD.c ****     DB3_high_LCD();
 571              		.loc 1 67 0
 572 0022 FFF7FEFF 		bl	DB2_low_LCD
 573              	.LVL93:
  68:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
 574              		.loc 1 68 0
 575 0026 FFF7FEFF 		bl	DB3_high_LCD
 576              	.LVL94:
  69:Src/LCD/Driver_LCD.c ****     DB5_high_LCD();
 577              		.loc 1 69 0
 578 002a FFF7FEFF 		bl	DB4_high_LCD
ARM GAS  /tmp/ccMAol1x.s 			page 16


 579              	.LVL95:
  70:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 580              		.loc 1 70 0
 581 002e FFF7FEFF 		bl	DB5_high_LCD
 582              	.LVL96:
  71:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 583              		.loc 1 71 0
 584 0032 FFF7FEFF 		bl	DB6_low_LCD
 585              	.LVL97:
  72:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 586              		.loc 1 72 0
 587 0036 FFF7FEFF 		bl	DB7_low_LCD
 588              	.LVL98:
  73:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 589              		.loc 1 73 0
 590 003a 0020     		movs	r0, #0
  74:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 591              		.loc 1 74 0
 592 003c 01E0     		b	.L47
 593              	.LVL99:
 594              	.L48:
  74:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 595              		.loc 1 74 0 is_stmt 0 discriminator 2
 596 003e FFF7FEFF 		bl	Ready_LCD
 597              	.LVL100:
 598              	.L47:
  74:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 599              		.loc 1 74 0 discriminator 1
 600 0042 0128     		cmp	r0, #1
 601 0044 FBD1     		bne	.L48
  75:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 602              		.loc 1 75 0 is_stmt 1
 603 0046 FFF7FEFF 		bl	E_low_LCD
 604              	.LVL101:
  76:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 605              		.loc 1 76 0
 606 004a 0020     		movs	r0, #0
  77:Src/LCD/Driver_LCD.c **** }
 607              		.loc 1 77 0
 608 004c 01E0     		b	.L49
 609              	.LVL102:
 610              	.L50:
  77:Src/LCD/Driver_LCD.c **** }
 611              		.loc 1 77 0 is_stmt 0 discriminator 2
 612 004e FFF7FEFF 		bl	Ready_LCD
 613              	.LVL103:
 614              	.L49:
  77:Src/LCD/Driver_LCD.c **** }
 615              		.loc 1 77 0 discriminator 1
 616 0052 0128     		cmp	r0, #1
 617 0054 FBD1     		bne	.L50
  78:Src/LCD/Driver_LCD.c **** 
 618              		.loc 1 78 0 is_stmt 1
 619 0056 08BD     		pop	{r3, pc}
 620              		.cfi_endproc
 621              	.LFE2:
 623              		.section	.text.set_do_not_display_cursor_LCD,"ax",%progbits
ARM GAS  /tmp/ccMAol1x.s 			page 17


 624              		.align	1
 625              		.global	set_do_not_display_cursor_LCD
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu softvfp
 631              	set_do_not_display_cursor_LCD:
 632              	.LFB3:
  81:Src/LCD/Driver_LCD.c ****     int status_LCD;
 633              		.loc 1 81 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637 0000 08B5     		push	{r3, lr}
 638              	.LCFI8:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
  83:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 642              		.loc 1 83 0
 643 0002 FFF7FEFF 		bl	RS_low_LCD
 644              	.LVL104:
  84:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 645              		.loc 1 84 0
 646 0006 FFF7FEFF 		bl	RW_low_LCD
 647              	.LVL105:
  85:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 648              		.loc 1 85 0
 649 000a 0020     		movs	r0, #0
  86:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 650              		.loc 1 86 0
 651 000c 01E0     		b	.L53
 652              	.LVL106:
 653              	.L54:
  86:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 654              		.loc 1 86 0 is_stmt 0 discriminator 2
 655 000e FFF7FEFF 		bl	Ready_LCD
 656              	.LVL107:
 657              	.L53:
  86:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 658              		.loc 1 86 0 discriminator 1
 659 0012 0128     		cmp	r0, #1
 660 0014 FBD1     		bne	.L54
  87:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 661              		.loc 1 87 0 is_stmt 1
 662 0016 FFF7FEFF 		bl	E_high_LCD
 663              	.LVL108:
  88:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
 664              		.loc 1 88 0
 665 001a FFF7FEFF 		bl	DB0_low_LCD
 666              	.LVL109:
  89:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
 667              		.loc 1 89 0
 668 001e FFF7FEFF 		bl	DB1_low_LCD
 669              	.LVL110:
  90:Src/LCD/Driver_LCD.c ****     DB3_high_LCD();
 670              		.loc 1 90 0
ARM GAS  /tmp/ccMAol1x.s 			page 18


 671 0022 FFF7FEFF 		bl	DB2_high_LCD
 672              	.LVL111:
  91:Src/LCD/Driver_LCD.c ****     DB4_low_LCD();
 673              		.loc 1 91 0
 674 0026 FFF7FEFF 		bl	DB3_high_LCD
 675              	.LVL112:
  92:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 676              		.loc 1 92 0
 677 002a FFF7FEFF 		bl	DB4_low_LCD
 678              	.LVL113:
  93:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 679              		.loc 1 93 0
 680 002e FFF7FEFF 		bl	DB5_low_LCD
 681              	.LVL114:
  94:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 682              		.loc 1 94 0
 683 0032 FFF7FEFF 		bl	DB6_low_LCD
 684              	.LVL115:
  95:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 685              		.loc 1 95 0
 686 0036 FFF7FEFF 		bl	DB7_low_LCD
 687              	.LVL116:
  96:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 688              		.loc 1 96 0
 689 003a 0020     		movs	r0, #0
  97:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 690              		.loc 1 97 0
 691 003c 01E0     		b	.L55
 692              	.LVL117:
 693              	.L56:
  97:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 694              		.loc 1 97 0 is_stmt 0 discriminator 2
 695 003e FFF7FEFF 		bl	Ready_LCD
 696              	.LVL118:
 697              	.L55:
  97:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 698              		.loc 1 97 0 discriminator 1
 699 0042 0128     		cmp	r0, #1
 700 0044 FBD1     		bne	.L56
  98:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 701              		.loc 1 98 0 is_stmt 1
 702 0046 FFF7FEFF 		bl	E_low_LCD
 703              	.LVL119:
  99:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 704              		.loc 1 99 0
 705 004a 0020     		movs	r0, #0
 100:Src/LCD/Driver_LCD.c **** }
 706              		.loc 1 100 0
 707 004c 01E0     		b	.L57
 708              	.LVL120:
 709              	.L58:
 100:Src/LCD/Driver_LCD.c **** }
 710              		.loc 1 100 0 is_stmt 0 discriminator 2
 711 004e FFF7FEFF 		bl	Ready_LCD
 712              	.LVL121:
 713              	.L57:
 100:Src/LCD/Driver_LCD.c **** }
ARM GAS  /tmp/ccMAol1x.s 			page 19


 714              		.loc 1 100 0 discriminator 1
 715 0052 0128     		cmp	r0, #1
 716 0054 FBD1     		bne	.L58
 101:Src/LCD/Driver_LCD.c **** 
 717              		.loc 1 101 0 is_stmt 1
 718 0056 08BD     		pop	{r3, pc}
 719              		.cfi_endproc
 720              	.LFE3:
 722              		.section	.text.set_cursor_moving_to_the_right_LCD,"ax",%progbits
 723              		.align	1
 724              		.global	set_cursor_moving_to_the_right_LCD
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	set_cursor_moving_to_the_right_LCD:
 731              	.LFB4:
 104:Src/LCD/Driver_LCD.c ****     int status_LCD;
 732              		.loc 1 104 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 08B5     		push	{r3, lr}
 737              	.LCFI9:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 3, -8
 740              		.cfi_offset 14, -4
 106:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 741              		.loc 1 106 0
 742 0002 FFF7FEFF 		bl	RS_low_LCD
 743              	.LVL122:
 107:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 744              		.loc 1 107 0
 745 0006 FFF7FEFF 		bl	RW_low_LCD
 746              	.LVL123:
 108:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 747              		.loc 1 108 0
 748 000a 0020     		movs	r0, #0
 109:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 749              		.loc 1 109 0
 750 000c 01E0     		b	.L61
 751              	.LVL124:
 752              	.L62:
 109:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 753              		.loc 1 109 0 is_stmt 0 discriminator 2
 754 000e FFF7FEFF 		bl	Ready_LCD
 755              	.LVL125:
 756              	.L61:
 109:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 757              		.loc 1 109 0 discriminator 1
 758 0012 0128     		cmp	r0, #1
 759 0014 FBD1     		bne	.L62
 110:Src/LCD/Driver_LCD.c ****     DB0_low_LCD();
 760              		.loc 1 110 0 is_stmt 1
 761 0016 FFF7FEFF 		bl	E_high_LCD
 762              	.LVL126:
 111:Src/LCD/Driver_LCD.c ****     DB1_low_LCD();
ARM GAS  /tmp/ccMAol1x.s 			page 20


 763              		.loc 1 111 0
 764 001a FFF7FEFF 		bl	DB0_low_LCD
 765              	.LVL127:
 112:Src/LCD/Driver_LCD.c ****     DB2_high_LCD();
 766              		.loc 1 112 0
 767 001e FFF7FEFF 		bl	DB1_low_LCD
 768              	.LVL128:
 113:Src/LCD/Driver_LCD.c ****     DB3_low_LCD();
 769              		.loc 1 113 0
 770 0022 FFF7FEFF 		bl	DB2_high_LCD
 771              	.LVL129:
 114:Src/LCD/Driver_LCD.c ****     DB4_high_LCD();
 772              		.loc 1 114 0
 773 0026 FFF7FEFF 		bl	DB3_low_LCD
 774              	.LVL130:
 115:Src/LCD/Driver_LCD.c ****     DB5_low_LCD();
 775              		.loc 1 115 0
 776 002a FFF7FEFF 		bl	DB4_high_LCD
 777              	.LVL131:
 116:Src/LCD/Driver_LCD.c ****     DB6_low_LCD();
 778              		.loc 1 116 0
 779 002e FFF7FEFF 		bl	DB5_low_LCD
 780              	.LVL132:
 117:Src/LCD/Driver_LCD.c ****     DB7_low_LCD();
 781              		.loc 1 117 0
 782 0032 FFF7FEFF 		bl	DB6_low_LCD
 783              	.LVL133:
 118:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 784              		.loc 1 118 0
 785 0036 FFF7FEFF 		bl	DB7_low_LCD
 786              	.LVL134:
 119:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 787              		.loc 1 119 0
 788 003a 0020     		movs	r0, #0
 120:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 789              		.loc 1 120 0
 790 003c 01E0     		b	.L63
 791              	.LVL135:
 792              	.L64:
 120:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 793              		.loc 1 120 0 is_stmt 0 discriminator 2
 794 003e FFF7FEFF 		bl	Ready_LCD
 795              	.LVL136:
 796              	.L63:
 120:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 797              		.loc 1 120 0 discriminator 1
 798 0042 0128     		cmp	r0, #1
 799 0044 FBD1     		bne	.L64
 121:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 800              		.loc 1 121 0 is_stmt 1
 801 0046 FFF7FEFF 		bl	E_low_LCD
 802              	.LVL137:
 122:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 803              		.loc 1 122 0
 804 004a 0020     		movs	r0, #0
 123:Src/LCD/Driver_LCD.c **** }
 805              		.loc 1 123 0
ARM GAS  /tmp/ccMAol1x.s 			page 21


 806 004c 01E0     		b	.L65
 807              	.LVL138:
 808              	.L66:
 123:Src/LCD/Driver_LCD.c **** }
 809              		.loc 1 123 0 is_stmt 0 discriminator 2
 810 004e FFF7FEFF 		bl	Ready_LCD
 811              	.LVL139:
 812              	.L65:
 123:Src/LCD/Driver_LCD.c **** }
 813              		.loc 1 123 0 discriminator 1
 814 0052 0128     		cmp	r0, #1
 815 0054 FBD1     		bne	.L66
 124:Src/LCD/Driver_LCD.c **** 
 816              		.loc 1 124 0 is_stmt 1
 817 0056 08BD     		pop	{r3, pc}
 818              		.cfi_endproc
 819              	.LFE4:
 821              		.section	.text.move_to_line_LCD,"ax",%progbits
 822              		.align	1
 823              		.global	move_to_line_LCD
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu softvfp
 829              	move_to_line_LCD:
 830              	.LFB9:
 175:Src/LCD/Driver_LCD.c ****     if (line < 1)
 831              		.loc 1 175 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              	.LVL140:
 836 0000 10B5     		push	{r4, lr}
 837              	.LCFI10:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 176:Src/LCD/Driver_LCD.c ****         return;
 841              		.loc 1 176 0
 842 0002 041E     		subs	r4, r0, #0
 843 0004 01DD     		ble	.L68
 178:Src/LCD/Driver_LCD.c ****         return;
 844              		.loc 1 178 0
 845 0006 042C     		cmp	r4, #4
 846 0008 00DD     		ble	.L81
 847              	.LVL141:
 848              	.L68:
 196:Src/LCD/Driver_LCD.c **** 
 849              		.loc 1 196 0
 850 000a 10BD     		pop	{r4, pc}
 851              	.LVL142:
 852              	.L81:
 182:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 853              		.loc 1 182 0
 854 000c FFF7FEFF 		bl	RS_low_LCD
 855              	.LVL143:
 183:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
ARM GAS  /tmp/ccMAol1x.s 			page 22


 856              		.loc 1 183 0
 857 0010 FFF7FEFF 		bl	RW_low_LCD
 858              	.LVL144:
 184:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 859              		.loc 1 184 0
 860 0014 0020     		movs	r0, #0
 185:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 861              		.loc 1 185 0
 862 0016 01E0     		b	.L70
 863              	.LVL145:
 864              	.L71:
 185:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 865              		.loc 1 185 0 is_stmt 0 discriminator 2
 866 0018 FFF7FEFF 		bl	Ready_LCD
 867              	.LVL146:
 868              	.L70:
 185:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 869              		.loc 1 185 0 discriminator 1
 870 001c 0128     		cmp	r0, #1
 871 001e FBD1     		bne	.L71
 186:Src/LCD/Driver_LCD.c ****     if (line == 1) first_line_DDRAM_address();
 872              		.loc 1 186 0 is_stmt 1
 873 0020 FFF7FEFF 		bl	E_high_LCD
 874              	.LVL147:
 187:Src/LCD/Driver_LCD.c ****     if (line == 2) second_line_DDRAM_address();
 875              		.loc 1 187 0
 876 0024 012C     		cmp	r4, #1
 877 0026 07D0     		beq	.L82
 878              	.L72:
 188:Src/LCD/Driver_LCD.c ****     if (line == 3) third_line_DDRAM_address();
 879              		.loc 1 188 0
 880 0028 022C     		cmp	r4, #2
 881 002a 08D0     		beq	.L83
 882              	.L73:
 189:Src/LCD/Driver_LCD.c ****     if (line == 4) fourth_line_DDRAM_address();
 883              		.loc 1 189 0
 884 002c 032C     		cmp	r4, #3
 885 002e 09D0     		beq	.L84
 886              	.L74:
 190:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 887              		.loc 1 190 0
 888 0030 042C     		cmp	r4, #4
 889 0032 0AD0     		beq	.L85
 890              	.L75:
 184:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 891              		.loc 1 184 0 discriminator 1
 892 0034 0020     		movs	r0, #0
 893 0036 0DE0     		b	.L76
 894              	.L82:
 187:Src/LCD/Driver_LCD.c ****     if (line == 2) second_line_DDRAM_address();
 895              		.loc 1 187 0 discriminator 1
 896 0038 FFF7FEFF 		bl	first_line_DDRAM_address
 897              	.LVL148:
 898 003c F4E7     		b	.L72
 899              	.L83:
 188:Src/LCD/Driver_LCD.c ****     if (line == 3) third_line_DDRAM_address();
 900              		.loc 1 188 0 discriminator 1
ARM GAS  /tmp/ccMAol1x.s 			page 23


 901 003e FFF7FEFF 		bl	second_line_DDRAM_address
 902              	.LVL149:
 903 0042 F3E7     		b	.L73
 904              	.L84:
 189:Src/LCD/Driver_LCD.c ****     if (line == 4) fourth_line_DDRAM_address();
 905              		.loc 1 189 0 discriminator 1
 906 0044 FFF7FEFF 		bl	third_line_DDRAM_address
 907              	.LVL150:
 908 0048 F2E7     		b	.L74
 909              	.L85:
 190:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 910              		.loc 1 190 0 discriminator 1
 911 004a FFF7FEFF 		bl	fourth_line_DDRAM_address
 912              	.LVL151:
 913 004e F1E7     		b	.L75
 914              	.LVL152:
 915              	.L77:
 192:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 916              		.loc 1 192 0 discriminator 2
 917 0050 FFF7FEFF 		bl	Ready_LCD
 918              	.LVL153:
 919              	.L76:
 192:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 920              		.loc 1 192 0 is_stmt 0 discriminator 1
 921 0054 0128     		cmp	r0, #1
 922 0056 FBD1     		bne	.L77
 193:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 923              		.loc 1 193 0 is_stmt 1
 924 0058 FFF7FEFF 		bl	E_low_LCD
 925              	.LVL154:
 194:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 926              		.loc 1 194 0
 927 005c 0020     		movs	r0, #0
 195:Src/LCD/Driver_LCD.c **** }
 928              		.loc 1 195 0
 929 005e 01E0     		b	.L78
 930              	.LVL155:
 931              	.L79:
 195:Src/LCD/Driver_LCD.c **** }
 932              		.loc 1 195 0 is_stmt 0 discriminator 2
 933 0060 FFF7FEFF 		bl	Ready_LCD
 934              	.LVL156:
 935              	.L78:
 195:Src/LCD/Driver_LCD.c **** }
 936              		.loc 1 195 0 discriminator 1
 937 0064 0128     		cmp	r0, #1
 938 0066 FBD1     		bne	.L79
 939 0068 CFE7     		b	.L68
 940              		.cfi_endproc
 941              	.LFE9:
 943              		.section	.text.write_character,"ax",%progbits
 944              		.align	1
 945              		.global	write_character
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu softvfp
ARM GAS  /tmp/ccMAol1x.s 			page 24


 951              	write_character:
 952              	.LFB11:
 210:Src/LCD/Driver_LCD.c **** 
 211:Src/LCD/Driver_LCD.c **** void write_character(const char c)
 212:Src/LCD/Driver_LCD.c **** {
 953              		.loc 1 212 0 is_stmt 1
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL157:
 958 0000 10B5     		push	{r4, lr}
 959              	.LCFI11:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 4, -8
 962              		.cfi_offset 14, -4
 963 0002 0446     		mov	r4, r0
 213:Src/LCD/Driver_LCD.c ****     int status_LCD;
 214:Src/LCD/Driver_LCD.c ****     RS_high_LCD();
 964              		.loc 1 214 0
 965 0004 FFF7FEFF 		bl	RS_high_LCD
 966              	.LVL158:
 215:Src/LCD/Driver_LCD.c ****     RW_low_LCD();
 967              		.loc 1 215 0
 968 0008 FFF7FEFF 		bl	RW_low_LCD
 969              	.LVL159:
 216:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 970              		.loc 1 216 0
 971 000c 0020     		movs	r0, #0
 217:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 972              		.loc 1 217 0
 973 000e 01E0     		b	.L87
 974              	.LVL160:
 975              	.L88:
 976              		.loc 1 217 0 is_stmt 0 discriminator 2
 977 0010 FFF7FEFF 		bl	Ready_LCD
 978              	.LVL161:
 979              	.L87:
 980              		.loc 1 217 0 discriminator 1
 981 0014 0128     		cmp	r0, #1
 982 0016 FBD1     		bne	.L88
 218:Src/LCD/Driver_LCD.c ****     E_high_LCD();
 983              		.loc 1 218 0 is_stmt 1
 984 0018 FFF7FEFF 		bl	E_high_LCD
 985              	.LVL162:
 219:Src/LCD/Driver_LCD.c ****     char_2_data_LCD(c);
 986              		.loc 1 219 0
 987 001c 2046     		mov	r0, r4
 988 001e FFF7FEFF 		bl	char_2_data_LCD
 989              	.LVL163:
 220:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 990              		.loc 1 220 0
 991 0022 0020     		movs	r0, #0
 221:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 992              		.loc 1 221 0
 993 0024 01E0     		b	.L89
 994              	.LVL164:
 995              	.L90:
ARM GAS  /tmp/ccMAol1x.s 			page 25


 996              		.loc 1 221 0 is_stmt 0 discriminator 2
 997 0026 FFF7FEFF 		bl	Ready_LCD
 998              	.LVL165:
 999              	.L89:
 1000              		.loc 1 221 0 discriminator 1
 1001 002a 0128     		cmp	r0, #1
 1002 002c FBD1     		bne	.L90
 222:Src/LCD/Driver_LCD.c ****     E_low_LCD();
 1003              		.loc 1 222 0 is_stmt 1
 1004 002e FFF7FEFF 		bl	E_low_LCD
 1005              	.LVL166:
 223:Src/LCD/Driver_LCD.c ****     status_LCD = NOT_READY_LCD;
 1006              		.loc 1 223 0
 1007 0032 0020     		movs	r0, #0
 224:Src/LCD/Driver_LCD.c ****     while (status_LCD != READY_LCD) { status_LCD = Ready_LCD();}
 1008              		.loc 1 224 0
 1009 0034 01E0     		b	.L91
 1010              	.LVL167:
 1011              	.L92:
 1012              		.loc 1 224 0 is_stmt 0 discriminator 2
 1013 0036 FFF7FEFF 		bl	Ready_LCD
 1014              	.LVL168:
 1015              	.L91:
 1016              		.loc 1 224 0 discriminator 1
 1017 003a 0128     		cmp	r0, #1
 1018 003c FBD1     		bne	.L92
 225:Src/LCD/Driver_LCD.c **** }
 1019              		.loc 1 225 0 is_stmt 1
 1020 003e 10BD     		pop	{r4, pc}
 1021              		.cfi_endproc
 1022              	.LFE11:
 1024              		.text
 1025              	.Letext0:
 1026              		.file 2 "Inc/LCD/Driver_LCD.h"
ARM GAS  /tmp/ccMAol1x.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Driver_LCD.c
     /tmp/ccMAol1x.s:16     .text.first_line_DDRAM_address:0000000000000000 $t
     /tmp/ccMAol1x.s:22     .text.first_line_DDRAM_address:0000000000000000 first_line_DDRAM_address
     /tmp/ccMAol1x.s:64     .text.third_line_DDRAM_address:0000000000000000 $t
     /tmp/ccMAol1x.s:70     .text.third_line_DDRAM_address:0000000000000000 third_line_DDRAM_address
     /tmp/ccMAol1x.s:111    .text.second_line_DDRAM_address:0000000000000000 $t
     /tmp/ccMAol1x.s:117    .text.second_line_DDRAM_address:0000000000000000 second_line_DDRAM_address
     /tmp/ccMAol1x.s:158    .text.fourth_line_DDRAM_address:0000000000000000 $t
     /tmp/ccMAol1x.s:164    .text.fourth_line_DDRAM_address:0000000000000000 fourth_line_DDRAM_address
     /tmp/ccMAol1x.s:205    .text.char_2_data_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:211    .text.char_2_data_LCD:0000000000000000 char_2_data_LCD
     /tmp/ccMAol1x.s:327    .text.clear_display_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:334    .text.clear_display_LCD:0000000000000000 clear_display_LCD
     /tmp/ccMAol1x.s:426    .text.return_home_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:433    .text.return_home_LCD:0000000000000000 return_home_LCD
     /tmp/ccMAol1x.s:525    .text.set_dataLenght_numberOfLines_fontType_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:532    .text.set_dataLenght_numberOfLines_fontType_LCD:0000000000000000 set_dataLenght_numberOfLines_fontType_LCD
     /tmp/ccMAol1x.s:624    .text.set_do_not_display_cursor_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:631    .text.set_do_not_display_cursor_LCD:0000000000000000 set_do_not_display_cursor_LCD
     /tmp/ccMAol1x.s:723    .text.set_cursor_moving_to_the_right_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:730    .text.set_cursor_moving_to_the_right_LCD:0000000000000000 set_cursor_moving_to_the_right_LCD
     /tmp/ccMAol1x.s:822    .text.move_to_line_LCD:0000000000000000 $t
     /tmp/ccMAol1x.s:829    .text.move_to_line_LCD:0000000000000000 move_to_line_LCD
     /tmp/ccMAol1x.s:944    .text.write_character:0000000000000000 $t
     /tmp/ccMAol1x.s:951    .text.write_character:0000000000000000 write_character

UNDEFINED SYMBOLS
DB0_low_LCD
DB1_low_LCD
DB2_low_LCD
DB3_low_LCD
DB4_low_LCD
DB5_low_LCD
DB6_low_LCD
DB7_high_LCD
DB2_high_LCD
DB4_high_LCD
DB6_high_LCD
DB0_high_LCD
DB1_high_LCD
DB3_high_LCD
DB5_high_LCD
DB7_low_LCD
RS_low_LCD
RW_low_LCD
Ready_LCD
E_high_LCD
E_low_LCD
RS_high_LCD
