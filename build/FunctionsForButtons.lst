ARM GAS  /tmp/ccZFkTdw.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"FunctionsForButtons.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.openDirectory_Menu,"ax",%progbits
  16              		.align	1
  17              		.global	openDirectory_Menu
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	openDirectory_Menu:
  25              	.LFB85:
  26              		.file 1 "Src/Menu/FunctionsForButtons.c"
   1:Src/Menu/FunctionsForButtons.c **** #include "FunctionsForButtons.h"
   2:Src/Menu/FunctionsForButtons.c **** 
   3:Src/Menu/FunctionsForButtons.c **** #include "Constructor_Menu.h"
   4:Src/Menu/FunctionsForButtons.c **** #include "TextConverter_LCD.h"
   5:Src/Menu/FunctionsForButtons.c **** #include "State_USBdrive.h"
   6:Src/Menu/FunctionsForButtons.c **** #include "Driver_USBdrive.h"
   7:Src/Menu/FunctionsForButtons.c **** 
   8:Src/Menu/FunctionsForButtons.c **** #include "GcodeConverter_Gcode.h"
   9:Src/Menu/FunctionsForButtons.c **** #include "Descritization_Gcode.h"
  10:Src/Menu/FunctionsForButtons.c **** #include "Buffer_Gcode.h"
  11:Src/Menu/FunctionsForButtons.c **** #include "VirtualPrinters_Gcode.h"
  12:Src/Menu/FunctionsForButtons.c **** #include "Config_Gcode.h"
  13:Src/Menu/FunctionsForButtons.c **** 
  14:Src/Menu/FunctionsForButtons.c **** #include "fatfs.h"
  15:Src/Menu/FunctionsForButtons.c **** 
  16:Src/Menu/FunctionsForButtons.c **** #include "stdint.h"
  17:Src/Menu/FunctionsForButtons.c **** #include <wchar.h>
  18:Src/Menu/FunctionsForButtons.c **** #include "stdbool.h"
  19:Src/Menu/FunctionsForButtons.c **** 
  20:Src/Menu/FunctionsForButtons.c **** void simpleNavigationDown_Menu(void)
  21:Src/Menu/FunctionsForButtons.c **** {
  22:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
  23:Src/Menu/FunctionsForButtons.c ****         return;
  24:Src/Menu/FunctionsForButtons.c **** 
  25:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
  26:Src/Menu/FunctionsForButtons.c ****     {
  27:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LCD(2);
  28:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
  29:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  30:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currNam
  31:Src/Menu/FunctionsForButtons.c ****         return;
  32:Src/Menu/FunctionsForButtons.c ****     }
ARM GAS  /tmp/ccZFkTdw.s 			page 2


  33:Src/Menu/FunctionsForButtons.c **** 
  34:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
  35:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
  36:Src/Menu/FunctionsForButtons.c ****     {
  37:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
  38:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
  39:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
  40:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  41:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 4);         updateLine_TextConverter_LCD(4);    currNam
  42:Src/Menu/FunctionsForButtons.c ****         return;
  43:Src/Menu/FunctionsForButtons.c ****     }
  44:Src/Menu/FunctionsForButtons.c **** 
  45:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
  46:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LCD(2);
  47:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
  48:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  49:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
  50:Src/Menu/FunctionsForButtons.c ****     if (ThereIsNodeBelow_Menu())
  51:Src/Menu/FunctionsForButtons.c ****     {
  52:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
  53:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
  54:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
  55:Src/Menu/FunctionsForButtons.c ****         return;
  56:Src/Menu/FunctionsForButtons.c ****     }
  57:Src/Menu/FunctionsForButtons.c **** }
  58:Src/Menu/FunctionsForButtons.c **** 
  59:Src/Menu/FunctionsForButtons.c **** void simpleNavigationUp_Menu(void)
  60:Src/Menu/FunctionsForButtons.c **** {
  61:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
  62:Src/Menu/FunctionsForButtons.c ****         return;
  63:Src/Menu/FunctionsForButtons.c **** 
  64:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
  65:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
  66:Src/Menu/FunctionsForButtons.c ****     {
  67:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  68:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
  69:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
  70:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
  71:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
  72:Src/Menu/FunctionsForButtons.c ****         return;
  73:Src/Menu/FunctionsForButtons.c ****     }
  74:Src/Menu/FunctionsForButtons.c **** 
  75:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
  76:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LCD(2);
  77:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
  78:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  79:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
  80:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
  81:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
  82:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
  83:Src/Menu/FunctionsForButtons.c **** }
  84:Src/Menu/FunctionsForButtons.c **** 
  85:Src/Menu/FunctionsForButtons.c **** void simpleNavigationOk_Menu(void)
  86:Src/Menu/FunctionsForButtons.c **** {
  87:Src/Menu/FunctionsForButtons.c ****     moveRight_Menu();
  88:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getTitle_Menu(), 1);   updateLine_TextConverter_LCD(1);
  89:Src/Menu/FunctionsForButtons.c **** 
ARM GAS  /tmp/ccZFkTdw.s 			page 3


  90:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
  91:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
  92:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
  93:Src/Menu/FunctionsForButtons.c ****     {
  94:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 3);   updateLine_TextConverter_LCD(3);
  95:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
  96:Src/Menu/FunctionsForButtons.c ****         return;
  97:Src/Menu/FunctionsForButtons.c ****     }
  98:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
  99:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
 100:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 101:Src/Menu/FunctionsForButtons.c ****     {
 102:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 103:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 104:Src/Menu/FunctionsForButtons.c ****         return;
 105:Src/Menu/FunctionsForButtons.c ****     }
 106:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 107:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
 108:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 109:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 110:Src/Menu/FunctionsForButtons.c **** }
 111:Src/Menu/FunctionsForButtons.c **** 
 112:Src/Menu/FunctionsForButtons.c **** void simpleNavigationBack_Menu(void)
 113:Src/Menu/FunctionsForButtons.c **** {
 114:Src/Menu/FunctionsForButtons.c ****     moveLeft_Menu();    putLine_TextConverter_LCD(getTitle_Menu(), 1);   updateLine_TextConverter_L
 115:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 116:Src/Menu/FunctionsForButtons.c ****     {
 117:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 118:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 119:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 120:Src/Menu/FunctionsForButtons.c ****         {
 121:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 3);   updateLine_TextConverter_LCD(3);
 122:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 123:Src/Menu/FunctionsForButtons.c ****             return;
 124:Src/Menu/FunctionsForButtons.c ****         }
 125:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();    putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverte
 126:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 127:Src/Menu/FunctionsForButtons.c ****         {
 128:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 129:Src/Menu/FunctionsForButtons.c ****             return;
 130:Src/Menu/FunctionsForButtons.c ****         }
 131:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();    putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverte
 132:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();      moveUp_Menu();
 133:Src/Menu/FunctionsForButtons.c ****         return;
 134:Src/Menu/FunctionsForButtons.c ****     }
 135:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();      putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LC
 136:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 137:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 138:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 139:Src/Menu/FunctionsForButtons.c ****     {
 140:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 141:Src/Menu/FunctionsForButtons.c ****         return;
 142:Src/Menu/FunctionsForButtons.c ****     }
 143:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LC
 144:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 145:Src/Menu/FunctionsForButtons.c **** }
 146:Src/Menu/FunctionsForButtons.c **** 
ARM GAS  /tmp/ccZFkTdw.s 			page 4


 147:Src/Menu/FunctionsForButtons.c **** void printOk_Menu(void)
 148:Src/Menu/FunctionsForButtons.c **** {
 149:Src/Menu/FunctionsForButtons.c ****     if (getState_USBdrive() == NOT_READY_USBDRIVE)  return;
 150:Src/Menu/FunctionsForButtons.c ****     if (getMountedStatus() == UNMOUNTED_USBDRIVE)   mount_USBdrive();
 151:Src/Menu/FunctionsForButtons.c ****     openDirectory_USBdrive(USBHPath);
 152:Src/Menu/FunctionsForButtons.c ****     destroyRightNode_Menu();
 153:Src/Menu/FunctionsForButtons.c **** 
 154:Src/Menu/FunctionsForButtons.c ****     readItem_USBdrive();
 155:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getWideLongName_USBdrive(), 2);  updateLine_TextConverter_LCD(2);
 156:Src/Menu/FunctionsForButtons.c ****     if(getItemType_USBdrive() == ITEM_IS_EMPTY)
 157:Src/Menu/FunctionsForButtons.c ****         return;
 158:Src/Menu/FunctionsForButtons.c ****     createRightNode_Menu(L"USB drive", getWideLongName_USBdrive());
 159:Src/Menu/FunctionsForButtons.c ****     moveRight_Menu();
 160:Src/Menu/FunctionsForButtons.c **** 
 161:Src/Menu/FunctionsForButtons.c ****     setFunctionUp(&simpleNavigationUp_Menu);
 162:Src/Menu/FunctionsForButtons.c ****     setFunctionDown(&simpleNavigationDown_Menu);
 163:Src/Menu/FunctionsForButtons.c ****     setFunctionBack(&simpleNavigationBack_Menu);
 164:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_DIRECTORY) setFunctionOk(&openDirectory_Menu);
 165:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 166:Src/Menu/FunctionsForButtons.c **** 
 167:Src/Menu/FunctionsForButtons.c ****     readItem_USBdrive();
 168:Src/Menu/FunctionsForButtons.c ****     while(getItemType_USBdrive() != ITEM_IS_EMPTY)
 169:Src/Menu/FunctionsForButtons.c ****     {
 170:Src/Menu/FunctionsForButtons.c ****         createDownNode_Menu(getWideLongName_USBdrive());
 171:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 172:Src/Menu/FunctionsForButtons.c ****         setFunctionUp(&simpleNavigationUp_Menu);
 173:Src/Menu/FunctionsForButtons.c ****         setFunctionDown(&simpleNavigationDown_Menu);
 174:Src/Menu/FunctionsForButtons.c ****         setFunctionBack(&simpleNavigationBack_Menu);
 175:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_DIRECTORY) setFunctionOk(&openDirectory_Menu);
 176:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 177:Src/Menu/FunctionsForButtons.c ****         readItem_USBdrive();
 178:Src/Menu/FunctionsForButtons.c ****     }
 179:Src/Menu/FunctionsForButtons.c **** 
 180:Src/Menu/FunctionsForButtons.c ****     while( ThereIsNodeAbove_Menu() )  moveUp_Menu();
 181:Src/Menu/FunctionsForButtons.c **** 
 182:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getTitle_Menu(), 1);  updateLine_TextConverter_LCD(1);
 183:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 184:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 185:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 186:Src/Menu/FunctionsForButtons.c ****     {
 187:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 3); updateLine_TextConverter_LCD(3);
 188:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4); updateLine_TextConverter_LCD(4);
 189:Src/Menu/FunctionsForButtons.c ****         return;
 190:Src/Menu/FunctionsForButtons.c ****     }
 191:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LC
 192:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 193:Src/Menu/FunctionsForButtons.c ****     {
 194:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4); updateLine_TextConverter_LCD(4);
 195:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 196:Src/Menu/FunctionsForButtons.c ****         return;
 197:Src/Menu/FunctionsForButtons.c ****     }
 198:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LC
 199:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();      moveUp_Menu();
 200:Src/Menu/FunctionsForButtons.c **** }
 201:Src/Menu/FunctionsForButtons.c **** 
 202:Src/Menu/FunctionsForButtons.c **** 
 203:Src/Menu/FunctionsForButtons.c **** void changeFilamentOk_Menu(void) { moveRight_Menu(); }
ARM GAS  /tmp/ccZFkTdw.s 			page 5


 204:Src/Menu/FunctionsForButtons.c **** 
 205:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureOk_Menu(void) {}
 206:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureBack_Menu(void) { moveLeft_Menu(); }
 207:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureUp_Menu(void) {}
 208:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureDown_Menu(void) {}
 209:Src/Menu/FunctionsForButtons.c **** 
 210:Src/Menu/FunctionsForButtons.c **** void englishOk_Menu(void) {}
 211:Src/Menu/FunctionsForButtons.c **** void englishBack_Menu(void) { moveLeft_Menu(); }
 212:Src/Menu/FunctionsForButtons.c **** void russianOk_Menu(void) {}
 213:Src/Menu/FunctionsForButtons.c **** void russianBack_Menu(void) { moveLeft_Menu(); }
 214:Src/Menu/FunctionsForButtons.c **** 
 215:Src/Menu/FunctionsForButtons.c **** void helpOk_Menu(void) {}
 216:Src/Menu/FunctionsForButtons.c **** void helpBack_Menu(void) {}
 217:Src/Menu/FunctionsForButtons.c **** 
 218:Src/Menu/FunctionsForButtons.c **** 
 219:Src/Menu/FunctionsForButtons.c **** 
 220:Src/Menu/FunctionsForButtons.c **** 
 221:Src/Menu/FunctionsForButtons.c **** 
 222:Src/Menu/FunctionsForButtons.c **** void emptyFunction_Menu(void) {}
 223:Src/Menu/FunctionsForButtons.c **** 
 224:Src/Menu/FunctionsForButtons.c **** void openDirectory_Menu(void) {}
  27              		.loc 1 224 31 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 224 32 view .LVU1
  33              		.loc 1 224 1 is_stmt 0 view .LVU2
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE85:
  38              		.section	.text.wchar_t2TCHAR,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	wchar_t2TCHAR:
  46              	.LVL0:
  47              	.LFB90:
 225:Src/Menu/FunctionsForButtons.c **** void closeDirectory_Menu(void) {}
 226:Src/Menu/FunctionsForButtons.c **** 
 227:Src/Menu/FunctionsForButtons.c **** 
 228:Src/Menu/FunctionsForButtons.c **** static _Bool GcodeFormat()
 229:Src/Menu/FunctionsForButtons.c **** {
 230:Src/Menu/FunctionsForButtons.c ****     if(wcsstr(getName_Menu(), L".gcode\0") != NULL)
 231:Src/Menu/FunctionsForButtons.c ****         return true;
 232:Src/Menu/FunctionsForButtons.c ****     return false;
 233:Src/Menu/FunctionsForButtons.c **** }
 234:Src/Menu/FunctionsForButtons.c **** 
 235:Src/Menu/FunctionsForButtons.c **** static void wait()
 236:Src/Menu/FunctionsForButtons.c **** {
 237:Src/Menu/FunctionsForButtons.c ****     HAL_Delay(500);
 238:Src/Menu/FunctionsForButtons.c **** }
 239:Src/Menu/FunctionsForButtons.c **** 
 240:Src/Menu/FunctionsForButtons.c **** static void returnFirstLine()
 241:Src/Menu/FunctionsForButtons.c **** {
ARM GAS  /tmp/ccZFkTdw.s 			page 6


 242:Src/Menu/FunctionsForButtons.c **** 
 243:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getTitle_Menu(), 1);
 244:Src/Menu/FunctionsForButtons.c ****     updateLine_TextConverter_LCD(1);
 245:Src/Menu/FunctionsForButtons.c **** }
 246:Src/Menu/FunctionsForButtons.c **** 
 247:Src/Menu/FunctionsForButtons.c **** 
 248:Src/Menu/FunctionsForButtons.c **** static TCHAR wchar_t2TCHAR(wchar_t character)
 249:Src/Menu/FunctionsForButtons.c **** {
  48              		.loc 1 249 1 is_stmt 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
 250:Src/Menu/FunctionsForButtons.c ****     if(character == *L"а") return (TCHAR) 0xA0;
  53              		.loc 1 250 5 view .LVU4
  54              		.loc 1 250 7 is_stmt 0 view .LVU5
  55 0000 B0F5866F 		cmp	r0, #1072
  56 0004 00F04081 		beq	.L4
 251:Src/Menu/FunctionsForButtons.c ****     if(character == *L"б") return (TCHAR) 0xA1;
  57              		.loc 1 251 5 is_stmt 1 view .LVU6
  58              		.loc 1 251 7 is_stmt 0 view .LVU7
  59 0008 40F23143 		movw	r3, #1073
  60 000c 9842     		cmp	r0, r3
  61 000e 00F03D81 		beq	.L5
 252:Src/Menu/FunctionsForButtons.c ****     if(character == *L"в") return (TCHAR) 0xA2;
  62              		.loc 1 252 5 is_stmt 1 view .LVU8
  63              		.loc 1 252 7 is_stmt 0 view .LVU9
  64 0012 40F23243 		movw	r3, #1074
  65 0016 9842     		cmp	r0, r3
  66 0018 00F03A81 		beq	.L6
 253:Src/Menu/FunctionsForButtons.c ****     if(character == *L"г") return (TCHAR) 0xA3;
  67              		.loc 1 253 5 is_stmt 1 view .LVU10
  68              		.loc 1 253 7 is_stmt 0 view .LVU11
  69 001c 40F23343 		movw	r3, #1075
  70 0020 9842     		cmp	r0, r3
  71 0022 00F03781 		beq	.L7
 254:Src/Menu/FunctionsForButtons.c ****     if(character == *L"д") return (TCHAR) 0xA4;
  72              		.loc 1 254 5 is_stmt 1 view .LVU12
  73              		.loc 1 254 7 is_stmt 0 view .LVU13
  74 0026 40F23443 		movw	r3, #1076
  75 002a 9842     		cmp	r0, r3
  76 002c 00F03481 		beq	.L8
 255:Src/Menu/FunctionsForButtons.c ****     if(character == *L"е") return (TCHAR) 0xA5;
  77              		.loc 1 255 5 is_stmt 1 view .LVU14
  78              		.loc 1 255 7 is_stmt 0 view .LVU15
  79 0030 40F23543 		movw	r3, #1077
  80 0034 9842     		cmp	r0, r3
  81 0036 00F03181 		beq	.L9
 256:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ё") return (TCHAR) 0xF1;
  82              		.loc 1 256 5 is_stmt 1 view .LVU16
  83              		.loc 1 256 7 is_stmt 0 view .LVU17
  84 003a 40F25143 		movw	r3, #1105
  85 003e 9842     		cmp	r0, r3
  86 0040 00F02E81 		beq	.L10
 257:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ж") return (TCHAR) 0xA6;
  87              		.loc 1 257 5 is_stmt 1 view .LVU18
  88              		.loc 1 257 7 is_stmt 0 view .LVU19
ARM GAS  /tmp/ccZFkTdw.s 			page 7


  89 0044 40F23643 		movw	r3, #1078
  90 0048 9842     		cmp	r0, r3
  91 004a 00F02B81 		beq	.L11
 258:Src/Menu/FunctionsForButtons.c ****     if(character == *L"з") return (TCHAR) 0xA7;
  92              		.loc 1 258 5 is_stmt 1 view .LVU20
  93              		.loc 1 258 7 is_stmt 0 view .LVU21
  94 004e 40F23743 		movw	r3, #1079
  95 0052 9842     		cmp	r0, r3
  96 0054 00F02881 		beq	.L12
 259:Src/Menu/FunctionsForButtons.c ****     if(character == *L"и") return (TCHAR) 0xA8;
  97              		.loc 1 259 5 is_stmt 1 view .LVU22
  98              		.loc 1 259 7 is_stmt 0 view .LVU23
  99 0058 B0F5876F 		cmp	r0, #1080
 100 005c 00F02681 		beq	.L13
 260:Src/Menu/FunctionsForButtons.c ****     if(character == *L"й") return (TCHAR) 0xA9;
 101              		.loc 1 260 5 is_stmt 1 view .LVU24
 102              		.loc 1 260 7 is_stmt 0 view .LVU25
 103 0060 40F23943 		movw	r3, #1081
 104 0064 9842     		cmp	r0, r3
 105 0066 00F02381 		beq	.L14
 261:Src/Menu/FunctionsForButtons.c ****     if(character == *L"к") return (TCHAR) 0xAA;
 106              		.loc 1 261 5 is_stmt 1 view .LVU26
 107              		.loc 1 261 7 is_stmt 0 view .LVU27
 108 006a 40F23A43 		movw	r3, #1082
 109 006e 9842     		cmp	r0, r3
 110 0070 00F02081 		beq	.L15
 262:Src/Menu/FunctionsForButtons.c ****     if(character == *L"л") return (TCHAR) 0xAB;
 111              		.loc 1 262 5 is_stmt 1 view .LVU28
 112              		.loc 1 262 7 is_stmt 0 view .LVU29
 113 0074 40F23B43 		movw	r3, #1083
 114 0078 9842     		cmp	r0, r3
 115 007a 00F01D81 		beq	.L16
 263:Src/Menu/FunctionsForButtons.c ****     if(character == *L"м") return (TCHAR) 0xAC;
 116              		.loc 1 263 5 is_stmt 1 view .LVU30
 117              		.loc 1 263 7 is_stmt 0 view .LVU31
 118 007e 40F23C43 		movw	r3, #1084
 119 0082 9842     		cmp	r0, r3
 120 0084 00F01A81 		beq	.L17
 264:Src/Menu/FunctionsForButtons.c ****     if(character == *L"н") return (TCHAR) 0xAD;
 121              		.loc 1 264 5 is_stmt 1 view .LVU32
 122              		.loc 1 264 7 is_stmt 0 view .LVU33
 123 0088 40F23D43 		movw	r3, #1085
 124 008c 9842     		cmp	r0, r3
 125 008e 00F01781 		beq	.L18
 265:Src/Menu/FunctionsForButtons.c ****     if(character == *L"о") return (TCHAR) 0xAE;
 126              		.loc 1 265 5 is_stmt 1 view .LVU34
 127              		.loc 1 265 7 is_stmt 0 view .LVU35
 128 0092 40F23E43 		movw	r3, #1086
 129 0096 9842     		cmp	r0, r3
 130 0098 00F01481 		beq	.L19
 266:Src/Menu/FunctionsForButtons.c ****     if(character == *L"п") return (TCHAR) 0xAF;
 131              		.loc 1 266 5 is_stmt 1 view .LVU36
 132              		.loc 1 266 7 is_stmt 0 view .LVU37
 133 009c 40F23F43 		movw	r3, #1087
 134 00a0 9842     		cmp	r0, r3
 135 00a2 00F01181 		beq	.L20
 267:Src/Menu/FunctionsForButtons.c ****     if(character == *L"р") return (TCHAR) 0xE0;
ARM GAS  /tmp/ccZFkTdw.s 			page 8


 136              		.loc 1 267 5 is_stmt 1 view .LVU38
 137              		.loc 1 267 7 is_stmt 0 view .LVU39
 138 00a6 B0F5886F 		cmp	r0, #1088
 139 00aa 00F00F81 		beq	.L21
 268:Src/Menu/FunctionsForButtons.c ****     if(character == *L"с") return (TCHAR) 0xE1;
 140              		.loc 1 268 5 is_stmt 1 view .LVU40
 141              		.loc 1 268 7 is_stmt 0 view .LVU41
 142 00ae 40F24143 		movw	r3, #1089
 143 00b2 9842     		cmp	r0, r3
 144 00b4 00F00C81 		beq	.L22
 269:Src/Menu/FunctionsForButtons.c ****     if(character == *L"т") return (TCHAR) 0xE2;
 145              		.loc 1 269 5 is_stmt 1 view .LVU42
 146              		.loc 1 269 7 is_stmt 0 view .LVU43
 147 00b8 40F24243 		movw	r3, #1090
 148 00bc 9842     		cmp	r0, r3
 149 00be 00F00981 		beq	.L23
 270:Src/Menu/FunctionsForButtons.c ****     if(character == *L"у") return (TCHAR) 0xE3;
 150              		.loc 1 270 5 is_stmt 1 view .LVU44
 151              		.loc 1 270 7 is_stmt 0 view .LVU45
 152 00c2 40F24343 		movw	r3, #1091
 153 00c6 9842     		cmp	r0, r3
 154 00c8 00F00681 		beq	.L24
 271:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ф") return (TCHAR) 0xE4;
 155              		.loc 1 271 5 is_stmt 1 view .LVU46
 156              		.loc 1 271 7 is_stmt 0 view .LVU47
 157 00cc 40F24443 		movw	r3, #1092
 158 00d0 9842     		cmp	r0, r3
 159 00d2 00F00381 		beq	.L25
 272:Src/Menu/FunctionsForButtons.c ****     if(character == *L"х") return (TCHAR) 0xE5;
 160              		.loc 1 272 5 is_stmt 1 view .LVU48
 161              		.loc 1 272 7 is_stmt 0 view .LVU49
 162 00d6 40F24543 		movw	r3, #1093
 163 00da 9842     		cmp	r0, r3
 164 00dc 00F00081 		beq	.L26
 273:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ц") return (TCHAR) 0xE6;
 165              		.loc 1 273 5 is_stmt 1 view .LVU50
 166              		.loc 1 273 7 is_stmt 0 view .LVU51
 167 00e0 40F24643 		movw	r3, #1094
 168 00e4 9842     		cmp	r0, r3
 169 00e6 00F0FD80 		beq	.L27
 274:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ч") return (TCHAR) 0xE7;
 170              		.loc 1 274 5 is_stmt 1 view .LVU52
 171              		.loc 1 274 7 is_stmt 0 view .LVU53
 172 00ea 40F24743 		movw	r3, #1095
 173 00ee 9842     		cmp	r0, r3
 174 00f0 00F0FA80 		beq	.L28
 275:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ш") return (TCHAR) 0xE8;
 175              		.loc 1 275 5 is_stmt 1 view .LVU54
 176              		.loc 1 275 7 is_stmt 0 view .LVU55
 177 00f4 B0F5896F 		cmp	r0, #1096
 178 00f8 00F0F880 		beq	.L29
 276:Src/Menu/FunctionsForButtons.c ****     if(character == *L"щ") return (TCHAR) 0xE9;
 179              		.loc 1 276 5 is_stmt 1 view .LVU56
 180              		.loc 1 276 7 is_stmt 0 view .LVU57
 181 00fc 40F24943 		movw	r3, #1097
 182 0100 9842     		cmp	r0, r3
 183 0102 00F0F580 		beq	.L30
ARM GAS  /tmp/ccZFkTdw.s 			page 9


 277:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ъ") return (TCHAR) 0xEA;
 184              		.loc 1 277 5 is_stmt 1 view .LVU58
 185              		.loc 1 277 7 is_stmt 0 view .LVU59
 186 0106 40F24A43 		movw	r3, #1098
 187 010a 9842     		cmp	r0, r3
 188 010c 00F0F280 		beq	.L31
 278:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ы") return (TCHAR) 0xEB;
 189              		.loc 1 278 5 is_stmt 1 view .LVU60
 190              		.loc 1 278 7 is_stmt 0 view .LVU61
 191 0110 40F24B43 		movw	r3, #1099
 192 0114 9842     		cmp	r0, r3
 193 0116 00F0EF80 		beq	.L32
 279:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ь") return (TCHAR) 0xEC;
 194              		.loc 1 279 5 is_stmt 1 view .LVU62
 195              		.loc 1 279 7 is_stmt 0 view .LVU63
 196 011a 40F24C43 		movw	r3, #1100
 197 011e 9842     		cmp	r0, r3
 198 0120 00F0EC80 		beq	.L33
 280:Src/Menu/FunctionsForButtons.c ****     if(character == *L"э") return (TCHAR) 0xED;
 199              		.loc 1 280 5 is_stmt 1 view .LVU64
 200              		.loc 1 280 7 is_stmt 0 view .LVU65
 201 0124 40F24D43 		movw	r3, #1101
 202 0128 9842     		cmp	r0, r3
 203 012a 00F0E980 		beq	.L34
 281:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ю") return (TCHAR) 0xEE;
 204              		.loc 1 281 5 is_stmt 1 view .LVU66
 205              		.loc 1 281 7 is_stmt 0 view .LVU67
 206 012e 40F24E43 		movw	r3, #1102
 207 0132 9842     		cmp	r0, r3
 208 0134 00F0E680 		beq	.L35
 282:Src/Menu/FunctionsForButtons.c ****     if(character == *L"я") return (TCHAR) 0xEF;
 209              		.loc 1 282 5 is_stmt 1 view .LVU68
 210              		.loc 1 282 7 is_stmt 0 view .LVU69
 211 0138 40F24F43 		movw	r3, #1103
 212 013c 9842     		cmp	r0, r3
 213 013e 00F0E380 		beq	.L36
 283:Src/Menu/FunctionsForButtons.c ****     if(character == *L"А") return (TCHAR) 0x80;
 214              		.loc 1 283 5 is_stmt 1 view .LVU70
 215              		.loc 1 283 7 is_stmt 0 view .LVU71
 216 0142 B0F5826F 		cmp	r0, #1040
 217 0146 00F0E180 		beq	.L37
 284:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Б") return (TCHAR) 0x81;
 218              		.loc 1 284 5 is_stmt 1 view .LVU72
 219              		.loc 1 284 7 is_stmt 0 view .LVU73
 220 014a 40F21143 		movw	r3, #1041
 221 014e 9842     		cmp	r0, r3
 222 0150 00F0DE80 		beq	.L38
 285:Src/Menu/FunctionsForButtons.c ****     if(character == *L"В") return (TCHAR) 0x82;
 223              		.loc 1 285 5 is_stmt 1 view .LVU74
 224              		.loc 1 285 7 is_stmt 0 view .LVU75
 225 0154 40F21243 		movw	r3, #1042
 226 0158 9842     		cmp	r0, r3
 227 015a 00F0DB80 		beq	.L39
 286:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Г") return (TCHAR) 0x83;
 228              		.loc 1 286 5 is_stmt 1 view .LVU76
 229              		.loc 1 286 7 is_stmt 0 view .LVU77
 230 015e 40F21343 		movw	r3, #1043
ARM GAS  /tmp/ccZFkTdw.s 			page 10


 231 0162 9842     		cmp	r0, r3
 232 0164 00F0D880 		beq	.L40
 287:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Д") return (TCHAR) 0x84;
 233              		.loc 1 287 5 is_stmt 1 view .LVU78
 234              		.loc 1 287 7 is_stmt 0 view .LVU79
 235 0168 40F21443 		movw	r3, #1044
 236 016c 9842     		cmp	r0, r3
 237 016e 00F0D580 		beq	.L41
 288:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Е") return (TCHAR) 0x85;
 238              		.loc 1 288 5 is_stmt 1 view .LVU80
 239              		.loc 1 288 7 is_stmt 0 view .LVU81
 240 0172 40F21543 		movw	r3, #1045
 241 0176 9842     		cmp	r0, r3
 242 0178 00F0D280 		beq	.L42
 289:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ё") return (TCHAR) 0xF0;
 243              		.loc 1 289 5 is_stmt 1 view .LVU82
 244              		.loc 1 289 7 is_stmt 0 view .LVU83
 245 017c 40F20143 		movw	r3, #1025
 246 0180 9842     		cmp	r0, r3
 247 0182 00F0CF80 		beq	.L43
 290:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ж") return (TCHAR) 0x86;
 248              		.loc 1 290 5 is_stmt 1 view .LVU84
 249              		.loc 1 290 7 is_stmt 0 view .LVU85
 250 0186 40F21643 		movw	r3, #1046
 251 018a 9842     		cmp	r0, r3
 252 018c 00F0CC80 		beq	.L44
 291:Src/Menu/FunctionsForButtons.c ****     if(character == *L"З") return (TCHAR) 0x87;
 253              		.loc 1 291 5 is_stmt 1 view .LVU86
 254              		.loc 1 291 7 is_stmt 0 view .LVU87
 255 0190 40F21743 		movw	r3, #1047
 256 0194 9842     		cmp	r0, r3
 257 0196 00F0C980 		beq	.L45
 292:Src/Menu/FunctionsForButtons.c ****     if(character == *L"И") return (TCHAR) 0x88;
 258              		.loc 1 292 5 is_stmt 1 view .LVU88
 259              		.loc 1 292 7 is_stmt 0 view .LVU89
 260 019a B0F5836F 		cmp	r0, #1048
 261 019e 00F0C780 		beq	.L46
 293:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Й") return (TCHAR) 0x89;
 262              		.loc 1 293 5 is_stmt 1 view .LVU90
 263              		.loc 1 293 7 is_stmt 0 view .LVU91
 264 01a2 40F21943 		movw	r3, #1049
 265 01a6 9842     		cmp	r0, r3
 266 01a8 00F0C480 		beq	.L47
 294:Src/Menu/FunctionsForButtons.c ****     if(character == *L"К") return (TCHAR) 0x8A;
 267              		.loc 1 294 5 is_stmt 1 view .LVU92
 268              		.loc 1 294 7 is_stmt 0 view .LVU93
 269 01ac 40F21A43 		movw	r3, #1050
 270 01b0 9842     		cmp	r0, r3
 271 01b2 00F0C180 		beq	.L48
 295:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Л") return (TCHAR) 0x8B;
 272              		.loc 1 295 5 is_stmt 1 view .LVU94
 273              		.loc 1 295 7 is_stmt 0 view .LVU95
 274 01b6 40F21B43 		movw	r3, #1051
 275 01ba 9842     		cmp	r0, r3
 276 01bc 00F0BE80 		beq	.L49
 296:Src/Menu/FunctionsForButtons.c ****     if(character == *L"М") return (TCHAR) 0x8C;
 277              		.loc 1 296 5 is_stmt 1 view .LVU96
ARM GAS  /tmp/ccZFkTdw.s 			page 11


 278              		.loc 1 296 7 is_stmt 0 view .LVU97
 279 01c0 40F21C43 		movw	r3, #1052
 280 01c4 9842     		cmp	r0, r3
 281 01c6 00F0BB80 		beq	.L50
 297:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Н") return (TCHAR) 0x8D;
 282              		.loc 1 297 5 is_stmt 1 view .LVU98
 283              		.loc 1 297 7 is_stmt 0 view .LVU99
 284 01ca 40F21D43 		movw	r3, #1053
 285 01ce 9842     		cmp	r0, r3
 286 01d0 00F0B880 		beq	.L51
 298:Src/Menu/FunctionsForButtons.c ****     if(character == *L"О") return (TCHAR) 0x8E;
 287              		.loc 1 298 5 is_stmt 1 view .LVU100
 288              		.loc 1 298 7 is_stmt 0 view .LVU101
 289 01d4 40F21E43 		movw	r3, #1054
 290 01d8 9842     		cmp	r0, r3
 291 01da 00F0B580 		beq	.L52
 299:Src/Menu/FunctionsForButtons.c ****     if(character == *L"П") return (TCHAR) 0x8F;
 292              		.loc 1 299 5 is_stmt 1 view .LVU102
 293              		.loc 1 299 7 is_stmt 0 view .LVU103
 294 01de 40F21F43 		movw	r3, #1055
 295 01e2 9842     		cmp	r0, r3
 296 01e4 00F0B280 		beq	.L53
 300:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Р") return (TCHAR) 0x90;
 297              		.loc 1 300 5 is_stmt 1 view .LVU104
 298              		.loc 1 300 7 is_stmt 0 view .LVU105
 299 01e8 B0F5846F 		cmp	r0, #1056
 300 01ec 00F0B080 		beq	.L54
 301:Src/Menu/FunctionsForButtons.c ****     if(character == *L"С") return (TCHAR) 0x91;
 301              		.loc 1 301 5 is_stmt 1 view .LVU106
 302              		.loc 1 301 7 is_stmt 0 view .LVU107
 303 01f0 40F22143 		movw	r3, #1057
 304 01f4 9842     		cmp	r0, r3
 305 01f6 00F0AD80 		beq	.L55
 302:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Т") return (TCHAR) 0x92;
 306              		.loc 1 302 5 is_stmt 1 view .LVU108
 307              		.loc 1 302 7 is_stmt 0 view .LVU109
 308 01fa 40F22243 		movw	r3, #1058
 309 01fe 9842     		cmp	r0, r3
 310 0200 00F0AA80 		beq	.L56
 303:Src/Menu/FunctionsForButtons.c ****     if(character == *L"У") return (TCHAR) 0x93;
 311              		.loc 1 303 5 is_stmt 1 view .LVU110
 312              		.loc 1 303 7 is_stmt 0 view .LVU111
 313 0204 40F22343 		movw	r3, #1059
 314 0208 9842     		cmp	r0, r3
 315 020a 00F0A780 		beq	.L57
 304:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ф") return (TCHAR) 0x94;
 316              		.loc 1 304 5 is_stmt 1 view .LVU112
 317              		.loc 1 304 7 is_stmt 0 view .LVU113
 318 020e 40F22443 		movw	r3, #1060
 319 0212 9842     		cmp	r0, r3
 320 0214 00F0A480 		beq	.L58
 305:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Х") return (TCHAR) 0x95;
 321              		.loc 1 305 5 is_stmt 1 view .LVU114
 322              		.loc 1 305 7 is_stmt 0 view .LVU115
 323 0218 40F22543 		movw	r3, #1061
 324 021c 9842     		cmp	r0, r3
 325 021e 00F0A180 		beq	.L59
ARM GAS  /tmp/ccZFkTdw.s 			page 12


 306:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ц") return (TCHAR) 0x96;
 326              		.loc 1 306 5 is_stmt 1 view .LVU116
 327              		.loc 1 306 7 is_stmt 0 view .LVU117
 328 0222 40F22643 		movw	r3, #1062
 329 0226 9842     		cmp	r0, r3
 330 0228 00F09E80 		beq	.L60
 307:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ч") return (TCHAR) 0x97;
 331              		.loc 1 307 5 is_stmt 1 view .LVU118
 332              		.loc 1 307 7 is_stmt 0 view .LVU119
 333 022c 40F22743 		movw	r3, #1063
 334 0230 9842     		cmp	r0, r3
 335 0232 00F09B80 		beq	.L61
 308:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ш") return (TCHAR) 0x98;
 336              		.loc 1 308 5 is_stmt 1 view .LVU120
 337              		.loc 1 308 7 is_stmt 0 view .LVU121
 338 0236 B0F5856F 		cmp	r0, #1064
 339 023a 00F09980 		beq	.L62
 309:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Щ") return (TCHAR) 0x99;
 340              		.loc 1 309 5 is_stmt 1 view .LVU122
 341              		.loc 1 309 7 is_stmt 0 view .LVU123
 342 023e 40F22943 		movw	r3, #1065
 343 0242 9842     		cmp	r0, r3
 344 0244 00F09680 		beq	.L63
 310:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ъ") return (TCHAR) 0x9A;
 345              		.loc 1 310 5 is_stmt 1 view .LVU124
 346              		.loc 1 310 7 is_stmt 0 view .LVU125
 347 0248 40F22A43 		movw	r3, #1066
 348 024c 9842     		cmp	r0, r3
 349 024e 00F09380 		beq	.L64
 311:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ы") return (TCHAR) 0x9B;
 350              		.loc 1 311 5 is_stmt 1 view .LVU126
 351              		.loc 1 311 7 is_stmt 0 view .LVU127
 352 0252 40F22B43 		movw	r3, #1067
 353 0256 9842     		cmp	r0, r3
 354 0258 00F09080 		beq	.L65
 312:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ь") return (TCHAR) 0x9C;
 355              		.loc 1 312 5 is_stmt 1 view .LVU128
 356              		.loc 1 312 7 is_stmt 0 view .LVU129
 357 025c 40F22C43 		movw	r3, #1068
 358 0260 9842     		cmp	r0, r3
 359 0262 00F08D80 		beq	.L66
 313:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Э") return (TCHAR) 0x9D;
 360              		.loc 1 313 5 is_stmt 1 view .LVU130
 361              		.loc 1 313 7 is_stmt 0 view .LVU131
 362 0266 40F22D43 		movw	r3, #1069
 363 026a 9842     		cmp	r0, r3
 364 026c 00F08A80 		beq	.L67
 314:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ю") return (TCHAR) 0x9E;
 365              		.loc 1 314 5 is_stmt 1 view .LVU132
 366              		.loc 1 314 7 is_stmt 0 view .LVU133
 367 0270 40F22E43 		movw	r3, #1070
 368 0274 9842     		cmp	r0, r3
 369 0276 00F08780 		beq	.L68
 315:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Я") return (TCHAR) 0x9F;
 370              		.loc 1 315 5 is_stmt 1 view .LVU134
 371              		.loc 1 315 7 is_stmt 0 view .LVU135
 372 027a 40F22F43 		movw	r3, #1071
ARM GAS  /tmp/ccZFkTdw.s 			page 13


 373 027e 9842     		cmp	r0, r3
 374 0280 00F08480 		beq	.L69
 316:Src/Menu/FunctionsForButtons.c ****     return (TCHAR) character;
 375              		.loc 1 316 5 is_stmt 1 view .LVU136
 376              		.loc 1 316 12 is_stmt 0 view .LVU137
 377 0284 C0B2     		uxtb	r0, r0
 378              	.LVL1:
 379              		.loc 1 316 12 view .LVU138
 380 0286 7047     		bx	lr
 381              	.LVL2:
 382              	.L4:
 250:Src/Menu/FunctionsForButtons.c ****     if(character == *L"б") return (TCHAR) 0xA1;
 383              		.loc 1 250 36 view .LVU139
 384 0288 A020     		movs	r0, #160
 385              	.LVL3:
 250:Src/Menu/FunctionsForButtons.c ****     if(character == *L"б") return (TCHAR) 0xA1;
 386              		.loc 1 250 36 view .LVU140
 387 028a 7047     		bx	lr
 388              	.LVL4:
 389              	.L5:
 251:Src/Menu/FunctionsForButtons.c ****     if(character == *L"в") return (TCHAR) 0xA2;
 390              		.loc 1 251 36 view .LVU141
 391 028c A120     		movs	r0, #161
 392              	.LVL5:
 251:Src/Menu/FunctionsForButtons.c ****     if(character == *L"в") return (TCHAR) 0xA2;
 393              		.loc 1 251 36 view .LVU142
 394 028e 7047     		bx	lr
 395              	.LVL6:
 396              	.L6:
 252:Src/Menu/FunctionsForButtons.c ****     if(character == *L"г") return (TCHAR) 0xA3;
 397              		.loc 1 252 36 view .LVU143
 398 0290 A220     		movs	r0, #162
 399              	.LVL7:
 252:Src/Menu/FunctionsForButtons.c ****     if(character == *L"г") return (TCHAR) 0xA3;
 400              		.loc 1 252 36 view .LVU144
 401 0292 7047     		bx	lr
 402              	.LVL8:
 403              	.L7:
 253:Src/Menu/FunctionsForButtons.c ****     if(character == *L"д") return (TCHAR) 0xA4;
 404              		.loc 1 253 36 view .LVU145
 405 0294 A320     		movs	r0, #163
 406              	.LVL9:
 253:Src/Menu/FunctionsForButtons.c ****     if(character == *L"д") return (TCHAR) 0xA4;
 407              		.loc 1 253 36 view .LVU146
 408 0296 7047     		bx	lr
 409              	.LVL10:
 410              	.L8:
 254:Src/Menu/FunctionsForButtons.c ****     if(character == *L"е") return (TCHAR) 0xA5;
 411              		.loc 1 254 36 view .LVU147
 412 0298 A420     		movs	r0, #164
 413              	.LVL11:
 254:Src/Menu/FunctionsForButtons.c ****     if(character == *L"е") return (TCHAR) 0xA5;
 414              		.loc 1 254 36 view .LVU148
 415 029a 7047     		bx	lr
 416              	.LVL12:
 417              	.L9:
 255:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ё") return (TCHAR) 0xF1;
ARM GAS  /tmp/ccZFkTdw.s 			page 14


 418              		.loc 1 255 36 view .LVU149
 419 029c A520     		movs	r0, #165
 420              	.LVL13:
 255:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ё") return (TCHAR) 0xF1;
 421              		.loc 1 255 36 view .LVU150
 422 029e 7047     		bx	lr
 423              	.LVL14:
 424              	.L10:
 256:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ж") return (TCHAR) 0xA6;
 425              		.loc 1 256 36 view .LVU151
 426 02a0 F120     		movs	r0, #241
 427              	.LVL15:
 256:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ж") return (TCHAR) 0xA6;
 428              		.loc 1 256 36 view .LVU152
 429 02a2 7047     		bx	lr
 430              	.LVL16:
 431              	.L11:
 257:Src/Menu/FunctionsForButtons.c ****     if(character == *L"з") return (TCHAR) 0xA7;
 432              		.loc 1 257 36 view .LVU153
 433 02a4 A620     		movs	r0, #166
 434              	.LVL17:
 257:Src/Menu/FunctionsForButtons.c ****     if(character == *L"з") return (TCHAR) 0xA7;
 435              		.loc 1 257 36 view .LVU154
 436 02a6 7047     		bx	lr
 437              	.LVL18:
 438              	.L12:
 258:Src/Menu/FunctionsForButtons.c ****     if(character == *L"и") return (TCHAR) 0xA8;
 439              		.loc 1 258 36 view .LVU155
 440 02a8 A720     		movs	r0, #167
 441              	.LVL19:
 258:Src/Menu/FunctionsForButtons.c ****     if(character == *L"и") return (TCHAR) 0xA8;
 442              		.loc 1 258 36 view .LVU156
 443 02aa 7047     		bx	lr
 444              	.LVL20:
 445              	.L13:
 259:Src/Menu/FunctionsForButtons.c ****     if(character == *L"й") return (TCHAR) 0xA9;
 446              		.loc 1 259 36 view .LVU157
 447 02ac A820     		movs	r0, #168
 448              	.LVL21:
 259:Src/Menu/FunctionsForButtons.c ****     if(character == *L"й") return (TCHAR) 0xA9;
 449              		.loc 1 259 36 view .LVU158
 450 02ae 7047     		bx	lr
 451              	.LVL22:
 452              	.L14:
 260:Src/Menu/FunctionsForButtons.c ****     if(character == *L"к") return (TCHAR) 0xAA;
 453              		.loc 1 260 36 view .LVU159
 454 02b0 A920     		movs	r0, #169
 455              	.LVL23:
 260:Src/Menu/FunctionsForButtons.c ****     if(character == *L"к") return (TCHAR) 0xAA;
 456              		.loc 1 260 36 view .LVU160
 457 02b2 7047     		bx	lr
 458              	.LVL24:
 459              	.L15:
 261:Src/Menu/FunctionsForButtons.c ****     if(character == *L"л") return (TCHAR) 0xAB;
 460              		.loc 1 261 36 view .LVU161
 461 02b4 AA20     		movs	r0, #170
 462              	.LVL25:
ARM GAS  /tmp/ccZFkTdw.s 			page 15


 261:Src/Menu/FunctionsForButtons.c ****     if(character == *L"л") return (TCHAR) 0xAB;
 463              		.loc 1 261 36 view .LVU162
 464 02b6 7047     		bx	lr
 465              	.LVL26:
 466              	.L16:
 262:Src/Menu/FunctionsForButtons.c ****     if(character == *L"м") return (TCHAR) 0xAC;
 467              		.loc 1 262 36 view .LVU163
 468 02b8 AB20     		movs	r0, #171
 469              	.LVL27:
 262:Src/Menu/FunctionsForButtons.c ****     if(character == *L"м") return (TCHAR) 0xAC;
 470              		.loc 1 262 36 view .LVU164
 471 02ba 7047     		bx	lr
 472              	.LVL28:
 473              	.L17:
 263:Src/Menu/FunctionsForButtons.c ****     if(character == *L"н") return (TCHAR) 0xAD;
 474              		.loc 1 263 36 view .LVU165
 475 02bc AC20     		movs	r0, #172
 476              	.LVL29:
 263:Src/Menu/FunctionsForButtons.c ****     if(character == *L"н") return (TCHAR) 0xAD;
 477              		.loc 1 263 36 view .LVU166
 478 02be 7047     		bx	lr
 479              	.LVL30:
 480              	.L18:
 264:Src/Menu/FunctionsForButtons.c ****     if(character == *L"о") return (TCHAR) 0xAE;
 481              		.loc 1 264 36 view .LVU167
 482 02c0 AD20     		movs	r0, #173
 483              	.LVL31:
 264:Src/Menu/FunctionsForButtons.c ****     if(character == *L"о") return (TCHAR) 0xAE;
 484              		.loc 1 264 36 view .LVU168
 485 02c2 7047     		bx	lr
 486              	.LVL32:
 487              	.L19:
 265:Src/Menu/FunctionsForButtons.c ****     if(character == *L"п") return (TCHAR) 0xAF;
 488              		.loc 1 265 36 view .LVU169
 489 02c4 AE20     		movs	r0, #174
 490              	.LVL33:
 265:Src/Menu/FunctionsForButtons.c ****     if(character == *L"п") return (TCHAR) 0xAF;
 491              		.loc 1 265 36 view .LVU170
 492 02c6 7047     		bx	lr
 493              	.LVL34:
 494              	.L20:
 266:Src/Menu/FunctionsForButtons.c ****     if(character == *L"р") return (TCHAR) 0xE0;
 495              		.loc 1 266 36 view .LVU171
 496 02c8 AF20     		movs	r0, #175
 497              	.LVL35:
 266:Src/Menu/FunctionsForButtons.c ****     if(character == *L"р") return (TCHAR) 0xE0;
 498              		.loc 1 266 36 view .LVU172
 499 02ca 7047     		bx	lr
 500              	.LVL36:
 501              	.L21:
 267:Src/Menu/FunctionsForButtons.c ****     if(character == *L"с") return (TCHAR) 0xE1;
 502              		.loc 1 267 36 view .LVU173
 503 02cc E020     		movs	r0, #224
 504              	.LVL37:
 267:Src/Menu/FunctionsForButtons.c ****     if(character == *L"с") return (TCHAR) 0xE1;
 505              		.loc 1 267 36 view .LVU174
 506 02ce 7047     		bx	lr
ARM GAS  /tmp/ccZFkTdw.s 			page 16


 507              	.LVL38:
 508              	.L22:
 268:Src/Menu/FunctionsForButtons.c ****     if(character == *L"т") return (TCHAR) 0xE2;
 509              		.loc 1 268 36 view .LVU175
 510 02d0 E120     		movs	r0, #225
 511              	.LVL39:
 268:Src/Menu/FunctionsForButtons.c ****     if(character == *L"т") return (TCHAR) 0xE2;
 512              		.loc 1 268 36 view .LVU176
 513 02d2 7047     		bx	lr
 514              	.LVL40:
 515              	.L23:
 269:Src/Menu/FunctionsForButtons.c ****     if(character == *L"у") return (TCHAR) 0xE3;
 516              		.loc 1 269 36 view .LVU177
 517 02d4 E220     		movs	r0, #226
 518              	.LVL41:
 269:Src/Menu/FunctionsForButtons.c ****     if(character == *L"у") return (TCHAR) 0xE3;
 519              		.loc 1 269 36 view .LVU178
 520 02d6 7047     		bx	lr
 521              	.LVL42:
 522              	.L24:
 270:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ф") return (TCHAR) 0xE4;
 523              		.loc 1 270 36 view .LVU179
 524 02d8 E320     		movs	r0, #227
 525              	.LVL43:
 270:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ф") return (TCHAR) 0xE4;
 526              		.loc 1 270 36 view .LVU180
 527 02da 7047     		bx	lr
 528              	.LVL44:
 529              	.L25:
 271:Src/Menu/FunctionsForButtons.c ****     if(character == *L"х") return (TCHAR) 0xE5;
 530              		.loc 1 271 36 view .LVU181
 531 02dc E420     		movs	r0, #228
 532              	.LVL45:
 271:Src/Menu/FunctionsForButtons.c ****     if(character == *L"х") return (TCHAR) 0xE5;
 533              		.loc 1 271 36 view .LVU182
 534 02de 7047     		bx	lr
 535              	.LVL46:
 536              	.L26:
 272:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ц") return (TCHAR) 0xE6;
 537              		.loc 1 272 36 view .LVU183
 538 02e0 E520     		movs	r0, #229
 539              	.LVL47:
 272:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ц") return (TCHAR) 0xE6;
 540              		.loc 1 272 36 view .LVU184
 541 02e2 7047     		bx	lr
 542              	.LVL48:
 543              	.L27:
 273:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ч") return (TCHAR) 0xE7;
 544              		.loc 1 273 36 view .LVU185
 545 02e4 E620     		movs	r0, #230
 546              	.LVL49:
 273:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ч") return (TCHAR) 0xE7;
 547              		.loc 1 273 36 view .LVU186
 548 02e6 7047     		bx	lr
 549              	.LVL50:
 550              	.L28:
 274:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ш") return (TCHAR) 0xE8;
ARM GAS  /tmp/ccZFkTdw.s 			page 17


 551              		.loc 1 274 36 view .LVU187
 552 02e8 E720     		movs	r0, #231
 553              	.LVL51:
 274:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ш") return (TCHAR) 0xE8;
 554              		.loc 1 274 36 view .LVU188
 555 02ea 7047     		bx	lr
 556              	.LVL52:
 557              	.L29:
 275:Src/Menu/FunctionsForButtons.c ****     if(character == *L"щ") return (TCHAR) 0xE9;
 558              		.loc 1 275 36 view .LVU189
 559 02ec E820     		movs	r0, #232
 560              	.LVL53:
 275:Src/Menu/FunctionsForButtons.c ****     if(character == *L"щ") return (TCHAR) 0xE9;
 561              		.loc 1 275 36 view .LVU190
 562 02ee 7047     		bx	lr
 563              	.LVL54:
 564              	.L30:
 276:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ъ") return (TCHAR) 0xEA;
 565              		.loc 1 276 36 view .LVU191
 566 02f0 E920     		movs	r0, #233
 567              	.LVL55:
 276:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ъ") return (TCHAR) 0xEA;
 568              		.loc 1 276 36 view .LVU192
 569 02f2 7047     		bx	lr
 570              	.LVL56:
 571              	.L31:
 277:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ы") return (TCHAR) 0xEB;
 572              		.loc 1 277 36 view .LVU193
 573 02f4 EA20     		movs	r0, #234
 574              	.LVL57:
 277:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ы") return (TCHAR) 0xEB;
 575              		.loc 1 277 36 view .LVU194
 576 02f6 7047     		bx	lr
 577              	.LVL58:
 578              	.L32:
 278:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ь") return (TCHAR) 0xEC;
 579              		.loc 1 278 36 view .LVU195
 580 02f8 EB20     		movs	r0, #235
 581              	.LVL59:
 278:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ь") return (TCHAR) 0xEC;
 582              		.loc 1 278 36 view .LVU196
 583 02fa 7047     		bx	lr
 584              	.LVL60:
 585              	.L33:
 279:Src/Menu/FunctionsForButtons.c ****     if(character == *L"э") return (TCHAR) 0xED;
 586              		.loc 1 279 36 view .LVU197
 587 02fc EC20     		movs	r0, #236
 588              	.LVL61:
 279:Src/Menu/FunctionsForButtons.c ****     if(character == *L"э") return (TCHAR) 0xED;
 589              		.loc 1 279 36 view .LVU198
 590 02fe 7047     		bx	lr
 591              	.LVL62:
 592              	.L34:
 280:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ю") return (TCHAR) 0xEE;
 593              		.loc 1 280 36 view .LVU199
 594 0300 ED20     		movs	r0, #237
 595              	.LVL63:
ARM GAS  /tmp/ccZFkTdw.s 			page 18


 280:Src/Menu/FunctionsForButtons.c ****     if(character == *L"ю") return (TCHAR) 0xEE;
 596              		.loc 1 280 36 view .LVU200
 597 0302 7047     		bx	lr
 598              	.LVL64:
 599              	.L35:
 281:Src/Menu/FunctionsForButtons.c ****     if(character == *L"я") return (TCHAR) 0xEF;
 600              		.loc 1 281 36 view .LVU201
 601 0304 EE20     		movs	r0, #238
 602              	.LVL65:
 281:Src/Menu/FunctionsForButtons.c ****     if(character == *L"я") return (TCHAR) 0xEF;
 603              		.loc 1 281 36 view .LVU202
 604 0306 7047     		bx	lr
 605              	.LVL66:
 606              	.L36:
 282:Src/Menu/FunctionsForButtons.c ****     if(character == *L"А") return (TCHAR) 0x80;
 607              		.loc 1 282 36 view .LVU203
 608 0308 EF20     		movs	r0, #239
 609              	.LVL67:
 282:Src/Menu/FunctionsForButtons.c ****     if(character == *L"А") return (TCHAR) 0x80;
 610              		.loc 1 282 36 view .LVU204
 611 030a 7047     		bx	lr
 612              	.LVL68:
 613              	.L37:
 283:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Б") return (TCHAR) 0x81;
 614              		.loc 1 283 36 view .LVU205
 615 030c 8020     		movs	r0, #128
 616              	.LVL69:
 283:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Б") return (TCHAR) 0x81;
 617              		.loc 1 283 36 view .LVU206
 618 030e 7047     		bx	lr
 619              	.LVL70:
 620              	.L38:
 284:Src/Menu/FunctionsForButtons.c ****     if(character == *L"В") return (TCHAR) 0x82;
 621              		.loc 1 284 36 view .LVU207
 622 0310 8120     		movs	r0, #129
 623              	.LVL71:
 284:Src/Menu/FunctionsForButtons.c ****     if(character == *L"В") return (TCHAR) 0x82;
 624              		.loc 1 284 36 view .LVU208
 625 0312 7047     		bx	lr
 626              	.LVL72:
 627              	.L39:
 285:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Г") return (TCHAR) 0x83;
 628              		.loc 1 285 36 view .LVU209
 629 0314 8220     		movs	r0, #130
 630              	.LVL73:
 285:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Г") return (TCHAR) 0x83;
 631              		.loc 1 285 36 view .LVU210
 632 0316 7047     		bx	lr
 633              	.LVL74:
 634              	.L40:
 286:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Д") return (TCHAR) 0x84;
 635              		.loc 1 286 36 view .LVU211
 636 0318 8320     		movs	r0, #131
 637              	.LVL75:
 286:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Д") return (TCHAR) 0x84;
 638              		.loc 1 286 36 view .LVU212
 639 031a 7047     		bx	lr
ARM GAS  /tmp/ccZFkTdw.s 			page 19


 640              	.LVL76:
 641              	.L41:
 287:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Е") return (TCHAR) 0x85;
 642              		.loc 1 287 36 view .LVU213
 643 031c 8420     		movs	r0, #132
 644              	.LVL77:
 287:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Е") return (TCHAR) 0x85;
 645              		.loc 1 287 36 view .LVU214
 646 031e 7047     		bx	lr
 647              	.LVL78:
 648              	.L42:
 288:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ё") return (TCHAR) 0xF0;
 649              		.loc 1 288 36 view .LVU215
 650 0320 8520     		movs	r0, #133
 651              	.LVL79:
 288:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ё") return (TCHAR) 0xF0;
 652              		.loc 1 288 36 view .LVU216
 653 0322 7047     		bx	lr
 654              	.LVL80:
 655              	.L43:
 289:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ж") return (TCHAR) 0x86;
 656              		.loc 1 289 36 view .LVU217
 657 0324 F020     		movs	r0, #240
 658              	.LVL81:
 289:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ж") return (TCHAR) 0x86;
 659              		.loc 1 289 36 view .LVU218
 660 0326 7047     		bx	lr
 661              	.LVL82:
 662              	.L44:
 290:Src/Menu/FunctionsForButtons.c ****     if(character == *L"З") return (TCHAR) 0x87;
 663              		.loc 1 290 36 view .LVU219
 664 0328 8620     		movs	r0, #134
 665              	.LVL83:
 290:Src/Menu/FunctionsForButtons.c ****     if(character == *L"З") return (TCHAR) 0x87;
 666              		.loc 1 290 36 view .LVU220
 667 032a 7047     		bx	lr
 668              	.LVL84:
 669              	.L45:
 291:Src/Menu/FunctionsForButtons.c ****     if(character == *L"И") return (TCHAR) 0x88;
 670              		.loc 1 291 36 view .LVU221
 671 032c 8720     		movs	r0, #135
 672              	.LVL85:
 291:Src/Menu/FunctionsForButtons.c ****     if(character == *L"И") return (TCHAR) 0x88;
 673              		.loc 1 291 36 view .LVU222
 674 032e 7047     		bx	lr
 675              	.LVL86:
 676              	.L46:
 292:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Й") return (TCHAR) 0x89;
 677              		.loc 1 292 36 view .LVU223
 678 0330 8820     		movs	r0, #136
 679              	.LVL87:
 292:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Й") return (TCHAR) 0x89;
 680              		.loc 1 292 36 view .LVU224
 681 0332 7047     		bx	lr
 682              	.LVL88:
 683              	.L47:
 293:Src/Menu/FunctionsForButtons.c ****     if(character == *L"К") return (TCHAR) 0x8A;
ARM GAS  /tmp/ccZFkTdw.s 			page 20


 684              		.loc 1 293 36 view .LVU225
 685 0334 8920     		movs	r0, #137
 686              	.LVL89:
 293:Src/Menu/FunctionsForButtons.c ****     if(character == *L"К") return (TCHAR) 0x8A;
 687              		.loc 1 293 36 view .LVU226
 688 0336 7047     		bx	lr
 689              	.LVL90:
 690              	.L48:
 294:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Л") return (TCHAR) 0x8B;
 691              		.loc 1 294 36 view .LVU227
 692 0338 8A20     		movs	r0, #138
 693              	.LVL91:
 294:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Л") return (TCHAR) 0x8B;
 694              		.loc 1 294 36 view .LVU228
 695 033a 7047     		bx	lr
 696              	.LVL92:
 697              	.L49:
 295:Src/Menu/FunctionsForButtons.c ****     if(character == *L"М") return (TCHAR) 0x8C;
 698              		.loc 1 295 36 view .LVU229
 699 033c 8B20     		movs	r0, #139
 700              	.LVL93:
 295:Src/Menu/FunctionsForButtons.c ****     if(character == *L"М") return (TCHAR) 0x8C;
 701              		.loc 1 295 36 view .LVU230
 702 033e 7047     		bx	lr
 703              	.LVL94:
 704              	.L50:
 296:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Н") return (TCHAR) 0x8D;
 705              		.loc 1 296 36 view .LVU231
 706 0340 8C20     		movs	r0, #140
 707              	.LVL95:
 296:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Н") return (TCHAR) 0x8D;
 708              		.loc 1 296 36 view .LVU232
 709 0342 7047     		bx	lr
 710              	.LVL96:
 711              	.L51:
 297:Src/Menu/FunctionsForButtons.c ****     if(character == *L"О") return (TCHAR) 0x8E;
 712              		.loc 1 297 36 view .LVU233
 713 0344 8D20     		movs	r0, #141
 714              	.LVL97:
 297:Src/Menu/FunctionsForButtons.c ****     if(character == *L"О") return (TCHAR) 0x8E;
 715              		.loc 1 297 36 view .LVU234
 716 0346 7047     		bx	lr
 717              	.LVL98:
 718              	.L52:
 298:Src/Menu/FunctionsForButtons.c ****     if(character == *L"П") return (TCHAR) 0x8F;
 719              		.loc 1 298 36 view .LVU235
 720 0348 8E20     		movs	r0, #142
 721              	.LVL99:
 298:Src/Menu/FunctionsForButtons.c ****     if(character == *L"П") return (TCHAR) 0x8F;
 722              		.loc 1 298 36 view .LVU236
 723 034a 7047     		bx	lr
 724              	.LVL100:
 725              	.L53:
 299:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Р") return (TCHAR) 0x90;
 726              		.loc 1 299 36 view .LVU237
 727 034c 8F20     		movs	r0, #143
 728              	.LVL101:
ARM GAS  /tmp/ccZFkTdw.s 			page 21


 299:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Р") return (TCHAR) 0x90;
 729              		.loc 1 299 36 view .LVU238
 730 034e 7047     		bx	lr
 731              	.LVL102:
 732              	.L54:
 300:Src/Menu/FunctionsForButtons.c ****     if(character == *L"С") return (TCHAR) 0x91;
 733              		.loc 1 300 36 view .LVU239
 734 0350 9020     		movs	r0, #144
 735              	.LVL103:
 300:Src/Menu/FunctionsForButtons.c ****     if(character == *L"С") return (TCHAR) 0x91;
 736              		.loc 1 300 36 view .LVU240
 737 0352 7047     		bx	lr
 738              	.LVL104:
 739              	.L55:
 301:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Т") return (TCHAR) 0x92;
 740              		.loc 1 301 36 view .LVU241
 741 0354 9120     		movs	r0, #145
 742              	.LVL105:
 301:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Т") return (TCHAR) 0x92;
 743              		.loc 1 301 36 view .LVU242
 744 0356 7047     		bx	lr
 745              	.LVL106:
 746              	.L56:
 302:Src/Menu/FunctionsForButtons.c ****     if(character == *L"У") return (TCHAR) 0x93;
 747              		.loc 1 302 36 view .LVU243
 748 0358 9220     		movs	r0, #146
 749              	.LVL107:
 302:Src/Menu/FunctionsForButtons.c ****     if(character == *L"У") return (TCHAR) 0x93;
 750              		.loc 1 302 36 view .LVU244
 751 035a 7047     		bx	lr
 752              	.LVL108:
 753              	.L57:
 303:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ф") return (TCHAR) 0x94;
 754              		.loc 1 303 36 view .LVU245
 755 035c 9320     		movs	r0, #147
 756              	.LVL109:
 303:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ф") return (TCHAR) 0x94;
 757              		.loc 1 303 36 view .LVU246
 758 035e 7047     		bx	lr
 759              	.LVL110:
 760              	.L58:
 304:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Х") return (TCHAR) 0x95;
 761              		.loc 1 304 36 view .LVU247
 762 0360 9420     		movs	r0, #148
 763              	.LVL111:
 304:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Х") return (TCHAR) 0x95;
 764              		.loc 1 304 36 view .LVU248
 765 0362 7047     		bx	lr
 766              	.LVL112:
 767              	.L59:
 305:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ц") return (TCHAR) 0x96;
 768              		.loc 1 305 36 view .LVU249
 769 0364 9520     		movs	r0, #149
 770              	.LVL113:
 305:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ц") return (TCHAR) 0x96;
 771              		.loc 1 305 36 view .LVU250
 772 0366 7047     		bx	lr
ARM GAS  /tmp/ccZFkTdw.s 			page 22


 773              	.LVL114:
 774              	.L60:
 306:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ч") return (TCHAR) 0x97;
 775              		.loc 1 306 36 view .LVU251
 776 0368 9620     		movs	r0, #150
 777              	.LVL115:
 306:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ч") return (TCHAR) 0x97;
 778              		.loc 1 306 36 view .LVU252
 779 036a 7047     		bx	lr
 780              	.LVL116:
 781              	.L61:
 307:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ш") return (TCHAR) 0x98;
 782              		.loc 1 307 36 view .LVU253
 783 036c 9720     		movs	r0, #151
 784              	.LVL117:
 307:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ш") return (TCHAR) 0x98;
 785              		.loc 1 307 36 view .LVU254
 786 036e 7047     		bx	lr
 787              	.LVL118:
 788              	.L62:
 308:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Щ") return (TCHAR) 0x99;
 789              		.loc 1 308 36 view .LVU255
 790 0370 9820     		movs	r0, #152
 791              	.LVL119:
 308:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Щ") return (TCHAR) 0x99;
 792              		.loc 1 308 36 view .LVU256
 793 0372 7047     		bx	lr
 794              	.LVL120:
 795              	.L63:
 309:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ъ") return (TCHAR) 0x9A;
 796              		.loc 1 309 36 view .LVU257
 797 0374 9920     		movs	r0, #153
 798              	.LVL121:
 309:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ъ") return (TCHAR) 0x9A;
 799              		.loc 1 309 36 view .LVU258
 800 0376 7047     		bx	lr
 801              	.LVL122:
 802              	.L64:
 310:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ы") return (TCHAR) 0x9B;
 803              		.loc 1 310 36 view .LVU259
 804 0378 9A20     		movs	r0, #154
 805              	.LVL123:
 310:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ы") return (TCHAR) 0x9B;
 806              		.loc 1 310 36 view .LVU260
 807 037a 7047     		bx	lr
 808              	.LVL124:
 809              	.L65:
 311:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ь") return (TCHAR) 0x9C;
 810              		.loc 1 311 36 view .LVU261
 811 037c 9B20     		movs	r0, #155
 812              	.LVL125:
 311:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ь") return (TCHAR) 0x9C;
 813              		.loc 1 311 36 view .LVU262
 814 037e 7047     		bx	lr
 815              	.LVL126:
 816              	.L66:
 312:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Э") return (TCHAR) 0x9D;
ARM GAS  /tmp/ccZFkTdw.s 			page 23


 817              		.loc 1 312 36 view .LVU263
 818 0380 9C20     		movs	r0, #156
 819              	.LVL127:
 312:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Э") return (TCHAR) 0x9D;
 820              		.loc 1 312 36 view .LVU264
 821 0382 7047     		bx	lr
 822              	.LVL128:
 823              	.L67:
 313:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ю") return (TCHAR) 0x9E;
 824              		.loc 1 313 36 view .LVU265
 825 0384 9D20     		movs	r0, #157
 826              	.LVL129:
 313:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Ю") return (TCHAR) 0x9E;
 827              		.loc 1 313 36 view .LVU266
 828 0386 7047     		bx	lr
 829              	.LVL130:
 830              	.L68:
 314:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Я") return (TCHAR) 0x9F;
 831              		.loc 1 314 36 view .LVU267
 832 0388 9E20     		movs	r0, #158
 833              	.LVL131:
 314:Src/Menu/FunctionsForButtons.c ****     if(character == *L"Я") return (TCHAR) 0x9F;
 834              		.loc 1 314 36 view .LVU268
 835 038a 7047     		bx	lr
 836              	.LVL132:
 837              	.L69:
 315:Src/Menu/FunctionsForButtons.c ****     return (TCHAR) character;
 838              		.loc 1 315 36 view .LVU269
 839 038c 9F20     		movs	r0, #159
 840              	.LVL133:
 317:Src/Menu/FunctionsForButtons.c **** }
 841              		.loc 1 317 1 view .LVU270
 842 038e 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE90:
 846              		.section	.text.getFileNameTCHAR,"ax",%progbits
 847              		.align	1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu softvfp
 853              	getFileNameTCHAR:
 854              	.LVL134:
 855              	.LFB91:
 318:Src/Menu/FunctionsForButtons.c **** 
 319:Src/Menu/FunctionsForButtons.c **** static void getFileNameTCHAR(TCHAR* nameTCHAR)
 320:Src/Menu/FunctionsForButtons.c **** {
 856              		.loc 1 320 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		.loc 1 320 1 is_stmt 0 view .LVU272
 861 0000 70B5     		push	{r4, r5, r6, lr}
 862              	.LCFI0:
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 4, -16
 865              		.cfi_offset 5, -12
ARM GAS  /tmp/ccZFkTdw.s 			page 24


 866              		.cfi_offset 6, -8
 867              		.cfi_offset 14, -4
 868 0002 0646     		mov	r6, r0
 321:Src/Menu/FunctionsForButtons.c ****     int letterNember;
 869              		.loc 1 321 5 is_stmt 1 view .LVU273
 322:Src/Menu/FunctionsForButtons.c ****     for (letterNember = 0; letterNember < MAX_WIDE_NAME_LENGTH-1; letterNember++)
 870              		.loc 1 322 5 view .LVU274
 871              	.LVL135:
 872              		.loc 1 322 23 is_stmt 0 view .LVU275
 873 0004 0024     		movs	r4, #0
 874              	.LVL136:
 875              	.L71:
 876              		.loc 1 322 28 is_stmt 1 discriminator 1 view .LVU276
 877              		.loc 1 322 5 is_stmt 0 discriminator 1 view .LVU277
 878 0006 622C     		cmp	r4, #98
 879 0008 09DC     		bgt	.L74
 323:Src/Menu/FunctionsForButtons.c ****         nameTCHAR[letterNember] = wchar_t2TCHAR(getName_Menu()[letterNember+1]);
 880              		.loc 1 323 9 is_stmt 1 discriminator 3 view .LVU278
 881              		.loc 1 323 49 is_stmt 0 discriminator 3 view .LVU279
 882 000a FFF7FEFF 		bl	getName_Menu
 883              	.LVL137:
 884              		.loc 1 323 63 discriminator 3 view .LVU280
 885 000e 651C     		adds	r5, r4, #1
 886              		.loc 1 323 35 discriminator 3 view .LVU281
 887 0010 50F82500 		ldr	r0, [r0, r5, lsl #2]
 888 0014 FFF7FEFF 		bl	wchar_t2TCHAR
 889              	.LVL138:
 890              		.loc 1 323 33 discriminator 3 view .LVU282
 891 0018 3055     		strb	r0, [r6, r4]
 322:Src/Menu/FunctionsForButtons.c ****     for (letterNember = 0; letterNember < MAX_WIDE_NAME_LENGTH-1; letterNember++)
 892              		.loc 1 322 67 is_stmt 1 discriminator 3 view .LVU283
 322:Src/Menu/FunctionsForButtons.c ****     for (letterNember = 0; letterNember < MAX_WIDE_NAME_LENGTH-1; letterNember++)
 893              		.loc 1 322 79 is_stmt 0 discriminator 3 view .LVU284
 894 001a 2C46     		mov	r4, r5
 895              	.LVL139:
 322:Src/Menu/FunctionsForButtons.c ****     for (letterNember = 0; letterNember < MAX_WIDE_NAME_LENGTH-1; letterNember++)
 896              		.loc 1 322 79 discriminator 3 view .LVU285
 897 001c F3E7     		b	.L71
 898              	.L74:
 324:Src/Menu/FunctionsForButtons.c **** }
 899              		.loc 1 324 1 view .LVU286
 900 001e 70BD     		pop	{r4, r5, r6, pc}
 901              		.loc 1 324 1 view .LVU287
 902              		.cfi_endproc
 903              	.LFE91:
 905              		.section	.text.simpleNavigationDown_Menu,"ax",%progbits
 906              		.align	1
 907              		.global	simpleNavigationDown_Menu
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu softvfp
 913              	simpleNavigationDown_Menu:
 914              	.LFB68:
  21:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 915              		.loc 1 21 1 is_stmt 1 view -0
 916              		.cfi_startproc
ARM GAS  /tmp/ccZFkTdw.s 			page 25


 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919 0000 10B5     		push	{r4, lr}
 920              	.LCFI1:
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 4, -8
 923              		.cfi_offset 14, -4
  22:Src/Menu/FunctionsForButtons.c ****         return;
 924              		.loc 1 22 5 view .LVU289
  22:Src/Menu/FunctionsForButtons.c ****         return;
 925              		.loc 1 22 10 is_stmt 0 view .LVU290
 926 0002 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 927              	.LVL140:
  22:Src/Menu/FunctionsForButtons.c ****         return;
 928              		.loc 1 22 8 view .LVU291
 929 0006 00B9     		cbnz	r0, .L80
 930              	.L75:
  57:Src/Menu/FunctionsForButtons.c **** 
 931              		.loc 1 57 1 view .LVU292
 932 0008 10BD     		pop	{r4, pc}
 933              	.L80:
  25:Src/Menu/FunctionsForButtons.c ****     {
 934              		.loc 1 25 5 is_stmt 1 view .LVU293
  25:Src/Menu/FunctionsForButtons.c ****     {
 935              		.loc 1 25 10 is_stmt 0 view .LVU294
 936 000a FFF7FEFF 		bl	ThereIsNodeAbove_Menu
 937              	.LVL141:
  25:Src/Menu/FunctionsForButtons.c ****     {
 938              		.loc 1 25 8 view .LVU295
 939 000e 78B3     		cbz	r0, .L81
  34:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 940              		.loc 1 34 5 is_stmt 1 view .LVU296
 941 0010 FFF7FEFF 		bl	moveDown_Menu
 942              	.LVL142:
  35:Src/Menu/FunctionsForButtons.c ****     {
 943              		.loc 1 35 5 view .LVU297
  35:Src/Menu/FunctionsForButtons.c ****     {
 944              		.loc 1 35 10 is_stmt 0 view .LVU298
 945 0014 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 946              	.LVL143:
  35:Src/Menu/FunctionsForButtons.c ****     {
 947              		.loc 1 35 8 view .LVU299
 948 0018 0028     		cmp	r0, #0
 949 001a 41D0     		beq	.L82
  45:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LCD(2);
 950              		.loc 1 45 5 is_stmt 1 view .LVU300
 951 001c FFF7FEFF 		bl	moveUp_Menu
 952              	.LVL144:
  46:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 953              		.loc 1 46 5 view .LVU301
 954 0020 FFF7FEFF 		bl	getName_Menu
 955              	.LVL145:
 956 0024 0221     		movs	r1, #2
 957 0026 FFF7FEFF 		bl	putLine_TextConverter_LCD
 958              	.LVL146:
  46:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 959              		.loc 1 46 53 view .LVU302
ARM GAS  /tmp/ccZFkTdw.s 			page 26


 960 002a 0220     		movs	r0, #2
 961 002c FFF7FEFF 		bl	updateLine_TextConverter_LCD
 962              	.LVL147:
  47:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 963              		.loc 1 47 5 view .LVU303
 964 0030 FFF7FEFF 		bl	moveDown_Menu
 965              	.LVL148:
  48:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 966              		.loc 1 48 5 view .LVU304
  48:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 967              		.loc 1 48 36 is_stmt 0 view .LVU305
 968 0034 FFF7FEFF 		bl	getName_Menu
 969              	.LVL149:
 970 0038 0446     		mov	r4, r0
 971              	.LVL150:
  48:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 972              		.loc 1 48 53 is_stmt 1 view .LVU306
  48:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 973              		.loc 1 48 65 is_stmt 0 view .LVU307
 974 003a 3E23     		movs	r3, #62
 975 003c 0360     		str	r3, [r0]
  49:Src/Menu/FunctionsForButtons.c ****     if (ThereIsNodeBelow_Menu())
 976              		.loc 1 49 5 is_stmt 1 view .LVU308
 977 003e 0321     		movs	r1, #3
 978 0040 FFF7FEFF 		bl	putLine_TextConverter_LCD
 979              	.LVL151:
  49:Src/Menu/FunctionsForButtons.c ****     if (ThereIsNodeBelow_Menu())
 980              		.loc 1 49 53 view .LVU309
 981 0044 0320     		movs	r0, #3
 982 0046 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 983              	.LVL152:
  49:Src/Menu/FunctionsForButtons.c ****     if (ThereIsNodeBelow_Menu())
 984              		.loc 1 49 89 view .LVU310
  49:Src/Menu/FunctionsForButtons.c ****     if (ThereIsNodeBelow_Menu())
 985              		.loc 1 49 101 is_stmt 0 view .LVU311
 986 004a 2023     		movs	r3, #32
 987 004c 2360     		str	r3, [r4]
  50:Src/Menu/FunctionsForButtons.c ****     {
 988              		.loc 1 50 5 is_stmt 1 view .LVU312
  50:Src/Menu/FunctionsForButtons.c ****     {
 989              		.loc 1 50 9 is_stmt 0 view .LVU313
 990 004e FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 991              	.LVL153:
  50:Src/Menu/FunctionsForButtons.c ****     {
 992              		.loc 1 50 8 view .LVU314
 993 0052 0028     		cmp	r0, #0
 994 0054 D8D0     		beq	.L75
  52:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
 995              		.loc 1 52 9 is_stmt 1 view .LVU315
 996 0056 FFF7FEFF 		bl	moveDown_Menu
 997              	.LVL154:
  53:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 998              		.loc 1 53 9 view .LVU316
 999 005a FFF7FEFF 		bl	getName_Menu
 1000              	.LVL155:
 1001 005e 0421     		movs	r1, #4
 1002 0060 FFF7FEFF 		bl	putLine_TextConverter_LCD
ARM GAS  /tmp/ccZFkTdw.s 			page 27


 1003              	.LVL156:
  53:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 1004              		.loc 1 53 57 view .LVU317
 1005 0064 0420     		movs	r0, #4
 1006 0066 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1007              	.LVL157:
  54:Src/Menu/FunctionsForButtons.c ****         return;
 1008              		.loc 1 54 9 view .LVU318
 1009 006a FFF7FEFF 		bl	moveUp_Menu
 1010              	.LVL158:
  55:Src/Menu/FunctionsForButtons.c ****     }
 1011              		.loc 1 55 9 view .LVU319
 1012 006e CBE7     		b	.L75
 1013              	.LVL159:
 1014              	.L81:
 1015              	.LBB2:
  27:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1016              		.loc 1 27 9 view .LVU320
 1017 0070 FFF7FEFF 		bl	getName_Menu
 1018              	.LVL160:
 1019 0074 0221     		movs	r1, #2
 1020 0076 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1021              	.LVL161:
  27:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1022              		.loc 1 27 57 view .LVU321
 1023 007a 0220     		movs	r0, #2
 1024 007c FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1025              	.LVL162:
  28:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1026              		.loc 1 28 9 view .LVU322
 1027 0080 FFF7FEFF 		bl	moveDown_Menu
 1028              	.LVL163:
  29:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currNam
 1029              		.loc 1 29 9 view .LVU323
  29:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currNam
 1030              		.loc 1 29 40 is_stmt 0 view .LVU324
 1031 0084 FFF7FEFF 		bl	getName_Menu
 1032              	.LVL164:
 1033 0088 0446     		mov	r4, r0
 1034              	.LVL165:
  29:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currNam
 1035              		.loc 1 29 57 is_stmt 1 view .LVU325
  29:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currNam
 1036              		.loc 1 29 69 is_stmt 0 view .LVU326
 1037 008a 3E23     		movs	r3, #62
 1038 008c 0360     		str	r3, [r0]
  30:Src/Menu/FunctionsForButtons.c ****         return;
 1039              		.loc 1 30 9 is_stmt 1 view .LVU327
 1040 008e 0321     		movs	r1, #3
 1041 0090 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1042              	.LVL166:
  30:Src/Menu/FunctionsForButtons.c ****         return;
 1043              		.loc 1 30 57 view .LVU328
 1044 0094 0320     		movs	r0, #3
 1045 0096 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1046              	.LVL167:
  30:Src/Menu/FunctionsForButtons.c ****         return;
ARM GAS  /tmp/ccZFkTdw.s 			page 28


 1047              		.loc 1 30 93 view .LVU329
  30:Src/Menu/FunctionsForButtons.c ****         return;
 1048              		.loc 1 30 105 is_stmt 0 view .LVU330
 1049 009a 2023     		movs	r3, #32
 1050 009c 2360     		str	r3, [r4]
  31:Src/Menu/FunctionsForButtons.c ****     }
 1051              		.loc 1 31 9 is_stmt 1 view .LVU331
 1052 009e B3E7     		b	.L75
 1053              	.LVL168:
 1054              	.L82:
  31:Src/Menu/FunctionsForButtons.c ****     }
 1055              		.loc 1 31 9 is_stmt 0 view .LVU332
 1056              	.LBE2:
 1057              	.LBB3:
  37:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
 1058              		.loc 1 37 9 is_stmt 1 view .LVU333
 1059 00a0 FFF7FEFF 		bl	moveUp_Menu
 1060              	.LVL169:
  38:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1061              		.loc 1 38 9 view .LVU334
 1062 00a4 FFF7FEFF 		bl	getName_Menu
 1063              	.LVL170:
 1064 00a8 0321     		movs	r1, #3
 1065 00aa FFF7FEFF 		bl	putLine_TextConverter_LCD
 1066              	.LVL171:
  38:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1067              		.loc 1 38 57 view .LVU335
 1068 00ae 0320     		movs	r0, #3
 1069 00b0 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1070              	.LVL172:
  39:Src/Menu/FunctionsForButtons.c ****         wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1071              		.loc 1 39 9 view .LVU336
 1072 00b4 FFF7FEFF 		bl	moveDown_Menu
 1073              	.LVL173:
  40:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 4);         updateLine_TextConverter_LCD(4);    currNam
 1074              		.loc 1 40 9 view .LVU337
  40:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 4);         updateLine_TextConverter_LCD(4);    currNam
 1075              		.loc 1 40 40 is_stmt 0 view .LVU338
 1076 00b8 FFF7FEFF 		bl	getName_Menu
 1077              	.LVL174:
 1078 00bc 0446     		mov	r4, r0
 1079              	.LVL175:
  40:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 4);         updateLine_TextConverter_LCD(4);    currNam
 1080              		.loc 1 40 57 is_stmt 1 view .LVU339
  40:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 4);         updateLine_TextConverter_LCD(4);    currNam
 1081              		.loc 1 40 69 is_stmt 0 view .LVU340
 1082 00be 3E23     		movs	r3, #62
 1083 00c0 0360     		str	r3, [r0]
  41:Src/Menu/FunctionsForButtons.c ****         return;
 1084              		.loc 1 41 9 is_stmt 1 view .LVU341
 1085 00c2 0421     		movs	r1, #4
 1086 00c4 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1087              	.LVL176:
  41:Src/Menu/FunctionsForButtons.c ****         return;
 1088              		.loc 1 41 57 view .LVU342
 1089 00c8 0420     		movs	r0, #4
 1090 00ca FFF7FEFF 		bl	updateLine_TextConverter_LCD
ARM GAS  /tmp/ccZFkTdw.s 			page 29


 1091              	.LVL177:
  41:Src/Menu/FunctionsForButtons.c ****         return;
 1092              		.loc 1 41 93 view .LVU343
  41:Src/Menu/FunctionsForButtons.c ****         return;
 1093              		.loc 1 41 105 is_stmt 0 view .LVU344
 1094 00ce 2023     		movs	r3, #32
 1095 00d0 2360     		str	r3, [r4]
  42:Src/Menu/FunctionsForButtons.c ****     }
 1096              		.loc 1 42 9 is_stmt 1 view .LVU345
 1097 00d2 99E7     		b	.L75
 1098              	.LBE3:
 1099              		.cfi_endproc
 1100              	.LFE68:
 1102              		.section	.text.simpleNavigationUp_Menu,"ax",%progbits
 1103              		.align	1
 1104              		.global	simpleNavigationUp_Menu
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu softvfp
 1110              	simpleNavigationUp_Menu:
 1111              	.LFB69:
  60:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 1112              		.loc 1 60 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116 0000 10B5     		push	{r4, lr}
 1117              	.LCFI2:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 4, -8
 1120              		.cfi_offset 14, -4
  61:Src/Menu/FunctionsForButtons.c ****         return;
 1121              		.loc 1 61 5 view .LVU347
  61:Src/Menu/FunctionsForButtons.c ****         return;
 1122              		.loc 1 61 10 is_stmt 0 view .LVU348
 1123 0002 FFF7FEFF 		bl	ThereIsNodeAbove_Menu
 1124              	.LVL178:
  61:Src/Menu/FunctionsForButtons.c ****         return;
 1125              		.loc 1 61 8 view .LVU349
 1126 0006 00B9     		cbnz	r0, .L87
 1127              	.L83:
  83:Src/Menu/FunctionsForButtons.c **** 
 1128              		.loc 1 83 1 view .LVU350
 1129 0008 10BD     		pop	{r4, pc}
 1130              	.L87:
  64:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 1131              		.loc 1 64 5 is_stmt 1 view .LVU351
 1132 000a FFF7FEFF 		bl	moveUp_Menu
 1133              	.LVL179:
  65:Src/Menu/FunctionsForButtons.c ****     {
 1134              		.loc 1 65 5 view .LVU352
  65:Src/Menu/FunctionsForButtons.c ****     {
 1135              		.loc 1 65 10 is_stmt 0 view .LVU353
 1136 000e FFF7FEFF 		bl	ThereIsNodeAbove_Menu
 1137              	.LVL180:
  65:Src/Menu/FunctionsForButtons.c ****     {
ARM GAS  /tmp/ccZFkTdw.s 			page 30


 1138              		.loc 1 65 8 view .LVU354
 1139 0012 28B3     		cbz	r0, .L88
  75:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 2);   updateLine_TextConverter_LCD(2);
 1140              		.loc 1 75 5 is_stmt 1 view .LVU355
 1141 0014 FFF7FEFF 		bl	moveUp_Menu
 1142              	.LVL181:
  76:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1143              		.loc 1 76 5 view .LVU356
 1144 0018 FFF7FEFF 		bl	getName_Menu
 1145              	.LVL182:
 1146 001c 0221     		movs	r1, #2
 1147 001e FFF7FEFF 		bl	putLine_TextConverter_LCD
 1148              	.LVL183:
  76:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1149              		.loc 1 76 53 view .LVU357
 1150 0022 0220     		movs	r0, #2
 1151 0024 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1152              	.LVL184:
  77:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1153              		.loc 1 77 5 view .LVU358
 1154 0028 FFF7FEFF 		bl	moveDown_Menu
 1155              	.LVL185:
  78:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1156              		.loc 1 78 5 view .LVU359
  78:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1157              		.loc 1 78 36 is_stmt 0 view .LVU360
 1158 002c FFF7FEFF 		bl	getName_Menu
 1159              	.LVL186:
 1160 0030 0446     		mov	r4, r0
 1161              	.LVL187:
  78:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1162              		.loc 1 78 53 is_stmt 1 view .LVU361
  78:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1163              		.loc 1 78 65 is_stmt 0 view .LVU362
 1164 0032 3E23     		movs	r3, #62
 1165 0034 0360     		str	r3, [r0]
  79:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1166              		.loc 1 79 5 is_stmt 1 view .LVU363
 1167 0036 0321     		movs	r1, #3
 1168 0038 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1169              	.LVL188:
  79:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1170              		.loc 1 79 53 view .LVU364
 1171 003c 0320     		movs	r0, #3
 1172 003e FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1173              	.LVL189:
  79:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1174              		.loc 1 79 89 view .LVU365
  79:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();
 1175              		.loc 1 79 101 is_stmt 0 view .LVU366
 1176 0042 2023     		movs	r3, #32
 1177 0044 2360     		str	r3, [r4]
  80:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
 1178              		.loc 1 80 5 is_stmt 1 view .LVU367
 1179 0046 FFF7FEFF 		bl	moveDown_Menu
 1180              	.LVL190:
  81:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
ARM GAS  /tmp/ccZFkTdw.s 			page 31


 1181              		.loc 1 81 5 view .LVU368
 1182 004a FFF7FEFF 		bl	getName_Menu
 1183              	.LVL191:
 1184 004e 0421     		movs	r1, #4
 1185 0050 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1186              	.LVL192:
  81:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1187              		.loc 1 81 53 view .LVU369
 1188 0054 0420     		movs	r0, #4
 1189 0056 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1190              	.LVL193:
  82:Src/Menu/FunctionsForButtons.c **** }
 1191              		.loc 1 82 5 view .LVU370
 1192 005a FFF7FEFF 		bl	moveUp_Menu
 1193              	.LVL194:
 1194 005e D3E7     		b	.L83
 1195              	.LVL195:
 1196              	.L88:
 1197              	.LBB4:
  67:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1198              		.loc 1 67 9 view .LVU371
  67:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1199              		.loc 1 67 40 is_stmt 0 view .LVU372
 1200 0060 FFF7FEFF 		bl	getName_Menu
 1201              	.LVL196:
 1202 0064 0446     		mov	r4, r0
 1203              	.LVL197:
  67:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1204              		.loc 1 67 57 is_stmt 1 view .LVU373
  67:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1205              		.loc 1 67 69 is_stmt 0 view .LVU374
 1206 0066 3E23     		movs	r3, #62
 1207 0068 0360     		str	r3, [r0]
  68:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1208              		.loc 1 68 9 is_stmt 1 view .LVU375
 1209 006a 0221     		movs	r1, #2
 1210 006c FFF7FEFF 		bl	putLine_TextConverter_LCD
 1211              	.LVL198:
  68:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1212              		.loc 1 68 57 view .LVU376
 1213 0070 0220     		movs	r0, #2
 1214 0072 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1215              	.LVL199:
  68:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1216              		.loc 1 68 93 view .LVU377
  68:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 1217              		.loc 1 68 105 is_stmt 0 view .LVU378
 1218 0076 2023     		movs	r3, #32
 1219 0078 2360     		str	r3, [r4]
  69:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
 1220              		.loc 1 69 9 is_stmt 1 view .LVU379
 1221 007a FFF7FEFF 		bl	moveDown_Menu
 1222              	.LVL200:
  70:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 1223              		.loc 1 70 9 view .LVU380
 1224 007e FFF7FEFF 		bl	getName_Menu
 1225              	.LVL201:
ARM GAS  /tmp/ccZFkTdw.s 			page 32


 1226 0082 0321     		movs	r1, #3
 1227 0084 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1228              	.LVL202:
  70:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 1229              		.loc 1 70 57 view .LVU381
 1230 0088 0320     		movs	r0, #3
 1231 008a FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1232              	.LVL203:
  71:Src/Menu/FunctionsForButtons.c ****         return;
 1233              		.loc 1 71 9 view .LVU382
 1234 008e FFF7FEFF 		bl	moveUp_Menu
 1235              	.LVL204:
  72:Src/Menu/FunctionsForButtons.c ****     }
 1236              		.loc 1 72 9 view .LVU383
 1237 0092 B9E7     		b	.L83
 1238              	.LBE4:
 1239              		.cfi_endproc
 1240              	.LFE69:
 1242              		.section	.text.returnFirstLine,"ax",%progbits
 1243              		.align	1
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu softvfp
 1249              	returnFirstLine:
 1250              	.LFB89:
 241:Src/Menu/FunctionsForButtons.c **** 
 1251              		.loc 1 241 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255 0000 08B5     		push	{r3, lr}
 1256              	.LCFI3:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 3, -8
 1259              		.cfi_offset 14, -4
 243:Src/Menu/FunctionsForButtons.c ****     updateLine_TextConverter_LCD(1);
 1260              		.loc 1 243 5 view .LVU385
 1261 0002 FFF7FEFF 		bl	getTitle_Menu
 1262              	.LVL205:
 1263 0006 0121     		movs	r1, #1
 1264 0008 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1265              	.LVL206:
 244:Src/Menu/FunctionsForButtons.c **** }
 1266              		.loc 1 244 5 view .LVU386
 1267 000c 0120     		movs	r0, #1
 1268 000e FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1269              	.LVL207:
 245:Src/Menu/FunctionsForButtons.c **** 
 1270              		.loc 1 245 1 is_stmt 0 view .LVU387
 1271 0012 08BD     		pop	{r3, pc}
 1272              		.cfi_endproc
 1273              	.LFE89:
 1275              		.section	.text.simpleNavigationBack_Menu,"ax",%progbits
 1276              		.align	1
 1277              		.global	simpleNavigationBack_Menu
 1278              		.syntax unified
ARM GAS  /tmp/ccZFkTdw.s 			page 33


 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu softvfp
 1283              	simpleNavigationBack_Menu:
 1284              	.LFB71:
 113:Src/Menu/FunctionsForButtons.c ****     moveLeft_Menu();    putLine_TextConverter_LCD(getTitle_Menu(), 1);   updateLine_TextConverter_L
 1285              		.loc 1 113 1 is_stmt 1 view -0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289 0000 10B5     		push	{r4, lr}
 1290              	.LCFI4:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 4, -8
 1293              		.cfi_offset 14, -4
 114:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 1294              		.loc 1 114 5 view .LVU389
 1295 0002 FFF7FEFF 		bl	moveLeft_Menu
 1296              	.LVL208:
 114:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 1297              		.loc 1 114 25 view .LVU390
 1298 0006 FFF7FEFF 		bl	getTitle_Menu
 1299              	.LVL209:
 1300 000a 0121     		movs	r1, #1
 1301 000c FFF7FEFF 		bl	putLine_TextConverter_LCD
 1302              	.LVL210:
 114:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeAbove_Menu())
 1303              		.loc 1 114 74 view .LVU391
 1304 0010 0120     		movs	r0, #1
 1305 0012 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1306              	.LVL211:
 115:Src/Menu/FunctionsForButtons.c ****     {
 1307              		.loc 1 115 5 view .LVU392
 115:Src/Menu/FunctionsForButtons.c ****     {
 1308              		.loc 1 115 10 is_stmt 0 view .LVU393
 1309 0016 FFF7FEFF 		bl	ThereIsNodeAbove_Menu
 1310              	.LVL212:
 115:Src/Menu/FunctionsForButtons.c ****     {
 1311              		.loc 1 115 8 view .LVU394
 1312 001a 0028     		cmp	r0, #0
 1313 001c 43D1     		bne	.L92
 1314              	.LBB5:
 117:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1315              		.loc 1 117 9 is_stmt 1 view .LVU395
 117:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1316              		.loc 1 117 40 is_stmt 0 view .LVU396
 1317 001e FFF7FEFF 		bl	getName_Menu
 1318              	.LVL213:
 1319 0022 0446     		mov	r4, r0
 1320              	.LVL214:
 117:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1321              		.loc 1 117 57 is_stmt 1 view .LVU397
 117:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currNam
 1322              		.loc 1 117 69 is_stmt 0 view .LVU398
 1323 0024 3E23     		movs	r3, #62
 1324 0026 0360     		str	r3, [r0]
 118:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
ARM GAS  /tmp/ccZFkTdw.s 			page 34


 1325              		.loc 1 118 9 is_stmt 1 view .LVU399
 1326 0028 0221     		movs	r1, #2
 1327 002a FFF7FEFF 		bl	putLine_TextConverter_LCD
 1328              	.LVL215:
 118:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1329              		.loc 1 118 57 view .LVU400
 1330 002e 0220     		movs	r0, #2
 1331 0030 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1332              	.LVL216:
 118:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1333              		.loc 1 118 93 view .LVU401
 118:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1334              		.loc 1 118 105 is_stmt 0 view .LVU402
 1335 0034 2023     		movs	r3, #32
 1336 0036 2360     		str	r3, [r4]
 119:Src/Menu/FunctionsForButtons.c ****         {
 1337              		.loc 1 119 9 is_stmt 1 view .LVU403
 119:Src/Menu/FunctionsForButtons.c ****         {
 1338              		.loc 1 119 14 is_stmt 0 view .LVU404
 1339 0038 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 1340              	.LVL217:
 119:Src/Menu/FunctionsForButtons.c ****         {
 1341              		.loc 1 119 12 view .LVU405
 1342 003c A0B1     		cbz	r0, .L98
 125:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1343              		.loc 1 125 9 is_stmt 1 view .LVU406
 1344 003e FFF7FEFF 		bl	moveDown_Menu
 1345              	.LVL218:
 125:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1346              		.loc 1 125 29 view .LVU407
 1347 0042 FFF7FEFF 		bl	getName_Menu
 1348              	.LVL219:
 1349 0046 0321     		movs	r1, #3
 1350 0048 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1351              	.LVL220:
 125:Src/Menu/FunctionsForButtons.c ****         if (!ThereIsNodeBelow_Menu())
 1352              		.loc 1 125 77 view .LVU408
 1353 004c 0320     		movs	r0, #3
 1354 004e FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1355              	.LVL221:
 126:Src/Menu/FunctionsForButtons.c ****         {
 1356              		.loc 1 126 9 view .LVU409
 126:Src/Menu/FunctionsForButtons.c ****         {
 1357              		.loc 1 126 14 is_stmt 0 view .LVU410
 1358 0052 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 1359              	.LVL222:
 126:Src/Menu/FunctionsForButtons.c ****         {
 1360              		.loc 1 126 12 view .LVU411
 1361 0056 B8B9     		cbnz	r0, .L95
 128:Src/Menu/FunctionsForButtons.c ****             return;
 1362              		.loc 1 128 13 is_stmt 1 view .LVU412
 1363 0058 0421     		movs	r1, #4
 1364 005a 2B48     		ldr	r0, .L100
 1365 005c FFF7FEFF 		bl	putLine_TextConverter_LCD
 1366              	.LVL223:
 128:Src/Menu/FunctionsForButtons.c ****             return;
 1367              		.loc 1 128 59 view .LVU413
ARM GAS  /tmp/ccZFkTdw.s 			page 35


 1368 0060 0420     		movs	r0, #4
 1369 0062 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1370              	.LVL224:
 129:Src/Menu/FunctionsForButtons.c ****         }
 1371              		.loc 1 129 13 view .LVU414
 1372 0066 46E0     		b	.L91
 1373              	.L98:
 121:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1374              		.loc 1 121 13 view .LVU415
 1375 0068 274C     		ldr	r4, .L100
 1376              	.LVL225:
 121:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1377              		.loc 1 121 13 is_stmt 0 view .LVU416
 1378 006a 0321     		movs	r1, #3
 1379 006c 2046     		mov	r0, r4
 1380 006e FFF7FEFF 		bl	putLine_TextConverter_LCD
 1381              	.LVL226:
 121:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1382              		.loc 1 121 59 is_stmt 1 view .LVU417
 1383 0072 0320     		movs	r0, #3
 1384 0074 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1385              	.LVL227:
 122:Src/Menu/FunctionsForButtons.c ****             return;
 1386              		.loc 1 122 13 view .LVU418
 1387 0078 0421     		movs	r1, #4
 1388 007a 2046     		mov	r0, r4
 1389 007c FFF7FEFF 		bl	putLine_TextConverter_LCD
 1390              	.LVL228:
 122:Src/Menu/FunctionsForButtons.c ****             return;
 1391              		.loc 1 122 59 view .LVU419
 1392 0080 0420     		movs	r0, #4
 1393 0082 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1394              	.LVL229:
 123:Src/Menu/FunctionsForButtons.c ****         }
 1395              		.loc 1 123 13 view .LVU420
 1396 0086 36E0     		b	.L91
 1397              	.LVL230:
 1398              	.L95:
 131:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();      moveUp_Menu();
 1399              		.loc 1 131 9 view .LVU421
 1400 0088 FFF7FEFF 		bl	moveDown_Menu
 1401              	.LVL231:
 131:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();      moveUp_Menu();
 1402              		.loc 1 131 29 view .LVU422
 1403 008c FFF7FEFF 		bl	getName_Menu
 1404              	.LVL232:
 1405 0090 0421     		movs	r1, #4
 1406 0092 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1407              	.LVL233:
 131:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();      moveUp_Menu();
 1408              		.loc 1 131 77 view .LVU423
 1409 0096 0420     		movs	r0, #4
 1410 0098 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1411              	.LVL234:
 132:Src/Menu/FunctionsForButtons.c ****         return;
 1412              		.loc 1 132 9 view .LVU424
 1413 009c FFF7FEFF 		bl	moveUp_Menu
ARM GAS  /tmp/ccZFkTdw.s 			page 36


 1414              	.LVL235:
 132:Src/Menu/FunctionsForButtons.c ****         return;
 1415              		.loc 1 132 29 view .LVU425
 1416 00a0 FFF7FEFF 		bl	moveUp_Menu
 1417              	.LVL236:
 133:Src/Menu/FunctionsForButtons.c ****     }
 1418              		.loc 1 133 9 view .LVU426
 1419 00a4 27E0     		b	.L91
 1420              	.LVL237:
 1421              	.L92:
 133:Src/Menu/FunctionsForButtons.c ****     }
 1422              		.loc 1 133 9 is_stmt 0 view .LVU427
 1423              	.LBE5:
 135:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1424              		.loc 1 135 5 is_stmt 1 view .LVU428
 1425 00a6 FFF7FEFF 		bl	moveUp_Menu
 1426              	.LVL238:
 135:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1427              		.loc 1 135 25 view .LVU429
 1428 00aa FFF7FEFF 		bl	getName_Menu
 1429              	.LVL239:
 1430 00ae 0221     		movs	r1, #2
 1431 00b0 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1432              	.LVL240:
 135:Src/Menu/FunctionsForButtons.c ****     moveDown_Menu();    wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 1433              		.loc 1 135 73 view .LVU430
 1434 00b4 0220     		movs	r0, #2
 1435 00b6 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1436              	.LVL241:
 136:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1437              		.loc 1 136 5 view .LVU431
 1438 00ba FFF7FEFF 		bl	moveDown_Menu
 1439              	.LVL242:
 136:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1440              		.loc 1 136 25 view .LVU432
 136:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1441              		.loc 1 136 56 is_stmt 0 view .LVU433
 1442 00be FFF7FEFF 		bl	getName_Menu
 1443              	.LVL243:
 1444 00c2 0446     		mov	r4, r0
 1445              	.LVL244:
 136:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1446              		.loc 1 136 73 is_stmt 1 view .LVU434
 136:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 3);         updateLine_TextConverter_LCD(3);    currName[0]
 1447              		.loc 1 136 85 is_stmt 0 view .LVU435
 1448 00c4 3E23     		movs	r3, #62
 1449 00c6 0360     		str	r3, [r0]
 137:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1450              		.loc 1 137 5 is_stmt 1 view .LVU436
 1451 00c8 0321     		movs	r1, #3
 1452 00ca FFF7FEFF 		bl	putLine_TextConverter_LCD
 1453              	.LVL245:
 137:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1454              		.loc 1 137 53 view .LVU437
 1455 00ce 0320     		movs	r0, #3
 1456 00d0 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1457              	.LVL246:
ARM GAS  /tmp/ccZFkTdw.s 			page 37


 137:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1458              		.loc 1 137 89 view .LVU438
 137:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1459              		.loc 1 137 101 is_stmt 0 view .LVU439
 1460 00d4 2023     		movs	r3, #32
 1461 00d6 2360     		str	r3, [r4]
 138:Src/Menu/FunctionsForButtons.c ****     {
 1462              		.loc 1 138 5 is_stmt 1 view .LVU440
 138:Src/Menu/FunctionsForButtons.c ****     {
 1463              		.loc 1 138 10 is_stmt 0 view .LVU441
 1464 00d8 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 1465              	.LVL247:
 138:Src/Menu/FunctionsForButtons.c ****     {
 1466              		.loc 1 138 8 view .LVU442
 1467 00dc 60B1     		cbz	r0, .L99
 143:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1468              		.loc 1 143 5 is_stmt 1 view .LVU443
 1469 00de FFF7FEFF 		bl	moveDown_Menu
 1470              	.LVL248:
 143:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1471              		.loc 1 143 25 view .LVU444
 1472 00e2 FFF7FEFF 		bl	getName_Menu
 1473              	.LVL249:
 1474 00e6 0421     		movs	r1, #4
 1475 00e8 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1476              	.LVL250:
 143:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1477              		.loc 1 143 73 view .LVU445
 1478 00ec 0420     		movs	r0, #4
 1479 00ee FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1480              	.LVL251:
 144:Src/Menu/FunctionsForButtons.c **** }
 1481              		.loc 1 144 5 view .LVU446
 1482 00f2 FFF7FEFF 		bl	moveUp_Menu
 1483              	.LVL252:
 1484              	.L91:
 145:Src/Menu/FunctionsForButtons.c **** 
 1485              		.loc 1 145 1 is_stmt 0 view .LVU447
 1486 00f6 10BD     		pop	{r4, pc}
 1487              	.LVL253:
 1488              	.L99:
 140:Src/Menu/FunctionsForButtons.c ****         return;
 1489              		.loc 1 140 9 is_stmt 1 view .LVU448
 1490 00f8 0421     		movs	r1, #4
 1491 00fa 0348     		ldr	r0, .L100
 1492 00fc FFF7FEFF 		bl	putLine_TextConverter_LCD
 1493              	.LVL254:
 140:Src/Menu/FunctionsForButtons.c ****         return;
 1494              		.loc 1 140 55 view .LVU449
 1495 0100 0420     		movs	r0, #4
 1496 0102 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1497              	.LVL255:
 141:Src/Menu/FunctionsForButtons.c ****     }
 1498              		.loc 1 141 9 view .LVU450
 1499 0106 F6E7     		b	.L91
 1500              	.L101:
 1501              		.align	2
ARM GAS  /tmp/ccZFkTdw.s 			page 38


 1502              	.L100:
 1503 0108 00000000 		.word	EMPTY_STRING
 1504              		.cfi_endproc
 1505              	.LFE71:
 1507              		.section	.text.GcodeFormat,"ax",%progbits
 1508              		.align	1
 1509              		.syntax unified
 1510              		.thumb
 1511              		.thumb_func
 1512              		.fpu softvfp
 1514              	GcodeFormat:
 1515              	.LFB87:
 229:Src/Menu/FunctionsForButtons.c ****     if(wcsstr(getName_Menu(), L".gcode\0") != NULL)
 1516              		.loc 1 229 1 view -0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520 0000 08B5     		push	{r3, lr}
 1521              	.LCFI5:
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 3, -8
 1524              		.cfi_offset 14, -4
 230:Src/Menu/FunctionsForButtons.c ****         return true;
 1525              		.loc 1 230 5 view .LVU452
 230:Src/Menu/FunctionsForButtons.c ****         return true;
 1526              		.loc 1 230 8 is_stmt 0 view .LVU453
 1527 0002 FFF7FEFF 		bl	getName_Menu
 1528              	.LVL256:
 1529 0006 0349     		ldr	r1, .L106
 1530 0008 FFF7FEFF 		bl	wcsstr
 1531              	.LVL257:
 230:Src/Menu/FunctionsForButtons.c ****         return true;
 1532              		.loc 1 230 7 view .LVU454
 1533 000c 00B1     		cbz	r0, .L103
 231:Src/Menu/FunctionsForButtons.c ****     return false;
 1534              		.loc 1 231 16 view .LVU455
 1535 000e 0120     		movs	r0, #1
 1536              	.L103:
 233:Src/Menu/FunctionsForButtons.c **** 
 1537              		.loc 1 233 1 view .LVU456
 1538 0010 08BD     		pop	{r3, pc}
 1539              	.L107:
 1540 0012 00BF     		.align	2
 1541              	.L106:
 1542 0014 00000000 		.word	.LANCHOR0
 1543              		.cfi_endproc
 1544              	.LFE87:
 1546              		.section	.text.wait,"ax",%progbits
 1547              		.align	1
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1551              		.fpu softvfp
 1553              	wait:
 1554              	.LFB88:
 236:Src/Menu/FunctionsForButtons.c ****     HAL_Delay(500);
 1555              		.loc 1 236 1 is_stmt 1 view -0
ARM GAS  /tmp/ccZFkTdw.s 			page 39


 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559 0000 08B5     		push	{r3, lr}
 1560              	.LCFI6:
 1561              		.cfi_def_cfa_offset 8
 1562              		.cfi_offset 3, -8
 1563              		.cfi_offset 14, -4
 237:Src/Menu/FunctionsForButtons.c **** }
 1564              		.loc 1 237 5 view .LVU458
 1565 0002 4FF4FA70 		mov	r0, #500
 1566 0006 FFF7FEFF 		bl	HAL_Delay
 1567              	.LVL258:
 238:Src/Menu/FunctionsForButtons.c **** 
 1568              		.loc 1 238 1 is_stmt 0 view .LVU459
 1569 000a 08BD     		pop	{r3, pc}
 1570              		.cfi_endproc
 1571              	.LFE88:
 1573              		.section	.rodata.runGcode_Menu.str4.4,"aMS",%progbits,4
 1574              		.align	2
 1575              	.LC1:
 1576 0000 47000000 		.ascii	"G\000\000\000c\000\000\000o\000\000\000d\000\000\000"
 1576      63000000 
 1576      6F000000 
 1576      64000000 
 1577 0010 65000000 		.ascii	"e\000\000\000 \000\000\000f\000\000\000i\000\000\000"
 1577      20000000 
 1577      66000000 
 1577      69000000 
 1578 0020 6C000000 		.ascii	"l\000\000\000e\000\000\000\000\000\000\000"
 1578      65000000 
 1578      00000000 
 1579              		.section	.rodata.runGcode_Menu.str1.4,"aMS",%progbits,1
 1580              		.align	2
 1581              	.LC2:
 1582 0000 25732F25 		.ascii	"%s/%s\000"
 1582      7300
 1583              		.section	.rodata.runGcode_Menu.str4.4
 1584              		.align	2
 1585              	.LC3:
 1586 002c 6E000000 		.ascii	"n\000\000\000o\000\000\000t\000\000\000 \000\000\000"
 1586      6F000000 
 1586      74000000 
 1586      20000000 
 1587 003c 61000000 		.ascii	"a\000\000\000 \000\000\000G\000\000\000c\000\000\000"
 1587      20000000 
 1587      47000000 
 1587      63000000 
 1588 004c 6F000000 		.ascii	"o\000\000\000d\000\000\000e\000\000\000 \000\000\000"
 1588      64000000 
 1588      65000000 
 1588      20000000 
 1589 005c 66000000 		.ascii	"f\000\000\000i\000\000\000l\000\000\000e\000\000\000"
 1589      69000000 
 1589      6C000000 
 1589      65000000 
 1590 006c 00000000 		.ascii	"\000\000\000\000"
ARM GAS  /tmp/ccZFkTdw.s 			page 40


 1591              		.section	.text.runGcode_Menu,"ax",%progbits
 1592              		.align	1
 1593              		.global	runGcode_Menu
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu softvfp
 1599              	runGcode_Menu:
 1600              	.LFB92:
 325:Src/Menu/FunctionsForButtons.c **** 
 326:Src/Menu/FunctionsForButtons.c **** void runGcode_Menu(void)
 327:Src/Menu/FunctionsForButtons.c **** {
 1601              		.loc 1 327 1 is_stmt 1 view -0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 272
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605 0000 70B5     		push	{r4, r5, r6, lr}
 1606              	.LCFI7:
 1607              		.cfi_def_cfa_offset 16
 1608              		.cfi_offset 4, -16
 1609              		.cfi_offset 5, -12
 1610              		.cfi_offset 6, -8
 1611              		.cfi_offset 14, -4
 1612 0002 CAB0     		sub	sp, sp, #296
 1613              	.LCFI8:
 1614              		.cfi_def_cfa_offset 312
 328:Src/Menu/FunctionsForButtons.c ****     if(GcodeFormat())
 1615              		.loc 1 328 5 view .LVU461
 1616              		.loc 1 328 8 is_stmt 0 view .LVU462
 1617 0004 FFF7FEFF 		bl	GcodeFormat
 1618              	.LVL259:
 1619              		.loc 1 328 7 view .LVU463
 1620 0008 0028     		cmp	r0, #0
 1621 000a 5DD0     		beq	.L111
 1622              	.LBB6:
 329:Src/Menu/FunctionsForButtons.c ****     {
 330:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(L"Gcode file", 1);
 1623              		.loc 1 330 9 is_stmt 1 view .LVU464
 1624 000c 0121     		movs	r1, #1
 1625 000e 3448     		ldr	r0, .L119
 1626 0010 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1627              	.LVL260:
 331:Src/Menu/FunctionsForButtons.c ****         updateLine_TextConverter_LCD(1);
 1628              		.loc 1 331 9 view .LVU465
 1629 0014 0120     		movs	r0, #1
 1630 0016 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1631              	.LVL261:
 332:Src/Menu/FunctionsForButtons.c **** 
 333:Src/Menu/FunctionsForButtons.c **** 
 334:Src/Menu/FunctionsForButtons.c ****         TCHAR fileNameTCHAR[MAX_WIDE_NAME_LENGTH], pathToFile[PATH_LENGTH];
 1632              		.loc 1 334 9 view .LVU466
 335:Src/Menu/FunctionsForButtons.c **** 
 336:Src/Menu/FunctionsForButtons.c ****         getFileNameTCHAR(fileNameTCHAR);    sprintf(pathToFile, "%s/%s", getPath_USBdrive(), fileNa
 1633              		.loc 1 336 9 view .LVU467
 1634 001a 18A8     		add	r0, sp, #96
 1635 001c FFF7FEFF 		bl	getFileNameTCHAR
 1636              	.LVL262:
ARM GAS  /tmp/ccZFkTdw.s 			page 41


 1637              		.loc 1 336 45 view .LVU468
 1638 0020 FFF7FEFF 		bl	getPath_USBdrive
 1639              	.LVL263:
 1640 0024 0246     		mov	r2, r0
 1641 0026 18AB     		add	r3, sp, #96
 1642 0028 2E49     		ldr	r1, .L119+4
 1643 002a 31A8     		add	r0, sp, #196
 1644 002c FFF7FEFF 		bl	sprintf
 1645              	.LVL264:
 1646              		.loc 1 336 113 view .LVU469
 1647 0030 31A8     		add	r0, sp, #196
 1648 0032 FFF7FEFF 		bl	openFile_USBdrive
 1649              	.LVL265:
 337:Src/Menu/FunctionsForButtons.c **** 
 338:Src/Menu/FunctionsForButtons.c ****         //wchar_t stringFromFile[LINELENGTH_TEXTCONVERTER_LCD];
 339:Src/Menu/FunctionsForButtons.c ****         while(!endOfFile_USBdrive())
 1650              		.loc 1 339 9 view .LVU470
 1651              		.loc 1 339 14 is_stmt 0 view .LVU471
 1652 0036 25E0     		b	.L112
 1653              	.L114:
 340:Src/Menu/FunctionsForButtons.c ****         {
 341:Src/Menu/FunctionsForButtons.c ****             convertCommand_Gcode((const char*)getStringFromFile_USBdrive());
 1654              		.loc 1 341 13 is_stmt 1 view .LVU472
 1655              		.loc 1 341 47 is_stmt 0 view .LVU473
 1656 0038 FFF7FEFF 		bl	getStringFromFile_USBdrive
 1657              	.LVL266:
 1658              		.loc 1 341 13 view .LVU474
 1659 003c FFF7FEFF 		bl	convertCommand_Gcode
 1660              	.LVL267:
 342:Src/Menu/FunctionsForButtons.c ****             setDescreteCommand_Gcode(getConvertedCommand_Gcode());
 1661              		.loc 1 342 13 is_stmt 1 view .LVU475
 1662 0040 06AC     		add	r4, sp, #24
 1663 0042 2046     		mov	r0, r4
 1664 0044 FFF7FEFF 		bl	getConvertedCommand_Gcode
 1665              	.LVL268:
 1666 0048 0AAB     		add	r3, sp, #40
 1667 004a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1668 004c 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1669 0050 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1670 0054 FFF7FEFF 		bl	setDescreteCommand_Gcode
 1671              	.LVL269:
 343:Src/Menu/FunctionsForButtons.c ****             while(!enoghSpaceIsReservedCommandBuffer_Gcode()) {}
 1672              		.loc 1 343 13 view .LVU476
 1673              	.L113:
 1674              		.loc 1 343 64 discriminator 1 view .LVU477
 1675              		.loc 1 343 18 discriminator 1 view .LVU478
 1676              		.loc 1 343 20 is_stmt 0 discriminator 1 view .LVU479
 1677 0058 FFF7FEFF 		bl	enoghSpaceIsReservedCommandBuffer_Gcode
 1678              	.LVL270:
 1679              		.loc 1 343 18 discriminator 1 view .LVU480
 1680 005c 0028     		cmp	r0, #0
 1681 005e FBD0     		beq	.L113
 344:Src/Menu/FunctionsForButtons.c ****             addElementToDescreteCommandBuffer_Gcode(getDescreteCommand_Gcode());
 1682              		.loc 1 344 13 is_stmt 1 view .LVU481
 1683 0060 0EAE     		add	r6, sp, #56
 1684 0062 3046     		mov	r0, r6
 1685 0064 FFF7FEFF 		bl	getDescreteCommand_Gcode
ARM GAS  /tmp/ccZFkTdw.s 			page 42


 1686              	.LVL271:
 1687 0068 6C46     		mov	r4, sp
 1688 006a 12AD     		add	r5, sp, #72
 1689 006c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1690 006e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1691 0070 95E80300 		ldm	r5, {r0, r1}
 1692 0074 84E80300 		stm	r4, {r0, r1}
 1693 0078 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1694 007c FFF7FEFF 		bl	addElementToDescreteCommandBuffer_Gcode
 1695              	.LVL272:
 345:Src/Menu/FunctionsForButtons.c ****             descreteCommandAnalyser_Gcode();
 1696              		.loc 1 345 13 view .LVU482
 1697 0080 FFF7FEFF 		bl	descreteCommandAnalyser_Gcode
 1698              	.LVL273:
 1699              	.L112:
 339:Src/Menu/FunctionsForButtons.c ****         {
 1700              		.loc 1 339 14 view .LVU483
 339:Src/Menu/FunctionsForButtons.c ****         {
 1701              		.loc 1 339 16 is_stmt 0 view .LVU484
 1702 0084 FFF7FEFF 		bl	endOfFile_USBdrive
 1703              	.LVL274:
 339:Src/Menu/FunctionsForButtons.c ****         {
 1704              		.loc 1 339 14 view .LVU485
 1705 0088 0028     		cmp	r0, #0
 1706 008a D5D0     		beq	.L114
 346:Src/Menu/FunctionsForButtons.c **** 
 347:Src/Menu/FunctionsForButtons.c ****             /*
 348:Src/Menu/FunctionsForButtons.c ****             wait();
 349:Src/Menu/FunctionsForButtons.c ****             swprintf(stringFromFile, LINELENGTH_TEXTCONVERTER_LCD, L"%s", getStringFromFile_USBdriv
 350:Src/Menu/FunctionsForButtons.c ****             putLine_TextConverter_LCD(stringFromFile, 1);   updateLine_TextConverter_LCD(1);
 351:Src/Menu/FunctionsForButtons.c ****             */
 352:Src/Menu/FunctionsForButtons.c ****         }
 353:Src/Menu/FunctionsForButtons.c ****         addElementToDescreteCommandBuffer_Gcode(defaultDescreteCommand);
 1707              		.loc 1 353 9 is_stmt 1 view .LVU486
 1708 008c 164E     		ldr	r6, .L119+8
 1709 008e 6C46     		mov	r4, sp
 1710 0090 06F11005 		add	r5, r6, #16
 1711 0094 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1712 0096 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1713 0098 95E80300 		ldm	r5, {r0, r1}
 1714 009c 84E80300 		stm	r4, {r0, r1}
 1715 00a0 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1716 00a4 FFF7FEFF 		bl	addElementToDescreteCommandBuffer_Gcode
 1717              	.LVL275:
 354:Src/Menu/FunctionsForButtons.c ****         descreteCommandAnalyser_Gcode();
 1718              		.loc 1 354 9 view .LVU487
 1719 00a8 FFF7FEFF 		bl	descreteCommandAnalyser_Gcode
 1720              	.LVL276:
 355:Src/Menu/FunctionsForButtons.c **** 
 356:Src/Menu/FunctionsForButtons.c ****         while( (checkFreeSpaceCommandBuffer_Gcode()!=COMMAND_BUFFER_LENGTH) || (!moveComleted()) ) 
 1721              		.loc 1 356 9 view .LVU488
 1722              	.L115:
 1723              		.loc 1 356 101 discriminator 3 view .LVU489
 1724              		.loc 1 356 14 discriminator 3 view .LVU490
 1725              		.loc 1 356 17 is_stmt 0 discriminator 3 view .LVU491
 1726 00ac FFF7FEFF 		bl	checkFreeSpaceCommandBuffer_Gcode
 1727              	.LVL277:
ARM GAS  /tmp/ccZFkTdw.s 			page 43


 1728              		.loc 1 356 14 discriminator 3 view .LVU492
 1729 00b0 3228     		cmp	r0, #50
 1730 00b2 FBD1     		bne	.L115
 1731              		.loc 1 356 82 discriminator 2 view .LVU493
 1732 00b4 FFF7FEFF 		bl	moveComleted
 1733              	.LVL278:
 1734              		.loc 1 356 77 discriminator 2 view .LVU494
 1735 00b8 0028     		cmp	r0, #0
 1736 00ba F7D0     		beq	.L115
 357:Src/Menu/FunctionsForButtons.c **** 
 358:Src/Menu/FunctionsForButtons.c ****         wait(); returnFirstLine();
 1737              		.loc 1 358 9 is_stmt 1 view .LVU495
 1738 00bc FFF7FEFF 		bl	wait
 1739              	.LVL279:
 1740              		.loc 1 358 17 view .LVU496
 1741 00c0 FFF7FEFF 		bl	returnFirstLine
 1742              	.LVL280:
 1743              	.L110:
 1744              	.LBE6:
 359:Src/Menu/FunctionsForButtons.c ****     }
 360:Src/Menu/FunctionsForButtons.c ****     else
 361:Src/Menu/FunctionsForButtons.c ****     {
 362:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(L"not a Gcode file", 1);
 363:Src/Menu/FunctionsForButtons.c ****         updateLine_TextConverter_LCD(1);
 364:Src/Menu/FunctionsForButtons.c ****         wait(); returnFirstLine();
 365:Src/Menu/FunctionsForButtons.c ****     }
 366:Src/Menu/FunctionsForButtons.c **** }
 1745              		.loc 1 366 1 is_stmt 0 view .LVU497
 1746 00c4 4AB0     		add	sp, sp, #296
 1747              	.LCFI9:
 1748              		.cfi_remember_state
 1749              		.cfi_def_cfa_offset 16
 1750              		@ sp needed
 1751 00c6 70BD     		pop	{r4, r5, r6, pc}
 1752              	.L111:
 1753              	.LCFI10:
 1754              		.cfi_restore_state
 362:Src/Menu/FunctionsForButtons.c ****         updateLine_TextConverter_LCD(1);
 1755              		.loc 1 362 9 is_stmt 1 view .LVU498
 1756 00c8 0121     		movs	r1, #1
 1757 00ca 0848     		ldr	r0, .L119+12
 1758 00cc FFF7FEFF 		bl	putLine_TextConverter_LCD
 1759              	.LVL281:
 363:Src/Menu/FunctionsForButtons.c ****         wait(); returnFirstLine();
 1760              		.loc 1 363 9 view .LVU499
 1761 00d0 0120     		movs	r0, #1
 1762 00d2 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1763              	.LVL282:
 364:Src/Menu/FunctionsForButtons.c ****     }
 1764              		.loc 1 364 9 view .LVU500
 1765 00d6 FFF7FEFF 		bl	wait
 1766              	.LVL283:
 364:Src/Menu/FunctionsForButtons.c ****     }
 1767              		.loc 1 364 17 view .LVU501
 1768 00da FFF7FEFF 		bl	returnFirstLine
 1769              	.LVL284:
 1770              		.loc 1 366 1 is_stmt 0 view .LVU502
ARM GAS  /tmp/ccZFkTdw.s 			page 44


 1771 00de F1E7     		b	.L110
 1772              	.L120:
 1773              		.align	2
 1774              	.L119:
 1775 00e0 00000000 		.word	.LC1
 1776 00e4 00000000 		.word	.LC2
 1777 00e8 00000000 		.word	defaultDescreteCommand
 1778 00ec 2C000000 		.word	.LC3
 1779              		.cfi_endproc
 1780              	.LFE92:
 1782              		.section	.text.simpleNavigationOk_Menu,"ax",%progbits
 1783              		.align	1
 1784              		.global	simpleNavigationOk_Menu
 1785              		.syntax unified
 1786              		.thumb
 1787              		.thumb_func
 1788              		.fpu softvfp
 1790              	simpleNavigationOk_Menu:
 1791              	.LFB70:
  86:Src/Menu/FunctionsForButtons.c ****     moveRight_Menu();
 1792              		.loc 1 86 1 is_stmt 1 view -0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 0
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
 1796 0000 10B5     		push	{r4, lr}
 1797              	.LCFI11:
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 4, -8
 1800              		.cfi_offset 14, -4
  87:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getTitle_Menu(), 1);   updateLine_TextConverter_LCD(1);
 1801              		.loc 1 87 5 view .LVU504
 1802 0002 FFF7FEFF 		bl	moveRight_Menu
 1803              	.LVL285:
  88:Src/Menu/FunctionsForButtons.c **** 
 1804              		.loc 1 88 5 view .LVU505
 1805 0006 FFF7FEFF 		bl	getTitle_Menu
 1806              	.LVL286:
 1807 000a 0121     		movs	r1, #1
 1808 000c FFF7FEFF 		bl	putLine_TextConverter_LCD
 1809              	.LVL287:
  88:Src/Menu/FunctionsForButtons.c **** 
 1810              		.loc 1 88 54 view .LVU506
 1811 0010 0120     		movs	r0, #1
 1812 0012 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1813              	.LVL288:
  90:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 1814              		.loc 1 90 5 view .LVU507
  90:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 1815              		.loc 1 90 36 is_stmt 0 view .LVU508
 1816 0016 FFF7FEFF 		bl	getName_Menu
 1817              	.LVL289:
 1818 001a 0446     		mov	r4, r0
 1819              	.LVL290:
  90:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 1820              		.loc 1 90 53 is_stmt 1 view .LVU509
  90:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 1821              		.loc 1 90 65 is_stmt 0 view .LVU510
ARM GAS  /tmp/ccZFkTdw.s 			page 45


 1822 001c 3E23     		movs	r3, #62
 1823 001e 0360     		str	r3, [r0]
  91:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1824              		.loc 1 91 5 is_stmt 1 view .LVU511
 1825 0020 0221     		movs	r1, #2
 1826 0022 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1827              	.LVL291:
  91:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1828              		.loc 1 91 53 view .LVU512
 1829 0026 0220     		movs	r0, #2
 1830 0028 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1831              	.LVL292:
  91:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1832              		.loc 1 91 89 view .LVU513
  91:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1833              		.loc 1 91 101 is_stmt 0 view .LVU514
 1834 002c 2023     		movs	r3, #32
 1835 002e 2360     		str	r3, [r4]
  92:Src/Menu/FunctionsForButtons.c ****     {
 1836              		.loc 1 92 5 is_stmt 1 view .LVU515
  92:Src/Menu/FunctionsForButtons.c ****     {
 1837              		.loc 1 92 10 is_stmt 0 view .LVU516
 1838 0030 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 1839              	.LVL293:
  92:Src/Menu/FunctionsForButtons.c ****     {
 1840              		.loc 1 92 8 view .LVU517
 1841 0034 D8B1     		cbz	r0, .L126
  98:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 3);   updateLine_TextConverter_LCD(3);
 1842              		.loc 1 98 5 is_stmt 1 view .LVU518
 1843 0036 FFF7FEFF 		bl	moveDown_Menu
 1844              	.LVL294:
  99:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1845              		.loc 1 99 5 view .LVU519
 1846 003a FFF7FEFF 		bl	getName_Menu
 1847              	.LVL295:
 1848 003e 0321     		movs	r1, #3
 1849 0040 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1850              	.LVL296:
  99:Src/Menu/FunctionsForButtons.c ****     if (!ThereIsNodeBelow_Menu())
 1851              		.loc 1 99 53 view .LVU520
 1852 0044 0320     		movs	r0, #3
 1853 0046 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1854              	.LVL297:
 100:Src/Menu/FunctionsForButtons.c ****     {
 1855              		.loc 1 100 5 view .LVU521
 100:Src/Menu/FunctionsForButtons.c ****     {
 1856              		.loc 1 100 10 is_stmt 0 view .LVU522
 1857 004a FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 1858              	.LVL298:
 100:Src/Menu/FunctionsForButtons.c ****     {
 1859              		.loc 1 100 8 view .LVU523
 1860 004e F0B1     		cbz	r0, .L127
 106:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getName_Menu(), 4);   updateLine_TextConverter_LCD(4);
 1861              		.loc 1 106 5 is_stmt 1 view .LVU524
 1862 0050 FFF7FEFF 		bl	moveDown_Menu
 1863              	.LVL299:
 107:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
ARM GAS  /tmp/ccZFkTdw.s 			page 46


 1864              		.loc 1 107 5 view .LVU525
 1865 0054 FFF7FEFF 		bl	getName_Menu
 1866              	.LVL300:
 1867 0058 0421     		movs	r1, #4
 1868 005a FFF7FEFF 		bl	putLine_TextConverter_LCD
 1869              	.LVL301:
 107:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1870              		.loc 1 107 53 view .LVU526
 1871 005e 0420     		movs	r0, #4
 1872 0060 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1873              	.LVL302:
 108:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();
 1874              		.loc 1 108 5 view .LVU527
 1875 0064 FFF7FEFF 		bl	moveUp_Menu
 1876              	.LVL303:
 109:Src/Menu/FunctionsForButtons.c **** }
 1877              		.loc 1 109 5 view .LVU528
 1878 0068 FFF7FEFF 		bl	moveUp_Menu
 1879              	.LVL304:
 1880              	.L121:
 110:Src/Menu/FunctionsForButtons.c **** 
 1881              		.loc 1 110 1 is_stmt 0 view .LVU529
 1882 006c 10BD     		pop	{r4, pc}
 1883              	.LVL305:
 1884              	.L126:
  94:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1885              		.loc 1 94 9 is_stmt 1 view .LVU530
 1886 006e 0D4C     		ldr	r4, .L128
 1887              	.LVL306:
  94:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1888              		.loc 1 94 9 is_stmt 0 view .LVU531
 1889 0070 0321     		movs	r1, #3
 1890 0072 2046     		mov	r0, r4
 1891 0074 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1892              	.LVL307:
  94:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4);   updateLine_TextConverter_LCD(4);
 1893              		.loc 1 94 55 is_stmt 1 view .LVU532
 1894 0078 0320     		movs	r0, #3
 1895 007a FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1896              	.LVL308:
  95:Src/Menu/FunctionsForButtons.c ****         return;
 1897              		.loc 1 95 9 view .LVU533
 1898 007e 0421     		movs	r1, #4
 1899 0080 2046     		mov	r0, r4
 1900 0082 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1901              	.LVL309:
  95:Src/Menu/FunctionsForButtons.c ****         return;
 1902              		.loc 1 95 55 view .LVU534
 1903 0086 0420     		movs	r0, #4
 1904 0088 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1905              	.LVL310:
  96:Src/Menu/FunctionsForButtons.c ****     }
 1906              		.loc 1 96 9 view .LVU535
 1907 008c EEE7     		b	.L121
 1908              	.LVL311:
 1909              	.L127:
 102:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
ARM GAS  /tmp/ccZFkTdw.s 			page 47


 1910              		.loc 1 102 9 view .LVU536
 1911 008e 0421     		movs	r1, #4
 1912 0090 0448     		ldr	r0, .L128
 1913 0092 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1914              	.LVL312:
 102:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 1915              		.loc 1 102 55 view .LVU537
 1916 0096 0420     		movs	r0, #4
 1917 0098 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1918              	.LVL313:
 103:Src/Menu/FunctionsForButtons.c ****         return;
 1919              		.loc 1 103 9 view .LVU538
 1920 009c FFF7FEFF 		bl	moveUp_Menu
 1921              	.LVL314:
 104:Src/Menu/FunctionsForButtons.c ****     }
 1922              		.loc 1 104 9 view .LVU539
 1923 00a0 E4E7     		b	.L121
 1924              	.L129:
 1925 00a2 00BF     		.align	2
 1926              	.L128:
 1927 00a4 00000000 		.word	EMPTY_STRING
 1928              		.cfi_endproc
 1929              	.LFE70:
 1931              		.section	.rodata.printOk_Menu.str4.4,"aMS",%progbits,4
 1932              		.align	2
 1933              	.LC4:
 1934 0000 55000000 		.ascii	"U\000\000\000S\000\000\000B\000\000\000 \000\000\000"
 1934      53000000 
 1934      42000000 
 1934      20000000 
 1935 0010 64000000 		.ascii	"d\000\000\000r\000\000\000i\000\000\000v\000\000\000"
 1935      72000000 
 1935      69000000 
 1935      76000000 
 1936 0020 65000000 		.ascii	"e\000\000\000\000\000\000\000"
 1936      00000000 
 1937              		.section	.text.printOk_Menu,"ax",%progbits
 1938              		.align	1
 1939              		.global	printOk_Menu
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu softvfp
 1945              	printOk_Menu:
 1946              	.LFB72:
 148:Src/Menu/FunctionsForButtons.c ****     if (getState_USBdrive() == NOT_READY_USBDRIVE)  return;
 1947              		.loc 1 148 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951 0000 10B5     		push	{r4, lr}
 1952              	.LCFI12:
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 4, -8
 1955              		.cfi_offset 14, -4
 149:Src/Menu/FunctionsForButtons.c ****     if (getMountedStatus() == UNMOUNTED_USBDRIVE)   mount_USBdrive();
 1956              		.loc 1 149 5 view .LVU541
ARM GAS  /tmp/ccZFkTdw.s 			page 48


 149:Src/Menu/FunctionsForButtons.c ****     if (getMountedStatus() == UNMOUNTED_USBDRIVE)   mount_USBdrive();
 1957              		.loc 1 149 9 is_stmt 0 view .LVU542
 1958 0002 FFF7FEFF 		bl	getState_USBdrive
 1959              	.LVL315:
 149:Src/Menu/FunctionsForButtons.c ****     if (getMountedStatus() == UNMOUNTED_USBDRIVE)   mount_USBdrive();
 1960              		.loc 1 149 8 view .LVU543
 1961 0006 00B9     		cbnz	r0, .L144
 1962              	.L130:
 200:Src/Menu/FunctionsForButtons.c **** 
 1963              		.loc 1 200 1 view .LVU544
 1964 0008 10BD     		pop	{r4, pc}
 1965              	.L144:
 150:Src/Menu/FunctionsForButtons.c ****     openDirectory_USBdrive(USBHPath);
 1966              		.loc 1 150 5 is_stmt 1 view .LVU545
 150:Src/Menu/FunctionsForButtons.c ****     openDirectory_USBdrive(USBHPath);
 1967              		.loc 1 150 9 is_stmt 0 view .LVU546
 1968 000a FFF7FEFF 		bl	getMountedStatus
 1969              	.LVL316:
 150:Src/Menu/FunctionsForButtons.c ****     openDirectory_USBdrive(USBHPath);
 1970              		.loc 1 150 8 view .LVU547
 1971 000e 70B3     		cbz	r0, .L145
 1972              	.L132:
 151:Src/Menu/FunctionsForButtons.c ****     destroyRightNode_Menu();
 1973              		.loc 1 151 5 is_stmt 1 view .LVU548
 1974 0010 5848     		ldr	r0, .L152
 1975 0012 FFF7FEFF 		bl	openDirectory_USBdrive
 1976              	.LVL317:
 152:Src/Menu/FunctionsForButtons.c **** 
 1977              		.loc 1 152 5 view .LVU549
 1978 0016 FFF7FEFF 		bl	destroyRightNode_Menu
 1979              	.LVL318:
 154:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(getWideLongName_USBdrive(), 2);  updateLine_TextConverter_LCD(2);
 1980              		.loc 1 154 5 view .LVU550
 1981 001a FFF7FEFF 		bl	readItem_USBdrive
 1982              	.LVL319:
 155:Src/Menu/FunctionsForButtons.c ****     if(getItemType_USBdrive() == ITEM_IS_EMPTY)
 1983              		.loc 1 155 5 view .LVU551
 1984 001e FFF7FEFF 		bl	getWideLongName_USBdrive
 1985              	.LVL320:
 1986 0022 0221     		movs	r1, #2
 1987 0024 FFF7FEFF 		bl	putLine_TextConverter_LCD
 1988              	.LVL321:
 155:Src/Menu/FunctionsForButtons.c ****     if(getItemType_USBdrive() == ITEM_IS_EMPTY)
 1989              		.loc 1 155 64 view .LVU552
 1990 0028 0220     		movs	r0, #2
 1991 002a FFF7FEFF 		bl	updateLine_TextConverter_LCD
 1992              	.LVL322:
 156:Src/Menu/FunctionsForButtons.c ****         return;
 1993              		.loc 1 156 5 view .LVU553
 156:Src/Menu/FunctionsForButtons.c ****         return;
 1994              		.loc 1 156 8 is_stmt 0 view .LVU554
 1995 002e FFF7FEFF 		bl	getItemType_USBdrive
 1996              	.LVL323:
 156:Src/Menu/FunctionsForButtons.c ****         return;
 1997              		.loc 1 156 7 view .LVU555
 1998 0032 0028     		cmp	r0, #0
 1999 0034 E8D0     		beq	.L130
ARM GAS  /tmp/ccZFkTdw.s 			page 49


 158:Src/Menu/FunctionsForButtons.c ****     moveRight_Menu();
 2000              		.loc 1 158 5 is_stmt 1 view .LVU556
 2001 0036 FFF7FEFF 		bl	getWideLongName_USBdrive
 2002              	.LVL324:
 2003 003a 0146     		mov	r1, r0
 2004 003c 4E48     		ldr	r0, .L152+4
 2005 003e FFF7FEFF 		bl	createRightNode_Menu
 2006              	.LVL325:
 159:Src/Menu/FunctionsForButtons.c **** 
 2007              		.loc 1 159 5 view .LVU557
 2008 0042 FFF7FEFF 		bl	moveRight_Menu
 2009              	.LVL326:
 161:Src/Menu/FunctionsForButtons.c ****     setFunctionDown(&simpleNavigationDown_Menu);
 2010              		.loc 1 161 5 view .LVU558
 2011 0046 4D48     		ldr	r0, .L152+8
 2012 0048 FFF7FEFF 		bl	setFunctionUp
 2013              	.LVL327:
 162:Src/Menu/FunctionsForButtons.c ****     setFunctionBack(&simpleNavigationBack_Menu);
 2014              		.loc 1 162 5 view .LVU559
 2015 004c 4C48     		ldr	r0, .L152+12
 2016 004e FFF7FEFF 		bl	setFunctionDown
 2017              	.LVL328:
 163:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_DIRECTORY) setFunctionOk(&openDirectory_Menu);
 2018              		.loc 1 163 5 view .LVU560
 2019 0052 4C48     		ldr	r0, .L152+16
 2020 0054 FFF7FEFF 		bl	setFunctionBack
 2021              	.LVL329:
 164:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2022              		.loc 1 164 5 view .LVU561
 164:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2023              		.loc 1 164 9 is_stmt 0 view .LVU562
 2024 0058 FFF7FEFF 		bl	getItemType_USBdrive
 2025              	.LVL330:
 164:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2026              		.loc 1 164 8 view .LVU563
 2027 005c 0228     		cmp	r0, #2
 2028 005e 09D0     		beq	.L146
 2029              	.L133:
 165:Src/Menu/FunctionsForButtons.c **** 
 2030              		.loc 1 165 5 is_stmt 1 view .LVU564
 165:Src/Menu/FunctionsForButtons.c **** 
 2031              		.loc 1 165 9 is_stmt 0 view .LVU565
 2032 0060 FFF7FEFF 		bl	getItemType_USBdrive
 2033              	.LVL331:
 165:Src/Menu/FunctionsForButtons.c **** 
 2034              		.loc 1 165 8 view .LVU566
 2035 0064 0128     		cmp	r0, #1
 2036 0066 09D0     		beq	.L147
 2037              	.L134:
 167:Src/Menu/FunctionsForButtons.c ****     while(getItemType_USBdrive() != ITEM_IS_EMPTY)
 2038              		.loc 1 167 5 is_stmt 1 view .LVU567
 2039 0068 FFF7FEFF 		bl	readItem_USBdrive
 2040              	.LVL332:
 168:Src/Menu/FunctionsForButtons.c ****     {
 2041              		.loc 1 168 5 view .LVU568
 168:Src/Menu/FunctionsForButtons.c ****     {
 2042              		.loc 1 168 10 is_stmt 0 view .LVU569
ARM GAS  /tmp/ccZFkTdw.s 			page 50


 2043 006c 13E0     		b	.L135
 2044              	.L145:
 150:Src/Menu/FunctionsForButtons.c ****     openDirectory_USBdrive(USBHPath);
 2045              		.loc 1 150 53 is_stmt 1 discriminator 1 view .LVU570
 2046 006e FFF7FEFF 		bl	mount_USBdrive
 2047              	.LVL333:
 2048 0072 CDE7     		b	.L132
 2049              	.L146:
 164:Src/Menu/FunctionsForButtons.c ****     if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2050              		.loc 1 164 54 discriminator 1 view .LVU571
 2051 0074 4448     		ldr	r0, .L152+20
 2052 0076 FFF7FEFF 		bl	setFunctionOk
 2053              	.LVL334:
 2054 007a F1E7     		b	.L133
 2055              	.L147:
 165:Src/Menu/FunctionsForButtons.c **** 
 2056              		.loc 1 165 54 discriminator 1 view .LVU572
 2057 007c 4348     		ldr	r0, .L152+24
 2058 007e FFF7FEFF 		bl	setFunctionOk
 2059              	.LVL335:
 2060 0082 F1E7     		b	.L134
 2061              	.L148:
 175:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2062              		.loc 1 175 58 discriminator 1 view .LVU573
 2063 0084 4048     		ldr	r0, .L152+20
 2064 0086 FFF7FEFF 		bl	setFunctionOk
 2065              	.LVL336:
 2066 008a 1AE0     		b	.L136
 2067              	.L149:
 176:Src/Menu/FunctionsForButtons.c ****         readItem_USBdrive();
 2068              		.loc 1 176 58 discriminator 1 view .LVU574
 2069 008c 3F48     		ldr	r0, .L152+24
 2070 008e FFF7FEFF 		bl	setFunctionOk
 2071              	.LVL337:
 2072              	.L137:
 177:Src/Menu/FunctionsForButtons.c ****     }
 2073              		.loc 1 177 9 view .LVU575
 2074 0092 FFF7FEFF 		bl	readItem_USBdrive
 2075              	.LVL338:
 2076              	.L135:
 168:Src/Menu/FunctionsForButtons.c ****     {
 2077              		.loc 1 168 10 view .LVU576
 168:Src/Menu/FunctionsForButtons.c ****     {
 2078              		.loc 1 168 11 is_stmt 0 view .LVU577
 2079 0096 FFF7FEFF 		bl	getItemType_USBdrive
 2080              	.LVL339:
 168:Src/Menu/FunctionsForButtons.c ****     {
 2081              		.loc 1 168 10 view .LVU578
 2082 009a C8B1     		cbz	r0, .L139
 170:Src/Menu/FunctionsForButtons.c ****         moveDown_Menu();
 2083              		.loc 1 170 9 is_stmt 1 view .LVU579
 2084 009c FFF7FEFF 		bl	getWideLongName_USBdrive
 2085              	.LVL340:
 2086 00a0 FFF7FEFF 		bl	createDownNode_Menu
 2087              	.LVL341:
 171:Src/Menu/FunctionsForButtons.c ****         setFunctionUp(&simpleNavigationUp_Menu);
 2088              		.loc 1 171 9 view .LVU580
ARM GAS  /tmp/ccZFkTdw.s 			page 51


 2089 00a4 FFF7FEFF 		bl	moveDown_Menu
 2090              	.LVL342:
 172:Src/Menu/FunctionsForButtons.c ****         setFunctionDown(&simpleNavigationDown_Menu);
 2091              		.loc 1 172 9 view .LVU581
 2092 00a8 3448     		ldr	r0, .L152+8
 2093 00aa FFF7FEFF 		bl	setFunctionUp
 2094              	.LVL343:
 173:Src/Menu/FunctionsForButtons.c ****         setFunctionBack(&simpleNavigationBack_Menu);
 2095              		.loc 1 173 9 view .LVU582
 2096 00ae 3448     		ldr	r0, .L152+12
 2097 00b0 FFF7FEFF 		bl	setFunctionDown
 2098              	.LVL344:
 174:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_DIRECTORY) setFunctionOk(&openDirectory_Menu);
 2099              		.loc 1 174 9 view .LVU583
 2100 00b4 3348     		ldr	r0, .L152+16
 2101 00b6 FFF7FEFF 		bl	setFunctionBack
 2102              	.LVL345:
 175:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2103              		.loc 1 175 9 view .LVU584
 175:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2104              		.loc 1 175 13 is_stmt 0 view .LVU585
 2105 00ba FFF7FEFF 		bl	getItemType_USBdrive
 2106              	.LVL346:
 175:Src/Menu/FunctionsForButtons.c ****         if (getItemType_USBdrive() == ITEM_IS_FILE)      setFunctionOk(&runGcode_Menu);
 2107              		.loc 1 175 12 view .LVU586
 2108 00be 0228     		cmp	r0, #2
 2109 00c0 E0D0     		beq	.L148
 2110              	.L136:
 176:Src/Menu/FunctionsForButtons.c ****         readItem_USBdrive();
 2111              		.loc 1 176 9 is_stmt 1 view .LVU587
 176:Src/Menu/FunctionsForButtons.c ****         readItem_USBdrive();
 2112              		.loc 1 176 13 is_stmt 0 view .LVU588
 2113 00c2 FFF7FEFF 		bl	getItemType_USBdrive
 2114              	.LVL347:
 176:Src/Menu/FunctionsForButtons.c ****         readItem_USBdrive();
 2115              		.loc 1 176 12 view .LVU589
 2116 00c6 0128     		cmp	r0, #1
 2117 00c8 E3D1     		bne	.L137
 2118 00ca DFE7     		b	.L149
 2119              	.L140:
 180:Src/Menu/FunctionsForButtons.c **** 
 2120              		.loc 1 180 39 is_stmt 1 discriminator 2 view .LVU590
 2121 00cc FFF7FEFF 		bl	moveUp_Menu
 2122              	.LVL348:
 2123              	.L139:
 180:Src/Menu/FunctionsForButtons.c **** 
 2124              		.loc 1 180 10 discriminator 1 view .LVU591
 180:Src/Menu/FunctionsForButtons.c **** 
 2125              		.loc 1 180 12 is_stmt 0 discriminator 1 view .LVU592
 2126 00d0 FFF7FEFF 		bl	ThereIsNodeAbove_Menu
 2127              	.LVL349:
 180:Src/Menu/FunctionsForButtons.c **** 
 2128              		.loc 1 180 10 discriminator 1 view .LVU593
 2129 00d4 0028     		cmp	r0, #0
 2130 00d6 F9D1     		bne	.L140
 182:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 2131              		.loc 1 182 5 is_stmt 1 view .LVU594
ARM GAS  /tmp/ccZFkTdw.s 			page 52


 2132 00d8 FFF7FEFF 		bl	getTitle_Menu
 2133              	.LVL350:
 2134 00dc 0121     		movs	r1, #1
 2135 00de FFF7FEFF 		bl	putLine_TextConverter_LCD
 2136              	.LVL351:
 182:Src/Menu/FunctionsForButtons.c ****     wchar_t* currName = (wchar_t*) getName_Menu();  currName[0] = *L">";
 2137              		.loc 1 182 53 view .LVU595
 2138 00e2 0120     		movs	r0, #1
 2139 00e4 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2140              	.LVL352:
 183:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 2141              		.loc 1 183 5 view .LVU596
 183:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 2142              		.loc 1 183 36 is_stmt 0 view .LVU597
 2143 00e8 FFF7FEFF 		bl	getName_Menu
 2144              	.LVL353:
 2145 00ec 0446     		mov	r4, r0
 2146              	.LVL354:
 183:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 2147              		.loc 1 183 53 is_stmt 1 view .LVU598
 183:Src/Menu/FunctionsForButtons.c ****     putLine_TextConverter_LCD(currName, 2);         updateLine_TextConverter_LCD(2);    currName[0]
 2148              		.loc 1 183 65 is_stmt 0 view .LVU599
 2149 00ee 3E23     		movs	r3, #62
 2150 00f0 0360     		str	r3, [r0]
 184:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2151              		.loc 1 184 5 is_stmt 1 view .LVU600
 2152 00f2 0221     		movs	r1, #2
 2153 00f4 FFF7FEFF 		bl	putLine_TextConverter_LCD
 2154              	.LVL355:
 184:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2155              		.loc 1 184 53 view .LVU601
 2156 00f8 0220     		movs	r0, #2
 2157 00fa FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2158              	.LVL356:
 184:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2159              		.loc 1 184 89 view .LVU602
 184:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2160              		.loc 1 184 101 is_stmt 0 view .LVU603
 2161 00fe 2023     		movs	r3, #32
 2162 0100 2360     		str	r3, [r4]
 185:Src/Menu/FunctionsForButtons.c ****     {
 2163              		.loc 1 185 5 is_stmt 1 view .LVU604
 185:Src/Menu/FunctionsForButtons.c ****     {
 2164              		.loc 1 185 9 is_stmt 0 view .LVU605
 2165 0102 FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 2166              	.LVL357:
 185:Src/Menu/FunctionsForButtons.c ****     {
 2167              		.loc 1 185 7 view .LVU606
 2168 0106 D8B1     		cbz	r0, .L150
 191:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2169              		.loc 1 191 5 is_stmt 1 view .LVU607
 2170 0108 FFF7FEFF 		bl	moveDown_Menu
 2171              	.LVL358:
 191:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2172              		.loc 1 191 25 view .LVU608
 2173 010c FFF7FEFF 		bl	getName_Menu
 2174              	.LVL359:
ARM GAS  /tmp/ccZFkTdw.s 			page 53


 2175 0110 0321     		movs	r1, #3
 2176 0112 FFF7FEFF 		bl	putLine_TextConverter_LCD
 2177              	.LVL360:
 191:Src/Menu/FunctionsForButtons.c ****     if(!ThereIsNodeBelow_Menu())
 2178              		.loc 1 191 73 view .LVU609
 2179 0116 0320     		movs	r0, #3
 2180 0118 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2181              	.LVL361:
 192:Src/Menu/FunctionsForButtons.c ****     {
 2182              		.loc 1 192 5 view .LVU610
 192:Src/Menu/FunctionsForButtons.c ****     {
 2183              		.loc 1 192 9 is_stmt 0 view .LVU611
 2184 011c FFF7FEFF 		bl	ThereIsNodeBelow_Menu
 2185              	.LVL362:
 192:Src/Menu/FunctionsForButtons.c ****     {
 2186              		.loc 1 192 7 view .LVU612
 2187 0120 F0B1     		cbz	r0, .L151
 198:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();      moveUp_Menu();
 2188              		.loc 1 198 5 is_stmt 1 view .LVU613
 2189 0122 FFF7FEFF 		bl	moveDown_Menu
 2190              	.LVL363:
 198:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();      moveUp_Menu();
 2191              		.loc 1 198 25 view .LVU614
 2192 0126 FFF7FEFF 		bl	getName_Menu
 2193              	.LVL364:
 2194 012a 0421     		movs	r1, #4
 2195 012c FFF7FEFF 		bl	putLine_TextConverter_LCD
 2196              	.LVL365:
 198:Src/Menu/FunctionsForButtons.c ****     moveUp_Menu();      moveUp_Menu();
 2197              		.loc 1 198 73 view .LVU615
 2198 0130 0420     		movs	r0, #4
 2199 0132 FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2200              	.LVL366:
 199:Src/Menu/FunctionsForButtons.c **** }
 2201              		.loc 1 199 5 view .LVU616
 2202 0136 FFF7FEFF 		bl	moveUp_Menu
 2203              	.LVL367:
 199:Src/Menu/FunctionsForButtons.c **** }
 2204              		.loc 1 199 25 view .LVU617
 2205 013a FFF7FEFF 		bl	moveUp_Menu
 2206              	.LVL368:
 2207 013e 63E7     		b	.L130
 2208              	.L150:
 187:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4); updateLine_TextConverter_LCD(4);
 2209              		.loc 1 187 9 view .LVU618
 2210 0140 134C     		ldr	r4, .L152+28
 2211              	.LVL369:
 187:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4); updateLine_TextConverter_LCD(4);
 2212              		.loc 1 187 9 is_stmt 0 view .LVU619
 2213 0142 0321     		movs	r1, #3
 2214 0144 2046     		mov	r0, r4
 2215 0146 FFF7FEFF 		bl	putLine_TextConverter_LCD
 2216              	.LVL370:
 187:Src/Menu/FunctionsForButtons.c ****         putLine_TextConverter_LCD(EMPTY_STRING, 4); updateLine_TextConverter_LCD(4);
 2217              		.loc 1 187 53 is_stmt 1 view .LVU620
 2218 014a 0320     		movs	r0, #3
 2219 014c FFF7FEFF 		bl	updateLine_TextConverter_LCD
ARM GAS  /tmp/ccZFkTdw.s 			page 54


 2220              	.LVL371:
 188:Src/Menu/FunctionsForButtons.c ****         return;
 2221              		.loc 1 188 9 view .LVU621
 2222 0150 0421     		movs	r1, #4
 2223 0152 2046     		mov	r0, r4
 2224 0154 FFF7FEFF 		bl	putLine_TextConverter_LCD
 2225              	.LVL372:
 188:Src/Menu/FunctionsForButtons.c ****         return;
 2226              		.loc 1 188 53 view .LVU622
 2227 0158 0420     		movs	r0, #4
 2228 015a FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2229              	.LVL373:
 189:Src/Menu/FunctionsForButtons.c ****     }
 2230              		.loc 1 189 9 view .LVU623
 2231 015e 53E7     		b	.L130
 2232              	.LVL374:
 2233              	.L151:
 194:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 2234              		.loc 1 194 9 view .LVU624
 2235 0160 0421     		movs	r1, #4
 2236 0162 0B48     		ldr	r0, .L152+28
 2237 0164 FFF7FEFF 		bl	putLine_TextConverter_LCD
 2238              	.LVL375:
 194:Src/Menu/FunctionsForButtons.c ****         moveUp_Menu();
 2239              		.loc 1 194 53 view .LVU625
 2240 0168 0420     		movs	r0, #4
 2241 016a FFF7FEFF 		bl	updateLine_TextConverter_LCD
 2242              	.LVL376:
 195:Src/Menu/FunctionsForButtons.c ****         return;
 2243              		.loc 1 195 9 view .LVU626
 2244 016e FFF7FEFF 		bl	moveUp_Menu
 2245              	.LVL377:
 196:Src/Menu/FunctionsForButtons.c ****     }
 2246              		.loc 1 196 9 view .LVU627
 2247 0172 49E7     		b	.L130
 2248              	.L153:
 2249              		.align	2
 2250              	.L152:
 2251 0174 00000000 		.word	USBHPath
 2252 0178 00000000 		.word	.LC4
 2253 017c 00000000 		.word	simpleNavigationUp_Menu
 2254 0180 00000000 		.word	simpleNavigationDown_Menu
 2255 0184 00000000 		.word	simpleNavigationBack_Menu
 2256 0188 00000000 		.word	openDirectory_Menu
 2257 018c 00000000 		.word	runGcode_Menu
 2258 0190 00000000 		.word	EMPTY_STRING
 2259              		.cfi_endproc
 2260              	.LFE72:
 2262              		.section	.text.changeFilamentOk_Menu,"ax",%progbits
 2263              		.align	1
 2264              		.global	changeFilamentOk_Menu
 2265              		.syntax unified
 2266              		.thumb
 2267              		.thumb_func
 2268              		.fpu softvfp
 2270              	changeFilamentOk_Menu:
 2271              	.LFB73:
ARM GAS  /tmp/ccZFkTdw.s 			page 55


 203:Src/Menu/FunctionsForButtons.c **** 
 2272              		.loc 1 203 34 view -0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276 0000 08B5     		push	{r3, lr}
 2277              	.LCFI13:
 2278              		.cfi_def_cfa_offset 8
 2279              		.cfi_offset 3, -8
 2280              		.cfi_offset 14, -4
 203:Src/Menu/FunctionsForButtons.c **** 
 2281              		.loc 1 203 36 view .LVU629
 2282 0002 FFF7FEFF 		bl	moveRight_Menu
 2283              	.LVL378:
 203:Src/Menu/FunctionsForButtons.c **** 
 2284              		.loc 1 203 1 is_stmt 0 view .LVU630
 2285 0006 08BD     		pop	{r3, pc}
 2286              		.cfi_endproc
 2287              	.LFE73:
 2289              		.section	.text.setTheTemperatureOk_Menu,"ax",%progbits
 2290              		.align	1
 2291              		.global	setTheTemperatureOk_Menu
 2292              		.syntax unified
 2293              		.thumb
 2294              		.thumb_func
 2295              		.fpu softvfp
 2297              	setTheTemperatureOk_Menu:
 2298              	.LFB74:
 205:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureBack_Menu(void) { moveLeft_Menu(); }
 2299              		.loc 1 205 37 is_stmt 1 view -0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 205:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureBack_Menu(void) { moveLeft_Menu(); }
 2304              		.loc 1 205 38 view .LVU632
 205:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureBack_Menu(void) { moveLeft_Menu(); }
 2305              		.loc 1 205 1 is_stmt 0 view .LVU633
 2306 0000 7047     		bx	lr
 2307              		.cfi_endproc
 2308              	.LFE74:
 2310              		.section	.text.setTheTemperatureBack_Menu,"ax",%progbits
 2311              		.align	1
 2312              		.global	setTheTemperatureBack_Menu
 2313              		.syntax unified
 2314              		.thumb
 2315              		.thumb_func
 2316              		.fpu softvfp
 2318              	setTheTemperatureBack_Menu:
 2319              	.LFB75:
 206:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureUp_Menu(void) {}
 2320              		.loc 1 206 39 is_stmt 1 view -0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324 0000 08B5     		push	{r3, lr}
 2325              	.LCFI14:
ARM GAS  /tmp/ccZFkTdw.s 			page 56


 2326              		.cfi_def_cfa_offset 8
 2327              		.cfi_offset 3, -8
 2328              		.cfi_offset 14, -4
 206:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureUp_Menu(void) {}
 2329              		.loc 1 206 41 view .LVU635
 2330 0002 FFF7FEFF 		bl	moveLeft_Menu
 2331              	.LVL379:
 206:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureUp_Menu(void) {}
 2332              		.loc 1 206 1 is_stmt 0 view .LVU636
 2333 0006 08BD     		pop	{r3, pc}
 2334              		.cfi_endproc
 2335              	.LFE75:
 2337              		.section	.text.setTheTemperatureUp_Menu,"ax",%progbits
 2338              		.align	1
 2339              		.global	setTheTemperatureUp_Menu
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2343              		.fpu softvfp
 2345              	setTheTemperatureUp_Menu:
 2346              	.LFB76:
 207:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureDown_Menu(void) {}
 2347              		.loc 1 207 37 is_stmt 1 view -0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              		@ link register save eliminated.
 207:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureDown_Menu(void) {}
 2352              		.loc 1 207 38 view .LVU638
 207:Src/Menu/FunctionsForButtons.c **** void setTheTemperatureDown_Menu(void) {}
 2353              		.loc 1 207 1 is_stmt 0 view .LVU639
 2354 0000 7047     		bx	lr
 2355              		.cfi_endproc
 2356              	.LFE76:
 2358              		.section	.text.setTheTemperatureDown_Menu,"ax",%progbits
 2359              		.align	1
 2360              		.global	setTheTemperatureDown_Menu
 2361              		.syntax unified
 2362              		.thumb
 2363              		.thumb_func
 2364              		.fpu softvfp
 2366              	setTheTemperatureDown_Menu:
 2367              	.LFB77:
 208:Src/Menu/FunctionsForButtons.c **** 
 2368              		.loc 1 208 39 is_stmt 1 view -0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 0
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              		@ link register save eliminated.
 208:Src/Menu/FunctionsForButtons.c **** 
 2373              		.loc 1 208 40 view .LVU641
 208:Src/Menu/FunctionsForButtons.c **** 
 2374              		.loc 1 208 1 is_stmt 0 view .LVU642
 2375 0000 7047     		bx	lr
 2376              		.cfi_endproc
 2377              	.LFE77:
 2379              		.section	.text.englishOk_Menu,"ax",%progbits
ARM GAS  /tmp/ccZFkTdw.s 			page 57


 2380              		.align	1
 2381              		.global	englishOk_Menu
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu softvfp
 2387              	englishOk_Menu:
 2388              	.LFB78:
 210:Src/Menu/FunctionsForButtons.c **** void englishBack_Menu(void) { moveLeft_Menu(); }
 2389              		.loc 1 210 27 is_stmt 1 view -0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              		@ link register save eliminated.
 210:Src/Menu/FunctionsForButtons.c **** void englishBack_Menu(void) { moveLeft_Menu(); }
 2394              		.loc 1 210 28 view .LVU644
 210:Src/Menu/FunctionsForButtons.c **** void englishBack_Menu(void) { moveLeft_Menu(); }
 2395              		.loc 1 210 1 is_stmt 0 view .LVU645
 2396 0000 7047     		bx	lr
 2397              		.cfi_endproc
 2398              	.LFE78:
 2400              		.section	.text.englishBack_Menu,"ax",%progbits
 2401              		.align	1
 2402              		.global	englishBack_Menu
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu softvfp
 2408              	englishBack_Menu:
 2409              	.LFB79:
 211:Src/Menu/FunctionsForButtons.c **** void russianOk_Menu(void) {}
 2410              		.loc 1 211 29 is_stmt 1 view -0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414 0000 08B5     		push	{r3, lr}
 2415              	.LCFI15:
 2416              		.cfi_def_cfa_offset 8
 2417              		.cfi_offset 3, -8
 2418              		.cfi_offset 14, -4
 211:Src/Menu/FunctionsForButtons.c **** void russianOk_Menu(void) {}
 2419              		.loc 1 211 31 view .LVU647
 2420 0002 FFF7FEFF 		bl	moveLeft_Menu
 2421              	.LVL380:
 211:Src/Menu/FunctionsForButtons.c **** void russianOk_Menu(void) {}
 2422              		.loc 1 211 1 is_stmt 0 view .LVU648
 2423 0006 08BD     		pop	{r3, pc}
 2424              		.cfi_endproc
 2425              	.LFE79:
 2427              		.section	.text.russianOk_Menu,"ax",%progbits
 2428              		.align	1
 2429              		.global	russianOk_Menu
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2433              		.fpu softvfp
 2435              	russianOk_Menu:
ARM GAS  /tmp/ccZFkTdw.s 			page 58


 2436              	.LFB80:
 212:Src/Menu/FunctionsForButtons.c **** void russianBack_Menu(void) { moveLeft_Menu(); }
 2437              		.loc 1 212 27 is_stmt 1 view -0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 2441              		@ link register save eliminated.
 212:Src/Menu/FunctionsForButtons.c **** void russianBack_Menu(void) { moveLeft_Menu(); }
 2442              		.loc 1 212 28 view .LVU650
 212:Src/Menu/FunctionsForButtons.c **** void russianBack_Menu(void) { moveLeft_Menu(); }
 2443              		.loc 1 212 1 is_stmt 0 view .LVU651
 2444 0000 7047     		bx	lr
 2445              		.cfi_endproc
 2446              	.LFE80:
 2448              		.section	.text.russianBack_Menu,"ax",%progbits
 2449              		.align	1
 2450              		.global	russianBack_Menu
 2451              		.syntax unified
 2452              		.thumb
 2453              		.thumb_func
 2454              		.fpu softvfp
 2456              	russianBack_Menu:
 2457              	.LFB81:
 213:Src/Menu/FunctionsForButtons.c **** 
 2458              		.loc 1 213 29 is_stmt 1 view -0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 0
 2461              		@ frame_needed = 0, uses_anonymous_args = 0
 2462 0000 08B5     		push	{r3, lr}
 2463              	.LCFI16:
 2464              		.cfi_def_cfa_offset 8
 2465              		.cfi_offset 3, -8
 2466              		.cfi_offset 14, -4
 213:Src/Menu/FunctionsForButtons.c **** 
 2467              		.loc 1 213 31 view .LVU653
 2468 0002 FFF7FEFF 		bl	moveLeft_Menu
 2469              	.LVL381:
 213:Src/Menu/FunctionsForButtons.c **** 
 2470              		.loc 1 213 1 is_stmt 0 view .LVU654
 2471 0006 08BD     		pop	{r3, pc}
 2472              		.cfi_endproc
 2473              	.LFE81:
 2475              		.section	.text.helpOk_Menu,"ax",%progbits
 2476              		.align	1
 2477              		.global	helpOk_Menu
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
 2481              		.fpu softvfp
 2483              	helpOk_Menu:
 2484              	.LFB82:
 215:Src/Menu/FunctionsForButtons.c **** void helpBack_Menu(void) {}
 2485              		.loc 1 215 24 is_stmt 1 view -0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
ARM GAS  /tmp/ccZFkTdw.s 			page 59


 215:Src/Menu/FunctionsForButtons.c **** void helpBack_Menu(void) {}
 2490              		.loc 1 215 25 view .LVU656
 215:Src/Menu/FunctionsForButtons.c **** void helpBack_Menu(void) {}
 2491              		.loc 1 215 1 is_stmt 0 view .LVU657
 2492 0000 7047     		bx	lr
 2493              		.cfi_endproc
 2494              	.LFE82:
 2496              		.section	.text.helpBack_Menu,"ax",%progbits
 2497              		.align	1
 2498              		.global	helpBack_Menu
 2499              		.syntax unified
 2500              		.thumb
 2501              		.thumb_func
 2502              		.fpu softvfp
 2504              	helpBack_Menu:
 2505              	.LFB83:
 216:Src/Menu/FunctionsForButtons.c **** 
 2506              		.loc 1 216 26 is_stmt 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 0
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510              		@ link register save eliminated.
 216:Src/Menu/FunctionsForButtons.c **** 
 2511              		.loc 1 216 27 view .LVU659
 216:Src/Menu/FunctionsForButtons.c **** 
 2512              		.loc 1 216 1 is_stmt 0 view .LVU660
 2513 0000 7047     		bx	lr
 2514              		.cfi_endproc
 2515              	.LFE83:
 2517              		.section	.text.emptyFunction_Menu,"ax",%progbits
 2518              		.align	1
 2519              		.global	emptyFunction_Menu
 2520              		.syntax unified
 2521              		.thumb
 2522              		.thumb_func
 2523              		.fpu softvfp
 2525              	emptyFunction_Menu:
 2526              	.LFB84:
 222:Src/Menu/FunctionsForButtons.c **** 
 2527              		.loc 1 222 31 is_stmt 1 view -0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531              		@ link register save eliminated.
 222:Src/Menu/FunctionsForButtons.c **** 
 2532              		.loc 1 222 32 view .LVU662
 222:Src/Menu/FunctionsForButtons.c **** 
 2533              		.loc 1 222 1 is_stmt 0 view .LVU663
 2534 0000 7047     		bx	lr
 2535              		.cfi_endproc
 2536              	.LFE84:
 2538              		.section	.text.closeDirectory_Menu,"ax",%progbits
 2539              		.align	1
 2540              		.global	closeDirectory_Menu
 2541              		.syntax unified
 2542              		.thumb
 2543              		.thumb_func
ARM GAS  /tmp/ccZFkTdw.s 			page 60


 2544              		.fpu softvfp
 2546              	closeDirectory_Menu:
 2547              	.LFB86:
 225:Src/Menu/FunctionsForButtons.c **** 
 2548              		.loc 1 225 32 is_stmt 1 view -0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 225:Src/Menu/FunctionsForButtons.c **** 
 2553              		.loc 1 225 33 view .LVU665
 225:Src/Menu/FunctionsForButtons.c **** 
 2554              		.loc 1 225 1 is_stmt 0 view .LVU666
 2555 0000 7047     		bx	lr
 2556              		.cfi_endproc
 2557              	.LFE86:
 2559              		.section	.rodata
 2560              		.align	2
 2561              		.set	.LANCHOR0,. + 0
 2562              	.LC0:
 2563 0000 2E000000 		.ascii	".\000\000\000g\000\000\000c\000\000\000o\000\000\000"
 2563      67000000 
 2563      63000000 
 2563      6F000000 
 2564 0010 64000000 		.ascii	"d\000\000\000e\000\000\000\000\000\000\000\000\000\000"
 2564      65000000 
 2564      00000000 
 2564      000000
 2565 001f 00       		.ascii	"\000"
 2566              		.text
 2567              	.Letext0:
 2568              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2569              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2570              		.file 4 "/usr/include/newlib/sys/_types.h"
 2571              		.file 5 "/usr/include/newlib/sys/reent.h"
 2572              		.file 6 "/usr/include/newlib/sys/lock.h"
 2573              		.file 7 "Inc/LCD/TextConverter_LCD.h"
 2574              		.file 8 "Middlewares/Third_Party/FatFs/src/integer.h"
 2575              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 2576              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2577              		.file 11 "Inc/USB/State_USBdrive.h"
 2578              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2579              		.file 13 "/usr/include/newlib/stdlib.h"
 2580              		.file 14 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 2581              		.file 15 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 2582              		.file 16 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 2583              		.file 17 "Middlewares/Third_Party/FatFs/src/ff.h"
 2584              		.file 18 "Inc/USB/Driver_USBdrive.h"
 2585              		.file 19 "Inc/Gcode/Config_Gcode.h"
 2586              		.file 20 "Inc/Gcode/GcodeConverter_Gcode.h"
 2587              		.file 21 "Inc/Gcode/Descritization_Gcode.h"
 2588              		.file 22 "Inc/Gcode/Buffer_Gcode.h"
 2589              		.file 23 "Inc/Gcode/VirtualPrinters_Gcode.h"
 2590              		.file 24 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2591              		.file 25 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2592              		.file 26 "Middlewares/Third_Party/FatFs/src/drivers/usbh_diskio.h"
 2593              		.file 27 "Inc/fatfs.h"
ARM GAS  /tmp/ccZFkTdw.s 			page 61


 2594              		.file 28 "/usr/include/newlib/stdio.h"
 2595              		.file 29 "Inc/Menu/Constructor_Menu.h"
 2596              		.file 30 "/usr/include/newlib/wchar.h"
ARM GAS  /tmp/ccZFkTdw.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FunctionsForButtons.c
     /tmp/ccZFkTdw.s:16     .text.openDirectory_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:24     .text.openDirectory_Menu:0000000000000000 openDirectory_Menu
     /tmp/ccZFkTdw.s:39     .text.wchar_t2TCHAR:0000000000000000 $t
     /tmp/ccZFkTdw.s:45     .text.wchar_t2TCHAR:0000000000000000 wchar_t2TCHAR
     /tmp/ccZFkTdw.s:847    .text.getFileNameTCHAR:0000000000000000 $t
     /tmp/ccZFkTdw.s:853    .text.getFileNameTCHAR:0000000000000000 getFileNameTCHAR
     /tmp/ccZFkTdw.s:906    .text.simpleNavigationDown_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:913    .text.simpleNavigationDown_Menu:0000000000000000 simpleNavigationDown_Menu
     /tmp/ccZFkTdw.s:1103   .text.simpleNavigationUp_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:1110   .text.simpleNavigationUp_Menu:0000000000000000 simpleNavigationUp_Menu
     /tmp/ccZFkTdw.s:1243   .text.returnFirstLine:0000000000000000 $t
     /tmp/ccZFkTdw.s:1249   .text.returnFirstLine:0000000000000000 returnFirstLine
     /tmp/ccZFkTdw.s:1276   .text.simpleNavigationBack_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:1283   .text.simpleNavigationBack_Menu:0000000000000000 simpleNavigationBack_Menu
     /tmp/ccZFkTdw.s:1503   .text.simpleNavigationBack_Menu:0000000000000108 $d
     /tmp/ccZFkTdw.s:1508   .text.GcodeFormat:0000000000000000 $t
     /tmp/ccZFkTdw.s:1514   .text.GcodeFormat:0000000000000000 GcodeFormat
     /tmp/ccZFkTdw.s:1542   .text.GcodeFormat:0000000000000014 $d
     /tmp/ccZFkTdw.s:1547   .text.wait:0000000000000000 $t
     /tmp/ccZFkTdw.s:1553   .text.wait:0000000000000000 wait
     /tmp/ccZFkTdw.s:1574   .rodata.runGcode_Menu.str4.4:0000000000000000 $d
     /tmp/ccZFkTdw.s:1580   .rodata.runGcode_Menu.str1.4:0000000000000000 $d
     /tmp/ccZFkTdw.s:1592   .text.runGcode_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:1599   .text.runGcode_Menu:0000000000000000 runGcode_Menu
     /tmp/ccZFkTdw.s:1775   .text.runGcode_Menu:00000000000000e0 $d
     /tmp/ccZFkTdw.s:1783   .text.simpleNavigationOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:1790   .text.simpleNavigationOk_Menu:0000000000000000 simpleNavigationOk_Menu
     /tmp/ccZFkTdw.s:1927   .text.simpleNavigationOk_Menu:00000000000000a4 $d
     /tmp/ccZFkTdw.s:1932   .rodata.printOk_Menu.str4.4:0000000000000000 $d
     /tmp/ccZFkTdw.s:1938   .text.printOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:1945   .text.printOk_Menu:0000000000000000 printOk_Menu
     /tmp/ccZFkTdw.s:2251   .text.printOk_Menu:0000000000000174 $d
     /tmp/ccZFkTdw.s:2263   .text.changeFilamentOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2270   .text.changeFilamentOk_Menu:0000000000000000 changeFilamentOk_Menu
     /tmp/ccZFkTdw.s:2290   .text.setTheTemperatureOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2297   .text.setTheTemperatureOk_Menu:0000000000000000 setTheTemperatureOk_Menu
     /tmp/ccZFkTdw.s:2311   .text.setTheTemperatureBack_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2318   .text.setTheTemperatureBack_Menu:0000000000000000 setTheTemperatureBack_Menu
     /tmp/ccZFkTdw.s:2338   .text.setTheTemperatureUp_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2345   .text.setTheTemperatureUp_Menu:0000000000000000 setTheTemperatureUp_Menu
     /tmp/ccZFkTdw.s:2359   .text.setTheTemperatureDown_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2366   .text.setTheTemperatureDown_Menu:0000000000000000 setTheTemperatureDown_Menu
     /tmp/ccZFkTdw.s:2380   .text.englishOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2387   .text.englishOk_Menu:0000000000000000 englishOk_Menu
     /tmp/ccZFkTdw.s:2401   .text.englishBack_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2408   .text.englishBack_Menu:0000000000000000 englishBack_Menu
     /tmp/ccZFkTdw.s:2428   .text.russianOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2435   .text.russianOk_Menu:0000000000000000 russianOk_Menu
     /tmp/ccZFkTdw.s:2449   .text.russianBack_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2456   .text.russianBack_Menu:0000000000000000 russianBack_Menu
     /tmp/ccZFkTdw.s:2476   .text.helpOk_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2483   .text.helpOk_Menu:0000000000000000 helpOk_Menu
     /tmp/ccZFkTdw.s:2497   .text.helpBack_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2504   .text.helpBack_Menu:0000000000000000 helpBack_Menu
     /tmp/ccZFkTdw.s:2518   .text.emptyFunction_Menu:0000000000000000 $t
ARM GAS  /tmp/ccZFkTdw.s 			page 63


     /tmp/ccZFkTdw.s:2525   .text.emptyFunction_Menu:0000000000000000 emptyFunction_Menu
     /tmp/ccZFkTdw.s:2539   .text.closeDirectory_Menu:0000000000000000 $t
     /tmp/ccZFkTdw.s:2546   .text.closeDirectory_Menu:0000000000000000 closeDirectory_Menu
     /tmp/ccZFkTdw.s:2560   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
getName_Menu
ThereIsNodeBelow_Menu
ThereIsNodeAbove_Menu
moveDown_Menu
moveUp_Menu
putLine_TextConverter_LCD
updateLine_TextConverter_LCD
getTitle_Menu
moveLeft_Menu
EMPTY_STRING
wcsstr
HAL_Delay
getPath_USBdrive
sprintf
openFile_USBdrive
getStringFromFile_USBdrive
convertCommand_Gcode
getConvertedCommand_Gcode
setDescreteCommand_Gcode
enoghSpaceIsReservedCommandBuffer_Gcode
getDescreteCommand_Gcode
addElementToDescreteCommandBuffer_Gcode
descreteCommandAnalyser_Gcode
endOfFile_USBdrive
checkFreeSpaceCommandBuffer_Gcode
moveComleted
defaultDescreteCommand
moveRight_Menu
getState_USBdrive
getMountedStatus
openDirectory_USBdrive
destroyRightNode_Menu
readItem_USBdrive
getWideLongName_USBdrive
getItemType_USBdrive
createRightNode_Menu
setFunctionUp
setFunctionDown
setFunctionBack
mount_USBdrive
setFunctionOk
createDownNode_Menu
USBHPath
